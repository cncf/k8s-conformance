  I0430 15:42:37.240735      21 e2e.go:117] Starting e2e run "ac853f24-8fa6-4df3-990f-f47b46338366" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1714491756 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Apr 30 15:42:37.534: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:42:37.536: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 30 15:42:37.578: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 30 15:42:37.583: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Apr 30 15:42:37.583: INFO: e2e test version: v1.29.2
  Apr 30 15:42:37.584: INFO: kube-apiserver version: v1.29.2
  Apr 30 15:42:37.585: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:42:37.590: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.056 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/30/24 15:42:37.769
  Apr 30 15:42:37.769: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 15:42:37.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:42:37.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:42:37.795
  STEP: Creating configMap with name configmap-test-volume-map-2e1937ef-6801-400e-a6aa-f8c5f2ac5015 @ 04/30/24 15:42:37.798
  STEP: Creating a pod to test consume configMaps @ 04/30/24 15:42:37.808
  STEP: Saw pod success @ 04/30/24 15:42:41.834
  Apr 30 15:42:41.837: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-312add3b-94f4-4a63-a6dc-9b4ec1da3f1f container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 15:42:41.855
  Apr 30 15:42:41.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1156" for this suite. @ 04/30/24 15:42:41.894
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/30/24 15:42:41.906
  Apr 30 15:42:41.906: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pod-network-test @ 04/30/24 15:42:41.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:42:41.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:42:41.937
  STEP: Performing setup for networking test in namespace pod-network-test-2585 @ 04/30/24 15:42:41.942
  STEP: creating a selector @ 04/30/24 15:42:41.942
  STEP: Creating the service pods in kubernetes @ 04/30/24 15:42:41.942
  Apr 30 15:42:41.942: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/30/24 15:42:54.014
  Apr 30 15:42:56.036: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Apr 30 15:42:56.036: INFO: Breadth first check of 100.115.206.227 on host 192.168.111.64...
  Apr 30 15:42:56.041: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.73.144.81:9080/dial?request=hostname&protocol=http&host=100.115.206.227&port=8083&tries=1'] Namespace:pod-network-test-2585 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 15:42:56.041: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:42:56.041: INFO: ExecWithOptions: Clientset creation
  Apr 30 15:42:56.042: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2585/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.73.144.81%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D100.115.206.227%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 30 15:42:56.118: INFO: Waiting for responses: map[]
  Apr 30 15:42:56.118: INFO: reached 100.115.206.227 after 0/1 tries
  Apr 30 15:42:56.118: INFO: Breadth first check of 100.73.144.109 on host 192.168.111.203...
  Apr 30 15:42:56.122: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.73.144.81:9080/dial?request=hostname&protocol=http&host=100.73.144.109&port=8083&tries=1'] Namespace:pod-network-test-2585 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 15:42:56.122: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:42:56.122: INFO: ExecWithOptions: Clientset creation
  Apr 30 15:42:56.122: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2585/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.73.144.81%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D100.73.144.109%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 30 15:42:56.191: INFO: Waiting for responses: map[]
  Apr 30 15:42:56.191: INFO: reached 100.73.144.109 after 0/1 tries
  Apr 30 15:42:56.192: INFO: Going to retry 0 out of 2 pods....
  Apr 30 15:42:56.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2585" for this suite. @ 04/30/24 15:42:56.197
• [14.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/30/24 15:42:56.209
  Apr 30 15:42:56.209: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 15:42:56.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:42:56.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:42:56.233
  STEP: Creating pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735 @ 04/30/24 15:42:56.236
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 15:42:58.264
  Apr 30 15:42:58.268: INFO: Initial restart count of pod liveness-b396c476-9698-44af-9c76-1342db746854 is 0
  Apr 30 15:42:58.271: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:00.276: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:02.281: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:04.286: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:06.291: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:08.297: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:10.304: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:12.309: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:14.315: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:16.320: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:18.327: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:18.327: INFO: Restart count of pod container-probe-2735/liveness-b396c476-9698-44af-9c76-1342db746854 is now 1 (20.059336463s elapsed)
  Apr 30 15:43:20.335: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:22.342: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:24.349: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:26.354: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:28.360: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:30.366: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:32.371: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:34.377: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:36.382: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:38.389: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:38.389: INFO: Restart count of pod container-probe-2735/liveness-b396c476-9698-44af-9c76-1342db746854 is now 2 (40.121028738s elapsed)
  Apr 30 15:43:40.395: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:42.400: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:44.406: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:46.412: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:48.419: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:50.425: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:52.430: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:54.435: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:56.442: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:58.448: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:43:58.448: INFO: Restart count of pod container-probe-2735/liveness-b396c476-9698-44af-9c76-1342db746854 is now 3 (1m0.180335339s elapsed)
  Apr 30 15:44:00.453: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:02.459: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:04.464: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:06.470: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:08.476: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:10.481: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:12.487: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:14.493: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:16.499: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:18.505: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:18.505: INFO: Restart count of pod container-probe-2735/liveness-b396c476-9698-44af-9c76-1342db746854 is now 4 (1m20.237483618s elapsed)
  Apr 30 15:44:20.511: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:22.516: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:24.521: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:26.526: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:28.531: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:30.535: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:32.543: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:34.547: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:36.553: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:38.559: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:40.563: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:42.573: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:44.578: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:46.582: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:48.588: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:50.593: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:52.600: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:54.607: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:56.612: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:44:58.617: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:00.622: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:02.627: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:04.631: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:06.636: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:08.641: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:10.646: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:12.651: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:14.657: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:16.663: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:18.670: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:20.675: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:22.683: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:24.688: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:26.694: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:28.700: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:30.705: INFO: Get pod liveness-b396c476-9698-44af-9c76-1342db746854 in namespace container-probe-2735
  Apr 30 15:45:30.705: INFO: Restart count of pod container-probe-2735/liveness-b396c476-9698-44af-9c76-1342db746854 is now 5 (2m32.437351166s elapsed)
  STEP: deleting the pod @ 04/30/24 15:45:30.705
  Apr 30 15:45:30.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2735" for this suite. @ 04/30/24 15:45:30.741
• [154.546 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/30/24 15:45:30.755
  Apr 30 15:45:30.755: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename events @ 04/30/24 15:45:30.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:45:30.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:45:30.781
  STEP: creating a test event @ 04/30/24 15:45:30.784
  STEP: listing all events in all namespaces @ 04/30/24 15:45:30.799
  STEP: patching the test event @ 04/30/24 15:45:30.804
  STEP: fetching the test event @ 04/30/24 15:45:30.819
  STEP: updating the test event @ 04/30/24 15:45:30.823
  STEP: getting the test event @ 04/30/24 15:45:30.836
  STEP: deleting the test event @ 04/30/24 15:45:30.84
  STEP: listing all events in all namespaces @ 04/30/24 15:45:30.848
  Apr 30 15:45:30.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8980" for this suite. @ 04/30/24 15:45:30.857
• [0.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/30/24 15:45:30.865
  Apr 30 15:45:30.865: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 15:45:30.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:45:30.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:45:30.896
  STEP: Setting up server cert @ 04/30/24 15:45:30.936
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 15:45:31.452
  STEP: Deploying the webhook pod @ 04/30/24 15:45:31.468
  STEP: Wait for the deployment to be ready @ 04/30/24 15:45:31.487
  Apr 30 15:45:31.494: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/30/24 15:45:33.508
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:45:33.526
  Apr 30 15:45:34.526: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/30/24 15:45:34.648
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/30/24 15:45:34.686
  STEP: Deleting the collection of validation webhooks @ 04/30/24 15:45:34.714
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/30/24 15:45:34.792
  Apr 30 15:45:34.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1784" for this suite. @ 04/30/24 15:45:34.876
  STEP: Destroying namespace "webhook-markers-537" for this suite. @ 04/30/24 15:45:34.888
• [4.035 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 04/30/24 15:45:34.9
  Apr 30 15:45:34.900: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 15:45:34.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:45:34.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:45:34.936
  STEP: creating all guestbook components @ 04/30/24 15:45:34.94
  Apr 30 15:45:34.940: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 30 15:45:34.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 create -f -'
  Apr 30 15:45:35.134: INFO: stderr: ""
  Apr 30 15:45:35.134: INFO: stdout: "service/agnhost-replica created\n"
  Apr 30 15:45:35.134: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 30 15:45:35.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 create -f -'
  Apr 30 15:45:35.303: INFO: stderr: ""
  Apr 30 15:45:35.303: INFO: stdout: "service/agnhost-primary created\n"
  Apr 30 15:45:35.303: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 30 15:45:35.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 create -f -'
  Apr 30 15:45:35.485: INFO: stderr: ""
  Apr 30 15:45:35.485: INFO: stdout: "service/frontend created\n"
  Apr 30 15:45:35.485: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 30 15:45:35.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 create -f -'
  Apr 30 15:45:35.649: INFO: stderr: ""
  Apr 30 15:45:35.649: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 30 15:45:35.649: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 30 15:45:35.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 create -f -'
  Apr 30 15:45:35.794: INFO: stderr: ""
  Apr 30 15:45:35.794: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 30 15:45:35.794: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 30 15:45:35.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 create -f -'
  Apr 30 15:45:35.920: INFO: stderr: ""
  Apr 30 15:45:35.920: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/30/24 15:45:35.92
  Apr 30 15:45:35.920: INFO: Waiting for all frontend pods to be Running.
  Apr 30 15:45:40.974: INFO: Waiting for frontend to serve content.
  Apr 30 15:45:40.985: INFO: Trying to add a new entry to the guestbook.
  Apr 30 15:45:40.998: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/30/24 15:45:41.007
  Apr 30 15:45:41.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 delete --grace-period=0 --force -f -'
  Apr 30 15:45:41.114: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 15:45:41.114: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/30/24 15:45:41.114
  Apr 30 15:45:41.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 delete --grace-period=0 --force -f -'
  Apr 30 15:45:41.229: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 15:45:41.229: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/30/24 15:45:41.23
  Apr 30 15:45:41.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 delete --grace-period=0 --force -f -'
  Apr 30 15:45:41.354: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 15:45:41.354: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/30/24 15:45:41.354
  Apr 30 15:45:41.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 delete --grace-period=0 --force -f -'
  Apr 30 15:45:41.444: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 15:45:41.444: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/30/24 15:45:41.444
  Apr 30 15:45:41.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 delete --grace-period=0 --force -f -'
  Apr 30 15:45:41.576: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 15:45:41.576: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/30/24 15:45:41.577
  Apr 30 15:45:41.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1882 delete --grace-period=0 --force -f -'
  Apr 30 15:45:41.693: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 15:45:41.693: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 30 15:45:41.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1882" for this suite. @ 04/30/24 15:45:41.699
• [6.807 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/30/24 15:45:41.707
  Apr 30 15:45:41.707: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 15:45:41.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:45:41.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:45:41.755
  STEP: Setting up server cert @ 04/30/24 15:45:41.813
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 15:45:42.839
  STEP: Deploying the webhook pod @ 04/30/24 15:45:42.85
  STEP: Wait for the deployment to be ready @ 04/30/24 15:45:42.869
  Apr 30 15:45:42.884: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Apr 30 15:45:44.898: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 15, 45, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 15, 45, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 15, 45, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 15, 45, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/30/24 15:45:46.903
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:45:46.919
  Apr 30 15:45:47.920: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/30/24 15:45:47.929
  STEP: create a pod @ 04/30/24 15:45:47.956
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/30/24 15:45:49.983
  Apr 30 15:45:49.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=webhook-8367 attach --namespace=webhook-8367 to-be-attached-pod -i -c=container1'
  Apr 30 15:45:50.073: INFO: rc: 1
  Apr 30 15:45:50.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8367" for this suite. @ 04/30/24 15:45:50.159
  STEP: Destroying namespace "webhook-markers-4186" for this suite. @ 04/30/24 15:45:50.177
• [8.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/30/24 15:45:50.186
  Apr 30 15:45:50.186: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 15:45:50.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:45:50.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:45:50.223
  STEP: Creating pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128 @ 04/30/24 15:45:50.226
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 15:45:52.247
  Apr 30 15:45:52.251: INFO: Initial restart count of pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 is 0
  Apr 30 15:45:52.255: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:45:54.261: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:45:56.266: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:45:58.272: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:00.278: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:02.284: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:04.289: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:06.295: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:08.300: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:10.306: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:12.312: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:14.318: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:16.323: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:18.329: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:20.335: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:22.343: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:24.349: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:26.355: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:28.360: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:30.365: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:32.370: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:34.376: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:36.381: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:38.386: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:40.392: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:42.399: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:44.403: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:46.409: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:48.414: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:50.419: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:52.426: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:54.431: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:56.436: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:46:58.441: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:00.447: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:02.453: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:04.459: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:06.464: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:08.470: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:10.474: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:12.480: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:14.486: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:16.492: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:18.498: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:20.504: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:22.511: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:24.518: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:26.524: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:28.530: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:30.536: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:32.543: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:34.549: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:36.556: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:38.562: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:40.567: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:42.573: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:44.578: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:46.583: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:48.590: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:50.595: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:52.601: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:54.606: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:56.611: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:47:58.617: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:00.751: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:02.757: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:04.763: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:06.769: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:08.774: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:10.780: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:12.791: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:14.797: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:16.803: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:18.809: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:20.815: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:22.821: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:24.827: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:26.833: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:28.839: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:30.844: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:32.853: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:34.857: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:36.863: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:38.868: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:40.873: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:42.879: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:44.883: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:46.888: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:48.892: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:50.899: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:52.903: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:54.908: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:56.913: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:48:58.918: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:00.923: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:02.928: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:04.934: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:06.943: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:08.949: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:10.954: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:12.960: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:14.965: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:16.970: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:18.975: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:20.981: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:22.987: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:24.992: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:26.998: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:29.002: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:31.008: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:33.014: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:35.320: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:37.325: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:39.331: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:41.337: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:43.342: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:45.347: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:47.353: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:49.359: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  Apr 30 15:49:51.364: INFO: Get pod test-webserver-e65ada9f-4763-4636-8505-3245c53d7284 in namespace container-probe-8128
  STEP: deleting the pod @ 04/30/24 15:49:53.364
  Apr 30 15:49:53.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8128" for this suite. @ 04/30/24 15:49:53.411
• [243.234 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/30/24 15:49:53.42
  Apr 30 15:49:53.420: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/30/24 15:49:53.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:49:53.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:49:53.46
  STEP: creating a target pod @ 04/30/24 15:49:53.463
  STEP: adding an ephemeral container @ 04/30/24 15:49:55.512
  STEP: checking pod container endpoints @ 04/30/24 15:49:59.544
  Apr 30 15:49:59.544: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4020 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 15:49:59.544: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:49:59.544: INFO: ExecWithOptions: Clientset creation
  Apr 30 15:49:59.544: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-4020/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 30 15:49:59.605: INFO: Exec stderr: ""
  Apr 30 15:49:59.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4020" for this suite. @ 04/30/24 15:49:59.631
• [6.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/30/24 15:49:59.64
  Apr 30 15:49:59.640: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 15:49:59.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:49:59.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:49:59.672
  STEP: Setting up server cert @ 04/30/24 15:49:59.709
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 15:50:00.498
  STEP: Deploying the webhook pod @ 04/30/24 15:50:00.508
  STEP: Wait for the deployment to be ready @ 04/30/24 15:50:00.528
  Apr 30 15:50:00.540: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/30/24 15:50:02.555
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:50:02.568
  Apr 30 15:50:03.568: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/30/24 15:50:03.576
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/30/24 15:50:03.603
  STEP: Creating a configMap that should not be mutated @ 04/30/24 15:50:03.613
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/30/24 15:50:03.628
  STEP: Creating a configMap that should be mutated @ 04/30/24 15:50:03.638
  Apr 30 15:50:03.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3230" for this suite. @ 04/30/24 15:50:03.738
  STEP: Destroying namespace "webhook-markers-7889" for this suite. @ 04/30/24 15:50:03.756
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/30/24 15:50:03.791
  Apr 30 15:50:03.791: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/30/24 15:50:03.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:03.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:03.832
  Apr 30 15:50:03.836: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:50:04.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5808" for this suite. @ 04/30/24 15:50:05.577
• [1.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/30/24 15:50:05.595
  Apr 30 15:50:05.595: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svcaccounts @ 04/30/24 15:50:05.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:05.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:05.626
  STEP: creating a ServiceAccount @ 04/30/24 15:50:05.63
  STEP: watching for the ServiceAccount to be added @ 04/30/24 15:50:05.644
  STEP: patching the ServiceAccount @ 04/30/24 15:50:05.647
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/30/24 15:50:05.654
  STEP: deleting the ServiceAccount @ 04/30/24 15:50:05.658
  Apr 30 15:50:05.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2314" for this suite. @ 04/30/24 15:50:05.68
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/30/24 15:50:05.69
  Apr 30 15:50:05.690: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 15:50:05.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:05.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:05.724
  STEP: Creating secret with name secret-test-map-d2271b16-d796-4e94-a3e6-33e2890714d5 @ 04/30/24 15:50:05.727
  STEP: Creating a pod to test consume secrets @ 04/30/24 15:50:05.737
  STEP: Saw pod success @ 04/30/24 15:50:09.771
  Apr 30 15:50:09.775: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-a7676796-4468-457d-ad3c-a54a2e877178 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 15:50:09.783
  Apr 30 15:50:09.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1590" for this suite. @ 04/30/24 15:50:09.81
• [4.130 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/30/24 15:50:09.821
  Apr 30 15:50:09.821: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 15:50:09.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:09.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:09.857
  STEP: creating a Deployment @ 04/30/24 15:50:09.864
  STEP: waiting for Deployment to be created @ 04/30/24 15:50:09.871
  STEP: waiting for all Replicas to be Ready @ 04/30/24 15:50:09.872
  Apr 30 15:50:09.874: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:09.874: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:09.894: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:09.894: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:09.914: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:09.914: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:09.948: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:09.948: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 30 15:50:11.165: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 30 15:50:11.166: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 30 15:50:11.200: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/30/24 15:50:11.2
  Apr 30 15:50:11.212: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/30/24 15:50:11.213
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 0
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:11.215: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:11.216: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.216: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.216: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.216: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.230: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.230: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.258: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.258: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:11.279: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:11.279: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:11.318: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:11.318: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:13.228: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:13.228: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:13.266: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  STEP: listing Deployments @ 04/30/24 15:50:13.266
  Apr 30 15:50:13.271: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/30/24 15:50:13.271
  Apr 30 15:50:13.288: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/30/24 15:50:13.288
  Apr 30 15:50:13.300: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:13.308: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:13.333: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:13.371: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:13.382: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:15.195: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:15.257: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:15.311: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:15.347: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 30 15:50:16.195: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/30/24 15:50:16.228
  STEP: fetching the DeploymentStatus @ 04/30/24 15:50:16.248
  Apr 30 15:50:16.253: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:16.254: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:16.254: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:16.254: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:16.254: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 1
  Apr 30 15:50:16.255: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:16.255: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 3
  Apr 30 15:50:16.255: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:16.255: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 2
  Apr 30 15:50:16.255: INFO: observed Deployment test-deployment in namespace deployment-6178 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/30/24 15:50:16.255
  Apr 30 15:50:16.266: INFO: observed event type MODIFIED
  Apr 30 15:50:16.266: INFO: observed event type MODIFIED
  Apr 30 15:50:16.266: INFO: observed event type MODIFIED
  Apr 30 15:50:16.266: INFO: observed event type MODIFIED
  Apr 30 15:50:16.266: INFO: observed event type MODIFIED
  Apr 30 15:50:16.266: INFO: observed event type MODIFIED
  Apr 30 15:50:16.267: INFO: observed event type MODIFIED
  Apr 30 15:50:16.267: INFO: observed event type MODIFIED
  Apr 30 15:50:16.267: INFO: observed event type MODIFIED
  Apr 30 15:50:16.267: INFO: observed event type MODIFIED
  Apr 30 15:50:16.267: INFO: observed event type MODIFIED
  Apr 30 15:50:16.268: INFO: observed event type MODIFIED
  Apr 30 15:50:16.268: INFO: observed event type MODIFIED
  Apr 30 15:50:16.276: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 30 15:50:16.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6178" for this suite. @ 04/30/24 15:50:16.285
• [6.477 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/30/24 15:50:16.299
  Apr 30 15:50:16.299: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 15:50:16.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:16.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:16.332
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/30/24 15:50:16.335
  Apr 30 15:50:16.336: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:50:18.459: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:50:25.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6815" for this suite. @ 04/30/24 15:50:25.741
• [9.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/30/24 15:50:25.758
  Apr 30 15:50:25.758: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 15:50:25.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:25.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:25.786
  STEP: Setting up server cert @ 04/30/24 15:50:25.819
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 15:50:26.374
  STEP: Deploying the webhook pod @ 04/30/24 15:50:26.384
  STEP: Wait for the deployment to be ready @ 04/30/24 15:50:26.404
  Apr 30 15:50:26.411: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/30/24 15:50:28.424
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:50:28.442
  Apr 30 15:50:29.443: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/30/24 15:50:29.464
  STEP: create a configmap that should be updated by the webhook @ 04/30/24 15:50:29.498
  Apr 30 15:50:29.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4288" for this suite. @ 04/30/24 15:50:29.622
  STEP: Destroying namespace "webhook-markers-2511" for this suite. @ 04/30/24 15:50:29.634
• [3.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 04/30/24 15:50:29.649
  Apr 30 15:50:29.649: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 15:50:29.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:29.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:29.685
  STEP: Creating secret with name secret-test-bea3e06a-17ad-48c4-b5d7-54e0a92e563c @ 04/30/24 15:50:29.688
  STEP: Creating a pod to test consume secrets @ 04/30/24 15:50:29.699
  STEP: Saw pod success @ 04/30/24 15:50:33.736
  Apr 30 15:50:33.740: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-00fe119b-534c-4293-ad9b-890cfeba5448 container secret-env-test: <nil>
  STEP: delete the pod @ 04/30/24 15:50:33.749
  Apr 30 15:50:33.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8216" for this suite. @ 04/30/24 15:50:33.793
• [4.156 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/30/24 15:50:33.807
  Apr 30 15:50:33.807: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 15:50:33.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:33.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:33.844
  STEP: Setting up server cert @ 04/30/24 15:50:33.876
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 15:50:34.27
  STEP: Deploying the webhook pod @ 04/30/24 15:50:34.287
  STEP: Wait for the deployment to be ready @ 04/30/24 15:50:34.31
  Apr 30 15:50:34.322: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 15:50:36.334
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:50:36.344
  Apr 30 15:50:37.344: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 30 15:50:37.352: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2498-crds.webhook.example.com via the AdmissionRegistration API @ 04/30/24 15:50:37.867
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/30/24 15:50:37.889
  Apr 30 15:50:40.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9136" for this suite. @ 04/30/24 15:50:40.518
  STEP: Destroying namespace "webhook-markers-2658" for this suite. @ 04/30/24 15:50:40.529
• [6.730 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/30/24 15:50:40.537
  Apr 30 15:50:40.537: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename runtimeclass @ 04/30/24 15:50:40.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:40.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:40.568
  Apr 30 15:50:40.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8041" for this suite. @ 04/30/24 15:50:40.617
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/30/24 15:50:40.629
  Apr 30 15:50:40.629: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename runtimeclass @ 04/30/24 15:50:40.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:40.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:40.658
  Apr 30 15:50:42.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9984" for this suite. @ 04/30/24 15:50:42.709
• [2.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/30/24 15:50:42.724
  Apr 30 15:50:42.724: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename apf @ 04/30/24 15:50:42.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:42.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:42.753
  STEP: getting /apis @ 04/30/24 15:50:42.756
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/30/24 15:50:42.761
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/30/24 15:50:42.762
  STEP: creating @ 04/30/24 15:50:42.763
  STEP: getting @ 04/30/24 15:50:42.783
  STEP: listing @ 04/30/24 15:50:42.789
  STEP: watching @ 04/30/24 15:50:42.792
  Apr 30 15:50:42.792: INFO: starting watch
  STEP: patching @ 04/30/24 15:50:42.794
  STEP: updating @ 04/30/24 15:50:42.803
  Apr 30 15:50:42.815: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/30/24 15:50:42.815
  STEP: patching /status @ 04/30/24 15:50:42.818
  STEP: updating /status @ 04/30/24 15:50:42.825
  STEP: deleting @ 04/30/24 15:50:42.837
  STEP: deleting a collection @ 04/30/24 15:50:42.85
  Apr 30 15:50:42.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1156" for this suite. @ 04/30/24 15:50:42.875
• [0.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 04/30/24 15:50:42.886
  Apr 30 15:50:42.886: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pv @ 04/30/24 15:50:42.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:42.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:42.919
  STEP: Creating initial PV and PVC @ 04/30/24 15:50:42.922
  Apr 30 15:50:42.922: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5600" @ 04/30/24 15:50:42.943
  STEP: Listing PVCs in namespace "pv-5600" @ 04/30/24 15:50:42.946
  STEP: Patching the PV "pv-5600-mmhm5" @ 04/30/24 15:50:42.955
  STEP: Patching the PVC "pvc-jvnb4" @ 04/30/24 15:50:42.974
  STEP: Getting PV "pv-5600-mmhm5" @ 04/30/24 15:50:42.984
  STEP: Getting PVC "pvc-jvnb4" @ 04/30/24 15:50:42.988
  STEP: Deleting PVC "pvc-jvnb4" @ 04/30/24 15:50:43.003
  STEP: Confirm deletion of PVC "pvc-jvnb4" @ 04/30/24 15:50:43.028
  STEP: Deleting PV "pv-5600-mmhm5" @ 04/30/24 15:50:45.04
  STEP: Confirm deletion of PV "pv-5600-mmhm5" @ 04/30/24 15:50:45.094
  STEP: Recreating another PV & PVC @ 04/30/24 15:50:47.109
  Apr 30 15:50:47.110: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5600-hmfmz" @ 04/30/24 15:50:47.127
  STEP: Updating the PVC "pvc-7dwj9" @ 04/30/24 15:50:47.178
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-7dwj9=updated" @ 04/30/24 15:50:47.19
  STEP: Deleting PVC "pvc-7dwj9" via DeleteCollection @ 04/30/24 15:50:47.194
  STEP: Confirm deletion of PVC "pvc-7dwj9" @ 04/30/24 15:50:47.213
  STEP: Deleting PV "pv-5600-hmfmz" via DeleteCollection @ 04/30/24 15:50:49.225
  STEP: Confirm deletion of PV "pv-5600-hmfmz" @ 04/30/24 15:50:49.24
  Apr 30 15:50:51.248: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 30 15:50:51.248: INFO: Deleting PersistentVolumeClaim "pvc-7dwj9"
  Apr 30 15:50:51.252: INFO: Deleting PersistentVolume "pv-5600-hmfmz"
  Apr 30 15:50:51.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5600" for this suite. @ 04/30/24 15:50:51.261
• [8.388 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/30/24 15:50:51.275
  Apr 30 15:50:51.275: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 15:50:51.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:51.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:51.308
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 15:50:51.31
  STEP: Saw pod success @ 04/30/24 15:50:55.347
  Apr 30 15:50:55.351: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-ea40b681-e840-4920-a81e-3374957db003 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 15:50:55.357
  Apr 30 15:50:55.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8574" for this suite. @ 04/30/24 15:50:55.381
• [4.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/30/24 15:50:55.393
  Apr 30 15:50:55.393: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename namespaces @ 04/30/24 15:50:55.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:55.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:55.42
  STEP: Creating namespace "e2e-ns-tjmp6" @ 04/30/24 15:50:55.422
  Apr 30 15:50:55.448: INFO: Namespace "e2e-ns-tjmp6-1556" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-tjmp6-1556" @ 04/30/24 15:50:55.449
  Apr 30 15:50:55.459: INFO: Namespace "e2e-ns-tjmp6-1556" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-tjmp6-1556" @ 04/30/24 15:50:55.459
  Apr 30 15:50:55.471: INFO: Namespace "e2e-ns-tjmp6-1556" has []v1.FinalizerName{"kubernetes"}
  Apr 30 15:50:55.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9632" for this suite. @ 04/30/24 15:50:55.475
  STEP: Destroying namespace "e2e-ns-tjmp6-1556" for this suite. @ 04/30/24 15:50:55.484
• [0.099 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/30/24 15:50:55.492
  Apr 30 15:50:55.492: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 15:50:55.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:50:55.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:50:55.514
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/30/24 15:50:55.517
  Apr 30 15:50:55.518: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:50:57.444: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 15:51:04.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-876" for this suite. @ 04/30/24 15:51:04.791
• [9.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/30/24 15:51:04.8
  Apr 30 15:51:04.800: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename containers @ 04/30/24 15:51:04.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:04.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:04.834
  STEP: Creating a pod to test override command @ 04/30/24 15:51:04.836
  STEP: Saw pod success @ 04/30/24 15:51:08.862
  Apr 30 15:51:08.866: INFO: Trying to get logs from node perfermance-5 pod client-containers-e8d2a540-5b41-45b3-827f-ac3315c085db container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 15:51:08.873
  Apr 30 15:51:08.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8394" for this suite. @ 04/30/24 15:51:08.905
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/30/24 15:51:08.917
  Apr 30 15:51:08.917: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 15:51:08.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:08.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:08.943
  Apr 30 15:51:08.946: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: creating the pod @ 04/30/24 15:51:08.947
  STEP: submitting the pod to kubernetes @ 04/30/24 15:51:08.947
  Apr 30 15:51:11.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9580" for this suite. @ 04/30/24 15:51:11.007
• [2.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/30/24 15:51:11.017
  Apr 30 15:51:11.017: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename events @ 04/30/24 15:51:11.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:11.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:11.049
  STEP: Create set of events @ 04/30/24 15:51:11.052
  STEP: get a list of Events with a label in the current namespace @ 04/30/24 15:51:11.078
  STEP: delete a list of events @ 04/30/24 15:51:11.082
  Apr 30 15:51:11.082: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/30/24 15:51:11.11
  Apr 30 15:51:11.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4742" for this suite. @ 04/30/24 15:51:11.118
• [0.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 04/30/24 15:51:11.126
  Apr 30 15:51:11.126: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 15:51:11.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:11.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:11.154
  STEP: Counting existing ResourceQuota @ 04/30/24 15:51:11.157
  STEP: Creating a ResourceQuota @ 04/30/24 15:51:16.162
  STEP: Ensuring resource quota status is calculated @ 04/30/24 15:51:16.171
  STEP: Creating a Service @ 04/30/24 15:51:18.176
  STEP: Creating a NodePort Service @ 04/30/24 15:51:18.202
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/30/24 15:51:18.239
  STEP: Ensuring resource quota status captures service creation @ 04/30/24 15:51:18.27
  STEP: Deleting Services @ 04/30/24 15:51:20.278
  STEP: Ensuring resource quota status released usage @ 04/30/24 15:51:20.336
  Apr 30 15:51:22.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3464" for this suite. @ 04/30/24 15:51:22.347
• [11.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/30/24 15:51:22.36
  Apr 30 15:51:22.360: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 15:51:22.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:22.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:22.393
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2885 @ 04/30/24 15:51:22.397
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/30/24 15:51:22.418
  STEP: creating service externalsvc in namespace services-2885 @ 04/30/24 15:51:22.418
  STEP: creating replication controller externalsvc in namespace services-2885 @ 04/30/24 15:51:22.44
  I0430 15:51:22.456121      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2885, replica count: 2
  I0430 15:51:25.507108      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/30/24 15:51:25.511
  Apr 30 15:51:25.546: INFO: Creating new exec pod
  Apr 30 15:51:27.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-2885 exec execpodvss26 -- /bin/sh -x -c nslookup nodeport-service.services-2885.svc.cluster.local'
  Apr 30 15:51:27.743: INFO: stderr: "+ nslookup nodeport-service.services-2885.svc.cluster.local\n"
  Apr 30 15:51:27.743: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-2885.svc.cluster.local\tcanonical name = externalsvc.services-2885.svc.cluster.local.\nName:\texternalsvc.services-2885.svc.cluster.local\nAddress: 10.96.1.236\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2885, will wait for the garbage collector to delete the pods @ 04/30/24 15:51:27.743
  Apr 30 15:51:27.805: INFO: Deleting ReplicationController externalsvc took: 7.74186ms
  Apr 30 15:51:27.906: INFO: Terminating ReplicationController externalsvc pods took: 101.138421ms
  Apr 30 15:51:31.433: INFO: Cleaning up the NodePort to ExternalName test service
  Apr 30 15:51:31.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2885" for this suite. @ 04/30/24 15:51:31.458
• [9.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/30/24 15:51:31.468
  Apr 30 15:51:31.468: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 15:51:31.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:31.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:31.502
  Apr 30 15:51:31.505: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/30/24 15:51:33.434
  Apr 30 15:51:33.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-1822 --namespace=crd-publish-openapi-1822 create -f -'
  Apr 30 15:51:33.581: INFO: stderr: ""
  Apr 30 15:51:33.581: INFO: stdout: "e2e-test-crd-publish-openapi-8727-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 30 15:51:33.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-1822 --namespace=crd-publish-openapi-1822 delete e2e-test-crd-publish-openapi-8727-crds test-cr'
  Apr 30 15:51:33.696: INFO: stderr: ""
  Apr 30 15:51:33.696: INFO: stdout: "e2e-test-crd-publish-openapi-8727-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 30 15:51:33.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-1822 --namespace=crd-publish-openapi-1822 apply -f -'
  Apr 30 15:51:33.840: INFO: stderr: ""
  Apr 30 15:51:33.840: INFO: stdout: "e2e-test-crd-publish-openapi-8727-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 30 15:51:33.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-1822 --namespace=crd-publish-openapi-1822 delete e2e-test-crd-publish-openapi-8727-crds test-cr'
  Apr 30 15:51:33.934: INFO: stderr: ""
  Apr 30 15:51:33.934: INFO: stdout: "e2e-test-crd-publish-openapi-8727-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/30/24 15:51:33.934
  Apr 30 15:51:33.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-1822 explain e2e-test-crd-publish-openapi-8727-crds'
  Apr 30 15:51:34.015: INFO: stderr: ""
  Apr 30 15:51:34.015: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8727-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 30 15:51:35.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1822" for this suite. @ 04/30/24 15:51:35.968
• [4.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/30/24 15:51:35.984
  Apr 30 15:51:35.984: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 15:51:35.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:36.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:36.014
  STEP: Creating secret with name secret-test-ffd773a5-3393-4e09-ae5c-37147a94e8a9 @ 04/30/24 15:51:36.018
  STEP: Creating a pod to test consume secrets @ 04/30/24 15:51:36.028
  STEP: Saw pod success @ 04/30/24 15:51:40.071
  Apr 30 15:51:40.074: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-a97af735-8841-43c2-a9ab-f1f40769ba09 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 15:51:40.081
  Apr 30 15:51:40.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9639" for this suite. @ 04/30/24 15:51:40.108
• [4.139 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/30/24 15:51:40.124
  Apr 30 15:51:40.125: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename limitrange @ 04/30/24 15:51:40.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:40.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:40.153
  STEP: Creating a LimitRange @ 04/30/24 15:51:40.156
  STEP: Setting up watch @ 04/30/24 15:51:40.156
  STEP: Submitting a LimitRange @ 04/30/24 15:51:40.26
  STEP: Verifying LimitRange creation was observed @ 04/30/24 15:51:40.268
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/30/24 15:51:40.269
  Apr 30 15:51:40.272: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 30 15:51:40.273: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/30/24 15:51:40.273
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/30/24 15:51:40.281
  Apr 30 15:51:40.286: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 30 15:51:40.286: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/30/24 15:51:40.287
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/30/24 15:51:40.302
  Apr 30 15:51:40.306: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 30 15:51:40.306: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/30/24 15:51:40.306
  STEP: Failing to create a Pod with more than max resources @ 04/30/24 15:51:40.309
  STEP: Updating a LimitRange @ 04/30/24 15:51:40.313
  STEP: Verifying LimitRange updating is effective @ 04/30/24 15:51:40.324
  STEP: Creating a Pod with less than former min resources @ 04/30/24 15:51:42.329
  STEP: Failing to create a Pod with more than max resources @ 04/30/24 15:51:42.34
  STEP: Deleting a LimitRange @ 04/30/24 15:51:42.343
  STEP: Verifying the LimitRange was deleted @ 04/30/24 15:51:42.354
  Apr 30 15:51:47.360: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/30/24 15:51:47.36
  Apr 30 15:51:47.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7545" for this suite. @ 04/30/24 15:51:47.382
• [7.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/30/24 15:51:47.404
  Apr 30 15:51:47.404: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename field-validation @ 04/30/24 15:51:47.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:47.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:47.438
  Apr 30 15:51:47.442: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  W0430 15:51:49.999550      21 warnings.go:70] unknown field "alpha"
  W0430 15:51:49.999583      21 warnings.go:70] unknown field "beta"
  W0430 15:51:49.999589      21 warnings.go:70] unknown field "delta"
  W0430 15:51:49.999594      21 warnings.go:70] unknown field "epsilon"
  W0430 15:51:49.999599      21 warnings.go:70] unknown field "gamma"
  Apr 30 15:51:50.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3645" for this suite. @ 04/30/24 15:51:50.568
• [3.175 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/30/24 15:51:50.582
  Apr 30 15:51:50.582: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 15:51:50.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:50.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:50.614
  STEP: Setting up server cert @ 04/30/24 15:51:50.646
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 15:51:51.484
  STEP: Deploying the webhook pod @ 04/30/24 15:51:51.494
  STEP: Wait for the deployment to be ready @ 04/30/24 15:51:51.514
  Apr 30 15:51:51.531: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 15:51:53.543
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:51:53.564
  Apr 30 15:51:54.564: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/30/24 15:51:54.571
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/30/24 15:51:54.573
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/30/24 15:51:54.574
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/30/24 15:51:54.574
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/30/24 15:51:54.575
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/30/24 15:51:54.575
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/30/24 15:51:54.577
  Apr 30 15:51:54.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4567" for this suite. @ 04/30/24 15:51:54.645
  STEP: Destroying namespace "webhook-markers-6949" for this suite. @ 04/30/24 15:51:54.664
• [4.094 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/30/24 15:51:54.676
  Apr 30 15:51:54.676: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 15:51:54.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:54.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:54.708
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 15:51:54.713
  STEP: Saw pod success @ 04/30/24 15:51:58.742
  Apr 30 15:51:58.745: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-9455dfdc-f364-438c-b45c-06d4ef9c216a container client-container: <nil>
  STEP: delete the pod @ 04/30/24 15:51:58.75
  Apr 30 15:51:58.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4942" for this suite. @ 04/30/24 15:51:58.777
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 04/30/24 15:51:58.788
  Apr 30 15:51:58.788: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename job @ 04/30/24 15:51:58.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:51:58.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:51:58.815
  STEP: Creating a job @ 04/30/24 15:51:58.818
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/30/24 15:51:58.826
  STEP: patching /status @ 04/30/24 15:52:00.832
  STEP: updating /status @ 04/30/24 15:52:00.844
  STEP: get /status @ 04/30/24 15:52:00.852
  Apr 30 15:52:00.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6506" for this suite. @ 04/30/24 15:52:00.86
• [2.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 04/30/24 15:52:00.869
  Apr 30 15:52:00.869: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename job @ 04/30/24 15:52:00.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:52:00.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:52:00.903
  STEP: Creating Indexed job @ 04/30/24 15:52:00.906
  STEP: Ensuring job reaches completions @ 04/30/24 15:52:00.913
  STEP: Ensuring pods with index for job exist @ 04/30/24 15:52:08.919
  Apr 30 15:52:08.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5965" for this suite. @ 04/30/24 15:52:08.929
• [8.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/30/24 15:52:08.939
  Apr 30 15:52:08.939: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 15:52:08.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:52:08.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:52:08.972
  STEP: Creating configMap with name configmap-projected-all-test-volume-634df9b6-fbdd-4260-a036-0753a4cdd00f @ 04/30/24 15:52:08.976
  STEP: Creating secret with name secret-projected-all-test-volume-1f94789c-53cf-4120-8056-3c571f6a581c @ 04/30/24 15:52:08.985
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/30/24 15:52:08.991
  STEP: Saw pod success @ 04/30/24 15:52:13.03
  Apr 30 15:52:13.034: INFO: Trying to get logs from node perfermance-5 pod projected-volume-699a0fbb-1e19-4ea9-adf1-c2c8660db245 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 15:52:13.041
  Apr 30 15:52:13.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2314" for this suite. @ 04/30/24 15:52:13.072
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 04/30/24 15:52:13.08
  Apr 30 15:52:13.080: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-pred @ 04/30/24 15:52:13.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:52:13.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:52:13.108
  Apr 30 15:52:13.111: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 30 15:52:13.119: INFO: Waiting for terminating namespaces to be deleted...
  Apr 30 15:52:13.122: INFO: 
  Logging pods the apiserver thinks is on node perfermance-4 before test
  Apr 30 15:52:13.134: INFO: calico-apiserver-858c89fdd8-wj65g from calico-apiserver started at 2024-04-30 06:40:07 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container calico-apiserver ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: calico-kube-controllers-fbfd8f68d-n8rqd from calico-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: calico-node-x8h5t from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: calico-typha-bd54b44f-6wlc4 from calico-system started at 2024-04-30 06:39:42 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: csi-node-driver-shg6w from calico-system started at 2024-04-30 06:39:55 +0000 UTC (2 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: indexed-job-0-bqg79 from job-5965 started at 2024-04-30 15:52:00 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container c ready: false, restart count 0
  Apr 30 15:52:13.134: INFO: indexed-job-3-nzmls from job-5965 started at 2024-04-30 15:52:04 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container c ready: false, restart count 0
  Apr 30 15:52:13.134: INFO: coredns-76f75df574-5c95b from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: coredns-76f75df574-z5fss from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: kube-proxy-2srcz from kube-system started at 2024-04-30 06:36:53 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.134: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 15:52:13.134: INFO: kube-sealos-lvscare-perfermance-4 from kube-system started at 2024-04-30 06:37:11 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.135: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 15:52:13.135: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-wgmnv from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 15:52:13.135: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 15:52:13.135: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 30 15:52:13.135: INFO: tigera-operator-66996c666d-nrzq2 from tigera-operator started at 2024-04-30 06:39:27 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.135: INFO: 	Container tigera-operator ready: true, restart count 0
  Apr 30 15:52:13.135: INFO: 
  Logging pods the apiserver thinks is on node perfermance-5 before test
  Apr 30 15:52:13.147: INFO: calico-node-tslfb from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: calico-typha-bd54b44f-kwfhr from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: csi-node-driver-f8vg9 from calico-system started at 2024-04-30 11:08:37 +0000 UTC (2 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: indexed-job-1-86c84 from job-5965 started at 2024-04-30 15:52:00 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container c ready: false, restart count 0
  Apr 30 15:52:13.147: INFO: indexed-job-2-9nz5s from job-5965 started at 2024-04-30 15:52:04 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container c ready: false, restart count 0
  Apr 30 15:52:13.147: INFO: kube-proxy-t5fn7 from kube-system started at 2024-04-30 06:36:52 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: kube-sealos-lvscare-perfermance-5 from kube-system started at 2024-04-30 06:37:10 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: sonobuoy from sonobuoy started at 2024-04-30 15:42:34 +0000 UTC (1 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: sonobuoy-e2e-job-dc5cbc99c8b64d76 from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container e2e ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-hqf4m from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 15:52:13.147: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 15:52:13.147: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/30/24 15:52:13.147
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/30/24 15:52:15.166
  STEP: Trying to apply a random label on the found node. @ 04/30/24 15:52:15.187
  STEP: verifying the node has the label kubernetes.io/e2e-44626a20-cd86-42a1-a9df-cfa6c80bc16f 95 @ 04/30/24 15:52:15.199
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/30/24 15:52:15.204
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.111.203 on the node which pod4 resides and expect not scheduled @ 04/30/24 15:52:17.223
  STEP: removing the label kubernetes.io/e2e-44626a20-cd86-42a1-a9df-cfa6c80bc16f off the node perfermance-5 @ 04/30/24 15:57:17.236
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-44626a20-cd86-42a1-a9df-cfa6c80bc16f @ 04/30/24 15:57:17.253
  Apr 30 15:57:17.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2909" for this suite. @ 04/30/24 15:57:17.264
• [304.192 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/30/24 15:57:17.275
  Apr 30 15:57:17.275: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replication-controller @ 04/30/24 15:57:17.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:17.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:17.301
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/30/24 15:57:17.304
  STEP: When a replication controller with a matching selector is created @ 04/30/24 15:57:19.337
  STEP: Then the orphan pod is adopted @ 04/30/24 15:57:19.345
  Apr 30 15:57:20.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5373" for this suite. @ 04/30/24 15:57:20.358
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 04/30/24 15:57:20.371
  Apr 30 15:57:20.371: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 15:57:20.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:20.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:20.408
  STEP: Creating configMap that has name configmap-test-emptyKey-613cd73b-49d0-470c-b5d6-48a64e23843b @ 04/30/24 15:57:20.412
  Apr 30 15:57:20.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8057" for this suite. @ 04/30/24 15:57:20.42
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/30/24 15:57:20.436
  Apr 30 15:57:20.436: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 15:57:20.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:20.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:20.467
  Apr 30 15:57:20.470: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/30/24 15:57:22.459
  Apr 30 15:57:22.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-8026 --namespace=crd-publish-openapi-8026 create -f -'
  Apr 30 15:57:22.605: INFO: stderr: ""
  Apr 30 15:57:22.605: INFO: stdout: "e2e-test-crd-publish-openapi-2234-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 30 15:57:22.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-8026 --namespace=crd-publish-openapi-8026 delete e2e-test-crd-publish-openapi-2234-crds test-cr'
  Apr 30 15:57:22.731: INFO: stderr: ""
  Apr 30 15:57:22.731: INFO: stdout: "e2e-test-crd-publish-openapi-2234-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 30 15:57:22.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-8026 --namespace=crd-publish-openapi-8026 apply -f -'
  Apr 30 15:57:22.840: INFO: stderr: ""
  Apr 30 15:57:22.841: INFO: stdout: "e2e-test-crd-publish-openapi-2234-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 30 15:57:22.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-8026 --namespace=crd-publish-openapi-8026 delete e2e-test-crd-publish-openapi-2234-crds test-cr'
  Apr 30 15:57:22.936: INFO: stderr: ""
  Apr 30 15:57:22.936: INFO: stdout: "e2e-test-crd-publish-openapi-2234-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/30/24 15:57:22.936
  Apr 30 15:57:22.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-8026 explain e2e-test-crd-publish-openapi-2234-crds'
  Apr 30 15:57:23.038: INFO: stderr: ""
  Apr 30 15:57:23.039: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2234-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 30 15:57:24.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8026" for this suite. @ 04/30/24 15:57:24.938
• [4.512 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/30/24 15:57:24.949
  Apr 30 15:57:24.950: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 15:57:24.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:24.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:24.977
  STEP: Creating configMap with name cm-test-opt-del-c34c94be-e2d7-41ba-a03d-76aa1d535ccd @ 04/30/24 15:57:24.985
  STEP: Creating configMap with name cm-test-opt-upd-aed98999-136e-431f-b947-9825b0e5388a @ 04/30/24 15:57:24.994
  STEP: Creating the pod @ 04/30/24 15:57:25.001
  STEP: Deleting configmap cm-test-opt-del-c34c94be-e2d7-41ba-a03d-76aa1d535ccd @ 04/30/24 15:57:27.067
  STEP: Updating configmap cm-test-opt-upd-aed98999-136e-431f-b947-9825b0e5388a @ 04/30/24 15:57:27.077
  STEP: Creating configMap with name cm-test-opt-create-74bed90a-ffe2-4eac-9db4-631f5c943a8a @ 04/30/24 15:57:27.09
  STEP: waiting to observe update in volume @ 04/30/24 15:57:27.096
  Apr 30 15:57:29.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-318" for this suite. @ 04/30/24 15:57:29.138
• [4.204 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/30/24 15:57:29.154
  Apr 30 15:57:29.154: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sysctl @ 04/30/24 15:57:29.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:29.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:29.185
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/30/24 15:57:29.188
  STEP: Watching for error events or started pod @ 04/30/24 15:57:29.202
  STEP: Waiting for pod completion @ 04/30/24 15:57:31.768
  STEP: Checking that the pod succeeded @ 04/30/24 15:57:33.804
  STEP: Getting logs from the pod @ 04/30/24 15:57:33.805
  STEP: Checking that the sysctl is actually updated @ 04/30/24 15:57:33.823
  Apr 30 15:57:33.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7014" for this suite. @ 04/30/24 15:57:33.84
• [4.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/30/24 15:57:33.852
  Apr 30 15:57:33.853: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename runtimeclass @ 04/30/24 15:57:33.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:33.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:33.882
  STEP: Deleting RuntimeClass runtimeclass-5112-delete-me @ 04/30/24 15:57:33.899
  STEP: Waiting for the RuntimeClass to disappear @ 04/30/24 15:57:33.911
  Apr 30 15:57:33.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5112" for this suite. @ 04/30/24 15:57:33.928
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/30/24 15:57:33.94
  Apr 30 15:57:33.940: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename endpointslice @ 04/30/24 15:57:33.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:33.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:33.974
  STEP: getting /apis @ 04/30/24 15:57:33.977
  STEP: getting /apis/discovery.k8s.io @ 04/30/24 15:57:33.982
  STEP: getting /apis/discovery.k8s.iov1 @ 04/30/24 15:57:33.983
  STEP: creating @ 04/30/24 15:57:33.985
  STEP: getting @ 04/30/24 15:57:34.014
  STEP: listing @ 04/30/24 15:57:34.017
  STEP: watching @ 04/30/24 15:57:34.02
  Apr 30 15:57:34.020: INFO: starting watch
  STEP: cluster-wide listing @ 04/30/24 15:57:34.021
  STEP: cluster-wide watching @ 04/30/24 15:57:34.024
  Apr 30 15:57:34.024: INFO: starting watch
  STEP: patching @ 04/30/24 15:57:34.025
  STEP: updating @ 04/30/24 15:57:34.044
  Apr 30 15:57:34.053: INFO: waiting for watch events with expected annotations
  Apr 30 15:57:34.053: INFO: saw patched and updated annotations
  STEP: deleting @ 04/30/24 15:57:34.053
  STEP: deleting a collection @ 04/30/24 15:57:34.07
  Apr 30 15:57:34.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1472" for this suite. @ 04/30/24 15:57:34.092
• [0.165 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/30/24 15:57:34.107
  Apr 30 15:57:34.107: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 15:57:34.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:34.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:34.139
  STEP: Setting up server cert @ 04/30/24 15:57:34.185
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 15:57:34.516
  STEP: Deploying the webhook pod @ 04/30/24 15:57:34.541
  STEP: Wait for the deployment to be ready @ 04/30/24 15:57:34.561
  Apr 30 15:57:34.573: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 15:57:36.585
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:57:36.602
  Apr 30 15:57:37.602: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 30 15:57:37.610: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/30/24 15:57:38.126
  STEP: Creating a custom resource that should be denied by the webhook @ 04/30/24 15:57:38.147
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/30/24 15:57:40.17
  STEP: Updating the custom resource with disallowed data should be denied @ 04/30/24 15:57:40.178
  STEP: Deleting the custom resource should be denied @ 04/30/24 15:57:40.191
  STEP: Remove the offending key and value from the custom resource data @ 04/30/24 15:57:40.199
  STEP: Deleting the updated custom resource should be successful @ 04/30/24 15:57:40.213
  Apr 30 15:57:40.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3855" for this suite. @ 04/30/24 15:57:40.839
  STEP: Destroying namespace "webhook-markers-7030" for this suite. @ 04/30/24 15:57:40.847
• [6.748 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 04/30/24 15:57:40.857
  Apr 30 15:57:40.857: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubelet-test @ 04/30/24 15:57:40.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:40.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:40.88
  Apr 30 15:57:40.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8556" for this suite. @ 04/30/24 15:57:40.927
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/30/24 15:57:40.935
  Apr 30 15:57:40.935: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 15:57:40.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:40.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:40.958
  Apr 30 15:57:41.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2171" for this suite. @ 04/30/24 15:57:41.023
• [0.102 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 04/30/24 15:57:41.037
  Apr 30 15:57:41.037: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 15:57:41.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:41.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:41.063
  STEP: Starting the proxy @ 04/30/24 15:57:41.067
  Apr 30 15:57:41.068: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6888 proxy --unix-socket=/tmp/kubectl-proxy-unix1480198262/test'
  STEP: retrieving proxy /api/ output @ 04/30/24 15:57:41.132
  Apr 30 15:57:41.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6888" for this suite. @ 04/30/24 15:57:41.138
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/30/24 15:57:41.147
  Apr 30 15:57:41.147: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 15:57:41.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:41.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:41.168
  STEP: Creating configMap with name projected-configmap-test-volume-2ae72715-a016-450a-9d24-5053976eb943 @ 04/30/24 15:57:41.17
  STEP: Creating a pod to test consume configMaps @ 04/30/24 15:57:41.176
  STEP: Saw pod success @ 04/30/24 15:57:45.206
  Apr 30 15:57:45.209: INFO: Trying to get logs from node perfermance-5 pod pod-projected-configmaps-63ede012-60c3-4dfd-945b-86d7941ccb24 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 15:57:45.216
  Apr 30 15:57:45.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-78" for this suite. @ 04/30/24 15:57:45.241
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 04/30/24 15:57:45.249
  Apr 30 15:57:45.249: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 15:57:45.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:45.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:45.277
  STEP: Creating configMap configmap-8424/configmap-test-e4797096-e1b8-4503-972c-344e0e89c370 @ 04/30/24 15:57:45.28
  STEP: Creating a pod to test consume configMaps @ 04/30/24 15:57:45.286
  STEP: Saw pod success @ 04/30/24 15:57:49.322
  Apr 30 15:57:49.326: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-4b58b578-4392-4a3f-955a-26e0a4433981 container env-test: <nil>
  STEP: delete the pod @ 04/30/24 15:57:49.333
  Apr 30 15:57:49.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8424" for this suite. @ 04/30/24 15:57:49.363
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/30/24 15:57:49.377
  Apr 30 15:57:49.377: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename runtimeclass @ 04/30/24 15:57:49.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:49.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:49.404
  STEP: getting /apis @ 04/30/24 15:57:49.407
  STEP: getting /apis/node.k8s.io @ 04/30/24 15:57:49.415
  STEP: getting /apis/node.k8s.io/v1 @ 04/30/24 15:57:49.417
  STEP: creating @ 04/30/24 15:57:49.419
  STEP: watching @ 04/30/24 15:57:49.445
  Apr 30 15:57:49.446: INFO: starting watch
  STEP: getting @ 04/30/24 15:57:49.458
  STEP: listing @ 04/30/24 15:57:49.461
  STEP: patching @ 04/30/24 15:57:49.464
  STEP: updating @ 04/30/24 15:57:49.474
  Apr 30 15:57:49.479: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/30/24 15:57:49.479
  STEP: deleting a collection @ 04/30/24 15:57:49.493
  Apr 30 15:57:49.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7805" for this suite. @ 04/30/24 15:57:49.517
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/30/24 15:57:49.533
  Apr 30 15:57:49.534: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 15:57:49.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:49.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:49.563
  STEP: Create a pod @ 04/30/24 15:57:49.566
  STEP: patching /status @ 04/30/24 15:57:51.588
  Apr 30 15:57:51.602: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 30 15:57:51.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2029" for this suite. @ 04/30/24 15:57:51.609
• [2.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/30/24 15:57:51.624
  Apr 30 15:57:51.624: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename namespaces @ 04/30/24 15:57:51.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:51.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:51.648
  STEP: Updating Namespace "namespaces-4548" @ 04/30/24 15:57:51.651
  Apr 30 15:57:51.664: INFO: Namespace "namespaces-4548" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"ac853f24-8fa6-4df3-990f-f47b46338366", "kubernetes.io/metadata.name":"namespaces-4548", "namespaces-4548":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 30 15:57:51.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4548" for this suite. @ 04/30/24 15:57:51.669
• [0.053 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/30/24 15:57:51.677
  Apr 30 15:57:51.677: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename watch @ 04/30/24 15:57:51.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:51.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:51.705
  STEP: getting a starting resourceVersion @ 04/30/24 15:57:51.708
  STEP: starting a background goroutine to produce watch events @ 04/30/24 15:57:51.711
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/30/24 15:57:51.711
  Apr 30 15:57:54.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6909" for this suite. @ 04/30/24 15:57:54.533
• [2.915 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/30/24 15:57:54.592
  Apr 30 15:57:54.592: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 15:57:54.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:54.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:54.62
  STEP: Creating configMap with name projected-configmap-test-volume-b05ad262-1f56-476e-8005-e947e4320a78 @ 04/30/24 15:57:54.625
  STEP: Creating a pod to test consume configMaps @ 04/30/24 15:57:54.636
  STEP: Saw pod success @ 04/30/24 15:57:58.679
  Apr 30 15:57:58.682: INFO: Trying to get logs from node perfermance-5 pod pod-projected-configmaps-1decd8e6-29c9-4104-91bc-125777d4c1ce container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 15:57:58.69
  Apr 30 15:57:58.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4350" for this suite. @ 04/30/24 15:57:58.722
• [4.140 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 04/30/24 15:57:58.733
  Apr 30 15:57:58.733: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-webhook @ 04/30/24 15:57:58.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:57:58.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:57:58.762
  STEP: Setting up server cert @ 04/30/24 15:57:58.766
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/30/24 15:57:59.678
  STEP: Deploying the custom resource conversion webhook pod @ 04/30/24 15:57:59.687
  STEP: Wait for the deployment to be ready @ 04/30/24 15:57:59.706
  Apr 30 15:57:59.719: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/30/24 15:58:01.733
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 15:58:01.744
  Apr 30 15:58:02.745: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 30 15:58:02.753: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Creating a v1 custom resource @ 04/30/24 15:58:05.331
  STEP: Create a v2 custom resource @ 04/30/24 15:58:05.357
  STEP: List CRs in v1 @ 04/30/24 15:58:05.398
  STEP: List CRs in v2 @ 04/30/24 15:58:05.407
  Apr 30 15:58:05.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-366" for this suite. @ 04/30/24 15:58:05.994
• [7.283 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/30/24 15:58:06.016
  Apr 30 15:58:06.016: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 15:58:06.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:06.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:06.044
  Apr 30 15:58:06.055: INFO: Creating simple deployment test-new-deployment
  Apr 30 15:58:06.075: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 04/30/24 15:58:08.096
  STEP: updating a scale subresource @ 04/30/24 15:58:08.099
  STEP: verifying the deployment Spec.Replicas was modified @ 04/30/24 15:58:08.107
  STEP: Patch a scale subresource @ 04/30/24 15:58:08.111
  Apr 30 15:58:08.134: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3247",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c809428-7934-4413-a8dd-957ca781bdd0",
      ResourceVersion: (string) (len=6) "182121",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850089486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 30 15:58:08.157: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3247",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70efb62f-ed98-4c54-854a-b353d469e4b8",
      ResourceVersion: (string) (len=6) "182127",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850089486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "2c809428-7934-4413-a8dd-957ca781bdd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 38 30 39 34  32 38 2d 37 39 33 34 2d  |\"2c809428-7934-|
              00000120  34 34 31 33 2d 61 38 64  64 2d 39 35 37 63 61 37  |4413-a8dd-957ca7|
              00000130  38 31 62 64 64 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |81bdd0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 15:58:08.168: INFO: Pod "test-new-deployment-557759b7c7-2pqdk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-2pqdk",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3247",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bc5336c-48e2-48f0-a3c1-036607438052",
      ResourceVersion: (string) (len=6) "182126",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850089488,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "70efb62f-ed98-4c54-854a-b353d469e4b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 30  65 66 62 36 32 66 2d 65  |d\":\"70efb62f-e|
              00000090  64 39 38 2d 34 63 35 34  2d 38 35 34 61 2d 62 33  |d98-4c54-854a-b3|
              000000a0  35 33 64 34 36 39 65 34  62 38 5c 22 7d 22 3a 7b  |53d469e4b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zwd6h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zwd6h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 15:58:08.170: INFO: Pod "test-new-deployment-557759b7c7-sbmk8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-sbmk8",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3247",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "786efecc-00eb-4c7b-8741-3e4d06944ffb",
      ResourceVersion: (string) (len=6) "182115",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850089486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f3c6d66e92ba2e29c694933cbd9d4a36dd545741bfed91365955b2a0939ed7b6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "100.73.144.101/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "100.73.144.101/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "70efb62f-ed98-4c54-854a-b353d469e4b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 30  65 66 62 36 32 66 2d 65  |d\":\"70efb62f-e|
              00000090  64 39 38 2d 34 63 35 34  2d 38 35 34 61 2d 62 33  |d98-4c54-854a-b3|
              000000a0  35 33 64 34 36 39 65 34  62 38 5c 22 7d 22 3a 7b  |53d469e4b8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 31 30 31 5c 22 7d 22  |0.73.144.101\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mwkvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mwkvk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850089486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=14) "100.73.144.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "100.73.144.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850089486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850089486,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d6107f7cfdbf3cfdb6856533f9af7477ccfc0dde328a31554bf9416d1a2cbcd1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 15:58:08.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3247" for this suite. @ 04/30/24 15:58:08.184
• [2.198 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/30/24 15:58:08.213
  Apr 30 15:58:08.213: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename watch @ 04/30/24 15:58:08.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:08.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:08.248
  STEP: creating a watch on configmaps @ 04/30/24 15:58:08.251
  STEP: creating a new configmap @ 04/30/24 15:58:08.253
  STEP: modifying the configmap once @ 04/30/24 15:58:08.259
  STEP: closing the watch once it receives two notifications @ 04/30/24 15:58:08.268
  Apr 30 15:58:08.268: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1350  4c43d0b3-6d7a-489c-9398-d49040d8b693 182149 0 2024-04-30 15:58:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-30 15:58:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 15:58:08.269: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1350  4c43d0b3-6d7a-489c-9398-d49040d8b693 182150 0 2024-04-30 15:58:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-30 15:58:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/30/24 15:58:08.269
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/30/24 15:58:08.277
  STEP: deleting the configmap @ 04/30/24 15:58:08.279
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/30/24 15:58:08.285
  Apr 30 15:58:08.286: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1350  4c43d0b3-6d7a-489c-9398-d49040d8b693 182151 0 2024-04-30 15:58:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-30 15:58:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 15:58:08.286: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1350  4c43d0b3-6d7a-489c-9398-d49040d8b693 182152 0 2024-04-30 15:58:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-30 15:58:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 15:58:08.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1350" for this suite. @ 04/30/24 15:58:08.291
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/30/24 15:58:08.311
  Apr 30 15:58:08.311: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 15:58:08.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:08.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:08.336
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 15:58:08.339
  STEP: Saw pod success @ 04/30/24 15:58:12.374
  Apr 30 15:58:12.377: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-b2ac90a9-c73e-4ceb-9234-3749ce762d46 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 15:58:12.384
  Apr 30 15:58:12.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-81" for this suite. @ 04/30/24 15:58:12.415
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/30/24 15:58:12.435
  Apr 30 15:58:12.435: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 15:58:12.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:12.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:12.456
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 15:58:12.459
  STEP: Saw pod success @ 04/30/24 15:58:16.497
  Apr 30 15:58:16.501: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-1a5fd616-c400-467e-a8eb-bc4f50fd45f1 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 15:58:16.508
  Apr 30 15:58:16.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6470" for this suite. @ 04/30/24 15:58:16.539
• [4.114 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 04/30/24 15:58:16.548
  Apr 30 15:58:16.548: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 15:58:16.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:16.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:16.573
  STEP: Creating service test in namespace statefulset-923 @ 04/30/24 15:58:16.576
  STEP: Creating statefulset ss in namespace statefulset-923 @ 04/30/24 15:58:16.583
  Apr 30 15:58:16.602: INFO: Found 0 stateful pods, waiting for 1
  Apr 30 15:58:26.604: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/30/24 15:58:26.611
  STEP: updating a scale subresource @ 04/30/24 15:58:26.615
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/30/24 15:58:26.624
  STEP: Patch a scale subresource @ 04/30/24 15:58:26.629
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/30/24 15:58:26.638
  Apr 30 15:58:26.648: INFO: Deleting all statefulset in ns statefulset-923
  Apr 30 15:58:26.657: INFO: Scaling statefulset ss to 0
  Apr 30 15:58:36.679: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 15:58:36.683: INFO: Deleting statefulset ss
  Apr 30 15:58:36.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-923" for this suite. @ 04/30/24 15:58:36.702
• [20.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/30/24 15:58:36.717
  Apr 30 15:58:36.717: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename gc @ 04/30/24 15:58:36.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:36.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:36.746
  STEP: create the deployment @ 04/30/24 15:58:36.75
  W0430 15:58:36.758660      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/30/24 15:58:36.758
  STEP: delete the deployment @ 04/30/24 15:58:37.267
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/30/24 15:58:37.278
  STEP: Gathering metrics @ 04/30/24 15:58:37.798
  Apr 30 15:58:37.880: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 30 15:58:37.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3931" for this suite. @ 04/30/24 15:58:37.886
• [1.177 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 04/30/24 15:58:37.895
  Apr 30 15:58:37.895: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubelet-test @ 04/30/24 15:58:37.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:37.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:37.932
  STEP: Waiting for pod completion @ 04/30/24 15:58:37.944
  Apr 30 15:58:41.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9556" for this suite. @ 04/30/24 15:58:41.974
• [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/30/24 15:58:41.982
  Apr 30 15:58:41.982: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svcaccounts @ 04/30/24 15:58:41.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:42.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:42.008
  STEP: Creating ServiceAccount "e2e-sa-rbkz6"  @ 04/30/24 15:58:42.011
  Apr 30 15:58:42.015: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-rbkz6"  @ 04/30/24 15:58:42.015
  Apr 30 15:58:42.023: INFO: AutomountServiceAccountToken: true
  Apr 30 15:58:42.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9741" for this suite. @ 04/30/24 15:58:42.028
• [0.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/30/24 15:58:42.038
  Apr 30 15:58:42.038: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 15:58:42.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:42.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:42.06
  STEP: Creating secret with name secret-test-8c5727f6-bd98-4f42-a514-d63984ecfbcd @ 04/30/24 15:58:42.063
  STEP: Creating a pod to test consume secrets @ 04/30/24 15:58:42.073
  STEP: Saw pod success @ 04/30/24 15:58:46.103
  Apr 30 15:58:46.107: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-4bdb8127-a6ea-4377-b899-bdac33c326a0 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 15:58:46.115
  Apr 30 15:58:46.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3559" for this suite. @ 04/30/24 15:58:46.15
• [4.125 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/30/24 15:58:46.163
  Apr 30 15:58:46.163: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/30/24 15:58:46.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 15:58:46.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 15:58:46.185
  Apr 30 15:58:46.193: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 30 15:59:46.195: INFO: Waiting for terminating namespaces to be deleted...
  Apr 30 15:59:46.199: INFO: Starting informer...
  STEP: Starting pods... @ 04/30/24 15:59:46.199
  Apr 30 15:59:46.423: INFO: Pod1 is running on perfermance-5. Tainting Node
  Apr 30 15:59:48.650: INFO: Pod2 is running on perfermance-5. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/30/24 15:59:48.65
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/30/24 15:59:48.666
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/30/24 15:59:48.673
  Apr 30 15:59:54.818: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Apr 30 16:00:14.868: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/30/24 16:00:14.885
  Apr 30 16:00:14.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4636" for this suite. @ 04/30/24 16:00:14.894
• [88.753 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/30/24 16:00:14.917
  Apr 30 16:00:14.917: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:00:14.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:00:14.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:00:14.949
  STEP: creating service nodeport-test with type=NodePort in namespace services-5675 @ 04/30/24 16:00:14.952
  STEP: creating replication controller nodeport-test in namespace services-5675 @ 04/30/24 16:00:14.979
  I0430 16:00:14.990988      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5675, replica count: 2
  I0430 16:00:18.042962      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:00:18.043: INFO: Creating new exec pod
  Apr 30 16:00:21.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-5675 exec execpodct4jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 30 16:00:21.247: INFO: stderr: "+ + nc -v -t -w 2 nodeport-test 80\necho hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 30 16:00:21.247: INFO: stdout: ""
  Apr 30 16:00:22.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-5675 exec execpodct4jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 30 16:00:22.239: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 30 16:00:22.239: INFO: stdout: "nodeport-test-lww6p"
  Apr 30 16:00:22.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-5675 exec execpodct4jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.243 80'
  Apr 30 16:00:22.407: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.243 80\nConnection to 10.96.1.243 80 port [tcp/http] succeeded!\n"
  Apr 30 16:00:22.407: INFO: stdout: ""
  Apr 30 16:00:23.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-5675 exec execpodct4jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.243 80'
  Apr 30 16:00:23.387: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.243 80\nConnection to 10.96.1.243 80 port [tcp/http] succeeded!\n"
  Apr 30 16:00:23.387: INFO: stdout: "nodeport-test-lww6p"
  Apr 30 16:00:23.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-5675 exec execpodct4jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.64 32765'
  Apr 30 16:00:23.520: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.64 32765\nConnection to 192.168.111.64 32765 port [tcp/*] succeeded!\n"
  Apr 30 16:00:23.520: INFO: stdout: "nodeport-test-6vkdf"
  Apr 30 16:00:23.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-5675 exec execpodct4jp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.203 32765'
  Apr 30 16:00:23.652: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.203 32765\nConnection to 192.168.111.203 32765 port [tcp/*] succeeded!\n"
  Apr 30 16:00:23.652: INFO: stdout: "nodeport-test-6vkdf"
  Apr 30 16:00:23.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5675" for this suite. @ 04/30/24 16:00:23.658
• [8.750 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/30/24 16:00:23.667
  Apr 30 16:00:23.667: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-runtime @ 04/30/24 16:00:23.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:00:23.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:00:23.72
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/30/24 16:00:23.735
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/30/24 16:00:41.887
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/30/24 16:00:41.891
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/30/24 16:00:41.898
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/30/24 16:00:41.898
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/30/24 16:00:41.936
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/30/24 16:00:43.951
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/30/24 16:00:45.965
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/30/24 16:00:45.972
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/30/24 16:00:45.972
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/30/24 16:00:46
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/30/24 16:00:47.013
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/30/24 16:00:49.028
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/30/24 16:00:49.036
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/30/24 16:00:49.036
  Apr 30 16:00:49.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6467" for this suite. @ 04/30/24 16:00:49.082
• [25.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/30/24 16:00:49.092
  Apr 30 16:00:49.092: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:00:49.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:00:49.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:00:49.116
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/30/24 16:00:49.119
  STEP: Saw pod success @ 04/30/24 16:00:53.149
  Apr 30 16:00:53.152: INFO: Trying to get logs from node perfermance-5 pod pod-3feff582-00da-4d70-886e-8ea190036ecb container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:00:53.168
  Apr 30 16:00:53.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-475" for this suite. @ 04/30/24 16:00:53.195
• [4.114 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/30/24 16:00:53.206
  Apr 30 16:00:53.206: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:00:53.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:00:53.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:00:53.232
  STEP: Creating projection with secret that has name projected-secret-test-40ad364f-ac6c-4338-a465-24b0151c4f29 @ 04/30/24 16:00:53.235
  STEP: Creating a pod to test consume secrets @ 04/30/24 16:00:53.24
  STEP: Saw pod success @ 04/30/24 16:00:57.279
  Apr 30 16:00:57.283: INFO: Trying to get logs from node perfermance-5 pod pod-projected-secrets-7e88b108-3d83-48db-9818-a46162f25e91 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 16:00:57.291
  Apr 30 16:00:57.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5645" for this suite. @ 04/30/24 16:00:57.327
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/30/24 16:00:57.34
  Apr 30 16:00:57.340: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pod-network-test @ 04/30/24 16:00:57.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:00:57.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:00:57.366
  STEP: Performing setup for networking test in namespace pod-network-test-9662 @ 04/30/24 16:00:57.369
  STEP: creating a selector @ 04/30/24 16:00:57.369
  STEP: Creating the service pods in kubernetes @ 04/30/24 16:00:57.369
  Apr 30 16:00:57.369: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/30/24 16:01:19.523
  Apr 30 16:01:21.574: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Apr 30 16:01:21.574: INFO: Breadth first check of 100.115.206.221 on host 192.168.111.64...
  Apr 30 16:01:21.586: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.73.144.109:9080/dial?request=hostname&protocol=udp&host=100.115.206.221&port=8081&tries=1'] Namespace:pod-network-test-9662 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:01:21.586: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:01:21.587: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:01:21.587: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9662/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.73.144.109%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D100.115.206.221%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 30 16:01:21.660: INFO: Waiting for responses: map[]
  Apr 30 16:01:21.660: INFO: reached 100.115.206.221 after 0/1 tries
  Apr 30 16:01:21.660: INFO: Breadth first check of 100.73.144.81 on host 192.168.111.203...
  Apr 30 16:01:21.665: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.73.144.109:9080/dial?request=hostname&protocol=udp&host=100.73.144.81&port=8081&tries=1'] Namespace:pod-network-test-9662 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:01:21.665: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:01:21.665: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:01:21.665: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9662/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.73.144.109%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D100.73.144.81%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 30 16:01:21.724: INFO: Waiting for responses: map[]
  Apr 30 16:01:21.724: INFO: reached 100.73.144.81 after 0/1 tries
  Apr 30 16:01:21.724: INFO: Going to retry 0 out of 2 pods....
  Apr 30 16:01:21.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9662" for this suite. @ 04/30/24 16:01:21.73
• [24.399 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/30/24 16:01:21.739
  Apr 30 16:01:21.739: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:01:21.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:01:21.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:01:21.765
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 16:01:21.768
  STEP: Saw pod success @ 04/30/24 16:01:25.816
  Apr 30 16:01:25.820: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-3df9d64d-984e-4dd0-9500-8a144812bea6 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 16:01:25.827
  Apr 30 16:01:25.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4777" for this suite. @ 04/30/24 16:01:25.855
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/30/24 16:01:25.865
  Apr 30 16:01:25.865: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename init-container @ 04/30/24 16:01:25.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:01:25.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:01:25.899
  STEP: creating the pod @ 04/30/24 16:01:25.901
  Apr 30 16:01:25.901: INFO: PodSpec: initContainers in spec.initContainers
  Apr 30 16:01:30.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7645" for this suite. @ 04/30/24 16:01:30.491
• [4.635 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/30/24 16:01:30.501
  Apr 30 16:01:30.501: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename subpath @ 04/30/24 16:01:30.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:01:30.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:01:30.53
  STEP: Setting up data @ 04/30/24 16:01:30.534
  STEP: Creating pod pod-subpath-test-projected-glqs @ 04/30/24 16:01:30.547
  STEP: Creating a pod to test atomic-volume-subpath @ 04/30/24 16:01:30.547
  STEP: Saw pod success @ 04/30/24 16:01:54.659
  Apr 30 16:01:54.663: INFO: Trying to get logs from node perfermance-5 pod pod-subpath-test-projected-glqs container test-container-subpath-projected-glqs: <nil>
  STEP: delete the pod @ 04/30/24 16:01:54.672
  STEP: Deleting pod pod-subpath-test-projected-glqs @ 04/30/24 16:01:54.718
  Apr 30 16:01:54.718: INFO: Deleting pod "pod-subpath-test-projected-glqs" in namespace "subpath-2479"
  Apr 30 16:01:54.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2479" for this suite. @ 04/30/24 16:01:54.729
• [24.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/30/24 16:01:54.741
  Apr 30 16:01:54.741: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 16:01:54.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:01:54.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:01:54.779
  STEP: Setting up server cert @ 04/30/24 16:01:54.816
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 16:01:55.117
  STEP: Deploying the webhook pod @ 04/30/24 16:01:55.478
  STEP: Wait for the deployment to be ready @ 04/30/24 16:01:55.521
  Apr 30 16:01:55.534: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 16:01:57.544
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 16:01:57.578
  Apr 30 16:01:58.579: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/30/24 16:01:58.588
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/30/24 16:01:58.622
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/30/24 16:01:58.631
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/30/24 16:01:58.668
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/30/24 16:01:58.691
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/30/24 16:01:58.72
  Apr 30 16:01:58.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2249" for this suite. @ 04/30/24 16:01:58.878
  STEP: Destroying namespace "webhook-markers-1910" for this suite. @ 04/30/24 16:01:58.906
• [4.176 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/30/24 16:01:58.918
  Apr 30 16:01:58.918: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 16:01:58.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:01:58.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:01:58.949
  STEP: Creating a pod to test downward api env vars @ 04/30/24 16:01:58.952
  STEP: Saw pod success @ 04/30/24 16:02:03.004
  Apr 30 16:02:03.008: INFO: Trying to get logs from node perfermance-5 pod downward-api-da0873ea-a4ba-41ac-95a1-e86300dd7b92 container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 16:02:03.015
  Apr 30 16:02:03.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8396" for this suite. @ 04/30/24 16:02:03.044
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 04/30/24 16:02:03.056
  Apr 30 16:02:03.056: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:02:03.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:02:03.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:02:03.082
  STEP: creating an Endpoint @ 04/30/24 16:02:03.089
  STEP: waiting for available Endpoint @ 04/30/24 16:02:03.094
  STEP: listing all Endpoints @ 04/30/24 16:02:03.096
  STEP: updating the Endpoint @ 04/30/24 16:02:03.1
  STEP: fetching the Endpoint @ 04/30/24 16:02:03.109
  STEP: patching the Endpoint @ 04/30/24 16:02:03.112
  STEP: fetching the Endpoint @ 04/30/24 16:02:03.124
  STEP: deleting the Endpoint by Collection @ 04/30/24 16:02:03.127
  STEP: waiting for Endpoint deletion @ 04/30/24 16:02:03.136
  STEP: fetching the Endpoint @ 04/30/24 16:02:03.138
  Apr 30 16:02:03.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6623" for this suite. @ 04/30/24 16:02:03.144
• [0.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/30/24 16:02:03.156
  Apr 30 16:02:03.156: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 16:02:03.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:02:03.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:02:03.176
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 16:02:03.18
  STEP: Saw pod success @ 04/30/24 16:02:07.208
  Apr 30 16:02:07.211: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-f9d325f3-2daa-4632-a344-e1c32af742a1 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 16:02:07.218
  Apr 30 16:02:07.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9898" for this suite. @ 04/30/24 16:02:07.241
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/30/24 16:02:07.249
  Apr 30 16:02:07.249: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 16:02:07.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:02:07.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:02:07.274
  STEP: Creating pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614 @ 04/30/24 16:02:07.277
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 16:02:09.301
  Apr 30 16:02:09.304: INFO: Initial restart count of pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 is 0
  Apr 30 16:02:09.307: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:11.313: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:13.319: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:15.325: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:17.330: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:19.336: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:21.340: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:23.345: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:25.351: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:27.357: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:29.362: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:31.367: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:33.373: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:35.378: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:37.386: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:39.391: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:41.395: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:43.400: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:45.405: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:47.413: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:49.420: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:51.424: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:53.430: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:55.436: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:57.441: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:02:59.446: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:01.453: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:03.469: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:05.481: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:07.491: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:09.496: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:11.509: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:13.515: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:15.526: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:17.531: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:19.536: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:21.541: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:23.547: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:25.553: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:27.558: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:29.578: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:31.582: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:33.588: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:35.600: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:37.607: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:39.614: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:41.620: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:43.625: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:45.631: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:47.636: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:49.642: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:51.648: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:53.653: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:55.659: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:57.665: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:03:59.671: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:01.677: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:03.685: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:05.691: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:07.699: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:09.705: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:11.709: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:13.715: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:15.721: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:17.726: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:19.732: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:21.737: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:23.743: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:25.750: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:27.755: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:29.766: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:31.772: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:33.779: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:35.785: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:37.791: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:39.835: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:41.841: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:43.846: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:45.852: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:47.857: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:49.866: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:51.871: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:53.876: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:55.882: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:57.887: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:04:59.891: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:01.897: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:03.903: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:05.909: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:07.915: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:09.921: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:11.927: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:13.933: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:15.939: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:17.944: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:19.950: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:21.956: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:23.963: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:25.969: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:27.974: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:29.980: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:31.985: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:33.991: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:35.997: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:38.003: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:40.008: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:42.013: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:44.018: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:46.023: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:48.028: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:50.034: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:52.039: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:54.044: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:56.050: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:05:58.061: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:06:00.068: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:06:02.073: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:06:04.078: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:06:06.084: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  Apr 30 16:06:08.090: INFO: Get pod busybox-73537acd-f83d-4051-9adc-4de1d821e7c0 in namespace container-probe-5614
  STEP: deleting the pod @ 04/30/24 16:06:10.092
  Apr 30 16:06:10.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5614" for this suite. @ 04/30/24 16:06:10.128
• [242.891 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/30/24 16:06:10.141
  Apr 30 16:06:10.141: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replicaset @ 04/30/24 16:06:10.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:06:10.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:06:10.164
  Apr 30 16:06:10.185: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 30 16:06:15.190: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/30/24 16:06:15.19
  STEP: Scaling up "test-rs" replicaset @ 04/30/24 16:06:15.19
  Apr 30 16:06:15.201: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/30/24 16:06:15.201
  Apr 30 16:06:15.216: INFO: observed ReplicaSet test-rs in namespace replicaset-2878 with ReadyReplicas 1, AvailableReplicas 1
  Apr 30 16:06:15.238: INFO: observed ReplicaSet test-rs in namespace replicaset-2878 with ReadyReplicas 1, AvailableReplicas 1
  Apr 30 16:06:15.264: INFO: observed ReplicaSet test-rs in namespace replicaset-2878 with ReadyReplicas 1, AvailableReplicas 1
  Apr 30 16:06:15.280: INFO: observed ReplicaSet test-rs in namespace replicaset-2878 with ReadyReplicas 1, AvailableReplicas 1
  Apr 30 16:06:16.567: INFO: observed ReplicaSet test-rs in namespace replicaset-2878 with ReadyReplicas 2, AvailableReplicas 2
  Apr 30 16:06:16.873: INFO: observed Replicaset test-rs in namespace replicaset-2878 with ReadyReplicas 3 found true
  Apr 30 16:06:16.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2878" for this suite. @ 04/30/24 16:06:16.879
• [6.748 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 04/30/24 16:06:16.89
  Apr 30 16:06:16.890: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename job @ 04/30/24 16:06:16.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:06:16.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:06:16.912
  STEP: Creating a suspended job @ 04/30/24 16:06:16.919
  STEP: Patching the Job @ 04/30/24 16:06:16.932
  STEP: Watching for Job to be patched @ 04/30/24 16:06:16.944
  Apr 30 16:06:16.946: INFO: Event ADDED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-job-label:e2e-28wj4] and annotations: map[]
  Apr 30 16:06:16.946: INFO: Event MODIFIED found for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[]
  STEP: Updating the job @ 04/30/24 16:06:16.946
  STEP: Watching for Job to be updated @ 04/30/24 16:06:16.963
  Apr 30 16:06:16.965: INFO: Event MODIFIED found for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:16.966: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/30/24 16:06:16.966
  Apr 30 16:06:16.973: INFO: Job: e2e-28wj4 as labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4]
  STEP: Waiting for job to complete @ 04/30/24 16:06:16.973
  STEP: Delete a job collection with a labelselector @ 04/30/24 16:06:24.978
  STEP: Watching for Job to be deleted @ 04/30/24 16:06:24.988
  Apr 30 16:06:24.990: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.990: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.990: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.990: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.990: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.991: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.991: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.991: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.991: INFO: Event MODIFIED observed for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  Apr 30 16:06:24.992: INFO: Event DELETED found for Job e2e-28wj4 in namespace job-3925 with labels: map[e2e-28wj4:patched e2e-job-label:e2e-28wj4] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/30/24 16:06:24.992
  Apr 30 16:06:24.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3925" for this suite. @ 04/30/24 16:06:25.006
• [8.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/30/24 16:06:25.036
  Apr 30 16:06:25.036: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-preemption @ 04/30/24 16:06:25.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:06:25.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:06:25.071
  Apr 30 16:06:25.093: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 30 16:07:25.099: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/30/24 16:07:25.103
  Apr 30 16:07:25.132: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 30 16:07:25.154: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 30 16:07:25.201: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 30 16:07:25.215: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/30/24 16:07:25.215
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/30/24 16:07:27.239
  Apr 30 16:07:33.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4047" for this suite. @ 04/30/24 16:07:33.432
• [68.404 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/30/24 16:07:33.441
  Apr 30 16:07:33.442: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 16:07:33.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:07:33.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:07:33.469
  Apr 30 16:07:33.472: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/30/24 16:07:35.393
  Apr 30 16:07:35.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 create -f -'
  Apr 30 16:07:35.566: INFO: stderr: ""
  Apr 30 16:07:35.566: INFO: stdout: "e2e-test-crd-publish-openapi-200-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 30 16:07:35.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 delete e2e-test-crd-publish-openapi-200-crds test-foo'
  Apr 30 16:07:35.679: INFO: stderr: ""
  Apr 30 16:07:35.679: INFO: stdout: "e2e-test-crd-publish-openapi-200-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 30 16:07:35.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 apply -f -'
  Apr 30 16:07:35.798: INFO: stderr: ""
  Apr 30 16:07:35.798: INFO: stdout: "e2e-test-crd-publish-openapi-200-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 30 16:07:35.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 delete e2e-test-crd-publish-openapi-200-crds test-foo'
  Apr 30 16:07:35.883: INFO: stderr: ""
  Apr 30 16:07:35.883: INFO: stdout: "e2e-test-crd-publish-openapi-200-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/30/24 16:07:35.884
  Apr 30 16:07:35.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 create -f -'
  Apr 30 16:07:35.965: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/30/24 16:07:35.966
  Apr 30 16:07:35.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 create -f -'
  Apr 30 16:07:36.046: INFO: rc: 1
  Apr 30 16:07:36.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 apply -f -'
  Apr 30 16:07:36.136: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/30/24 16:07:36.136
  Apr 30 16:07:36.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 create -f -'
  Apr 30 16:07:36.215: INFO: rc: 1
  Apr 30 16:07:36.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 --namespace=crd-publish-openapi-2589 apply -f -'
  Apr 30 16:07:36.317: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/30/24 16:07:36.317
  Apr 30 16:07:36.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 explain e2e-test-crd-publish-openapi-200-crds'
  Apr 30 16:07:36.398: INFO: stderr: ""
  Apr 30 16:07:36.398: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-200-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/30/24 16:07:36.399
  Apr 30 16:07:36.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 explain e2e-test-crd-publish-openapi-200-crds.metadata'
  Apr 30 16:07:36.478: INFO: stderr: ""
  Apr 30 16:07:36.478: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-200-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 30 16:07:36.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 explain e2e-test-crd-publish-openapi-200-crds.spec'
  Apr 30 16:07:36.551: INFO: stderr: ""
  Apr 30 16:07:36.551: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-200-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 30 16:07:36.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 explain e2e-test-crd-publish-openapi-200-crds.spec.bars'
  Apr 30 16:07:36.630: INFO: stderr: ""
  Apr 30 16:07:36.630: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-200-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/30/24 16:07:36.631
  Apr 30 16:07:36.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2589 explain e2e-test-crd-publish-openapi-200-crds.spec.bars2'
  Apr 30 16:07:36.708: INFO: rc: 1
  Apr 30 16:07:38.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2589" for this suite. @ 04/30/24 16:07:38.68
• [5.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/30/24 16:07:38.693
  Apr 30 16:07:38.693: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename gc @ 04/30/24 16:07:38.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:07:38.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:07:38.72
  Apr 30 16:07:38.771: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"cc701b1d-4802-47ea-a54a-fff64361fcdf", Controller:(*bool)(0xc002cf0e8a), BlockOwnerDeletion:(*bool)(0xc002cf0e8b)}}
  Apr 30 16:07:38.791: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"06694992-825a-4f21-8a60-ce17fec6bc18", Controller:(*bool)(0xc002cf10b2), BlockOwnerDeletion:(*bool)(0xc002cf10b3)}}
  Apr 30 16:07:38.799: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ca948809-6232-4d4f-98f5-f01b95692deb", Controller:(*bool)(0xc002cf130a), BlockOwnerDeletion:(*bool)(0xc002cf130b)}}
  Apr 30 16:07:43.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8995" for this suite. @ 04/30/24 16:07:43.829
• [5.154 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/30/24 16:07:43.847
  Apr 30 16:07:43.847: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replication-controller @ 04/30/24 16:07:43.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:07:43.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:07:43.866
  STEP: Creating ReplicationController "e2e-rc-xnz2h" @ 04/30/24 16:07:43.869
  Apr 30 16:07:43.878: INFO: Get Replication Controller "e2e-rc-xnz2h" to confirm replicas
  Apr 30 16:07:44.879: INFO: Get Replication Controller "e2e-rc-xnz2h" to confirm replicas
  Apr 30 16:07:44.883: INFO: Found 1 replicas for "e2e-rc-xnz2h" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-xnz2h" @ 04/30/24 16:07:44.883
  STEP: Updating a scale subresource @ 04/30/24 16:07:44.886
  STEP: Verifying replicas where modified for replication controller "e2e-rc-xnz2h" @ 04/30/24 16:07:44.897
  Apr 30 16:07:44.897: INFO: Get Replication Controller "e2e-rc-xnz2h" to confirm replicas
  Apr 30 16:07:45.897: INFO: Get Replication Controller "e2e-rc-xnz2h" to confirm replicas
  Apr 30 16:07:45.906: INFO: Found 2 replicas for "e2e-rc-xnz2h" replication controller
  Apr 30 16:07:45.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-875" for this suite. @ 04/30/24 16:07:45.911
• [2.075 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 04/30/24 16:07:45.922
  Apr 30 16:07:45.922: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 16:07:45.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:07:45.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:07:45.94
  STEP: Creating service test in namespace statefulset-3967 @ 04/30/24 16:07:45.943
  STEP: Creating a new StatefulSet @ 04/30/24 16:07:45.952
  Apr 30 16:07:45.973: INFO: Found 0 stateful pods, waiting for 3
  Apr 30 16:07:55.971: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:07:55.971: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:07:55.971: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:07:55.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-3967 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:07:56.141: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:07:56.141: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:07:56.141: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/30/24 16:08:06.155
  Apr 30 16:08:06.180: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/30/24 16:08:06.18
  STEP: Updating Pods in reverse ordinal order @ 04/30/24 16:08:16.189
  Apr 30 16:08:16.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-3967 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:08:16.333: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 30 16:08:16.333: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:08:16.333: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 04/30/24 16:08:26.351
  Apr 30 16:08:26.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-3967 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:08:26.504: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:08:26.504: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:08:26.504: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:08:36.539: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/30/24 16:08:46.549
  Apr 30 16:08:46.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-3967 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:08:46.696: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 30 16:08:46.696: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:08:46.696: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:08:56.715: INFO: Deleting all statefulset in ns statefulset-3967
  Apr 30 16:08:56.720: INFO: Scaling statefulset ss2 to 0
  Apr 30 16:09:06.740: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 16:09:06.744: INFO: Deleting statefulset ss2
  Apr 30 16:09:06.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3967" for this suite. @ 04/30/24 16:09:06.763
• [80.855 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/30/24 16:09:06.778
  Apr 30 16:09:06.778: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename init-container @ 04/30/24 16:09:06.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:09:06.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:09:06.802
  STEP: creating the pod @ 04/30/24 16:09:06.805
  Apr 30 16:09:06.805: INFO: PodSpec: initContainers in spec.initContainers
  Apr 30 16:09:10.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5056" for this suite. @ 04/30/24 16:09:10.682
• [3.915 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/30/24 16:09:10.693
  Apr 30 16:09:10.693: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 16:09:10.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:09:10.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:09:10.73
  STEP: Creating configMap with name configmap-test-volume-map-bd9439ef-9c90-426a-89f2-f68cf79bab59 @ 04/30/24 16:09:10.733
  STEP: Creating a pod to test consume configMaps @ 04/30/24 16:09:10.739
  STEP: Saw pod success @ 04/30/24 16:09:14.766
  Apr 30 16:09:14.771: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-f4836d4b-6c3e-4b50-ab7f-7f598c385c9b container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 16:09:14.801
  Apr 30 16:09:14.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8204" for this suite. @ 04/30/24 16:09:14.832
• [4.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/30/24 16:09:14.844
  Apr 30 16:09:14.844: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 16:09:14.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:09:14.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:09:14.876
  STEP: creating the pod @ 04/30/24 16:09:14.879
  STEP: waiting for pod running @ 04/30/24 16:09:14.894
  STEP: creating a file in subpath @ 04/30/24 16:09:16.91
  Apr 30 16:09:16.914: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2469 PodName:var-expansion-b9eb2cd4-581b-47d6-a3c3-6e64e39b1499 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:09:16.914: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:09:16.915: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:09:16.915: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2469/pods/var-expansion-b9eb2cd4-581b-47d6-a3c3-6e64e39b1499/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/30/24 16:09:16.977
  Apr 30 16:09:16.981: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2469 PodName:var-expansion-b9eb2cd4-581b-47d6-a3c3-6e64e39b1499 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:09:16.981: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:09:16.982: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:09:16.982: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2469/pods/var-expansion-b9eb2cd4-581b-47d6-a3c3-6e64e39b1499/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/30/24 16:09:17.035
  Apr 30 16:09:17.555: INFO: Successfully updated pod "var-expansion-b9eb2cd4-581b-47d6-a3c3-6e64e39b1499"
  STEP: waiting for annotated pod running @ 04/30/24 16:09:17.556
  STEP: deleting the pod gracefully @ 04/30/24 16:09:17.559
  Apr 30 16:09:17.560: INFO: Deleting pod "var-expansion-b9eb2cd4-581b-47d6-a3c3-6e64e39b1499" in namespace "var-expansion-2469"
  Apr 30 16:09:17.574: INFO: Wait up to 5m0s for pod "var-expansion-b9eb2cd4-581b-47d6-a3c3-6e64e39b1499" to be fully deleted
  Apr 30 16:09:51.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2469" for this suite. @ 04/30/24 16:09:51.676
• [36.844 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/30/24 16:09:51.689
  Apr 30 16:09:51.689: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:09:51.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:09:51.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:09:51.717
  STEP: Creating configMap with name projected-configmap-test-volume-b6c56f6a-048f-42e0-ae51-a399f1fb9591 @ 04/30/24 16:09:51.72
  STEP: Creating a pod to test consume configMaps @ 04/30/24 16:09:51.726
  STEP: Saw pod success @ 04/30/24 16:09:55.768
  Apr 30 16:09:55.772: INFO: Trying to get logs from node perfermance-5 pod pod-projected-configmaps-3837dd8c-6cfe-4aea-bf2a-0785e59a99c5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 16:09:55.779
  Apr 30 16:09:55.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4171" for this suite. @ 04/30/24 16:09:55.805
• [4.125 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 04/30/24 16:09:55.814
  Apr 30 16:09:55.814: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:09:55.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:09:55.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:09:55.839
  STEP: creating a Service @ 04/30/24 16:09:55.849
  STEP: watching for the Service to be added @ 04/30/24 16:09:55.867
  Apr 30 16:09:55.870: INFO: Found Service test-service-sv7lp in namespace services-5872 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30766}]
  Apr 30 16:09:55.870: INFO: Service test-service-sv7lp created
  STEP: Getting /status @ 04/30/24 16:09:55.87
  Apr 30 16:09:55.875: INFO: Service test-service-sv7lp has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/30/24 16:09:55.875
  STEP: watching for the Service to be patched @ 04/30/24 16:09:55.884
  Apr 30 16:09:55.885: INFO: observed Service test-service-sv7lp in namespace services-5872 with annotations: map[] & LoadBalancer: {[]}
  Apr 30 16:09:55.886: INFO: Found Service test-service-sv7lp in namespace services-5872 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Apr 30 16:09:55.886: INFO: Service test-service-sv7lp has service status patched
  STEP: updating the ServiceStatus @ 04/30/24 16:09:55.887
  Apr 30 16:09:55.902: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/30/24 16:09:55.902
  Apr 30 16:09:55.904: INFO: Observed Service test-service-sv7lp in namespace services-5872 with annotations: map[] & Conditions: {[]}
  Apr 30 16:09:55.905: INFO: Observed event: &Service{ObjectMeta:{test-service-sv7lp  services-5872  a2e16867-6b20-426b-ae31-c8cc64ff20dd 186835 0 2024-04-30 16:09:55 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-30 16:09:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-30 16:09:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30766,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.96.1.133,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.96.1.133],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 30 16:09:55.905: INFO: Found Service test-service-sv7lp in namespace services-5872 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 30 16:09:55.906: INFO: Service test-service-sv7lp has service status updated
  STEP: patching the service @ 04/30/24 16:09:55.906
  STEP: watching for the Service to be patched @ 04/30/24 16:09:55.917
  Apr 30 16:09:55.918: INFO: observed Service test-service-sv7lp in namespace services-5872 with labels: map[test-service-static:true]
  Apr 30 16:09:55.919: INFO: observed Service test-service-sv7lp in namespace services-5872 with labels: map[test-service-static:true]
  Apr 30 16:09:55.919: INFO: observed Service test-service-sv7lp in namespace services-5872 with labels: map[test-service-static:true]
  Apr 30 16:09:55.919: INFO: Found Service test-service-sv7lp in namespace services-5872 with labels: map[test-service:patched test-service-static:true]
  Apr 30 16:09:55.919: INFO: Service test-service-sv7lp patched
  STEP: deleting the service @ 04/30/24 16:09:55.919
  STEP: watching for the Service to be deleted @ 04/30/24 16:09:55.945
  Apr 30 16:09:55.948: INFO: Observed event: ADDED
  Apr 30 16:09:55.948: INFO: Observed event: MODIFIED
  Apr 30 16:09:55.948: INFO: Observed event: MODIFIED
  Apr 30 16:09:55.948: INFO: Observed event: MODIFIED
  Apr 30 16:09:55.948: INFO: Found Service test-service-sv7lp in namespace services-5872 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 30 16:09:55.948: INFO: Service test-service-sv7lp deleted
  Apr 30 16:09:55.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5872" for this suite. @ 04/30/24 16:09:55.955
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/30/24 16:09:55.964
  Apr 30 16:09:55.964: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svcaccounts @ 04/30/24 16:09:55.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:09:55.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:09:55.994
  Apr 30 16:09:56.019: INFO: created pod pod-service-account-defaultsa
  Apr 30 16:09:56.020: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 30 16:09:56.033: INFO: created pod pod-service-account-mountsa
  Apr 30 16:09:56.033: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 30 16:09:56.052: INFO: created pod pod-service-account-nomountsa
  Apr 30 16:09:56.052: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 30 16:09:56.069: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 30 16:09:56.069: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 30 16:09:56.084: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 30 16:09:56.084: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 30 16:09:56.103: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 30 16:09:56.103: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 30 16:09:56.114: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 30 16:09:56.114: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 30 16:09:56.124: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 30 16:09:56.124: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 30 16:09:56.135: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 30 16:09:56.135: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 30 16:09:56.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2193" for this suite. @ 04/30/24 16:09:56.148
• [0.198 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/30/24 16:09:56.163
  Apr 30 16:09:56.163: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 16:09:56.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:09:56.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:09:56.193
  STEP: Creating configMap with name cm-test-opt-del-ae109d75-4cb0-4d18-9a38-d1955f02a541 @ 04/30/24 16:09:56.202
  STEP: Creating configMap with name cm-test-opt-upd-6620b6ab-fe49-4093-9be8-568d7395740e @ 04/30/24 16:09:56.21
  STEP: Creating the pod @ 04/30/24 16:09:56.216
  STEP: Deleting configmap cm-test-opt-del-ae109d75-4cb0-4d18-9a38-d1955f02a541 @ 04/30/24 16:10:00.287
  STEP: Updating configmap cm-test-opt-upd-6620b6ab-fe49-4093-9be8-568d7395740e @ 04/30/24 16:10:00.297
  STEP: Creating configMap with name cm-test-opt-create-3cf2c27f-8739-4caa-9bd5-b50b63153d96 @ 04/30/24 16:10:00.307
  STEP: waiting to observe update in volume @ 04/30/24 16:10:00.313
  Apr 30 16:11:06.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1528" for this suite. @ 04/30/24 16:11:06.592
• [70.441 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/30/24 16:11:06.607
  Apr 30 16:11:06.607: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-watch @ 04/30/24 16:11:06.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:11:06.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:11:06.631
  Apr 30 16:11:06.634: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Creating first CR  @ 04/30/24 16:11:09.186
  Apr 30 16:11:09.194: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-30T16:11:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-30T16:11:09Z]] name:name1 resourceVersion:187286 uid:8a107809-2932-4662-b9fd-e6b706779dd9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 04/30/24 16:11:19.195
  Apr 30 16:11:19.205: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-30T16:11:19Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-30T16:11:19Z]] name:name2 resourceVersion:187349 uid:795cd63c-f216-4052-a376-52012d4af302] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 04/30/24 16:11:29.207
  Apr 30 16:11:29.219: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-30T16:11:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-30T16:11:29Z]] name:name1 resourceVersion:187384 uid:8a107809-2932-4662-b9fd-e6b706779dd9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 04/30/24 16:11:39.219
  Apr 30 16:11:39.228: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-30T16:11:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-30T16:11:39Z]] name:name2 resourceVersion:187420 uid:795cd63c-f216-4052-a376-52012d4af302] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 04/30/24 16:11:49.229
  Apr 30 16:11:49.240: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-30T16:11:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-30T16:11:29Z]] name:name1 resourceVersion:187457 uid:8a107809-2932-4662-b9fd-e6b706779dd9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 04/30/24 16:11:59.24
  Apr 30 16:11:59.250: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-30T16:11:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-30T16:11:39Z]] name:name2 resourceVersion:187494 uid:795cd63c-f216-4052-a376-52012d4af302] num:map[num1:9223372036854775807 num2:1000000]]}
  Apr 30 16:12:09.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1776" for this suite. @ 04/30/24 16:12:09.778
• [63.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/30/24 16:12:09.801
  Apr 30 16:12:09.801: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pod-network-test @ 04/30/24 16:12:09.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:09.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:09.831
  STEP: Performing setup for networking test in namespace pod-network-test-4351 @ 04/30/24 16:12:09.834
  STEP: creating a selector @ 04/30/24 16:12:09.834
  STEP: Creating the service pods in kubernetes @ 04/30/24 16:12:09.834
  Apr 30 16:12:09.834: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/30/24 16:12:21.925
  Apr 30 16:12:23.975: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Apr 30 16:12:23.975: INFO: Going to poll 100.115.206.215 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Apr 30 16:12:23.978: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 100.115.206.215 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4351 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:23.979: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:23.979: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:23.980: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4351/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+100.115.206.215+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 30 16:12:25.044: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 30 16:12:25.044: INFO: Going to poll 100.73.144.107 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Apr 30 16:12:25.048: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 100.73.144.107 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4351 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:25.048: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:25.049: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:25.049: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4351/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+100.73.144.107+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 30 16:12:26.105: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 30 16:12:26.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4351" for this suite. @ 04/30/24 16:12:26.111
• [16.327 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/30/24 16:12:26.128
  Apr 30 16:12:26.128: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename daemonsets @ 04/30/24 16:12:26.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:26.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:26.158
  Apr 30 16:12:26.192: INFO: Create a RollingUpdate DaemonSet
  Apr 30 16:12:26.202: INFO: Check that daemon pods launch on every node of the cluster
  Apr 30 16:12:26.209: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:26.210: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:26.210: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:26.213: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:12:26.214: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:12:27.209: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:27.210: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:27.210: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:27.213: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:12:27.213: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:12:28.208: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:28.208: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:28.208: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:28.212: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 16:12:28.212: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Apr 30 16:12:28.212: INFO: Update the DaemonSet to trigger a rollout
  Apr 30 16:12:28.222: INFO: Updating DaemonSet daemon-set
  Apr 30 16:12:30.235: INFO: Roll back the DaemonSet before rollout is complete
  Apr 30 16:12:30.245: INFO: Updating DaemonSet daemon-set
  Apr 30 16:12:30.245: INFO: Make sure DaemonSet rollback is complete
  Apr 30 16:12:30.257: INFO: Wrong image for pod: daemon-set-m2pv8. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 30 16:12:30.257: INFO: Pod daemon-set-m2pv8 is not available
  Apr 30 16:12:30.262: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:30.262: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:30.262: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:31.257: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:31.258: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:31.258: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:32.258: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:32.258: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:32.258: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:33.256: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:33.256: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:33.256: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:34.256: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:34.256: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:34.256: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:35.251: INFO: Pod daemon-set-p64pp is not available
  Apr 30 16:12:35.256: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:35.256: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:12:35.256: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 04/30/24 16:12:35.266
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7876, will wait for the garbage collector to delete the pods @ 04/30/24 16:12:35.266
  Apr 30 16:12:35.336: INFO: Deleting DaemonSet.extensions daemon-set took: 15.880959ms
  Apr 30 16:12:35.437: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.094811ms
  Apr 30 16:12:38.442: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:12:38.442: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 30 16:12:38.447: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"187851"},"items":null}

  Apr 30 16:12:38.450: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"187851"},"items":null}

  Apr 30 16:12:38.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7876" for this suite. @ 04/30/24 16:12:38.466
• [12.346 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/30/24 16:12:38.477
  Apr 30 16:12:38.477: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 16:12:38.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:38.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:38.506
  STEP: Setting up server cert @ 04/30/24 16:12:38.543
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 16:12:38.875
  STEP: Deploying the webhook pod @ 04/30/24 16:12:38.884
  STEP: Wait for the deployment to be ready @ 04/30/24 16:12:39.378
  Apr 30 16:12:39.774: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 16:12:41.786
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 16:12:41.8
  Apr 30 16:12:42.801: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/30/24 16:12:42.915
  STEP: Creating a configMap that should be mutated @ 04/30/24 16:12:42.936
  STEP: Deleting the collection of validation webhooks @ 04/30/24 16:12:42.976
  STEP: Creating a configMap that should not be mutated @ 04/30/24 16:12:43.075
  Apr 30 16:12:43.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3283" for this suite. @ 04/30/24 16:12:43.171
  STEP: Destroying namespace "webhook-markers-6416" for this suite. @ 04/30/24 16:12:43.187
• [4.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/30/24 16:12:43.206
  Apr 30 16:12:43.206: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 16:12:43.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:43.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:43.234
  STEP: Creating a pod to test substitution in container's args @ 04/30/24 16:12:43.239
  STEP: Saw pod success @ 04/30/24 16:12:47.618
  Apr 30 16:12:47.621: INFO: Trying to get logs from node perfermance-5 pod var-expansion-bec2aca1-55ef-4768-bb10-da04f2939616 container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 16:12:47.636
  Apr 30 16:12:47.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9359" for this suite. @ 04/30/24 16:12:47.672
• [4.473 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/30/24 16:12:47.68
  Apr 30 16:12:47.680: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replicaset @ 04/30/24 16:12:47.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:47.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:47.704
  STEP: Create a Replicaset @ 04/30/24 16:12:47.711
  STEP: Verify that the required pods have come up. @ 04/30/24 16:12:47.72
  Apr 30 16:12:47.725: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 30 16:12:52.730: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/30/24 16:12:52.73
  STEP: Getting /status @ 04/30/24 16:12:52.731
  Apr 30 16:12:52.736: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/30/24 16:12:52.736
  Apr 30 16:12:52.747: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/30/24 16:12:52.747
  Apr 30 16:12:52.749: INFO: Observed &ReplicaSet event: ADDED
  Apr 30 16:12:52.750: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 30 16:12:52.750: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 30 16:12:52.750: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 30 16:12:52.750: INFO: Found replicaset test-rs in namespace replicaset-3208 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 30 16:12:52.750: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/30/24 16:12:52.75
  Apr 30 16:12:52.750: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 30 16:12:52.762: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/30/24 16:12:52.762
  Apr 30 16:12:52.765: INFO: Observed &ReplicaSet event: ADDED
  Apr 30 16:12:52.766: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 30 16:12:52.766: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 30 16:12:52.766: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 30 16:12:52.766: INFO: Observed replicaset test-rs in namespace replicaset-3208 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 30 16:12:52.767: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 30 16:12:52.767: INFO: Found replicaset test-rs in namespace replicaset-3208 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 30 16:12:52.767: INFO: Replicaset test-rs has a patched status
  Apr 30 16:12:52.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3208" for this suite. @ 04/30/24 16:12:52.773
• [5.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/30/24 16:12:52.79
  Apr 30 16:12:52.790: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/30/24 16:12:52.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:52.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:52.98
  STEP: Setting up the test @ 04/30/24 16:12:52.983
  STEP: Creating hostNetwork=false pod @ 04/30/24 16:12:52.983
  STEP: Creating hostNetwork=true pod @ 04/30/24 16:12:55.019
  STEP: Running the test @ 04/30/24 16:12:57.037
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/30/24 16:12:57.037
  Apr 30 16:12:57.038: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.038: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.039: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.039: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 30 16:12:57.095: INFO: Exec stderr: ""
  Apr 30 16:12:57.095: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.095: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.096: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.096: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 30 16:12:57.160: INFO: Exec stderr: ""
  Apr 30 16:12:57.160: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.160: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.161: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.161: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 30 16:12:57.216: INFO: Exec stderr: ""
  Apr 30 16:12:57.216: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.216: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.217: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.218: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 30 16:12:57.274: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/30/24 16:12:57.274
  Apr 30 16:12:57.274: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.274: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.275: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.275: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 30 16:12:57.338: INFO: Exec stderr: ""
  Apr 30 16:12:57.338: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.338: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.339: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.339: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 30 16:12:57.394: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/30/24 16:12:57.394
  Apr 30 16:12:57.394: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.394: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.396: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.396: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 30 16:12:57.463: INFO: Exec stderr: ""
  Apr 30 16:12:57.463: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.463: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.463: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.464: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 30 16:12:57.530: INFO: Exec stderr: ""
  Apr 30 16:12:57.530: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.530: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.531: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.531: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 30 16:12:57.580: INFO: Exec stderr: ""
  Apr 30 16:12:57.580: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9409 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:57.580: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:57.581: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:57.581: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9409/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 30 16:12:57.629: INFO: Exec stderr: ""
  Apr 30 16:12:57.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9409" for this suite. @ 04/30/24 16:12:57.636
• [4.861 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/30/24 16:12:57.654
  Apr 30 16:12:57.655: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:12:57.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:57.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:57.682
  STEP: Creating Pod @ 04/30/24 16:12:57.685
  STEP: Reading file content from the nginx-container @ 04/30/24 16:12:59.712
  Apr 30 16:12:59.713: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4565 PodName:pod-sharedvolume-55531e3b-f1b7-4e13-a85b-eb2280e1dc18 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:12:59.713: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:12:59.713: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:12:59.714: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-4565/pods/pod-sharedvolume-55531e3b-f1b7-4e13-a85b-eb2280e1dc18/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 30 16:12:59.780: INFO: Exec stderr: ""
  Apr 30 16:12:59.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4565" for this suite. @ 04/30/24 16:12:59.79
• [2.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/30/24 16:12:59.8
  Apr 30 16:12:59.800: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename tables @ 04/30/24 16:12:59.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:59.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:59.827
  Apr 30 16:12:59.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9058" for this suite. @ 04/30/24 16:12:59.837
• [0.044 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 04/30/24 16:12:59.844
  Apr 30 16:12:59.844: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-pred @ 04/30/24 16:12:59.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:12:59.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:12:59.869
  Apr 30 16:12:59.872: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 30 16:12:59.907: INFO: Waiting for terminating namespaces to be deleted...
  Apr 30 16:12:59.911: INFO: 
  Logging pods the apiserver thinks is on node perfermance-4 before test
  Apr 30 16:12:59.919: INFO: calico-apiserver-858c89fdd8-wj65g from calico-apiserver started at 2024-04-30 06:40:07 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.919: INFO: 	Container calico-apiserver ready: true, restart count 0
  Apr 30 16:12:59.919: INFO: calico-kube-controllers-fbfd8f68d-n8rqd from calico-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.919: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 30 16:12:59.919: INFO: calico-node-x8h5t from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.919: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 16:12:59.919: INFO: calico-typha-bd54b44f-6wlc4 from calico-system started at 2024-04-30 06:39:42 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.919: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 16:12:59.919: INFO: csi-node-driver-shg6w from calico-system started at 2024-04-30 06:39:55 +0000 UTC (2 container statuses recorded)
  Apr 30 16:12:59.919: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 16:12:59.919: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 16:12:59.919: INFO: test-host-network-pod from e2e-kubelet-etc-hosts-9409 started at 2024-04-30 16:12:54 +0000 UTC (2 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container busybox-1 ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: 	Container busybox-2 ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: pod-sharedvolume-55531e3b-f1b7-4e13-a85b-eb2280e1dc18 from emptydir-4565 started at 2024-04-30 16:12:57 +0000 UTC (2 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container busybox-main-container ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: 	Container busybox-sub-container ready: false, restart count 0
  Apr 30 16:12:59.920: INFO: coredns-76f75df574-5c95b from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: coredns-76f75df574-z5fss from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: kube-proxy-2srcz from kube-system started at 2024-04-30 06:36:53 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: kube-sealos-lvscare-perfermance-4 from kube-system started at 2024-04-30 06:37:11 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-wgmnv from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: tigera-operator-66996c666d-nrzq2 from tigera-operator started at 2024-04-30 06:39:27 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.920: INFO: 	Container tigera-operator ready: true, restart count 0
  Apr 30 16:12:59.920: INFO: 
  Logging pods the apiserver thinks is on node perfermance-5 before test
  Apr 30 16:12:59.928: INFO: calico-node-tslfb from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: calico-typha-bd54b44f-kwfhr from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: csi-node-driver-2xpf8 from calico-system started at 2024-04-30 16:00:14 +0000 UTC (2 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: test-pod from e2e-kubelet-etc-hosts-9409 started at 2024-04-30 16:12:53 +0000 UTC (3 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container busybox-1 ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: 	Container busybox-2 ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: 	Container busybox-3 ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: kube-proxy-t5fn7 from kube-system started at 2024-04-30 06:36:52 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: kube-sealos-lvscare-perfermance-5 from kube-system started at 2024-04-30 06:37:10 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: sonobuoy from sonobuoy started at 2024-04-30 15:42:34 +0000 UTC (1 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: sonobuoy-e2e-job-dc5cbc99c8b64d76 from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container e2e ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-hqf4m from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 16:12:59.928: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 16:12:59.928: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node perfermance-4 @ 04/30/24 16:12:59.961
  STEP: verifying the node has the label node perfermance-5 @ 04/30/24 16:12:59.983
  Apr 30 16:13:00.013: INFO: Pod calico-apiserver-858c89fdd8-wj65g requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.013: INFO: Pod calico-kube-controllers-fbfd8f68d-n8rqd requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.013: INFO: Pod calico-node-tslfb requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.013: INFO: Pod calico-node-x8h5t requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.014: INFO: Pod calico-typha-bd54b44f-6wlc4 requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.014: INFO: Pod calico-typha-bd54b44f-kwfhr requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.014: INFO: Pod csi-node-driver-2xpf8 requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.014: INFO: Pod csi-node-driver-shg6w requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.014: INFO: Pod test-host-network-pod requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.014: INFO: Pod test-pod requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.015: INFO: Pod pod-sharedvolume-55531e3b-f1b7-4e13-a85b-eb2280e1dc18 requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.015: INFO: Pod coredns-76f75df574-5c95b requesting resource cpu=100m on Node perfermance-4
  Apr 30 16:13:00.015: INFO: Pod coredns-76f75df574-z5fss requesting resource cpu=100m on Node perfermance-4
  Apr 30 16:13:00.015: INFO: Pod kube-proxy-2srcz requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.015: INFO: Pod kube-proxy-t5fn7 requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.016: INFO: Pod kube-sealos-lvscare-perfermance-4 requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.016: INFO: Pod kube-sealos-lvscare-perfermance-5 requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.016: INFO: Pod sonobuoy requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.017: INFO: Pod sonobuoy-e2e-job-dc5cbc99c8b64d76 requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.017: INFO: Pod sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-hqf4m requesting resource cpu=0m on Node perfermance-5
  Apr 30 16:13:00.017: INFO: Pod sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-wgmnv requesting resource cpu=0m on Node perfermance-4
  Apr 30 16:13:00.017: INFO: Pod tigera-operator-66996c666d-nrzq2 requesting resource cpu=0m on Node perfermance-4
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/30/24 16:13:00.018
  Apr 30 16:13:00.018: INFO: Creating a pod which consumes cpu=2800m on Node perfermance-5
  Apr 30 16:13:00.104: INFO: Creating a pod which consumes cpu=2660m on Node perfermance-4
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/30/24 16:13:02.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4aa84761-b75e-4291-b07e-f2de175cb135.17cb1ad3d11515bc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6645/filler-pod-4aa84761-b75e-4291-b07e-f2de175cb135 to perfermance-4] @ 04/30/24 16:13:02.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4aa84761-b75e-4291-b07e-f2de175cb135.17cb1ad3fde7ee5b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/30/24 16:13:02.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4aa84761-b75e-4291-b07e-f2de175cb135.17cb1ad406f5a596], Reason = [Created], Message = [Created container filler-pod-4aa84761-b75e-4291-b07e-f2de175cb135] @ 04/30/24 16:13:02.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4aa84761-b75e-4291-b07e-f2de175cb135.17cb1ad411bf3b8c], Reason = [Started], Message = [Started container filler-pod-4aa84761-b75e-4291-b07e-f2de175cb135] @ 04/30/24 16:13:02.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b8524b22-dd6d-4846-8958-92ec018622d5.17cb1ad3c99d4904], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6645/filler-pod-b8524b22-dd6d-4846-8958-92ec018622d5 to perfermance-5] @ 04/30/24 16:13:02.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b8524b22-dd6d-4846-8958-92ec018622d5.17cb1ad3fce4b54c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/30/24 16:13:02.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b8524b22-dd6d-4846-8958-92ec018622d5.17cb1ad40a9a30fe], Reason = [Created], Message = [Created container filler-pod-b8524b22-dd6d-4846-8958-92ec018622d5] @ 04/30/24 16:13:02.255
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b8524b22-dd6d-4846-8958-92ec018622d5.17cb1ad410ab0fae], Reason = [Started], Message = [Started container filler-pod-b8524b22-dd6d-4846-8958-92ec018622d5] @ 04/30/24 16:13:02.255
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17cb1ad449fdbc51], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 2 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.] @ 04/30/24 16:13:02.289
  STEP: removing the label node off the node perfermance-4 @ 04/30/24 16:13:03.275
  STEP: verifying the node doesn't have the label node @ 04/30/24 16:13:03.294
  STEP: removing the label node off the node perfermance-5 @ 04/30/24 16:13:03.299
  STEP: verifying the node doesn't have the label node @ 04/30/24 16:13:03.317
  Apr 30 16:13:03.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6645" for this suite. @ 04/30/24 16:13:03.334
• [3.502 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 04/30/24 16:13:03.346
  Apr 30 16:13:03.346: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubelet-test @ 04/30/24 16:13:03.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:03.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:03.372
  Apr 30 16:13:05.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6079" for this suite. @ 04/30/24 16:13:05.445
• [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/30/24 16:13:05.498
  Apr 30 16:13:05.499: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 16:13:05.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:05.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:05.554
  Apr 30 16:13:05.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2116" for this suite. @ 04/30/24 16:13:05.632
• [0.146 seconds]
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/30/24 16:13:05.645
  Apr 30 16:13:05.645: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename security-context @ 04/30/24 16:13:05.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:05.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:05.678
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/30/24 16:13:05.681
  STEP: Saw pod success @ 04/30/24 16:13:09.718
  Apr 30 16:13:09.721: INFO: Trying to get logs from node perfermance-5 pod security-context-968ba839-30d9-4331-8390-7063da2c96e1 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:13:09.728
  Apr 30 16:13:09.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1785" for this suite. @ 04/30/24 16:13:09.76
• [4.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 04/30/24 16:13:09.772
  Apr 30 16:13:09.772: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 16:13:09.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:09.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:09.81
  STEP: creating the pod @ 04/30/24 16:13:09.814
  Apr 30 16:13:09.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 create -f -'
  Apr 30 16:13:10.022: INFO: stderr: ""
  Apr 30 16:13:10.022: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/30/24 16:13:14.039
  Apr 30 16:13:14.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 label pods pause testing-label=testing-label-value'
  Apr 30 16:13:14.135: INFO: stderr: ""
  Apr 30 16:13:14.135: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/30/24 16:13:14.135
  Apr 30 16:13:14.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 get pod pause -L testing-label'
  Apr 30 16:13:14.227: INFO: stderr: ""
  Apr 30 16:13:14.227: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/30/24 16:13:14.227
  Apr 30 16:13:14.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 label pods pause testing-label-'
  Apr 30 16:13:14.328: INFO: stderr: ""
  Apr 30 16:13:14.328: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/30/24 16:13:14.328
  Apr 30 16:13:14.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 get pod pause -L testing-label'
  Apr 30 16:13:14.413: INFO: stderr: ""
  Apr 30 16:13:14.413: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
  STEP: using delete to clean up resources @ 04/30/24 16:13:14.414
  Apr 30 16:13:14.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 delete --grace-period=0 --force -f -'
  Apr 30 16:13:14.518: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 16:13:14.518: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 30 16:13:14.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 get rc,svc -l name=pause --no-headers'
  Apr 30 16:13:14.622: INFO: stderr: "No resources found in kubectl-796 namespace.\n"
  Apr 30 16:13:14.622: INFO: stdout: ""
  Apr 30 16:13:14.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-796 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 30 16:13:14.709: INFO: stderr: ""
  Apr 30 16:13:14.710: INFO: stdout: ""
  Apr 30 16:13:14.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-796" for this suite. @ 04/30/24 16:13:14.716
• [4.952 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 04/30/24 16:13:14.724
  Apr 30 16:13:14.724: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 16:13:14.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:14.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:14.75
  STEP: Creating a ResourceQuota @ 04/30/24 16:13:14.753
  STEP: Getting a ResourceQuota @ 04/30/24 16:13:14.759
  STEP: Updating a ResourceQuota @ 04/30/24 16:13:14.763
  STEP: Verifying a ResourceQuota was modified @ 04/30/24 16:13:14.774
  STEP: Deleting a ResourceQuota @ 04/30/24 16:13:14.784
  STEP: Verifying the deleted ResourceQuota @ 04/30/24 16:13:14.791
  Apr 30 16:13:14.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2365" for this suite. @ 04/30/24 16:13:14.801
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 04/30/24 16:13:14.814
  Apr 30 16:13:14.814: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 16:13:14.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:14.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:14.841
  STEP: creating Agnhost RC @ 04/30/24 16:13:14.845
  Apr 30 16:13:14.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-3030 create -f -'
  Apr 30 16:13:15.036: INFO: stderr: ""
  Apr 30 16:13:15.037: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/30/24 16:13:15.037
  Apr 30 16:13:16.560: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 16:13:16.561: INFO: Found 1 / 1
  Apr 30 16:13:16.561: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/30/24 16:13:16.561
  Apr 30 16:13:16.568: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 16:13:16.568: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 30 16:13:16.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-3030 patch pod agnhost-primary-f8dkr -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 30 16:13:16.675: INFO: stderr: ""
  Apr 30 16:13:16.675: INFO: stdout: "pod/agnhost-primary-f8dkr patched\n"
  STEP: checking annotations @ 04/30/24 16:13:16.675
  Apr 30 16:13:16.683: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 16:13:16.683: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 30 16:13:16.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3030" for this suite. @ 04/30/24 16:13:16.689
• [1.882 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/30/24 16:13:16.696
  Apr 30 16:13:16.696: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename podtemplate @ 04/30/24 16:13:16.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:16.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:16.72
  STEP: Create a pod template @ 04/30/24 16:13:16.723
  STEP: Replace a pod template @ 04/30/24 16:13:16.728
  Apr 30 16:13:16.737: INFO: Found updated podtemplate annotation: "true"

  Apr 30 16:13:16.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6434" for this suite. @ 04/30/24 16:13:16.741
• [0.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 04/30/24 16:13:16.755
  Apr 30 16:13:16.755: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 16:13:16.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:16.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:16.778
  STEP: creating a replication controller @ 04/30/24 16:13:16.781
  Apr 30 16:13:16.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 create -f -'
  Apr 30 16:13:16.944: INFO: stderr: ""
  Apr 30 16:13:16.944: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/30/24 16:13:16.945
  Apr 30 16:13:16.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 30 16:13:17.048: INFO: stderr: ""
  Apr 30 16:13:17.048: INFO: stdout: ""
  STEP: Replicas for name=update-demo: expected=2 actual=0 @ 04/30/24 16:13:17.048
  Apr 30 16:13:22.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 30 16:13:22.152: INFO: stderr: ""
  Apr 30 16:13:22.152: INFO: stdout: "update-demo-nautilus-2zdgk update-demo-nautilus-jn6zm "
  Apr 30 16:13:22.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get pods update-demo-nautilus-2zdgk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 30 16:13:22.230: INFO: stderr: ""
  Apr 30 16:13:22.230: INFO: stdout: "true"
  Apr 30 16:13:22.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get pods update-demo-nautilus-2zdgk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 30 16:13:22.317: INFO: stderr: ""
  Apr 30 16:13:22.317: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 30 16:13:22.317: INFO: validating pod update-demo-nautilus-2zdgk
  Apr 30 16:13:22.324: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 30 16:13:22.324: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 30 16:13:22.324: INFO: update-demo-nautilus-2zdgk is verified up and running
  Apr 30 16:13:22.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get pods update-demo-nautilus-jn6zm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 30 16:13:22.405: INFO: stderr: ""
  Apr 30 16:13:22.405: INFO: stdout: "true"
  Apr 30 16:13:22.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get pods update-demo-nautilus-jn6zm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 30 16:13:22.481: INFO: stderr: ""
  Apr 30 16:13:22.481: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 30 16:13:22.481: INFO: validating pod update-demo-nautilus-jn6zm
  Apr 30 16:13:22.487: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 30 16:13:22.487: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 30 16:13:22.487: INFO: update-demo-nautilus-jn6zm is verified up and running
  STEP: using delete to clean up resources @ 04/30/24 16:13:22.487
  Apr 30 16:13:22.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 delete --grace-period=0 --force -f -'
  Apr 30 16:13:22.594: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 16:13:22.594: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 30 16:13:22.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get rc,svc -l name=update-demo --no-headers'
  Apr 30 16:13:22.731: INFO: stderr: "No resources found in kubectl-5724 namespace.\n"
  Apr 30 16:13:22.731: INFO: stdout: ""
  Apr 30 16:13:22.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5724 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 30 16:13:22.830: INFO: stderr: ""
  Apr 30 16:13:22.830: INFO: stdout: ""
  Apr 30 16:13:22.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5724" for this suite. @ 04/30/24 16:13:22.836
• [6.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 04/30/24 16:13:22.846
  Apr 30 16:13:22.846: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 16:13:22.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:22.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:22.875
  STEP: creating a ConfigMap @ 04/30/24 16:13:22.878
  STEP: fetching the ConfigMap @ 04/30/24 16:13:22.885
  STEP: patching the ConfigMap @ 04/30/24 16:13:22.889
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/30/24 16:13:22.896
  STEP: deleting the ConfigMap by collection with a label selector @ 04/30/24 16:13:22.899
  STEP: listing all ConfigMaps in test namespace @ 04/30/24 16:13:22.923
  Apr 30 16:13:22.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-508" for this suite. @ 04/30/24 16:13:22.931
• [0.099 seconds]
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/30/24 16:13:22.945
  Apr 30 16:13:22.945: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename prestop @ 04/30/24 16:13:22.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:22.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:22.978
  STEP: Creating server pod server in namespace prestop-4038 @ 04/30/24 16:13:22.981
  STEP: Waiting for pods to come up. @ 04/30/24 16:13:22.999
  STEP: Creating tester pod tester in namespace prestop-4038 @ 04/30/24 16:13:25.017
  STEP: Deleting pre-stop pod @ 04/30/24 16:13:27.045
  Apr 30 16:13:32.071: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/30/24 16:13:32.071
  Apr 30 16:13:32.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4038" for this suite. @ 04/30/24 16:13:32.114
• [9.180 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/30/24 16:13:32.125
  Apr 30 16:13:32.125: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 16:13:32.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:32.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:32.165
  Apr 30 16:13:32.171: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 30 16:13:32.185: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 30 16:13:37.190: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/30/24 16:13:37.19
  Apr 30 16:13:37.190: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 30 16:13:37.200: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 30 16:13:37.221: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Apr 30 16:13:39.230: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 30 16:13:39.233: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 30 16:13:39.243: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e3c4ccb-e688-4b02-937b-130f4776ab97",
      ResourceVersion: (string) (len=6) "188768",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850090417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 30 16:13:39.255: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec7f516a-7fca-4dbd-977c-727cac8ab6d2",
      ResourceVersion: (string) (len=6) "188757",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850090417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1e3c4ccb-e688-4b02-937b-130f4776ab97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 65 33 63 34 63  63 62 2d 65 36 38 38 2d  |\"1e3c4ccb-e688-|
              00000120  34 62 30 32 2d 39 33 37  62 2d 31 33 30 66 34 37  |4b02-937b-130f47|
              00000130  37 36 61 62 39 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |76ab97\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:13:39.266: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 30 16:13:39.267: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "055844c1-a08f-42d5-bb3a-e6bf7d69ab9e",
      ResourceVersion: (string) (len=6) "188767",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850090412,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1e3c4ccb-e688-4b02-937b-130f4776ab97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 65 33 63 34 63 63  |"uid\":\"1e3c4cc|
              000000b0  62 2d 65 36 38 38 2d 34  62 30 32 2d 39 33 37 62  |b-e688-4b02-937b|
              000000c0  2d 31 33 30 66 34 37 37  36 61 62 39 37 5c 22 7d  |-130f4776ab97\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:13:39.273: INFO: Pod "test-rolling-update-deployment-7f5c55c64-dnrtn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-dnrtn",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd336c37-2910-4778-9287-bd9b273ae9e5",
      ResourceVersion: (string) (len=6) "188756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850090417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ded60fc2ad4b92eb892bacae476fc4f1d5424c0ccb4dd38b7233bab26394d707",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "100.73.144.101/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "100.73.144.101/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "ec7f516a-7fca-4dbd-977c-727cac8ab6d2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 63  37 66 35 31 36 61 2d 37  |d\":\"ec7f516a-7|
              00000090  66 63 61 2d 34 64 62 64  2d 39 37 37 63 2d 37 32  |fca-4dbd-977c-72|
              000000a0  37 63 61 63 38 61 62 36  64 32 5c 22 7d 22 3a 7b  |7cac8ab6d2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 31 30 31 5c 22 7d 22  |0.73.144.101\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pnppp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pnppp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850090417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=14) "100.73.144.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "100.73.144.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850090417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850090418,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://50663133d3ba36dab871481c19594f03e57069d08957f3d7990d987a04ddb4d4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 16:13:39.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1160" for this suite. @ 04/30/24 16:13:39.281
• [7.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 04/30/24 16:13:39.295
  Apr 30 16:13:39.295: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 16:13:39.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:39.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:39.324
  STEP: Creating service test in namespace statefulset-2690 @ 04/30/24 16:13:39.327
  Apr 30 16:13:39.353: INFO: Found 0 stateful pods, waiting for 1
  Apr 30 16:13:49.356: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/30/24 16:13:49.365
  W0430 16:13:49.374169      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 30 16:13:49.385: INFO: Found 1 stateful pods, waiting for 2
  Apr 30 16:13:59.383: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:13:59.383: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/30/24 16:13:59.39
  STEP: Delete all of the StatefulSets @ 04/30/24 16:13:59.392
  STEP: Verify that StatefulSets have been deleted @ 04/30/24 16:13:59.403
  Apr 30 16:13:59.406: INFO: Deleting all statefulset in ns statefulset-2690
  Apr 30 16:13:59.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2690" for this suite. @ 04/30/24 16:13:59.448
• [20.171 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 04/30/24 16:13:59.467
  Apr 30 16:13:59.467: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 16:13:59.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:13:59.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:13:59.494
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/30/24 16:13:59.497
  Apr 30 16:13:59.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1059 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 30 16:13:59.604: INFO: stderr: ""
  Apr 30 16:13:59.604: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/30/24 16:13:59.604
  Apr 30 16:13:59.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1059 delete pods e2e-test-httpd-pod'
  Apr 30 16:14:01.619: INFO: stderr: ""
  Apr 30 16:14:01.619: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 30 16:14:01.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1059" for this suite. @ 04/30/24 16:14:01.624
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/30/24 16:14:01.633
  Apr 30 16:14:01.633: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svcaccounts @ 04/30/24 16:14:01.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:01.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:01.661
  STEP: reading a file in the container @ 04/30/24 16:14:03.696
  Apr 30 16:14:03.696: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9820 pod-service-account-498a8ea6-99c1-4d0e-b014-6a94934e04fc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/30/24 16:14:03.864
  Apr 30 16:14:03.864: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9820 pod-service-account-498a8ea6-99c1-4d0e-b014-6a94934e04fc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/30/24 16:14:04.008
  Apr 30 16:14:04.008: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9820 pod-service-account-498a8ea6-99c1-4d0e-b014-6a94934e04fc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 30 16:14:04.155: INFO: Got root ca configmap in namespace "svcaccounts-9820"
  Apr 30 16:14:04.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9820" for this suite. @ 04/30/24 16:14:04.162
• [2.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/30/24 16:14:04.174
  Apr 30 16:14:04.174: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 16:14:04.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:04.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:04.214
  STEP: Creating configMap with name configmap-test-volume-9888a0e8-ebf4-49cc-a50b-9ca53d4c21e5 @ 04/30/24 16:14:04.217
  STEP: Creating a pod to test consume configMaps @ 04/30/24 16:14:04.231
  STEP: Saw pod success @ 04/30/24 16:14:08.253
  Apr 30 16:14:08.256: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-3a3006ba-ecc2-4425-a587-8fff68786e41 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 16:14:08.262
  Apr 30 16:14:08.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2438" for this suite. @ 04/30/24 16:14:08.295
• [4.132 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 04/30/24 16:14:08.307
  Apr 30 16:14:08.308: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 16:14:08.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:08.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:08.333
  STEP: Creating projection with secret that has name secret-emptykey-test-53f74ee3-c7ef-46e4-b9c8-6128e64e6534 @ 04/30/24 16:14:08.336
  Apr 30 16:14:08.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9741" for this suite. @ 04/30/24 16:14:08.345
• [0.050 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/30/24 16:14:08.357
  Apr 30 16:14:08.357: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:14:08.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:08.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:08.385
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/30/24 16:14:08.387
  STEP: Saw pod success @ 04/30/24 16:14:12.414
  Apr 30 16:14:12.427: INFO: Trying to get logs from node perfermance-5 pod pod-23d8b1c3-d249-4562-a78c-05fabfa15508 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:14:12.439
  Apr 30 16:14:12.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3315" for this suite. @ 04/30/24 16:14:12.485
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 04/30/24 16:14:12.5
  Apr 30 16:14:12.500: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename security-context-test @ 04/30/24 16:14:12.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:12.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:12.53
  Apr 30 16:14:16.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3990" for this suite. @ 04/30/24 16:14:16.569
• [4.077 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 04/30/24 16:14:16.578
  Apr 30 16:14:16.578: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:14:16.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:16.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:16.609
  STEP: creating service in namespace services-2524 @ 04/30/24 16:14:16.613
  STEP: creating service affinity-nodeport in namespace services-2524 @ 04/30/24 16:14:16.613
  STEP: creating replication controller affinity-nodeport in namespace services-2524 @ 04/30/24 16:14:16.634
  I0430 16:14:16.658690      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2524, replica count: 3
  I0430 16:14:19.710916      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:14:19.724: INFO: Creating new exec pod
  Apr 30 16:14:22.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-2524 exec execpod-affinityzn2mg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Apr 30 16:14:22.931: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 30 16:14:22.931: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:14:22.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-2524 exec execpod-affinityzn2mg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.236 80'
  Apr 30 16:14:23.067: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.236 80\nConnection to 10.96.1.236 80 port [tcp/http] succeeded!\n"
  Apr 30 16:14:23.067: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:14:23.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-2524 exec execpod-affinityzn2mg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.64 30155'
  Apr 30 16:14:23.209: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.64 30155\nConnection to 192.168.111.64 30155 port [tcp/*] succeeded!\n"
  Apr 30 16:14:23.209: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:14:23.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-2524 exec execpod-affinityzn2mg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.203 30155'
  Apr 30 16:14:23.343: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.203 30155\nConnection to 192.168.111.203 30155 port [tcp/*] succeeded!\n"
  Apr 30 16:14:23.343: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:14:23.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-2524 exec execpod-affinityzn2mg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.111.64:30155/ ; done'
  Apr 30 16:14:23.591: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:30155/\n"
  Apr 30 16:14:23.591: INFO: stdout: "\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4\naffinity-nodeport-dmfl4"
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Received response from host: affinity-nodeport-dmfl4
  Apr 30 16:14:23.591: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2524, will wait for the garbage collector to delete the pods @ 04/30/24 16:14:23.611
  Apr 30 16:14:23.675: INFO: Deleting ReplicationController affinity-nodeport took: 8.932582ms
  Apr 30 16:14:23.776: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.799038ms
  Apr 30 16:14:27.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2524" for this suite. @ 04/30/24 16:14:27.415
• [10.850 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/30/24 16:14:27.427
  Apr 30 16:14:27.427: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 16:14:27.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:27.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:27.458
  STEP: Setting up server cert @ 04/30/24 16:14:27.495
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 16:14:27.946
  STEP: Deploying the webhook pod @ 04/30/24 16:14:27.955
  STEP: Wait for the deployment to be ready @ 04/30/24 16:14:27.978
  Apr 30 16:14:27.991: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 16:14:30.005
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 16:14:30.019
  Apr 30 16:14:31.020: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 30 16:14:31.027: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4454-crds.webhook.example.com via the AdmissionRegistration API @ 04/30/24 16:14:31.541
  STEP: Creating a custom resource while v1 is storage version @ 04/30/24 16:14:31.567
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/30/24 16:14:33.609
  STEP: Patching the custom resource while v2 is storage version @ 04/30/24 16:14:33.62
  Apr 30 16:14:34.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3492" for this suite. @ 04/30/24 16:14:34.277
  STEP: Destroying namespace "webhook-markers-5247" for this suite. @ 04/30/24 16:14:34.285
• [6.868 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 04/30/24 16:14:34.295
  Apr 30 16:14:34.295: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 16:14:34.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:34.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:34.321
  STEP: Discovering how many secrets are in namespace by default @ 04/30/24 16:14:34.324
  STEP: Counting existing ResourceQuota @ 04/30/24 16:14:39.328
  STEP: Creating a ResourceQuota @ 04/30/24 16:14:44.336
  STEP: Ensuring resource quota status is calculated @ 04/30/24 16:14:44.352
  STEP: Creating a Secret @ 04/30/24 16:14:46.357
  STEP: Ensuring resource quota status captures secret creation @ 04/30/24 16:14:46.375
  STEP: Deleting a secret @ 04/30/24 16:14:48.381
  STEP: Ensuring resource quota status released usage @ 04/30/24 16:14:48.39
  Apr 30 16:14:50.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7806" for this suite. @ 04/30/24 16:14:50.401
• [16.115 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/30/24 16:14:50.411
  Apr 30 16:14:50.411: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename containers @ 04/30/24 16:14:50.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:50.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:50.448
  STEP: Creating a pod to test override all @ 04/30/24 16:14:50.453
  STEP: Saw pod success @ 04/30/24 16:14:54.493
  Apr 30 16:14:54.497: INFO: Trying to get logs from node perfermance-5 pod client-containers-fe3febce-be35-4f24-8f0a-a87e1e029e33 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 16:14:54.508
  Apr 30 16:14:54.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7919" for this suite. @ 04/30/24 16:14:54.541
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/30/24 16:14:54.55
  Apr 30 16:14:54.550: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 16:14:54.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:54.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:54.578
  STEP: Creating a pod to test substitution in container's command @ 04/30/24 16:14:54.581
  STEP: Saw pod success @ 04/30/24 16:14:58.607
  Apr 30 16:14:58.611: INFO: Trying to get logs from node perfermance-5 pod var-expansion-2d2a54ce-58df-4273-9829-0a136b9b874e container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 16:14:58.62
  Apr 30 16:14:58.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1549" for this suite. @ 04/30/24 16:14:58.658
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/30/24 16:14:58.668
  Apr 30 16:14:58.668: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename daemonsets @ 04/30/24 16:14:58.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:14:58.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:14:58.69
  STEP: Creating simple DaemonSet "daemon-set" @ 04/30/24 16:14:58.715
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/30/24 16:14:58.725
  Apr 30 16:14:58.735: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:14:58.735: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:14:58.735: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:14:58.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:14:58.739: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:14:59.731: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:14:59.731: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:14:59.731: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:14:59.734: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:14:59.734: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:15:00.732: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:15:00.732: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:15:00.732: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:15:00.736: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:15:00.737: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:15:01.733: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:15:01.734: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:15:01.734: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:15:01.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 16:15:01.739: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/30/24 16:15:01.743
  STEP: DeleteCollection of the DaemonSets @ 04/30/24 16:15:01.747
  STEP: Verify that ReplicaSets have been deleted @ 04/30/24 16:15:01.768
  Apr 30 16:15:01.780: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"189760"},"items":null}

  Apr 30 16:15:01.807: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"189762"},"items":[{"metadata":{"name":"daemon-set-kjvxf","generateName":"daemon-set-","namespace":"daemonsets-3405","uid":"661d5fc5-13e5-4951-958f-e29393bad46b","resourceVersion":"189762","creationTimestamp":"2024-04-30T16:14:58Z","deletionTimestamp":"2024-04-30T16:15:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"12f6f47d6725202c85cd92e5b380705c831c86259260f0d9beccab8e59ee13f7","cni.projectcalico.org/podIP":"100.73.144.88/32","cni.projectcalico.org/podIPs":"100.73.144.88/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"da2bebd0-055e-4ac7-995c-f95ee06ebb63","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-30T16:14:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"da2bebd0-055e-4ac7-995c-f95ee06ebb63\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-04-30T16:14:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-30T16:15:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.73.144.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lc6lp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lc6lp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"perfermance-5","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["perfermance-5"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:15:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:14:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:15:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:15:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:14:58Z"}],"hostIP":"192.168.111.203","hostIPs":[{"ip":"192.168.111.203"}],"podIP":"100.73.144.88","podIPs":[{"ip":"100.73.144.88"}],"startTime":"2024-04-30T16:14:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-30T16:14:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d7e30f2f5b5b5789bb2767ed4e731190227caef066f8b6bc24430549ba99ad07","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mnt4w","generateName":"daemon-set-","namespace":"daemonsets-3405","uid":"63546f52-ab9d-4520-b3e7-25d426299d7c","resourceVersion":"189753","creationTimestamp":"2024-04-30T16:14:58Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"f22fb87da7b9fb6d354fac9c5e25b3a4ccca4bb9f6b49160bbcd9dd7c5532e31","cni.projectcalico.org/podIP":"100.115.206.243/32","cni.projectcalico.org/podIPs":"100.115.206.243/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"da2bebd0-055e-4ac7-995c-f95ee06ebb63","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-30T16:14:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"da2bebd0-055e-4ac7-995c-f95ee06ebb63\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-04-30T16:14:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-30T16:15:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.115.206.243\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6lchn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6lchn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"perfermance-4","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["perfermance-4"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:15:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:14:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:15:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:15:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-30T16:14:58Z"}],"hostIP":"192.168.111.64","hostIPs":[{"ip":"192.168.111.64"}],"podIP":"100.115.206.243","podIPs":[{"ip":"100.115.206.243"}],"startTime":"2024-04-30T16:14:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-30T16:14:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5b5e3594b61eee10fc8487fa73e96943c2387116c1535c4718680ab657d0421d","started":true}],"qosClass":"BestEffort"}}]}

  Apr 30 16:15:01.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3405" for this suite. @ 04/30/24 16:15:01.828
• [3.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 04/30/24 16:15:01.843
  Apr 30 16:15:01.843: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 16:15:01.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:15:01.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:15:01.904
  STEP: Creating service test in namespace statefulset-6807 @ 04/30/24 16:15:01.907
  STEP: Creating stateful set ss in namespace statefulset-6807 @ 04/30/24 16:15:01.925
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6807 @ 04/30/24 16:15:01.945
  Apr 30 16:15:01.966: INFO: Found 0 stateful pods, waiting for 1
  Apr 30 16:15:11.951: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/30/24 16:15:11.951
  Apr 30 16:15:11.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-6807 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:15:12.118: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:15:12.118: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:15:12.118: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:15:12.123: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Apr 30 16:15:22.125: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 30 16:15:22.125: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 30 16:15:22.154: INFO: POD   NODE           PHASE    GRACE  CONDITIONS
  Apr 30 16:15:22.154: INFO: ss-0  perfermance-5  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:01 +0000 UTC  }]
  Apr 30 16:15:22.154: INFO: 
  Apr 30 16:15:22.154: INFO: StatefulSet ss has not reached scale 3, at 1
  Apr 30 16:15:23.159: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.987690041s
  Apr 30 16:15:24.164: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.983064213s
  Apr 30 16:15:25.169: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.978451973s
  Apr 30 16:15:26.174: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.973421689s
  Apr 30 16:15:27.179: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.968176513s
  Apr 30 16:15:28.185: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.962207071s
  Apr 30 16:15:29.190: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.957517878s
  Apr 30 16:15:30.195: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.951811688s
  Apr 30 16:15:31.200: INFO: Verifying statefulset ss doesn't scale past 3 for another 947.060277ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6807 @ 04/30/24 16:15:32.201
  Apr 30 16:15:32.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-6807 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:15:32.356: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 30 16:15:32.356: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:15:32.356: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:15:32.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-6807 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:15:32.498: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 30 16:15:32.498: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:15:32.498: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:15:32.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-6807 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:15:32.644: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 30 16:15:32.644: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:15:32.644: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:15:32.649: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Apr 30 16:15:42.650: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:15:42.650: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:15:42.650: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/30/24 16:15:42.65
  Apr 30 16:15:42.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-6807 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:15:42.803: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:15:42.803: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:15:42.803: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:15:42.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-6807 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:15:42.951: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:15:42.951: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:15:42.951: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:15:42.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-6807 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:15:43.107: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:15:43.107: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:15:43.107: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:15:43.107: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 30 16:15:43.110: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Apr 30 16:15:53.116: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 30 16:15:53.116: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 30 16:15:53.116: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 30 16:15:53.135: INFO: POD   NODE           PHASE    GRACE  CONDITIONS
  Apr 30 16:15:53.135: INFO: ss-0  perfermance-5  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:01 +0000 UTC  }]
  Apr 30 16:15:53.135: INFO: ss-1  perfermance-5  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:23 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:22 +0000 UTC  }]
  Apr 30 16:15:53.135: INFO: ss-2  perfermance-4  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:23 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:22 +0000 UTC  }]
  Apr 30 16:15:53.135: INFO: 
  Apr 30 16:15:53.135: INFO: StatefulSet ss has not reached scale 0, at 3
  Apr 30 16:15:54.140: INFO: POD   NODE           PHASE      GRACE  CONDITIONS
  Apr 30 16:15:54.140: INFO: ss-0  perfermance-5  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:53 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:02 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:01 +0000 UTC  }]
  Apr 30 16:15:54.140: INFO: ss-1  perfermance-5  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:53 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:22 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:43 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 16:15:22 +0000 UTC  }]
  Apr 30 16:15:54.140: INFO: 
  Apr 30 16:15:54.140: INFO: StatefulSet ss has not reached scale 0, at 2
  Apr 30 16:15:55.144: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.990845037s
  Apr 30 16:15:56.148: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986481378s
  Apr 30 16:15:57.156: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982392883s
  Apr 30 16:15:58.160: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.975260913s
  Apr 30 16:15:59.164: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.97088989s
  Apr 30 16:16:00.169: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.966971099s
  Apr 30 16:16:01.173: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962052585s
  Apr 30 16:16:02.179: INFO: Verifying statefulset ss doesn't scale past 0 for another 957.246014ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6807 @ 04/30/24 16:16:03.179
  Apr 30 16:16:03.184: INFO: Scaling statefulset ss to 0
  Apr 30 16:16:03.197: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 16:16:03.201: INFO: Deleting all statefulset in ns statefulset-6807
  Apr 30 16:16:03.205: INFO: Scaling statefulset ss to 0
  Apr 30 16:16:03.219: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 16:16:03.222: INFO: Deleting statefulset ss
  Apr 30 16:16:03.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6807" for this suite. @ 04/30/24 16:16:03.243
• [61.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/30/24 16:16:03.266
  Apr 30 16:16:03.266: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 16:16:03.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:03.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:03.291
  STEP: creating pod @ 04/30/24 16:16:03.294
  Apr 30 16:16:05.332: INFO: Pod pod-hostip-99b5c1da-624c-49e2-a050-66526dbad2dd has hostIP: 192.168.111.203
  Apr 30 16:16:05.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3487" for this suite. @ 04/30/24 16:16:05.337
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/30/24 16:16:05.346
  Apr 30 16:16:05.346: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 16:16:05.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:05.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:05.374
  STEP: Setting up server cert @ 04/30/24 16:16:05.411
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 16:16:05.936
  STEP: Deploying the webhook pod @ 04/30/24 16:16:05.949
  STEP: Wait for the deployment to be ready @ 04/30/24 16:16:05.967
  Apr 30 16:16:05.978: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 16:16:07.99
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 16:16:08.001
  Apr 30 16:16:09.001: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 30 16:16:09.010: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5848-crds.webhook.example.com via the AdmissionRegistration API @ 04/30/24 16:16:09.525
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/30/24 16:16:09.551
  Apr 30 16:16:12.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3103" for this suite. @ 04/30/24 16:16:12.222
  STEP: Destroying namespace "webhook-markers-2812" for this suite. @ 04/30/24 16:16:12.233
• [6.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/30/24 16:16:12.248
  Apr 30 16:16:12.248: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename daemonsets @ 04/30/24 16:16:12.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:12.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:12.284
  STEP: Creating simple DaemonSet "daemon-set" @ 04/30/24 16:16:12.32
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/30/24 16:16:12.328
  Apr 30 16:16:12.333: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:12.333: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:12.333: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:12.344: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:16:12.344: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:13.335: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:13.335: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:13.335: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:13.342: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:16:13.342: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:14.335: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:14.335: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:14.335: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:14.339: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 16:16:14.339: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/30/24 16:16:14.346
  Apr 30 16:16:14.375: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:14.376: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:14.376: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:14.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:16:14.380: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:15.373: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:15.373: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:15.373: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:15.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:16:15.377: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:16.374: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:16.374: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:16.374: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:16.378: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:16:16.378: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:17.372: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:17.372: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:17.373: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:17.379: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:16:17.379: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:18.374: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:18.374: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:18.375: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:18.379: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 16:16:18.379: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/30/24 16:16:18.382
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-20, will wait for the garbage collector to delete the pods @ 04/30/24 16:16:18.382
  Apr 30 16:16:18.446: INFO: Deleting DaemonSet.extensions daemon-set took: 10.84035ms
  Apr 30 16:16:18.547: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.465569ms
  Apr 30 16:16:21.155: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:16:21.155: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 30 16:16:21.159: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"190487"},"items":null}

  Apr 30 16:16:21.164: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"190487"},"items":null}

  Apr 30 16:16:21.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-20" for this suite. @ 04/30/24 16:16:21.181
• [8.941 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/30/24 16:16:21.189
  Apr 30 16:16:21.189: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:16:21.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:21.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:21.223
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2622 @ 04/30/24 16:16:21.227
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/30/24 16:16:21.245
  STEP: creating service externalsvc in namespace services-2622 @ 04/30/24 16:16:21.245
  STEP: creating replication controller externalsvc in namespace services-2622 @ 04/30/24 16:16:21.273
  I0430 16:16:21.294678      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2622, replica count: 2
  I0430 16:16:24.346483      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/30/24 16:16:24.351
  Apr 30 16:16:24.367: INFO: Creating new exec pod
  Apr 30 16:16:26.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-2622 exec execpodwpgx9 -- /bin/sh -x -c nslookup clusterip-service.services-2622.svc.cluster.local'
  Apr 30 16:16:26.574: INFO: stderr: "+ nslookup clusterip-service.services-2622.svc.cluster.local\n"
  Apr 30 16:16:26.574: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-2622.svc.cluster.local\tcanonical name = externalsvc.services-2622.svc.cluster.local.\nName:\texternalsvc.services-2622.svc.cluster.local\nAddress: 10.96.0.205\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2622, will wait for the garbage collector to delete the pods @ 04/30/24 16:16:26.575
  Apr 30 16:16:26.637: INFO: Deleting ReplicationController externalsvc took: 6.822729ms
  Apr 30 16:16:26.738: INFO: Terminating ReplicationController externalsvc pods took: 101.179494ms
  Apr 30 16:16:30.170: INFO: Cleaning up the ClusterIP to ExternalName test service
  Apr 30 16:16:30.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2622" for this suite. @ 04/30/24 16:16:30.198
• [9.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/30/24 16:16:30.208
  Apr 30 16:16:30.208: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/30/24 16:16:30.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:30.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:30.241
  STEP: Cleaning up the secret @ 04/30/24 16:16:32.285
  STEP: Cleaning up the configmap @ 04/30/24 16:16:32.293
  STEP: Cleaning up the pod @ 04/30/24 16:16:32.308
  Apr 30 16:16:32.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6205" for this suite. @ 04/30/24 16:16:32.332
• [2.134 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/30/24 16:16:32.342
  Apr 30 16:16:32.342: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename daemonsets @ 04/30/24 16:16:32.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:32.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:32.368
  STEP: Creating simple DaemonSet "daemon-set" @ 04/30/24 16:16:32.405
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/30/24 16:16:32.416
  Apr 30 16:16:32.425: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:32.425: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:32.425: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:32.437: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:16:32.437: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:33.421: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:33.421: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:33.421: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:33.424: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:16:33.424: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:16:34.422: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:34.423: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:34.423: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:16:34.427: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 16:16:34.427: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 04/30/24 16:16:34.431
  Apr 30 16:16:34.434: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/30/24 16:16:34.435
  Apr 30 16:16:34.448: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/30/24 16:16:34.448
  Apr 30 16:16:34.450: INFO: Observed &DaemonSet event: ADDED
  Apr 30 16:16:34.450: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.451: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.451: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.451: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.451: INFO: Found daemon set daemon-set in namespace daemonsets-4527 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 30 16:16:34.451: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/30/24 16:16:34.451
  STEP: watching for the daemon set status to be patched @ 04/30/24 16:16:34.465
  Apr 30 16:16:34.467: INFO: Observed &DaemonSet event: ADDED
  Apr 30 16:16:34.467: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.468: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.468: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.468: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.468: INFO: Observed daemon set daemon-set in namespace daemonsets-4527 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 30 16:16:34.468: INFO: Observed &DaemonSet event: MODIFIED
  Apr 30 16:16:34.468: INFO: Found daemon set daemon-set in namespace daemonsets-4527 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 30 16:16:34.468: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/30/24 16:16:34.48
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4527, will wait for the garbage collector to delete the pods @ 04/30/24 16:16:34.48
  Apr 30 16:16:34.543: INFO: Deleting DaemonSet.extensions daemon-set took: 8.650862ms
  Apr 30 16:16:34.644: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.372416ms
  Apr 30 16:16:37.250: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:16:37.250: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 30 16:16:37.254: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"190770"},"items":null}

  Apr 30 16:16:37.258: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"190770"},"items":null}

  Apr 30 16:16:37.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4527" for this suite. @ 04/30/24 16:16:37.276
• [4.947 seconds]
------------------------------
SS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/30/24 16:16:37.29
  Apr 30 16:16:37.290: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename hostport @ 04/30/24 16:16:37.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:37.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:37.316
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/30/24 16:16:37.323
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.111.64 on the node which pod1 resides and expect scheduled @ 04/30/24 16:16:39.349
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.111.64 but use UDP protocol on the node which pod2 resides @ 04/30/24 16:16:41.373
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/30/24 16:16:45.418
  Apr 30 16:16:45.418: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.111.64 http://127.0.0.1:54323/hostname] Namespace:hostport-392 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:16:45.418: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:16:45.419: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:16:45.419: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-392/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.111.64+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.111.64, port: 54323 @ 04/30/24 16:16:45.485
  Apr 30 16:16:45.486: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.111.64:54323/hostname] Namespace:hostport-392 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:16:45.486: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:16:45.486: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:16:45.486: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-392/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.111.64%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.111.64, port: 54323 UDP @ 04/30/24 16:16:45.549
  Apr 30 16:16:45.549: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.111.64 54323] Namespace:hostport-392 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:16:45.549: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:16:45.550: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:16:45.550: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-392/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.111.64+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Apr 30 16:16:50.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-392" for this suite. @ 04/30/24 16:16:50.608
• [13.326 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/30/24 16:16:50.616
  Apr 30 16:16:50.616: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-runtime @ 04/30/24 16:16:50.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:50.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:50.637
  STEP: create the container @ 04/30/24 16:16:50.64
  W0430 16:16:50.651408      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/30/24 16:16:50.651
  STEP: get the container status @ 04/30/24 16:16:53.676
  STEP: the container should be terminated @ 04/30/24 16:16:53.68
  STEP: the termination message should be set @ 04/30/24 16:16:53.68
  Apr 30 16:16:53.680: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/30/24 16:16:53.68
  Apr 30 16:16:53.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9190" for this suite. @ 04/30/24 16:16:53.718
• [3.110 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/30/24 16:16:53.726
  Apr 30 16:16:53.726: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:16:53.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:16:53.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:16:53.762
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7432 @ 04/30/24 16:16:53.766
  STEP: changing the ExternalName service to type=NodePort @ 04/30/24 16:16:53.773
  STEP: creating replication controller externalname-service in namespace services-7432 @ 04/30/24 16:16:53.81
  I0430 16:16:53.824172      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7432, replica count: 2
  I0430 16:16:56.874774      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:16:56.874: INFO: Creating new exec pod
  Apr 30 16:16:59.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-7432 exec execpod99pqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 30 16:17:00.046: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:00.046: INFO: stdout: "externalname-service-jt45g"
  Apr 30 16:17:00.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-7432 exec execpod99pqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.0.216 80'
  Apr 30 16:17:00.190: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.0.216 80\nConnection to 10.96.0.216 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:00.190: INFO: stdout: "externalname-service-dt8jc"
  Apr 30 16:17:00.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-7432 exec execpod99pqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.64 32036'
  Apr 30 16:17:00.327: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.64 32036\nConnection to 192.168.111.64 32036 port [tcp/*] succeeded!\n"
  Apr 30 16:17:00.327: INFO: stdout: "externalname-service-jt45g"
  Apr 30 16:17:00.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-7432 exec execpod99pqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.203 32036'
  Apr 30 16:17:00.455: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.203 32036\nConnection to 192.168.111.203 32036 port [tcp/*] succeeded!\n"
  Apr 30 16:17:00.455: INFO: stdout: ""
  Apr 30 16:17:01.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-7432 exec execpod99pqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.203 32036'
  Apr 30 16:17:01.461: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.203 32036\nConnection to 192.168.111.203 32036 port [tcp/*] succeeded!\n"
  Apr 30 16:17:01.461: INFO: stdout: ""
  Apr 30 16:17:02.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-7432 exec execpod99pqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.203 32036'
  Apr 30 16:17:02.468: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.203 32036\nConnection to 192.168.111.203 32036 port [tcp/*] succeeded!\n"
  Apr 30 16:17:02.468: INFO: stdout: "externalname-service-jt45g"
  Apr 30 16:17:02.468: INFO: Cleaning up the ExternalName to NodePort test service
  Apr 30 16:17:02.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7432" for this suite. @ 04/30/24 16:17:02.508
• [8.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/30/24 16:17:02.519
  Apr 30 16:17:02.519: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename endpointslice @ 04/30/24 16:17:02.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:17:02.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:17:02.551
  Apr 30 16:17:02.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9248" for this suite. @ 04/30/24 16:17:02.617
• [0.109 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/30/24 16:17:02.628
  Apr 30 16:17:02.628: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 16:17:02.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:17:02.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:17:02.655
  STEP: Creating configMap with name configmap-test-volume-map-1638cd1d-b182-4c45-9ef6-6c804ef7cb13 @ 04/30/24 16:17:02.658
  STEP: Creating a pod to test consume configMaps @ 04/30/24 16:17:02.668
  STEP: Saw pod success @ 04/30/24 16:17:06.695
  Apr 30 16:17:06.698: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-4d6f6241-68b1-4332-9aa9-b0edba632a9f container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 16:17:06.712
  Apr 30 16:17:06.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5177" for this suite. @ 04/30/24 16:17:06.738
• [4.120 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/30/24 16:17:06.75
  Apr 30 16:17:06.750: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:17:06.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:17:06.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:17:06.775
  STEP: creating service endpoint-test2 in namespace services-6076 @ 04/30/24 16:17:06.778
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6076 to expose endpoints map[] @ 04/30/24 16:17:06.797
  Apr 30 16:17:06.807: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Apr 30 16:17:07.832: INFO: successfully validated that service endpoint-test2 in namespace services-6076 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6076 @ 04/30/24 16:17:07.833
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6076 to expose endpoints map[pod1:[80]] @ 04/30/24 16:17:09.88
  Apr 30 16:17:09.891: INFO: successfully validated that service endpoint-test2 in namespace services-6076 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/30/24 16:17:09.891
  Apr 30 16:17:09.891: INFO: Creating new exec pod
  Apr 30 16:17:12.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-6076 exec execpodndccp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 30 16:17:13.068: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:13.068: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:17:13.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-6076 exec execpodndccp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.237 80'
  Apr 30 16:17:13.215: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.237 80\nConnection to 10.96.1.237 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:13.215: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-6076 @ 04/30/24 16:17:13.215
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6076 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/30/24 16:17:15.239
  Apr 30 16:17:15.254: INFO: successfully validated that service endpoint-test2 in namespace services-6076 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/30/24 16:17:15.254
  Apr 30 16:17:16.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-6076 exec execpodndccp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 30 16:17:16.397: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:16.397: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:17:16.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-6076 exec execpodndccp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.237 80'
  Apr 30 16:17:16.550: INFO: stderr: "+ nc -v -t -w 2+  10.96.1.237 80\necho hostName\nConnection to 10.96.1.237 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:16.550: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6076 @ 04/30/24 16:17:16.55
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6076 to expose endpoints map[pod2:[80]] @ 04/30/24 16:17:16.583
  Apr 30 16:17:16.621: INFO: successfully validated that service endpoint-test2 in namespace services-6076 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/30/24 16:17:16.621
  Apr 30 16:17:17.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-6076 exec execpodndccp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 30 16:17:17.772: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:17.772: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:17:17.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-6076 exec execpodndccp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.237 80'
  Apr 30 16:17:17.931: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.237 80\nConnection to 10.96.1.237 80 port [tcp/http] succeeded!\n"
  Apr 30 16:17:17.931: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-6076 @ 04/30/24 16:17:17.931
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6076 to expose endpoints map[] @ 04/30/24 16:17:17.963
  Apr 30 16:17:17.978: INFO: successfully validated that service endpoint-test2 in namespace services-6076 exposes endpoints map[]
  Apr 30 16:17:18.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6076" for this suite. @ 04/30/24 16:17:18.025
• [11.289 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/30/24 16:17:18.04
  Apr 30 16:17:18.040: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:17:18.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:17:18.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:17:18.068
  STEP: Creating the pod @ 04/30/24 16:17:18.073
  Apr 30 16:17:20.642: INFO: Successfully updated pod "labelsupdateebb9f6a7-27e6-4a88-9e43-c15f1c7517ff"
  Apr 30 16:17:24.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1428" for this suite. @ 04/30/24 16:17:24.674
• [6.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/30/24 16:17:24.691
  Apr 30 16:17:24.692: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 16:17:24.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:17:24.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:17:24.715
  STEP: Creating secret with name secret-test-afc16e3c-f1b2-4238-ba67-47ebb9550227 @ 04/30/24 16:17:24.718
  STEP: Creating a pod to test consume secrets @ 04/30/24 16:17:24.725
  STEP: Saw pod success @ 04/30/24 16:17:28.748
  Apr 30 16:17:28.752: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-4452d3ca-7864-4f63-8900-e9437e9e8552 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 16:17:28.76
  Apr 30 16:17:28.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9124" for this suite. @ 04/30/24 16:17:28.795
• [4.116 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/30/24 16:17:28.807
  Apr 30 16:17:28.807: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-runtime @ 04/30/24 16:17:28.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:17:28.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:17:28.831
  STEP: create the container @ 04/30/24 16:17:28.835
  W0430 16:17:28.849705      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/30/24 16:17:28.85
  STEP: get the container status @ 04/30/24 16:17:31.872
  STEP: the container should be terminated @ 04/30/24 16:17:31.877
  STEP: the termination message should be set @ 04/30/24 16:17:31.877
  Apr 30 16:17:31.877: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/30/24 16:17:31.877
  Apr 30 16:17:31.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1682" for this suite. @ 04/30/24 16:17:31.903
• [3.111 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/30/24 16:17:31.919
  Apr 30 16:17:31.919: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 16:17:31.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:17:31.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:17:31.944
  STEP: Creating pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847 @ 04/30/24 16:17:31.948
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 16:17:33.973
  Apr 30 16:17:33.978: INFO: Initial restart count of pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 is 0
  Apr 30 16:17:33.981: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:35.989: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:37.995: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:40.002: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:42.007: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:44.012: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:46.017: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:48.022: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:50.027: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:52.033: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:54.041: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:56.047: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:17:58.052: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:00.057: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:02.063: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:04.068: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:06.074: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:08.079: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:10.087: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:12.092: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:14.098: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:16.104: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:18.110: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:20.119: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:22.125: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:24.130: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:26.136: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:28.142: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:30.147: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:32.152: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:34.157: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:36.161: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:38.166: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:40.172: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:42.177: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:44.182: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:46.186: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:48.198: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:50.204: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:52.209: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:54.214: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:56.220: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:18:58.224: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:00.231: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:02.236: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:04.242: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:06.247: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:08.251: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:10.257: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:12.263: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:14.267: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:16.272: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:18.277: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:20.283: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:22.288: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:24.293: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:26.298: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:28.303: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:30.308: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:32.313: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:34.318: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:36.323: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:38.328: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:40.333: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:42.339: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:44.343: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:46.348: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:48.353: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:50.358: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:52.363: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:54.369: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:56.373: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:19:58.378: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:00.385: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:02.391: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:04.395: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:06.401: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:08.407: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:10.413: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:12.418: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:14.423: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:16.428: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:18.433: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:20.438: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:22.443: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:24.450: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:26.454: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:28.459: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:30.464: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:32.469: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:34.475: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:36.481: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:38.486: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:40.492: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:42.497: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:44.503: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:46.509: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:48.514: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:50.520: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:52.525: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:54.530: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:56.536: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:20:58.540: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:00.546: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:02.550: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:04.555: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:06.559: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:08.568: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:10.573: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:12.578: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:14.583: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:16.589: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:18.595: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:20.600: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:22.605: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:24.619: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:26.625: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:28.630: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:30.635: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  Apr 30 16:21:32.641: INFO: Get pod test-grpc-b550480f-f449-4b5f-8249-74758f79ce45 in namespace container-probe-1847
  STEP: deleting the pod @ 04/30/24 16:21:34.643
  Apr 30 16:21:34.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1847" for this suite. @ 04/30/24 16:21:34.672
• [242.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 04/30/24 16:21:34.693
  Apr 30 16:21:34.693: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 16:21:34.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:21:34.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:21:34.72
  STEP: Creating service test in namespace statefulset-8088 @ 04/30/24 16:21:34.722
  STEP: Creating a new StatefulSet @ 04/30/24 16:21:34.729
  Apr 30 16:21:34.743: INFO: Found 0 stateful pods, waiting for 3
  Apr 30 16:21:44.745: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:21:44.745: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:21:44.745: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/30/24 16:21:44.756
  Apr 30 16:21:44.781: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/30/24 16:21:44.781
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/30/24 16:21:54.79
  STEP: Performing a canary update @ 04/30/24 16:21:54.79
  Apr 30 16:21:54.817: INFO: Updating stateful set ss2
  Apr 30 16:21:54.830: INFO: Waiting for Pod statefulset-8088/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/30/24 16:22:04.826
  Apr 30 16:22:04.885: INFO: Found 2 stateful pods, waiting for 3
  Apr 30 16:22:14.884: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:22:14.884: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:22:14.884: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/30/24 16:22:14.892
  Apr 30 16:22:14.918: INFO: Updating stateful set ss2
  Apr 30 16:22:14.935: INFO: Waiting for Pod statefulset-8088/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 30 16:22:24.952: INFO: Updating stateful set ss2
  Apr 30 16:22:24.968: INFO: Waiting for StatefulSet statefulset-8088/ss2 to complete update
  Apr 30 16:22:24.969: INFO: Waiting for Pod statefulset-8088/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 30 16:22:34.964: INFO: Deleting all statefulset in ns statefulset-8088
  Apr 30 16:22:34.968: INFO: Scaling statefulset ss2 to 0
  Apr 30 16:22:44.988: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 16:22:44.992: INFO: Deleting statefulset ss2
  Apr 30 16:22:45.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8088" for this suite. @ 04/30/24 16:22:45.013
• [70.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/30/24 16:22:45.024
  Apr 30 16:22:45.024: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename disruption @ 04/30/24 16:22:45.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:22:45.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:22:45.052
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:22:45.061
  STEP: Updating PodDisruptionBudget status @ 04/30/24 16:22:47.065
  STEP: Waiting for all pods to be running @ 04/30/24 16:22:47.078
  Apr 30 16:22:47.083: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 04/30/24 16:22:49.083
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:22:49.099
  STEP: Patching PodDisruptionBudget status @ 04/30/24 16:22:49.112
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:22:49.125
  Apr 30 16:22:49.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5125" for this suite. @ 04/30/24 16:22:49.139
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/30/24 16:22:49.155
  Apr 30 16:22:49.155: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename namespaces @ 04/30/24 16:22:49.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:22:49.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:22:49.184
  STEP: Creating a test namespace @ 04/30/24 16:22:49.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:22:49.21
  STEP: Creating a pod in the namespace @ 04/30/24 16:22:49.213
  STEP: Waiting for the pod to have running status @ 04/30/24 16:22:49.229
  STEP: Deleting the namespace @ 04/30/24 16:22:51.245
  STEP: Waiting for the namespace to be removed. @ 04/30/24 16:22:51.253
  STEP: Recreating the namespace @ 04/30/24 16:23:02.257
  STEP: Verifying there are no pods in the namespace @ 04/30/24 16:23:02.279
  Apr 30 16:23:02.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3307" for this suite. @ 04/30/24 16:23:02.289
  STEP: Destroying namespace "nsdeletetest-1622" for this suite. @ 04/30/24 16:23:02.298
  Apr 30 16:23:02.302: INFO: Namespace nsdeletetest-1622 was already deleted
  STEP: Destroying namespace "nsdeletetest-6921" for this suite. @ 04/30/24 16:23:02.302
• [13.153 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/30/24 16:23:02.309
  Apr 30 16:23:02.309: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/30/24 16:23:02.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:23:02.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:23:02.336
  STEP: Creating 50 configmaps @ 04/30/24 16:23:02.339
  STEP: Creating RC which spawns configmap-volume pods @ 04/30/24 16:23:02.627
  Apr 30 16:23:02.675: INFO: Pod name wrapped-volume-race-9e35b36a-31de-46f2-a2eb-9d304d2dbacc: Found 1 pods out of 5
  Apr 30 16:23:07.683: INFO: Pod name wrapped-volume-race-9e35b36a-31de-46f2-a2eb-9d304d2dbacc: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/30/24 16:23:07.683
  STEP: Creating RC which spawns configmap-volume pods @ 04/30/24 16:23:17.737
  Apr 30 16:23:17.757: INFO: Pod name wrapped-volume-race-cdd61657-625d-47be-a613-6baed543ba25: Found 0 pods out of 5
  Apr 30 16:23:22.766: INFO: Pod name wrapped-volume-race-cdd61657-625d-47be-a613-6baed543ba25: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/30/24 16:23:22.766
  STEP: Creating RC which spawns configmap-volume pods @ 04/30/24 16:23:22.788
  Apr 30 16:23:22.809: INFO: Pod name wrapped-volume-race-2205254c-d904-4777-81f9-130e2bcb25a5: Found 0 pods out of 5
  Apr 30 16:23:27.821: INFO: Pod name wrapped-volume-race-2205254c-d904-4777-81f9-130e2bcb25a5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/30/24 16:23:27.821
  STEP: deleting ReplicationController wrapped-volume-race-2205254c-d904-4777-81f9-130e2bcb25a5 in namespace emptydir-wrapper-5985, will wait for the garbage collector to delete the pods @ 04/30/24 16:23:37.912
  Apr 30 16:23:37.976: INFO: Deleting ReplicationController wrapped-volume-race-2205254c-d904-4777-81f9-130e2bcb25a5 took: 8.897633ms
  Apr 30 16:23:38.076: INFO: Terminating ReplicationController wrapped-volume-race-2205254c-d904-4777-81f9-130e2bcb25a5 pods took: 100.535354ms
  STEP: deleting ReplicationController wrapped-volume-race-cdd61657-625d-47be-a613-6baed543ba25 in namespace emptydir-wrapper-5985, will wait for the garbage collector to delete the pods @ 04/30/24 16:23:43.077
  Apr 30 16:23:43.140: INFO: Deleting ReplicationController wrapped-volume-race-cdd61657-625d-47be-a613-6baed543ba25 took: 7.887906ms
  Apr 30 16:23:43.241: INFO: Terminating ReplicationController wrapped-volume-race-cdd61657-625d-47be-a613-6baed543ba25 pods took: 101.1672ms
  STEP: deleting ReplicationController wrapped-volume-race-9e35b36a-31de-46f2-a2eb-9d304d2dbacc in namespace emptydir-wrapper-5985, will wait for the garbage collector to delete the pods @ 04/30/24 16:23:47.643
  Apr 30 16:23:47.708: INFO: Deleting ReplicationController wrapped-volume-race-9e35b36a-31de-46f2-a2eb-9d304d2dbacc took: 9.953582ms
  Apr 30 16:23:47.809: INFO: Terminating ReplicationController wrapped-volume-race-9e35b36a-31de-46f2-a2eb-9d304d2dbacc pods took: 100.878231ms
  STEP: Cleaning up the configMaps @ 04/30/24 16:23:53.61
  Apr 30 16:23:54.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5985" for this suite. @ 04/30/24 16:23:54.004
• [51.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/30/24 16:23:54.013
  Apr 30 16:23:54.013: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 16:23:54.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:23:54.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:23:54.041
  Apr 30 16:23:54.055: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Apr 30 16:23:59.061: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/30/24 16:23:59.061
  Apr 30 16:23:59.061: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/30/24 16:23:59.082
  Apr 30 16:23:59.097: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8b0101b-fc3e-4b6f-a6b5-95c7c5b58470",
      ResourceVersion: (string) (len=6) "194019",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 30 16:23:59.133: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f8931bd-8323-4a9e-a88a-1a5ba9970199",
      ResourceVersion: (string) (len=6) "194028",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "e8b0101b-fc3e-4b6f-a6b5-95c7c5b58470",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 38 62 30 31 30  31 62 2d 66 63 33 65 2d  |\"e8b0101b-fc3e-|
              00000120  34 62 36 66 2d 61 36 62  35 2d 39 35 63 37 63 35  |4b6f-a6b5-95c7c5|
              00000130  62 35 38 34 37 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b58470\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=40) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 7d 7d                           |on":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:23:59.140: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 30 16:23:59.141: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3936723a-9f32-4580-927d-076198031234",
      ResourceVersion: (string) (len=6) "194021",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "e8b0101b-fc3e-4b6f-a6b5-95c7c5b58470",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 65 38 62 30 31 30 31  |"uid\":\"e8b0101|
              00000040  62 2d 66 63 33 65 2d 34  62 36 66 2d 61 36 62 35  |b-fc3e-4b6f-a6b5|
              00000050  2d 39 35 63 37 63 35 62  35 38 34 37 30 5c 22 7d  |-95c7c5b58470\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:23:59.150: INFO: Pod "test-cleanup-controller-8vz4p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-8vz4p",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0d14243-dd59-4640-9395-1bcfcfa1945b",
      ResourceVersion: (string) (len=6) "193999",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "100.73.144.107/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "100.73.144.107/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5e5d0802bf11e8a937fa2a7a299a93b67908fe7c56a0ccaa717b98ffbcfbff3a"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "3936723a-9f32-4580-927d-076198031234",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 39 33 36 37 32 33 61  |uid\":\"3936723a|
              00000080  2d 39 66 33 32 2d 34 35  38 30 2d 39 32 37 64 2d  |-9f32-4580-927d-|
              00000090  30 37 36 31 39 38 30 33  31 32 33 34 5c 22 7d 22  |076198031234\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 31 30 37 5c 22 7d 22  |0.73.144.107\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ldh9n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ldh9n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=14) "100.73.144.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "100.73.144.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850091034,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a092db0dbc44f01265983d939604273bd78b5a872edcb1de2fe9809f8ce5a8a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 16:23:59.153: INFO: Pod "test-cleanup-deployment-58dcc84f74-hxrbp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-hxrbp",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-8979",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9119755f-133e-431d-a8b6-92bbf914ad5d",
      ResourceVersion: (string) (len=6) "194033",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "5f8931bd-8323-4a9e-a88a-1a5ba9970199",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  38 39 33 31 62 64 2d 38  |d\":\"5f8931bd-8|
              00000090  33 32 33 2d 34 61 39 65  2d 61 38 38 61 2d 31 61  |323-4a9e-a88a-1a|
              000000a0  35 62 61 39 39 37 30 31  39 39 5c 22 7d 22 3a 7b  |5ba9970199\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r27qf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r27qf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 16:23:59.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8979" for this suite. @ 04/30/24 16:23:59.168
• [5.164 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/30/24 16:23:59.177
  Apr 30 16:23:59.177: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename certificates @ 04/30/24 16:23:59.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:23:59.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:23:59.2
  STEP: getting /apis @ 04/30/24 16:24:00.121
  STEP: getting /apis/certificates.k8s.io @ 04/30/24 16:24:00.127
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/30/24 16:24:00.128
  STEP: creating @ 04/30/24 16:24:00.129
  STEP: getting @ 04/30/24 16:24:00.154
  STEP: listing @ 04/30/24 16:24:00.158
  STEP: watching @ 04/30/24 16:24:00.164
  Apr 30 16:24:00.165: INFO: starting watch
  STEP: patching @ 04/30/24 16:24:00.166
  STEP: updating @ 04/30/24 16:24:00.177
  Apr 30 16:24:00.186: INFO: waiting for watch events with expected annotations
  Apr 30 16:24:00.186: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/30/24 16:24:00.186
  STEP: patching /approval @ 04/30/24 16:24:00.195
  STEP: updating /approval @ 04/30/24 16:24:00.206
  STEP: getting /status @ 04/30/24 16:24:00.214
  STEP: patching /status @ 04/30/24 16:24:00.243
  STEP: updating /status @ 04/30/24 16:24:00.258
  STEP: deleting @ 04/30/24 16:24:00.269
  STEP: deleting a collection @ 04/30/24 16:24:00.29
  Apr 30 16:24:00.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2645" for this suite. @ 04/30/24 16:24:00.317
• [1.150 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/30/24 16:24:00.328
  Apr 30 16:24:00.328: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename events @ 04/30/24 16:24:00.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:24:00.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:24:00.351
  STEP: Create set of events @ 04/30/24 16:24:00.356
  Apr 30 16:24:00.360: INFO: created test-event-1
  Apr 30 16:24:00.371: INFO: created test-event-2
  Apr 30 16:24:00.378: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/30/24 16:24:00.378
  STEP: delete collection of events @ 04/30/24 16:24:00.381
  Apr 30 16:24:00.382: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/30/24 16:24:00.413
  Apr 30 16:24:00.413: INFO: requesting list of events to confirm quantity
  Apr 30 16:24:00.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8083" for this suite. @ 04/30/24 16:24:00.423
• [0.105 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/30/24 16:24:00.434
  Apr 30 16:24:00.435: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/30/24 16:24:00.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:24:00.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:24:00.46
  Apr 30 16:24:00.464: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:24:03.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9909" for this suite. @ 04/30/24 16:24:03.584
• [3.157 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/30/24 16:24:03.592
  Apr 30 16:24:03.592: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename disruption @ 04/30/24 16:24:03.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:24:03.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:24:03.616
  STEP: creating the pdb @ 04/30/24 16:24:03.619
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:24:03.637
  STEP: updating the pdb @ 04/30/24 16:24:05.642
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:24:05.651
  STEP: patching the pdb @ 04/30/24 16:24:07.656
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:24:07.666
  STEP: Waiting for the pdb to be deleted @ 04/30/24 16:24:09.678
  Apr 30 16:24:09.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3772" for this suite. @ 04/30/24 16:24:09.685
• [6.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/30/24 16:24:09.693
  Apr 30 16:24:09.693: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename discovery @ 04/30/24 16:24:09.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:24:09.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:24:09.717
  STEP: Setting up server cert @ 04/30/24 16:24:09.722
  STEP: Requesting APIResourceList from "/api/v1" @ 04/30/24 16:24:10.073
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/30/24 16:24:10.076
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/30/24 16:24:10.077
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/30/24 16:24:10.078
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/30/24 16:24:10.079
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/30/24 16:24:10.081
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/30/24 16:24:10.082
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/30/24 16:24:10.083
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/30/24 16:24:10.084
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/30/24 16:24:10.085
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/30/24 16:24:10.086
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/30/24 16:24:10.088
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/30/24 16:24:10.089
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/30/24 16:24:10.09
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/30/24 16:24:10.091
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/30/24 16:24:10.092
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/30/24 16:24:10.093
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/30/24 16:24:10.094
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/30/24 16:24:10.096
  Apr 30 16:24:10.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4958" for this suite. @ 04/30/24 16:24:10.101
• [0.420 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/30/24 16:24:10.115
  Apr 30 16:24:10.115: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 16:24:10.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:24:10.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:24:10.135
  STEP: Creating a test headless service @ 04/30/24 16:24:10.138
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9785 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9785;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9785 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9785;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9785.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9785.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9785.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9785.svc;check="$$(dig +notcp +noall +answer +search 35.3.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.3.35_udp@PTR;check="$$(dig +tcp +noall +answer +search 35.3.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.3.35_tcp@PTR;sleep 1; done
   @ 04/30/24 16:24:10.168
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9785 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9785;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9785 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9785;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9785.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9785.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9785.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9785.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9785.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9785.svc;check="$$(dig +notcp +noall +answer +search 35.3.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.3.35_udp@PTR;check="$$(dig +tcp +noall +answer +search 35.3.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.3.35_tcp@PTR;sleep 1; done
   @ 04/30/24 16:24:10.168
  STEP: creating a pod to probe DNS @ 04/30/24 16:24:10.168
  STEP: submitting the pod to kubernetes @ 04/30/24 16:24:10.168
  STEP: retrieving the pod @ 04/30/24 16:24:12.198
  STEP: looking for the results for each expected name from probers @ 04/30/24 16:24:12.201
  Apr 30 16:24:12.208: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.212: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.216: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.219: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.223: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.227: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.231: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.234: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.253: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.256: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.260: INFO: Unable to read jessie_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.264: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.268: INFO: Unable to read jessie_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.271: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.275: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.279: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:12.298: INFO: Lookups using dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9785 wheezy_tcp@dns-test-service.dns-9785 wheezy_udp@dns-test-service.dns-9785.svc wheezy_tcp@dns-test-service.dns-9785.svc wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9785 jessie_tcp@dns-test-service.dns-9785 jessie_udp@dns-test-service.dns-9785.svc jessie_tcp@dns-test-service.dns-9785.svc jessie_udp@_http._tcp.dns-test-service.dns-9785.svc jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc]

  Apr 30 16:24:12.319: INFO: Pod client logs for webserver: 
  Apr 30 16:24:12.326: INFO: Pod client logs for querier: 
  Apr 30 16:24:12.332: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:24:17.208: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.213: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.218: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.222: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.227: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.232: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.237: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.242: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.266: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.270: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.274: INFO: Unable to read jessie_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.278: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.282: INFO: Unable to read jessie_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.286: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.289: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.293: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:17.317: INFO: Lookups using dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9785 wheezy_tcp@dns-test-service.dns-9785 wheezy_udp@dns-test-service.dns-9785.svc wheezy_tcp@dns-test-service.dns-9785.svc wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9785 jessie_tcp@dns-test-service.dns-9785 jessie_udp@dns-test-service.dns-9785.svc jessie_tcp@dns-test-service.dns-9785.svc jessie_udp@_http._tcp.dns-test-service.dns-9785.svc jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc]

  Apr 30 16:24:17.325: INFO: Pod client logs for webserver: 
  Apr 30 16:24:17.335: INFO: Pod client logs for querier: 
  Apr 30 16:24:17.343: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:24:22.211: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.214: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.218: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.221: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.224: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.228: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.231: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.234: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.251: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.254: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.258: INFO: Unable to read jessie_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.261: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.265: INFO: Unable to read jessie_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.268: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.271: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.275: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:22.288: INFO: Lookups using dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9785 wheezy_tcp@dns-test-service.dns-9785 wheezy_udp@dns-test-service.dns-9785.svc wheezy_tcp@dns-test-service.dns-9785.svc wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9785 jessie_tcp@dns-test-service.dns-9785 jessie_udp@dns-test-service.dns-9785.svc jessie_tcp@dns-test-service.dns-9785.svc jessie_udp@_http._tcp.dns-test-service.dns-9785.svc jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc]

  Apr 30 16:24:22.295: INFO: Pod client logs for webserver: 
  Apr 30 16:24:22.301: INFO: Pod client logs for querier: 
  Apr 30 16:24:22.307: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:24:27.208: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.211: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.215: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.218: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.221: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.224: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.228: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.231: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.249: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.255: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.258: INFO: Unable to read jessie_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.262: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.265: INFO: Unable to read jessie_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.268: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.272: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.275: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:27.289: INFO: Lookups using dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9785 wheezy_tcp@dns-test-service.dns-9785 wheezy_udp@dns-test-service.dns-9785.svc wheezy_tcp@dns-test-service.dns-9785.svc wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9785 jessie_tcp@dns-test-service.dns-9785 jessie_udp@dns-test-service.dns-9785.svc jessie_tcp@dns-test-service.dns-9785.svc jessie_udp@_http._tcp.dns-test-service.dns-9785.svc jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc]

  Apr 30 16:24:27.295: INFO: Pod client logs for webserver: 
  Apr 30 16:24:27.301: INFO: Pod client logs for querier: 
  Apr 30 16:24:27.307: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:24:32.209: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.213: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.217: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.221: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.224: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.228: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.232: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.237: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.256: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.260: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.264: INFO: Unable to read jessie_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.268: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.275: INFO: Unable to read jessie_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.278: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.282: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.285: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:32.301: INFO: Lookups using dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9785 wheezy_tcp@dns-test-service.dns-9785 wheezy_udp@dns-test-service.dns-9785.svc wheezy_tcp@dns-test-service.dns-9785.svc wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9785 jessie_tcp@dns-test-service.dns-9785 jessie_udp@dns-test-service.dns-9785.svc jessie_tcp@dns-test-service.dns-9785.svc jessie_udp@_http._tcp.dns-test-service.dns-9785.svc jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc]

  Apr 30 16:24:32.308: INFO: Pod client logs for webserver: 
  Apr 30 16:24:32.315: INFO: Pod client logs for querier: 
  Apr 30 16:24:32.321: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:24:37.207: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.213: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.217: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.221: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.225: INFO: Unable to read wheezy_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.229: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.233: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.236: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.257: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.260: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.264: INFO: Unable to read jessie_udp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.267: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785 from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.271: INFO: Unable to read jessie_udp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.274: INFO: Unable to read jessie_tcp@dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.278: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.282: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc from pod dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0: the server could not find the requested resource (get pods dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0)
  Apr 30 16:24:37.298: INFO: Lookups using dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9785 wheezy_tcp@dns-test-service.dns-9785 wheezy_udp@dns-test-service.dns-9785.svc wheezy_tcp@dns-test-service.dns-9785.svc wheezy_udp@_http._tcp.dns-test-service.dns-9785.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9785.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9785 jessie_tcp@dns-test-service.dns-9785 jessie_udp@dns-test-service.dns-9785.svc jessie_tcp@dns-test-service.dns-9785.svc jessie_udp@_http._tcp.dns-test-service.dns-9785.svc jessie_tcp@_http._tcp.dns-test-service.dns-9785.svc]

  Apr 30 16:24:37.305: INFO: Pod client logs for webserver: 
  Apr 30 16:24:37.313: INFO: Pod client logs for querier: 
  Apr 30 16:24:37.320: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:24:42.300: INFO: DNS probes using dns-9785/dns-test-a8dadcc1-9847-4d31-9518-fb101b4371e0 succeeded

  STEP: deleting the pod @ 04/30/24 16:24:42.3
  STEP: deleting the test service @ 04/30/24 16:24:42.334
  STEP: deleting the test headless service @ 04/30/24 16:24:42.385
  Apr 30 16:24:42.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9785" for this suite. @ 04/30/24 16:24:42.414
• [32.311 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/30/24 16:24:42.428
  Apr 30 16:24:42.428: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename subpath @ 04/30/24 16:24:42.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:24:42.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:24:42.459
  STEP: Setting up data @ 04/30/24 16:24:42.463
  STEP: Creating pod pod-subpath-test-configmap-4jwr @ 04/30/24 16:24:42.48
  STEP: Creating a pod to test atomic-volume-subpath @ 04/30/24 16:24:42.48
  STEP: Saw pod success @ 04/30/24 16:25:06.566
  Apr 30 16:25:06.569: INFO: Trying to get logs from node perfermance-5 pod pod-subpath-test-configmap-4jwr container test-container-subpath-configmap-4jwr: <nil>
  STEP: delete the pod @ 04/30/24 16:25:06.577
  STEP: Deleting pod pod-subpath-test-configmap-4jwr @ 04/30/24 16:25:06.597
  Apr 30 16:25:06.597: INFO: Deleting pod "pod-subpath-test-configmap-4jwr" in namespace "subpath-2078"
  Apr 30 16:25:06.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2078" for this suite. @ 04/30/24 16:25:06.605
• [24.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/30/24 16:25:06.615
  Apr 30 16:25:06.615: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename init-container @ 04/30/24 16:25:06.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:06.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:06.688
  STEP: creating the pod @ 04/30/24 16:25:06.691
  Apr 30 16:25:06.691: INFO: PodSpec: initContainers in spec.initContainers
  Apr 30 16:25:10.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9276" for this suite. @ 04/30/24 16:25:10.167
• [3.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/30/24 16:25:10.178
  Apr 30 16:25:10.178: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/30/24 16:25:10.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:10.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:10.203
  STEP: creating a target pod @ 04/30/24 16:25:10.207
  STEP: adding an ephemeral container @ 04/30/24 16:25:12.231
  STEP: checking pod container endpoints @ 04/30/24 16:25:16.259
  Apr 30 16:25:16.259: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2041 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:25:16.259: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:25:16.259: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:25:16.259: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-2041/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 30 16:25:16.315: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/30/24 16:25:16.334
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/30/24 16:25:16.339
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/30/24 16:25:16.355
  Apr 30 16:25:16.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2041" for this suite. @ 04/30/24 16:25:16.367
• [6.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/30/24 16:25:16.382
  Apr 30 16:25:16.382: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename disruption @ 04/30/24 16:25:16.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:16.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:16.408
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/30/24 16:25:16.411
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:25:16.418
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/30/24 16:25:18.434
  STEP: Waiting for all pods to be running @ 04/30/24 16:25:18.434
  Apr 30 16:25:18.438: INFO: pods: 0 < 3
  STEP: locating a running pod @ 04/30/24 16:25:20.441
  STEP: Updating the pdb to allow a pod to be evicted @ 04/30/24 16:25:20.477
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:25:20.486
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/30/24 16:25:22.491
  STEP: Waiting for all pods to be running @ 04/30/24 16:25:22.491
  STEP: Waiting for the pdb to observed all healthy pods @ 04/30/24 16:25:22.495
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/30/24 16:25:22.582
  STEP: Waiting for the pdb to be processed @ 04/30/24 16:25:22.628
  STEP: Waiting for all pods to be running @ 04/30/24 16:25:24.632
  STEP: locating a running pod @ 04/30/24 16:25:24.636
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/30/24 16:25:24.646
  STEP: Waiting for the pdb to be deleted @ 04/30/24 16:25:24.653
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/30/24 16:25:24.656
  STEP: Waiting for all pods to be running @ 04/30/24 16:25:24.656
  Apr 30 16:25:24.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4636" for this suite. @ 04/30/24 16:25:24.696
• [8.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 04/30/24 16:25:24.717
  Apr 30 16:25:24.717: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 16:25:24.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:24.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:24.748
  Apr 30 16:25:24.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1847 create -f -'
  Apr 30 16:25:24.913: INFO: stderr: ""
  Apr 30 16:25:24.913: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 30 16:25:24.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1847 create -f -'
  Apr 30 16:25:25.117: INFO: stderr: ""
  Apr 30 16:25:25.117: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/30/24 16:25:25.117
  Apr 30 16:25:26.122: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 16:25:26.122: INFO: Found 0 / 1
  Apr 30 16:25:27.122: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 16:25:27.122: INFO: Found 1 / 1
  Apr 30 16:25:27.122: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 30 16:25:27.126: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 16:25:27.126: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 30 16:25:27.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1847 describe pod agnhost-primary-2zxkb'
  Apr 30 16:25:27.228: INFO: stderr: ""
  Apr 30 16:25:27.228: INFO: stdout: "Name:             agnhost-primary-2zxkb\nNamespace:        kubectl-1847\nPriority:         0\nService Account:  default\nNode:             perfermance-5/192.168.111.203\nStart Time:       Tue, 30 Apr 2024 16:25:24 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: e22dfadfa6867689122ffe38783b1b36374084ced75dcaa0bd5a6595d73d9943\n                  cni.projectcalico.org/podIP: 100.73.144.117/32\n                  cni.projectcalico.org/podIPs: 100.73.144.117/32\nStatus:           Running\nIP:               100.73.144.117\nIPs:\n  IP:           100.73.144.117\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://9b71a886b38dbfc64cc28fae0c4d2ae337e226ed63b2a38911123d15e67d640e\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 30 Apr 2024 16:25:25 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-wnwlz (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-wnwlz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-1847/agnhost-primary-2zxkb to perfermance-5\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Apr 30 16:25:27.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1847 describe rc agnhost-primary'
  Apr 30 16:25:27.327: INFO: stderr: ""
  Apr 30 16:25:27.327: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1847\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-2zxkb\n"
  Apr 30 16:25:27.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1847 describe service agnhost-primary'
  Apr 30 16:25:27.414: INFO: stderr: ""
  Apr 30 16:25:27.414: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1847\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.96.0.223\nIPs:               10.96.0.223\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         100.73.144.117:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 30 16:25:27.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1847 describe node perfermance-1'
  Apr 30 16:25:27.533: INFO: stderr: ""
  Apr 30 16:25:27.533: INFO: stdout: "Name:               perfermance-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=perfermance-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"csi.tigera.io\":\"perfermance-1\"}\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.111.150/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 100.70.29.0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 30 Apr 2024 06:30:11 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  perfermance-1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 30 Apr 2024 16:25:20 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 30 Apr 2024 06:39:52 +0000   Tue, 30 Apr 2024 06:39:52 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 30 Apr 2024 16:25:20 +0000   Tue, 30 Apr 2024 06:30:10 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 30 Apr 2024 16:25:20 +0000   Tue, 30 Apr 2024 06:30:10 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 30 Apr 2024 16:25:20 +0000   Tue, 30 Apr 2024 06:30:10 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 30 Apr 2024 16:25:20 +0000   Tue, 30 Apr 2024 06:39:59 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.111.150\n  Hostname:    perfermance-1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  101430960Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8128012Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  93478772582\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8025612Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 e1f9928d79e148798b3fcd1901b96470\n  System UUID:                e1f9928d-79e1-4879-8b3f-cd1901b96470\n  Boot ID:                    89e543ed-d461-4c53-9f2d-c80aaefcc5b6\n  Kernel Version:             5.15.0-101-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.15\n  Kubelet Version:            v1.29.2\n  Kube-Proxy Version:         v1.29.2\nPodCIDR:                      100.64.0.0/24\nPodCIDRs:                     100.64.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  calico-apiserver            calico-apiserver-858c89fdd8-dtt5g                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         8h\n  calico-system               calico-node-4vqrq                                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         9h\n  calico-system               csi-node-driver-g6pjs                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         9h\n  kube-system                 etcd-perfermance-1                                         100m (2%)     0 (0%)      100Mi (1%)       0 (0%)         9h\n  kube-system                 kube-apiserver-perfermance-1                               250m (6%)     0 (0%)      0 (0%)           0 (0%)         9h\n  kube-system                 kube-controller-manager-perfermance-1                      200m (5%)     0 (0%)      0 (0%)           0 (0%)         9h\n  kube-system                 kube-proxy-2nx8k                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         9h\n  kube-system                 kube-scheduler-perfermance-1                               100m (2%)     0 (0%)      0 (0%)           0 (0%)         9h\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-nrwz2    0 (0%)        0 (0%)      0 (0%)           0 (0%)         42m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                650m (16%)  0 (0%)\n  memory             100Mi (1%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Apr 30 16:25:27.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-1847 describe namespace kubectl-1847'
  Apr 30 16:25:27.630: INFO: stderr: ""
  Apr 30 16:25:27.630: INFO: stdout: "Name:         kubectl-1847\nLabels:       e2e-framework=kubectl\n              e2e-run=ac853f24-8fa6-4df3-990f-f47b46338366\n              kubernetes.io/metadata.name=kubectl-1847\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 30 16:25:27.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1847" for this suite. @ 04/30/24 16:25:27.636
• [2.929 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 04/30/24 16:25:27.646
  Apr 30 16:25:27.646: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename job @ 04/30/24 16:25:27.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:27.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:27.672
  STEP: Creating a job @ 04/30/24 16:25:27.674
  STEP: Ensuring active pods == parallelism @ 04/30/24 16:25:27.683
  STEP: Orphaning one of the Job's Pods @ 04/30/24 16:25:29.69
  Apr 30 16:25:30.212: INFO: Successfully updated pod "adopt-release-vsfpl"
  STEP: Checking that the Job readopts the Pod @ 04/30/24 16:25:30.212
  STEP: Removing the labels from the Job's Pod @ 04/30/24 16:25:32.23
  Apr 30 16:25:32.747: INFO: Successfully updated pod "adopt-release-vsfpl"
  STEP: Checking that the Job releases the Pod @ 04/30/24 16:25:32.748
  Apr 30 16:25:34.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9058" for this suite. @ 04/30/24 16:25:34.762
• [7.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/30/24 16:25:34.774
  Apr 30 16:25:34.775: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:25:34.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:34.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:34.801
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9803 @ 04/30/24 16:25:34.804
  STEP: changing the ExternalName service to type=ClusterIP @ 04/30/24 16:25:34.811
  STEP: creating replication controller externalname-service in namespace services-9803 @ 04/30/24 16:25:34.829
  I0430 16:25:34.845417      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9803, replica count: 2
  I0430 16:25:37.896025      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:25:37.896: INFO: Creating new exec pod
  Apr 30 16:25:40.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-9803 exec execpodgrsnx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 30 16:25:41.113: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 30 16:25:41.113: INFO: stdout: "externalname-service-rmpzg"
  Apr 30 16:25:41.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-9803 exec execpodgrsnx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.211 80'
  Apr 30 16:25:41.269: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.3.211 80\nConnection to 10.96.3.211 80 port [tcp/http] succeeded!\n"
  Apr 30 16:25:41.269: INFO: stdout: "externalname-service-n6hhf"
  Apr 30 16:25:41.269: INFO: Cleaning up the ExternalName to ClusterIP test service
  Apr 30 16:25:41.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9803" for this suite. @ 04/30/24 16:25:41.315
• [6.558 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/30/24 16:25:41.333
  Apr 30 16:25:41.333: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replicaset @ 04/30/24 16:25:41.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:41.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:41.364
  STEP: Create a ReplicaSet @ 04/30/24 16:25:41.367
  STEP: Verify that the required pods have come up @ 04/30/24 16:25:41.377
  Apr 30 16:25:41.380: INFO: Pod name sample-pod: Found 0 pods out of 3
  Apr 30 16:25:46.388: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/30/24 16:25:46.388
  Apr 30 16:25:46.392: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/30/24 16:25:46.392
  STEP: DeleteCollection of the ReplicaSets @ 04/30/24 16:25:46.408
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/30/24 16:25:46.426
  Apr 30 16:25:46.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3131" for this suite. @ 04/30/24 16:25:46.451
• [5.145 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/30/24 16:25:46.479
  Apr 30 16:25:46.479: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename gc @ 04/30/24 16:25:46.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:46.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:46.513
  STEP: create the rc @ 04/30/24 16:25:46.518
  W0430 16:25:46.525716      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/30/24 16:25:51.53
  STEP: wait for all pods to be garbage collected @ 04/30/24 16:25:51.538
  STEP: Gathering metrics @ 04/30/24 16:25:56.546
  Apr 30 16:25:56.630: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 30 16:25:56.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-225" for this suite. @ 04/30/24 16:25:56.638
• [10.166 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/30/24 16:25:56.646
  Apr 30 16:25:56.646: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 16:25:56.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:25:56.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:25:56.678
  STEP: Creating pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696 @ 04/30/24 16:25:56.682
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 16:25:58.702
  Apr 30 16:25:58.706: INFO: Initial restart count of pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 is 0
  Apr 30 16:25:58.711: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:00.715: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:02.721: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:04.727: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:06.732: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:08.739: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:10.744: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:12.750: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:14.755: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:16.760: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:18.765: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:20.770: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:22.776: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:24.782: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:26.787: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:28.796: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:30.801: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:32.807: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:34.812: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:36.818: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:38.823: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:40.830: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:42.837: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:44.843: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:46.849: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:48.854: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:50.859: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:52.884: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:54.890: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:56.895: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:26:58.901: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:00.906: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:02.911: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:04.917: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:06.922: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:08.928: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:10.934: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:12.940: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:14.946: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:16.951: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:18.956: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:20.962: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:22.967: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:24.972: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:26.977: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:28.982: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:30.988: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:32.994: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:35.000: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:37.005: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:39.010: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:41.113: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:43.119: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:45.123: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:47.130: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:49.135: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:51.140: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:53.146: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:55.152: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:57.158: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:27:59.164: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:01.171: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:03.176: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:05.182: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:07.185: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:09.190: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:11.197: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:13.202: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:15.208: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:17.213: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:19.218: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:21.226: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:23.231: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:25.239: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:27.244: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:29.249: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:31.254: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:33.260: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:35.266: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:37.275: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:39.281: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:41.286: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:43.291: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:45.298: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:47.303: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:49.308: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:51.313: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:53.318: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:55.322: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:57.327: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:28:59.332: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:01.337: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:03.342: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:05.346: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:07.352: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:09.357: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:11.362: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:13.368: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:15.372: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:17.377: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:19.383: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:21.388: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:23.394: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:25.405: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:27.410: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:29.415: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:31.420: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:33.424: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:35.430: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:37.435: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:39.441: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:41.451: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:43.457: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:45.463: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:47.468: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:49.472: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:51.477: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:53.483: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:55.488: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  Apr 30 16:29:57.493: INFO: Get pod liveness-049ce7aa-f0f0-4b0a-82d3-60445e3cccb8 in namespace container-probe-696
  STEP: deleting the pod @ 04/30/24 16:29:59.494
  Apr 30 16:29:59.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-696" for this suite. @ 04/30/24 16:29:59.518
• [242.884 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 04/30/24 16:29:59.53
  Apr 30 16:29:59.530: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename ingress @ 04/30/24 16:29:59.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:29:59.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:29:59.57
  STEP: getting /apis @ 04/30/24 16:29:59.573
  STEP: getting /apis/networking.k8s.io @ 04/30/24 16:29:59.58
  STEP: getting /apis/networking.k8s.iov1 @ 04/30/24 16:29:59.582
  STEP: creating @ 04/30/24 16:29:59.584
  STEP: getting @ 04/30/24 16:29:59.608
  STEP: listing @ 04/30/24 16:29:59.611
  STEP: watching @ 04/30/24 16:29:59.614
  Apr 30 16:29:59.614: INFO: starting watch
  STEP: cluster-wide listing @ 04/30/24 16:29:59.615
  STEP: cluster-wide watching @ 04/30/24 16:29:59.618
  Apr 30 16:29:59.618: INFO: starting watch
  STEP: patching @ 04/30/24 16:29:59.619
  STEP: updating @ 04/30/24 16:29:59.626
  Apr 30 16:29:59.642: INFO: waiting for watch events with expected annotations
  Apr 30 16:29:59.642: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/30/24 16:29:59.643
  STEP: updating /status @ 04/30/24 16:29:59.673
  STEP: get /status @ 04/30/24 16:29:59.686
  STEP: deleting @ 04/30/24 16:29:59.689
  STEP: deleting a collection @ 04/30/24 16:29:59.703
  Apr 30 16:29:59.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2279" for this suite. @ 04/30/24 16:29:59.723
• [0.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 04/30/24 16:29:59.73
  Apr 30 16:29:59.730: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 16:29:59.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:29:59.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:29:59.753
  STEP: validating cluster-info @ 04/30/24 16:29:59.757
  Apr 30 16:29:59.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-375 cluster-info'
  Apr 30 16:29:59.843: INFO: stderr: ""
  Apr 30 16:29:59.843: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 30 16:29:59.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-375" for this suite. @ 04/30/24 16:29:59.848
• [0.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 04/30/24 16:29:59.856
  Apr 30 16:29:59.856: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:29:59.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:29:59.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:29:59.883
  STEP: creating service in namespace services-1632 @ 04/30/24 16:29:59.886
  STEP: creating service affinity-clusterip-transition in namespace services-1632 @ 04/30/24 16:29:59.886
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1632 @ 04/30/24 16:29:59.905
  I0430 16:29:59.914767      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-1632, replica count: 3
  I0430 16:30:02.966359      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:30:02.974: INFO: Creating new exec pod
  Apr 30 16:30:06.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1632 exec execpod-affinityj2ng5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 30 16:30:06.326: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 30 16:30:06.326: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:30:06.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1632 exec execpod-affinityj2ng5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.77 80'
  Apr 30 16:30:06.475: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.77 80\nConnection to 10.96.1.77 80 port [tcp/http] succeeded!\n"
  Apr 30 16:30:06.475: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:30:06.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1632 exec execpod-affinityj2ng5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.1.77:80/ ; done'
  Apr 30 16:30:06.753: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n"
  Apr 30 16:30:06.753: INFO: stdout: "\naffinity-clusterip-transition-bpmrr\naffinity-clusterip-transition-ctmkt\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-bpmrr\naffinity-clusterip-transition-ctmkt\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-bpmrr\naffinity-clusterip-transition-ctmkt\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-bpmrr\naffinity-clusterip-transition-ctmkt\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-bpmrr\naffinity-clusterip-transition-ctmkt\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-bpmrr"
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-bpmrr
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-ctmkt
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-bpmrr
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-ctmkt
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-bpmrr
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-ctmkt
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-bpmrr
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-ctmkt
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-bpmrr
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-ctmkt
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.753: INFO: Received response from host: affinity-clusterip-transition-bpmrr
  Apr 30 16:30:06.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1632 exec execpod-affinityj2ng5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.1.77:80/ ; done'
  Apr 30 16:30:06.991: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.77:80/\n"
  Apr 30 16:30:06.991: INFO: stdout: "\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76\naffinity-clusterip-transition-xbz76"
  Apr 30 16:30:06.991: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.991: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.991: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.991: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Received response from host: affinity-clusterip-transition-xbz76
  Apr 30 16:30:06.992: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1632, will wait for the garbage collector to delete the pods @ 04/30/24 16:30:07.022
  Apr 30 16:30:07.087: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.691125ms
  Apr 30 16:30:07.187: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.411591ms
  Apr 30 16:30:10.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1632" for this suite. @ 04/30/24 16:30:10.422
• [10.576 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/30/24 16:30:10.432
  Apr 30 16:30:10.432: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename apf @ 04/30/24 16:30:10.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:30:10.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:30:10.465
  STEP: getting /apis @ 04/30/24 16:30:10.469
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/30/24 16:30:10.473
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/30/24 16:30:10.474
  STEP: creating @ 04/30/24 16:30:10.476
  STEP: getting @ 04/30/24 16:30:10.512
  STEP: listing @ 04/30/24 16:30:10.527
  STEP: watching @ 04/30/24 16:30:10.533
  Apr 30 16:30:10.533: INFO: starting watch
  STEP: patching @ 04/30/24 16:30:10.535
  STEP: updating @ 04/30/24 16:30:10.545
  Apr 30 16:30:10.560: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/30/24 16:30:10.561
  STEP: patching /status @ 04/30/24 16:30:10.565
  STEP: updating /status @ 04/30/24 16:30:10.575
  STEP: deleting @ 04/30/24 16:30:10.624
  STEP: deleting a collection @ 04/30/24 16:30:10.638
  Apr 30 16:30:10.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1485" for this suite. @ 04/30/24 16:30:10.661
• [0.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/30/24 16:30:10.669
  Apr 30 16:30:10.669: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 16:30:10.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:30:10.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:30:10.696
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/30/24 16:30:10.698
  Apr 30 16:30:10.707: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3746  5de962e4-56a8-46cd-9ba6-0f13619e8da8 196572 0 2024-04-30 16:30:10 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-30 16:30:10 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2hxr8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2hxr8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/30/24 16:30:12.724
  Apr 30 16:30:12.724: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3746 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:30:12.724: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:30:12.725: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:30:12.725: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-3746/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/30/24 16:30:12.803
  Apr 30 16:30:12.803: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3746 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 16:30:12.803: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 16:30:12.804: INFO: ExecWithOptions: Clientset creation
  Apr 30 16:30:12.804: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-3746/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 30 16:30:12.877: INFO: Deleting pod test-dns-nameservers...
  Apr 30 16:30:12.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3746" for this suite. @ 04/30/24 16:30:12.907
• [2.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/30/24 16:30:12.918
  Apr 30 16:30:12.918: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename gc @ 04/30/24 16:30:12.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:30:12.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:30:12.947
  STEP: create the rc @ 04/30/24 16:30:12.955
  W0430 16:30:12.961910      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/30/24 16:30:18.967
  STEP: wait for the rc to be deleted @ 04/30/24 16:30:18.987
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/30/24 16:30:23.994
  STEP: Gathering metrics @ 04/30/24 16:30:54.011
  Apr 30 16:30:54.095: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 30 16:30:54.095: INFO: Deleting pod "simpletest.rc-22b7z" in namespace "gc-7156"
  Apr 30 16:30:54.124: INFO: Deleting pod "simpletest.rc-2vv5d" in namespace "gc-7156"
  Apr 30 16:30:54.147: INFO: Deleting pod "simpletest.rc-46btt" in namespace "gc-7156"
  Apr 30 16:30:54.166: INFO: Deleting pod "simpletest.rc-4dp9b" in namespace "gc-7156"
  Apr 30 16:30:54.184: INFO: Deleting pod "simpletest.rc-4k62n" in namespace "gc-7156"
  Apr 30 16:30:54.206: INFO: Deleting pod "simpletest.rc-4mnsn" in namespace "gc-7156"
  Apr 30 16:30:54.225: INFO: Deleting pod "simpletest.rc-5g47p" in namespace "gc-7156"
  Apr 30 16:30:54.258: INFO: Deleting pod "simpletest.rc-5j45h" in namespace "gc-7156"
  Apr 30 16:30:54.287: INFO: Deleting pod "simpletest.rc-5kdd7" in namespace "gc-7156"
  Apr 30 16:30:54.315: INFO: Deleting pod "simpletest.rc-5mt8l" in namespace "gc-7156"
  Apr 30 16:30:54.337: INFO: Deleting pod "simpletest.rc-5mtsg" in namespace "gc-7156"
  Apr 30 16:30:54.363: INFO: Deleting pod "simpletest.rc-5r9xx" in namespace "gc-7156"
  Apr 30 16:30:54.391: INFO: Deleting pod "simpletest.rc-5wc8c" in namespace "gc-7156"
  Apr 30 16:30:54.415: INFO: Deleting pod "simpletest.rc-6czx6" in namespace "gc-7156"
  Apr 30 16:30:54.437: INFO: Deleting pod "simpletest.rc-6ncmm" in namespace "gc-7156"
  Apr 30 16:30:54.466: INFO: Deleting pod "simpletest.rc-72qt7" in namespace "gc-7156"
  Apr 30 16:30:54.488: INFO: Deleting pod "simpletest.rc-74wx8" in namespace "gc-7156"
  Apr 30 16:30:54.523: INFO: Deleting pod "simpletest.rc-7w6fc" in namespace "gc-7156"
  Apr 30 16:30:54.544: INFO: Deleting pod "simpletest.rc-7xkps" in namespace "gc-7156"
  Apr 30 16:30:54.566: INFO: Deleting pod "simpletest.rc-8glg7" in namespace "gc-7156"
  Apr 30 16:30:54.588: INFO: Deleting pod "simpletest.rc-8ht99" in namespace "gc-7156"
  Apr 30 16:30:54.620: INFO: Deleting pod "simpletest.rc-8j52z" in namespace "gc-7156"
  Apr 30 16:30:54.647: INFO: Deleting pod "simpletest.rc-8jndl" in namespace "gc-7156"
  Apr 30 16:30:54.673: INFO: Deleting pod "simpletest.rc-8qmw8" in namespace "gc-7156"
  Apr 30 16:30:54.695: INFO: Deleting pod "simpletest.rc-8s7wl" in namespace "gc-7156"
  Apr 30 16:30:54.713: INFO: Deleting pod "simpletest.rc-99q67" in namespace "gc-7156"
  Apr 30 16:30:54.744: INFO: Deleting pod "simpletest.rc-9jwkw" in namespace "gc-7156"
  Apr 30 16:30:54.775: INFO: Deleting pod "simpletest.rc-9l6xv" in namespace "gc-7156"
  Apr 30 16:30:54.801: INFO: Deleting pod "simpletest.rc-9v77k" in namespace "gc-7156"
  Apr 30 16:30:54.821: INFO: Deleting pod "simpletest.rc-bh64b" in namespace "gc-7156"
  Apr 30 16:30:54.845: INFO: Deleting pod "simpletest.rc-bss76" in namespace "gc-7156"
  Apr 30 16:30:54.878: INFO: Deleting pod "simpletest.rc-bwxpb" in namespace "gc-7156"
  Apr 30 16:30:54.908: INFO: Deleting pod "simpletest.rc-bx44h" in namespace "gc-7156"
  Apr 30 16:30:54.934: INFO: Deleting pod "simpletest.rc-cn84c" in namespace "gc-7156"
  Apr 30 16:30:54.967: INFO: Deleting pod "simpletest.rc-cp6nj" in namespace "gc-7156"
  Apr 30 16:30:54.984: INFO: Deleting pod "simpletest.rc-ddjbq" in namespace "gc-7156"
  Apr 30 16:30:55.005: INFO: Deleting pod "simpletest.rc-dhqgp" in namespace "gc-7156"
  Apr 30 16:30:55.022: INFO: Deleting pod "simpletest.rc-dm4d5" in namespace "gc-7156"
  Apr 30 16:30:55.049: INFO: Deleting pod "simpletest.rc-dnj7s" in namespace "gc-7156"
  Apr 30 16:30:55.067: INFO: Deleting pod "simpletest.rc-dxdtz" in namespace "gc-7156"
  Apr 30 16:30:55.091: INFO: Deleting pod "simpletest.rc-fh6lr" in namespace "gc-7156"
  Apr 30 16:30:55.116: INFO: Deleting pod "simpletest.rc-fmhlq" in namespace "gc-7156"
  Apr 30 16:30:55.154: INFO: Deleting pod "simpletest.rc-frssr" in namespace "gc-7156"
  Apr 30 16:30:55.176: INFO: Deleting pod "simpletest.rc-fwclx" in namespace "gc-7156"
  Apr 30 16:30:55.194: INFO: Deleting pod "simpletest.rc-g9p2b" in namespace "gc-7156"
  Apr 30 16:30:55.217: INFO: Deleting pod "simpletest.rc-gb6nz" in namespace "gc-7156"
  Apr 30 16:30:55.240: INFO: Deleting pod "simpletest.rc-gnvb6" in namespace "gc-7156"
  Apr 30 16:30:55.258: INFO: Deleting pod "simpletest.rc-hm278" in namespace "gc-7156"
  Apr 30 16:30:55.281: INFO: Deleting pod "simpletest.rc-hrlfx" in namespace "gc-7156"
  Apr 30 16:30:55.318: INFO: Deleting pod "simpletest.rc-hsq4r" in namespace "gc-7156"
  Apr 30 16:30:55.341: INFO: Deleting pod "simpletest.rc-j9fpd" in namespace "gc-7156"
  Apr 30 16:30:55.362: INFO: Deleting pod "simpletest.rc-k4t8j" in namespace "gc-7156"
  Apr 30 16:30:55.387: INFO: Deleting pod "simpletest.rc-klkfb" in namespace "gc-7156"
  Apr 30 16:30:55.409: INFO: Deleting pod "simpletest.rc-kpxtb" in namespace "gc-7156"
  Apr 30 16:30:55.436: INFO: Deleting pod "simpletest.rc-lcwv7" in namespace "gc-7156"
  Apr 30 16:30:55.458: INFO: Deleting pod "simpletest.rc-lkvmv" in namespace "gc-7156"
  Apr 30 16:30:55.481: INFO: Deleting pod "simpletest.rc-lt6mg" in namespace "gc-7156"
  Apr 30 16:30:55.501: INFO: Deleting pod "simpletest.rc-m52lm" in namespace "gc-7156"
  Apr 30 16:30:55.518: INFO: Deleting pod "simpletest.rc-mb6c6" in namespace "gc-7156"
  Apr 30 16:30:55.535: INFO: Deleting pod "simpletest.rc-mkqqz" in namespace "gc-7156"
  Apr 30 16:30:55.563: INFO: Deleting pod "simpletest.rc-mxzn9" in namespace "gc-7156"
  Apr 30 16:30:55.586: INFO: Deleting pod "simpletest.rc-nh6kt" in namespace "gc-7156"
  Apr 30 16:30:55.607: INFO: Deleting pod "simpletest.rc-nlp9l" in namespace "gc-7156"
  Apr 30 16:30:55.622: INFO: Deleting pod "simpletest.rc-ntmhx" in namespace "gc-7156"
  Apr 30 16:30:55.643: INFO: Deleting pod "simpletest.rc-p46r5" in namespace "gc-7156"
  Apr 30 16:30:55.668: INFO: Deleting pod "simpletest.rc-pjlnl" in namespace "gc-7156"
  Apr 30 16:30:55.698: INFO: Deleting pod "simpletest.rc-pjn9f" in namespace "gc-7156"
  Apr 30 16:30:55.715: INFO: Deleting pod "simpletest.rc-pnf9t" in namespace "gc-7156"
  Apr 30 16:30:55.742: INFO: Deleting pod "simpletest.rc-q6ztj" in namespace "gc-7156"
  Apr 30 16:30:55.765: INFO: Deleting pod "simpletest.rc-qjm6t" in namespace "gc-7156"
  Apr 30 16:30:55.790: INFO: Deleting pod "simpletest.rc-r4lx6" in namespace "gc-7156"
  Apr 30 16:30:55.812: INFO: Deleting pod "simpletest.rc-r82sv" in namespace "gc-7156"
  Apr 30 16:30:55.841: INFO: Deleting pod "simpletest.rc-rdqpj" in namespace "gc-7156"
  Apr 30 16:30:55.867: INFO: Deleting pod "simpletest.rc-rgxz4" in namespace "gc-7156"
  Apr 30 16:30:55.887: INFO: Deleting pod "simpletest.rc-rqt7w" in namespace "gc-7156"
  Apr 30 16:30:55.906: INFO: Deleting pod "simpletest.rc-rvbxw" in namespace "gc-7156"
  Apr 30 16:30:55.929: INFO: Deleting pod "simpletest.rc-rzncf" in namespace "gc-7156"
  Apr 30 16:30:55.950: INFO: Deleting pod "simpletest.rc-s4flr" in namespace "gc-7156"
  Apr 30 16:30:55.969: INFO: Deleting pod "simpletest.rc-s4rqv" in namespace "gc-7156"
  Apr 30 16:30:56.000: INFO: Deleting pod "simpletest.rc-s5x5t" in namespace "gc-7156"
  Apr 30 16:30:56.018: INFO: Deleting pod "simpletest.rc-s6z2z" in namespace "gc-7156"
  Apr 30 16:30:56.042: INFO: Deleting pod "simpletest.rc-s7827" in namespace "gc-7156"
  Apr 30 16:30:56.062: INFO: Deleting pod "simpletest.rc-sccst" in namespace "gc-7156"
  Apr 30 16:30:56.083: INFO: Deleting pod "simpletest.rc-scnc8" in namespace "gc-7156"
  Apr 30 16:30:56.109: INFO: Deleting pod "simpletest.rc-sm25t" in namespace "gc-7156"
  Apr 30 16:30:56.135: INFO: Deleting pod "simpletest.rc-splnl" in namespace "gc-7156"
  Apr 30 16:30:56.165: INFO: Deleting pod "simpletest.rc-sqbzn" in namespace "gc-7156"
  Apr 30 16:30:56.192: INFO: Deleting pod "simpletest.rc-stb2z" in namespace "gc-7156"
  Apr 30 16:30:56.218: INFO: Deleting pod "simpletest.rc-svl7v" in namespace "gc-7156"
  Apr 30 16:30:56.235: INFO: Deleting pod "simpletest.rc-sw86q" in namespace "gc-7156"
  Apr 30 16:30:56.256: INFO: Deleting pod "simpletest.rc-tmrnq" in namespace "gc-7156"
  Apr 30 16:30:56.281: INFO: Deleting pod "simpletest.rc-tts9t" in namespace "gc-7156"
  Apr 30 16:30:56.325: INFO: Deleting pod "simpletest.rc-txgkg" in namespace "gc-7156"
  Apr 30 16:30:56.366: INFO: Deleting pod "simpletest.rc-v5jds" in namespace "gc-7156"
  Apr 30 16:30:56.415: INFO: Deleting pod "simpletest.rc-vjr54" in namespace "gc-7156"
  Apr 30 16:30:56.469: INFO: Deleting pod "simpletest.rc-w4xdf" in namespace "gc-7156"
  Apr 30 16:30:56.529: INFO: Deleting pod "simpletest.rc-xf7sr" in namespace "gc-7156"
  Apr 30 16:30:56.571: INFO: Deleting pod "simpletest.rc-xhkdf" in namespace "gc-7156"
  Apr 30 16:30:56.627: INFO: Deleting pod "simpletest.rc-xsrwt" in namespace "gc-7156"
  Apr 30 16:30:56.672: INFO: Deleting pod "simpletest.rc-ztnjr" in namespace "gc-7156"
  Apr 30 16:30:56.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7156" for this suite. @ 04/30/24 16:30:56.756
• [43.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/30/24 16:30:56.806
  Apr 30 16:30:56.806: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 16:30:56.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:30:56.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:30:56.846
  STEP: Creating a test headless service @ 04/30/24 16:30:56.849
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local;sleep 1; done
   @ 04/30/24 16:30:56.855
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9391.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local;sleep 1; done
   @ 04/30/24 16:30:56.855
  STEP: creating a pod to probe DNS @ 04/30/24 16:30:56.855
  STEP: submitting the pod to kubernetes @ 04/30/24 16:30:56.855
  STEP: retrieving the pod @ 04/30/24 16:31:04.904
  STEP: looking for the results for each expected name from probers @ 04/30/24 16:31:04.908
  Apr 30 16:31:04.914: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.919: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.924: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.928: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.932: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.939: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.944: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.948: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:04.948: INFO: Lookups using dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local]

  Apr 30 16:31:04.969: INFO: Pod client logs for webserver: 
  Apr 30 16:31:04.975: INFO: Pod client logs for querier: 
  Apr 30 16:31:04.982: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:31:09.915: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.919: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.923: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.927: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.930: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.934: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.937: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.941: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:09.941: INFO: Lookups using dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local]

  Apr 30 16:31:09.947: INFO: Pod client logs for webserver: 
  Apr 30 16:31:09.953: INFO: Pod client logs for querier: 
  Apr 30 16:31:09.959: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:31:14.914: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.918: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.922: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.926: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.929: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.933: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.939: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.943: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:14.943: INFO: Lookups using dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local]

  Apr 30 16:31:14.950: INFO: Pod client logs for webserver: 
  Apr 30 16:31:14.957: INFO: Pod client logs for querier: 
  Apr 30 16:31:14.963: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:31:19.914: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.918: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.921: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.925: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.928: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.932: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.935: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.938: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:19.938: INFO: Lookups using dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local]

  Apr 30 16:31:19.945: INFO: Pod client logs for webserver: 
  Apr 30 16:31:19.950: INFO: Pod client logs for querier: 
  Apr 30 16:31:19.956: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:31:24.915: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.919: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.922: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.925: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.927: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.931: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.934: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.938: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:24.938: INFO: Lookups using dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local]

  Apr 30 16:31:24.944: INFO: Pod client logs for webserver: 
  Apr 30 16:31:24.951: INFO: Pod client logs for querier: 
  Apr 30 16:31:24.957: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:31:29.914: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.920: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.924: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.928: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.932: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.935: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.939: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.943: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local from pod dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1: the server could not find the requested resource (get pods dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1)
  Apr 30 16:31:29.943: INFO: Lookups using dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9391.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9391.svc.cluster.local jessie_udp@dns-test-service-2.dns-9391.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9391.svc.cluster.local]

  Apr 30 16:31:29.949: INFO: Pod client logs for webserver: 
  Apr 30 16:31:29.956: INFO: Pod client logs for querier: 
  Apr 30 16:31:29.962: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:31:34.939: INFO: DNS probes using dns-9391/dns-test-4e73de20-3c39-4961-9f31-edbdba53ada1 succeeded

  STEP: deleting the pod @ 04/30/24 16:31:34.939
  STEP: deleting the test headless service @ 04/30/24 16:31:34.962
  Apr 30 16:31:34.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9391" for this suite. @ 04/30/24 16:31:34.995
• [38.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/30/24 16:31:35.006
  Apr 30 16:31:35.006: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename cronjob @ 04/30/24 16:31:35.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:31:35.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:31:35.032
  STEP: Creating a cronjob @ 04/30/24 16:31:35.034
  STEP: Ensuring more than one job is running at a time @ 04/30/24 16:31:35.045
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/30/24 16:33:01.05
  STEP: Removing cronjob @ 04/30/24 16:33:01.054
  Apr 30 16:33:01.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6311" for this suite. @ 04/30/24 16:33:01.067
• [86.070 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 04/30/24 16:33:01.076
  Apr 30 16:33:01.076: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 16:33:01.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:33:01.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:33:01.104
  STEP: Creating a ResourceQuota with best effort scope @ 04/30/24 16:33:01.109
  STEP: Ensuring ResourceQuota status is calculated @ 04/30/24 16:33:01.129
  STEP: Creating a ResourceQuota with not best effort scope @ 04/30/24 16:33:03.135
  STEP: Ensuring ResourceQuota status is calculated @ 04/30/24 16:33:03.142
  STEP: Creating a best-effort pod @ 04/30/24 16:33:05.15
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/30/24 16:33:05.175
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/30/24 16:33:07.18
  STEP: Deleting the pod @ 04/30/24 16:33:09.185
  STEP: Ensuring resource quota status released the pod usage @ 04/30/24 16:33:09.204
  STEP: Creating a not best-effort pod @ 04/30/24 16:33:11.208
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/30/24 16:33:11.228
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/30/24 16:33:13.234
  STEP: Deleting the pod @ 04/30/24 16:33:15.24
  STEP: Ensuring resource quota status released the pod usage @ 04/30/24 16:33:15.265
  Apr 30 16:33:17.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3597" for this suite. @ 04/30/24 16:33:17.275
• [16.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/30/24 16:33:17.288
  Apr 30 16:33:17.288: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 16:33:17.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:33:18.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:33:18.053
  STEP: Setting up server cert @ 04/30/24 16:33:18.082
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 16:33:18.705
  STEP: Deploying the webhook pod @ 04/30/24 16:33:18.715
  STEP: Wait for the deployment to be ready @ 04/30/24 16:33:18.732
  Apr 30 16:33:18.755: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 16:33:20.767
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 16:33:20.779
  Apr 30 16:33:21.779: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/30/24 16:33:21.788
  STEP: create a pod that should be denied by the webhook @ 04/30/24 16:33:21.811
  STEP: create a pod that causes the webhook to hang @ 04/30/24 16:33:21.83
  STEP: create a configmap that should be denied by the webhook @ 04/30/24 16:33:31.838
  STEP: create a configmap that should be admitted by the webhook @ 04/30/24 16:33:31.848
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/30/24 16:33:31.871
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/30/24 16:33:31.88
  STEP: create a namespace that bypass the webhook @ 04/30/24 16:33:31.885
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/30/24 16:33:31.904
  Apr 30 16:33:31.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9319" for this suite. @ 04/30/24 16:33:32.006
  STEP: Destroying namespace "webhook-markers-8173" for this suite. @ 04/30/24 16:33:32.017
  STEP: Destroying namespace "exempted-namespace-485" for this suite. @ 04/30/24 16:33:32.026
• [14.747 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/30/24 16:33:32.037
  Apr 30 16:33:32.037: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 16:33:32.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:33:32.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:33:32.067
  STEP: Creating a test headless service @ 04/30/24 16:33:32.07
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 74.2.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.2.74_udp@PTR;check="$$(dig +tcp +noall +answer +search 74.2.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.2.74_tcp@PTR;sleep 1; done
   @ 04/30/24 16:33:32.104
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 74.2.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.2.74_udp@PTR;check="$$(dig +tcp +noall +answer +search 74.2.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.2.74_tcp@PTR;sleep 1; done
   @ 04/30/24 16:33:32.104
  STEP: creating a pod to probe DNS @ 04/30/24 16:33:32.104
  STEP: submitting the pod to kubernetes @ 04/30/24 16:33:32.104
  STEP: retrieving the pod @ 04/30/24 16:33:34.149
  STEP: looking for the results for each expected name from probers @ 04/30/24 16:33:34.154
  Apr 30 16:33:34.159: INFO: Unable to read wheezy_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.165: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.175: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.180: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.202: INFO: Unable to read jessie_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.205: INFO: Unable to read jessie_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.210: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.214: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:34.229: INFO: Lookups using dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53 failed for: [wheezy_udp@dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_udp@dns-test-service.dns-1455.svc.cluster.local jessie_tcp@dns-test-service.dns-1455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local]

  Apr 30 16:33:34.248: INFO: Pod client logs for webserver: 
  Apr 30 16:33:34.254: INFO: Pod client logs for querier: 
  Apr 30 16:33:34.262: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:33:39.161: INFO: Unable to read wheezy_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.165: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.169: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.173: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.192: INFO: Unable to read jessie_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.197: INFO: Unable to read jessie_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.211: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.217: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:39.255: INFO: Lookups using dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53 failed for: [wheezy_udp@dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_udp@dns-test-service.dns-1455.svc.cluster.local jessie_tcp@dns-test-service.dns-1455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local]

  Apr 30 16:33:39.273: INFO: Pod client logs for webserver: 
  Apr 30 16:33:39.292: INFO: Pod client logs for querier: 
  Apr 30 16:33:39.299: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:33:44.159: INFO: Unable to read wheezy_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.163: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.167: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.171: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.191: INFO: Unable to read jessie_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.195: INFO: Unable to read jessie_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.199: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.203: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:44.218: INFO: Lookups using dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53 failed for: [wheezy_udp@dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_udp@dns-test-service.dns-1455.svc.cluster.local jessie_tcp@dns-test-service.dns-1455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local]

  Apr 30 16:33:44.225: INFO: Pod client logs for webserver: 
  Apr 30 16:33:44.231: INFO: Pod client logs for querier: 
  Apr 30 16:33:44.248: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:33:49.160: INFO: Unable to read wheezy_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.164: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.168: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.175: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.195: INFO: Unable to read jessie_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.200: INFO: Unable to read jessie_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.204: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.207: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:49.222: INFO: Lookups using dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53 failed for: [wheezy_udp@dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_udp@dns-test-service.dns-1455.svc.cluster.local jessie_tcp@dns-test-service.dns-1455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local]

  Apr 30 16:33:49.230: INFO: Pod client logs for webserver: 
  Apr 30 16:33:49.237: INFO: Pod client logs for querier: 
  Apr 30 16:33:49.244: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:33:54.161: INFO: Unable to read wheezy_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.165: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.168: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.172: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.189: INFO: Unable to read jessie_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.193: INFO: Unable to read jessie_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.197: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.201: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:54.217: INFO: Lookups using dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53 failed for: [wheezy_udp@dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_udp@dns-test-service.dns-1455.svc.cluster.local jessie_tcp@dns-test-service.dns-1455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local]

  Apr 30 16:33:54.224: INFO: Pod client logs for webserver: 
  Apr 30 16:33:54.231: INFO: Pod client logs for querier: 
  Apr 30 16:33:54.242: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:33:59.160: INFO: Unable to read wheezy_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.165: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.169: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.175: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.197: INFO: Unable to read jessie_udp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.202: INFO: Unable to read jessie_tcp@dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.206: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.210: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local from pod dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53: the server could not find the requested resource (get pods dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53)
  Apr 30 16:33:59.227: INFO: Lookups using dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53 failed for: [wheezy_udp@dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@dns-test-service.dns-1455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_udp@dns-test-service.dns-1455.svc.cluster.local jessie_tcp@dns-test-service.dns-1455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1455.svc.cluster.local]

  Apr 30 16:33:59.236: INFO: Pod client logs for webserver: 
  Apr 30 16:33:59.243: INFO: Pod client logs for querier: 
  Apr 30 16:33:59.249: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:34:04.220: INFO: DNS probes using dns-1455/dns-test-e856a7d9-3fdc-4b14-8dac-7fe99cea9b53 succeeded

  STEP: deleting the pod @ 04/30/24 16:34:04.22
  STEP: deleting the test service @ 04/30/24 16:34:04.251
  STEP: deleting the test headless service @ 04/30/24 16:34:04.307
  Apr 30 16:34:04.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1455" for this suite. @ 04/30/24 16:34:04.337
• [32.312 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/30/24 16:34:04.35
  Apr 30 16:34:04.350: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename daemonsets @ 04/30/24 16:34:04.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:34:04.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:34:04.377
  Apr 30 16:34:04.401: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/30/24 16:34:04.412
  Apr 30 16:34:04.416: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:34:04.416: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/30/24 16:34:04.416
  Apr 30 16:34:04.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:34:04.457: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:34:05.451: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:34:05.451: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/30/24 16:34:05.455
  Apr 30 16:34:05.477: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:34:05.477: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Apr 30 16:34:06.478: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:34:06.478: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/30/24 16:34:06.478
  Apr 30 16:34:06.495: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:34:06.495: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:34:07.494: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:34:07.494: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:34:08.495: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:34:08.495: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  Apr 30 16:34:09.499: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:34:09.499: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/30/24 16:34:09.507
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8664, will wait for the garbage collector to delete the pods @ 04/30/24 16:34:09.507
  Apr 30 16:34:09.574: INFO: Deleting DaemonSet.extensions daemon-set took: 8.549273ms
  Apr 30 16:34:09.674: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.550537ms
  Apr 30 16:34:12.479: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:34:12.479: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 30 16:34:12.482: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"200098"},"items":null}

  Apr 30 16:34:12.485: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"200098"},"items":null}

  Apr 30 16:34:12.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8664" for this suite. @ 04/30/24 16:34:12.519
• [8.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/30/24 16:34:12.53
  Apr 30 16:34:12.530: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename subpath @ 04/30/24 16:34:12.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:34:12.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:34:12.56
  STEP: Setting up data @ 04/30/24 16:34:12.563
  STEP: Creating pod pod-subpath-test-secret-rkc7 @ 04/30/24 16:34:12.575
  STEP: Creating a pod to test atomic-volume-subpath @ 04/30/24 16:34:12.575
  STEP: Saw pod success @ 04/30/24 16:34:36.671
  Apr 30 16:34:36.674: INFO: Trying to get logs from node perfermance-5 pod pod-subpath-test-secret-rkc7 container test-container-subpath-secret-rkc7: <nil>
  STEP: delete the pod @ 04/30/24 16:34:36.685
  STEP: Deleting pod pod-subpath-test-secret-rkc7 @ 04/30/24 16:34:36.708
  Apr 30 16:34:36.708: INFO: Deleting pod "pod-subpath-test-secret-rkc7" in namespace "subpath-9228"
  Apr 30 16:34:36.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9228" for this suite. @ 04/30/24 16:34:36.718
• [24.199 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/30/24 16:34:36.729
  Apr 30 16:34:36.729: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:34:36.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:34:36.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:34:36.748
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/30/24 16:34:36.751
  STEP: Saw pod success @ 04/30/24 16:34:40.778
  Apr 30 16:34:40.782: INFO: Trying to get logs from node perfermance-5 pod pod-07a3f36f-53c5-4245-a867-c5500559e198 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:34:40.79
  Apr 30 16:34:40.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3516" for this suite. @ 04/30/24 16:34:40.821
• [4.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 04/30/24 16:34:40.83
  Apr 30 16:34:40.830: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename job @ 04/30/24 16:34:40.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:34:40.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:34:40.858
  STEP: Creating a job @ 04/30/24 16:34:40.861
  STEP: Ensuring active pods == parallelism @ 04/30/24 16:34:40.869
  STEP: delete a job @ 04/30/24 16:34:42.875
  STEP: deleting Job.batch foo in namespace job-7514, will wait for the garbage collector to delete the pods @ 04/30/24 16:34:42.875
  Apr 30 16:34:42.939: INFO: Deleting Job.batch foo took: 10.416898ms
  Apr 30 16:34:43.040: INFO: Terminating Job.batch foo pods took: 100.763498ms
  STEP: Ensuring job was deleted @ 04/30/24 16:34:45.141
  Apr 30 16:34:45.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7514" for this suite. @ 04/30/24 16:34:45.564
• [4.743 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/30/24 16:34:45.575
  Apr 30 16:34:45.575: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 16:34:45.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:34:45.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:34:45.605
  Apr 30 16:34:45.618: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Apr 30 16:34:50.623: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/30/24 16:34:50.624
  Apr 30 16:34:50.624: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Apr 30 16:34:52.630: INFO: Creating deployment "test-rollover-deployment"
  Apr 30 16:34:52.644: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Apr 30 16:34:54.653: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 30 16:34:54.662: INFO: Ensure that both replica sets have 1 created replica
  Apr 30 16:34:54.668: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 30 16:34:54.685: INFO: Updating deployment test-rollover-deployment
  Apr 30 16:34:54.685: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Apr 30 16:34:56.697: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 30 16:34:56.704: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 30 16:34:56.711: INFO: all replica sets need to contain the pod-template-hash label
  Apr 30 16:34:56.711: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 30 16:34:58.725: INFO: all replica sets need to contain the pod-template-hash label
  Apr 30 16:34:58.725: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 30 16:35:00.725: INFO: all replica sets need to contain the pod-template-hash label
  Apr 30 16:35:00.725: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 30 16:35:02.720: INFO: all replica sets need to contain the pod-template-hash label
  Apr 30 16:35:02.720: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 30 16:35:04.721: INFO: all replica sets need to contain the pod-template-hash label
  Apr 30 16:35:04.721: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 34, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 34, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 30 16:35:06.721: INFO: 
  Apr 30 16:35:06.721: INFO: Ensure that both old replica sets have no replicas
  Apr 30 16:35:06.732: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8361",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50a5cd38-673e-4592-a108-d636924b7310",
      ResourceVersion: (string) (len=6) "200522",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091692,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 30 16:35:06.754: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8361",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1fa74a5-6a28-4602-a925-fdbf7e4ae1e9",
      ResourceVersion: (string) (len=6) "200511",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "50a5cd38-673e-4592-a108-d636924b7310",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 30 61 35 63 64  33 38 2d 36 37 33 65 2d  |\"50a5cd38-673e-|
              00000120  34 35 39 32 2d 61 31 30  38 2d 64 36 33 36 39 32  |4592-a108-d63692|
              00000130  34 62 37 33 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4b7310\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:35:06.755: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 30 16:35:06.755: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8361",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68dcc1be-fec2-47c5-a03e-54ce6cfb99fc",
      ResourceVersion: (string) (len=6) "200521",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "50a5cd38-673e-4592-a108-d636924b7310",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 30 61 35 63 64 33 38  2d 36 37 33 65 2d 34 35  |50a5cd38-673e-45|
              000000c0  39 32 2d 61 31 30 38 2d  64 36 33 36 39 32 34 62  |92-a108-d636924b|
              000000d0  37 33 31 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7310\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:35:06.757: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8361",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f55e5ad6-a6f6-433b-92f9-2e214d6f3a02",
      ResourceVersion: (string) (len=6) "200461",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091692,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "50a5cd38-673e-4592-a108-d636924b7310",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 30 61 35 63 64  33 38 2d 36 37 33 65 2d  |\"50a5cd38-673e-|
              00000120  34 35 39 32 2d 61 31 30  38 2d 64 36 33 36 39 32  |4592-a108-d63692|
              00000130  34 62 37 33 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4b7310\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:35:06.763: INFO: Pod "test-rollover-deployment-5d484bf7f9-7bh5n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-7bh5n",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-8361",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "647dd414-e72e-405b-9373-81642942de76",
      ResourceVersion: (string) (len=6) "200474",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "100.73.144.122/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "100.73.144.122/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dd6aef7c19446c96082013cce1721b8f8f7062bdd035e649244b49b92a4fa4a5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "a1fa74a5-6a28-4602-a925-fdbf7e4ae1e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  66 61 37 34 61 35 2d 36  |d\":\"a1fa74a5-6|
              00000090  61 32 38 2d 34 36 30 32  2d 61 39 32 35 2d 66 64  |a28-4602-a925-fd|
              000000a0  62 66 37 65 34 61 65 31  65 39 5c 22 7d 22 3a 7b  |bf7e4ae1e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 31 32 32 5c 22 7d 22  |0.73.144.122\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ns5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ns5p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850091694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=14) "100.73.144.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "100.73.144.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850091694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850091695,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://09bd3dd57a0a72d62058b88b3736575474315f9d6f3f23de4461ad65647f5b2d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 16:35:06.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8361" for this suite. @ 04/30/24 16:35:06.769
• [21.201 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/30/24 16:35:06.777
  Apr 30 16:35:06.777: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:35:06.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:35:06.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:35:06.805
  STEP: Creating the pod @ 04/30/24 16:35:06.808
  Apr 30 16:35:09.362: INFO: Successfully updated pod "annotationupdatef535b247-550a-4b1c-b51e-7d289a264732"
  Apr 30 16:35:13.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4342" for this suite. @ 04/30/24 16:35:13.392
• [6.623 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/30/24 16:35:13.4
  Apr 30 16:35:13.400: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 16:35:13.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:35:13.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:35:13.426
  STEP: Setting up server cert @ 04/30/24 16:35:13.456
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 16:35:13.994
  STEP: Deploying the webhook pod @ 04/30/24 16:35:14.009
  STEP: Wait for the deployment to be ready @ 04/30/24 16:35:14.032
  Apr 30 16:35:14.046: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/30/24 16:35:16.06
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 16:35:16.073
  Apr 30 16:35:17.074: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/30/24 16:35:17.082
  STEP: create a namespace for the webhook @ 04/30/24 16:35:17.106
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/30/24 16:35:17.125
  Apr 30 16:35:17.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9534" for this suite. @ 04/30/24 16:35:17.223
  STEP: Destroying namespace "webhook-markers-4165" for this suite. @ 04/30/24 16:35:17.237
  STEP: Destroying namespace "fail-closed-namespace-1376" for this suite. @ 04/30/24 16:35:17.246
• [3.855 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/30/24 16:35:17.257
  Apr 30 16:35:17.258: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename chunking @ 04/30/24 16:35:17.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:35:17.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:35:17.334
  STEP: creating a large number of resources @ 04/30/24 16:35:17.338
  STEP: retrieving the first page @ 04/30/24 16:35:34.967
  Apr 30 16:35:35.016: INFO: Retrieved 40/40 results with rv 201178 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/30/24 16:35:35.016
  Apr 30 16:35:55.022: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:36:15.026: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:36:35.025: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:36:55.023: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:37:15.024: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:37:35.023: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:37:55.025: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:38:15.023: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:38:35.031: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:38:55.033: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:39:15.026: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:39:35.023: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:39:55.023: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:40:15.026: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:40:35.026: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:40:55.022: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:41:15.023: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:41:35.024: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:41:55.026: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:42:15.025: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:42:35.025: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:42:55.023: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:43:15.022: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:43:35.025: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:43:55.025: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:44:15.022: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:44:35.022: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:44:55.026: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAxMTc4LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 30 16:45:15.023: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Apr 30 16:45:15.023: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/30/24 16:45:15.023
  STEP: retrieving all remaining pages @ 04/30/24 16:45:15.028
  Apr 30 16:45:15.033: INFO: Retrieved 40/40 results with rv 203244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAzMjQ0LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  Apr 30 16:45:15.037: INFO: Retrieved 40/40 results with rv 203244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAzMjQ0LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  Apr 30 16:45:15.041: INFO: Retrieved 40/40 results with rv 203244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAzMjQ0LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  Apr 30 16:45:15.044: INFO: Retrieved 40/40 results with rv 203244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAzMjQ0LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  Apr 30 16:45:15.049: INFO: Retrieved 40/40 results with rv 203244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAzMjQ0LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  Apr 30 16:45:15.053: INFO: Retrieved 40/40 results with rv 203244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAzMjQ0LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  Apr 30 16:45:15.056: INFO: Retrieved 40/40 results with rv 203244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAzMjQ0LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  Apr 30 16:45:15.061: INFO: Retrieved 40/40 results with rv 203244 and continue 
  Apr 30 16:45:15.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6026" for this suite. @ 04/30/24 16:45:15.065
• [597.816 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/30/24 16:45:15.074
  Apr 30 16:45:15.074: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 16:45:15.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:15.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:15.119
  STEP: set up a multi version CRD @ 04/30/24 16:45:15.122
  Apr 30 16:45:15.123: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: rename a version @ 04/30/24 16:45:19.373
  STEP: check the new version name is served @ 04/30/24 16:45:19.391
  STEP: check the old version name is removed @ 04/30/24 16:45:20.964
  STEP: check the other version is not changed @ 04/30/24 16:45:21.753
  Apr 30 16:45:25.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8927" for this suite. @ 04/30/24 16:45:25.281
• [10.216 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/30/24 16:45:25.291
  Apr 30 16:45:25.291: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 16:45:25.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:25.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:25.332
  Apr 30 16:45:25.335: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: creating the pod @ 04/30/24 16:45:25.336
  STEP: submitting the pod to kubernetes @ 04/30/24 16:45:25.336
  Apr 30 16:45:27.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9214" for this suite. @ 04/30/24 16:45:27.478
• [2.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/30/24 16:45:27.49
  Apr 30 16:45:27.490: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:45:27.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:27.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:27.523
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 16:45:27.528
  STEP: Saw pod success @ 04/30/24 16:45:31.569
  Apr 30 16:45:31.573: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-f513130e-b69c-4e76-8aab-ad659c64a8a1 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 16:45:31.59
  Apr 30 16:45:31.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6329" for this suite. @ 04/30/24 16:45:31.624
• [4.142 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/30/24 16:45:31.633
  Apr 30 16:45:31.633: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename runtimeclass @ 04/30/24 16:45:31.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:31.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:31.662
  Apr 30 16:45:31.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2387" for this suite. @ 04/30/24 16:45:31.683
• [0.058 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/30/24 16:45:31.692
  Apr 30 16:45:31.692: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename server-version @ 04/30/24 16:45:31.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:31.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:31.721
  STEP: Request ServerVersion @ 04/30/24 16:45:31.725
  STEP: Confirm major version @ 04/30/24 16:45:31.726
  Apr 30 16:45:31.727: INFO: Major version: 1
  STEP: Confirm minor version @ 04/30/24 16:45:31.727
  Apr 30 16:45:31.727: INFO: cleanMinorVersion: 29
  Apr 30 16:45:31.727: INFO: Minor version: 29
  Apr 30 16:45:31.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3048" for this suite. @ 04/30/24 16:45:31.733
• [0.050 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/30/24 16:45:31.742
  Apr 30 16:45:31.742: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:45:31.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:31.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:31.773
  STEP: Creating projection with secret that has name projected-secret-test-64e7b668-ffcd-446b-a7cf-52d1f1691ba4 @ 04/30/24 16:45:31.776
  STEP: Creating a pod to test consume secrets @ 04/30/24 16:45:31.784
  STEP: Saw pod success @ 04/30/24 16:45:35.814
  Apr 30 16:45:35.819: INFO: Trying to get logs from node perfermance-5 pod pod-projected-secrets-073b3543-9112-429d-ad08-3aa72cc7933e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 16:45:35.827
  Apr 30 16:45:35.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5674" for this suite. @ 04/30/24 16:45:35.855
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/30/24 16:45:35.867
  Apr 30 16:45:35.867: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svc-latency @ 04/30/24 16:45:35.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:35.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:35.896
  Apr 30 16:45:35.900: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7607 @ 04/30/24 16:45:35.901
  I0430 16:45:35.908835      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7607, replica count: 1
  I0430 16:45:36.960085      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0430 16:45:37.960770      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:45:38.076: INFO: Created: latency-svc-m4hrz
  Apr 30 16:45:38.084: INFO: Got endpoints: latency-svc-m4hrz [23.255892ms]
  Apr 30 16:45:38.102: INFO: Created: latency-svc-ftjqd
  Apr 30 16:45:38.113: INFO: Got endpoints: latency-svc-ftjqd [28.25898ms]
  Apr 30 16:45:38.114: INFO: Created: latency-svc-xtr7d
  Apr 30 16:45:38.124: INFO: Got endpoints: latency-svc-xtr7d [39.303357ms]
  Apr 30 16:45:38.128: INFO: Created: latency-svc-vqpd7
  Apr 30 16:45:38.138: INFO: Created: latency-svc-7gt8h
  Apr 30 16:45:38.148: INFO: Got endpoints: latency-svc-vqpd7 [62.944145ms]
  Apr 30 16:45:38.150: INFO: Created: latency-svc-2lz4t
  Apr 30 16:45:38.165: INFO: Got endpoints: latency-svc-7gt8h [79.550528ms]
  Apr 30 16:45:38.168: INFO: Created: latency-svc-qqhwn
  Apr 30 16:45:38.169: INFO: Got endpoints: latency-svc-2lz4t [83.56718ms]
  Apr 30 16:45:38.175: INFO: Got endpoints: latency-svc-qqhwn [90.158386ms]
  Apr 30 16:45:38.180: INFO: Created: latency-svc-lh87j
  Apr 30 16:45:38.190: INFO: Created: latency-svc-2np5l
  Apr 30 16:45:38.197: INFO: Got endpoints: latency-svc-lh87j [111.85342ms]
  Apr 30 16:45:38.202: INFO: Got endpoints: latency-svc-2np5l [116.23601ms]
  Apr 30 16:45:38.206: INFO: Created: latency-svc-j79kz
  Apr 30 16:45:38.216: INFO: Created: latency-svc-8q5v6
  Apr 30 16:45:38.227: INFO: Got endpoints: latency-svc-j79kz [141.048812ms]
  Apr 30 16:45:38.232: INFO: Created: latency-svc-xfrbk
  Apr 30 16:45:38.231: INFO: Got endpoints: latency-svc-8q5v6 [145.917829ms]
  Apr 30 16:45:38.246: INFO: Got endpoints: latency-svc-xfrbk [160.059339ms]
  Apr 30 16:45:38.247: INFO: Created: latency-svc-j7bhs
  Apr 30 16:45:38.259: INFO: Got endpoints: latency-svc-j7bhs [173.095945ms]
  Apr 30 16:45:38.260: INFO: Created: latency-svc-lspqn
  Apr 30 16:45:38.270: INFO: Got endpoints: latency-svc-lspqn [184.686999ms]
  Apr 30 16:45:38.275: INFO: Created: latency-svc-hjhfb
  Apr 30 16:45:38.294: INFO: Got endpoints: latency-svc-hjhfb [208.100058ms]
  Apr 30 16:45:38.298: INFO: Created: latency-svc-q2lws
  Apr 30 16:45:38.311: INFO: Created: latency-svc-8495v
  Apr 30 16:45:38.312: INFO: Got endpoints: latency-svc-q2lws [227.130607ms]
  Apr 30 16:45:38.329: INFO: Got endpoints: latency-svc-8495v [215.690273ms]
  Apr 30 16:45:38.333: INFO: Created: latency-svc-m4tmz
  Apr 30 16:45:38.348: INFO: Got endpoints: latency-svc-m4tmz [222.910065ms]
  Apr 30 16:45:38.349: INFO: Created: latency-svc-h6s7m
  Apr 30 16:45:38.362: INFO: Created: latency-svc-722tq
  Apr 30 16:45:38.366: INFO: Got endpoints: latency-svc-h6s7m [218.198581ms]
  Apr 30 16:45:38.376: INFO: Got endpoints: latency-svc-722tq [211.051999ms]
  Apr 30 16:45:38.376: INFO: Created: latency-svc-2xhhv
  Apr 30 16:45:38.385: INFO: Got endpoints: latency-svc-2xhhv [216.447452ms]
  Apr 30 16:45:38.392: INFO: Created: latency-svc-9jwvw
  Apr 30 16:45:38.403: INFO: Created: latency-svc-j5bmr
  Apr 30 16:45:38.404: INFO: Got endpoints: latency-svc-9jwvw [227.71497ms]
  Apr 30 16:45:38.416: INFO: Got endpoints: latency-svc-j5bmr [218.410113ms]
  Apr 30 16:45:38.494: INFO: Created: latency-svc-v9hgx
  Apr 30 16:45:38.504: INFO: Created: latency-svc-gtzzf
  Apr 30 16:45:38.505: INFO: Created: latency-svc-qpkxd
  Apr 30 16:45:38.506: INFO: Created: latency-svc-vk7mn
  Apr 30 16:45:38.507: INFO: Created: latency-svc-km97p
  Apr 30 16:45:38.508: INFO: Created: latency-svc-knfll
  Apr 30 16:45:38.508: INFO: Created: latency-svc-hg66c
  Apr 30 16:45:38.508: INFO: Created: latency-svc-rbzhn
  Apr 30 16:45:38.508: INFO: Created: latency-svc-tcd9b
  Apr 30 16:45:38.509: INFO: Created: latency-svc-dss77
  Apr 30 16:45:38.509: INFO: Created: latency-svc-jm7jj
  Apr 30 16:45:38.509: INFO: Created: latency-svc-kw9xd
  Apr 30 16:45:38.509: INFO: Created: latency-svc-kr7zn
  Apr 30 16:45:38.509: INFO: Created: latency-svc-84kl4
  Apr 30 16:45:38.509: INFO: Created: latency-svc-4tt2h
  Apr 30 16:45:38.521: INFO: Got endpoints: latency-svc-v9hgx [105.222108ms]
  Apr 30 16:45:38.522: INFO: Got endpoints: latency-svc-tcd9b [145.677291ms]
  Apr 30 16:45:38.522: INFO: Got endpoints: latency-svc-knfll [209.244126ms]
  Apr 30 16:45:38.525: INFO: Got endpoints: latency-svc-rbzhn [298.321979ms]
  Apr 30 16:45:38.531: INFO: Got endpoints: latency-svc-qpkxd [236.967982ms]
  Apr 30 16:45:38.536: INFO: Got endpoints: latency-svc-hg66c [150.86257ms]
  Apr 30 16:45:38.557: INFO: Got endpoints: latency-svc-km97p [354.967605ms]
  Apr 30 16:45:38.557: INFO: Got endpoints: latency-svc-84kl4 [191.004888ms]
  Apr 30 16:45:38.570: INFO: Got endpoints: latency-svc-dss77 [310.888797ms]
  Apr 30 16:45:38.571: INFO: Got endpoints: latency-svc-4tt2h [325.753448ms]
  Apr 30 16:45:38.572: INFO: Got endpoints: latency-svc-jm7jj [339.607636ms]
  Apr 30 16:45:38.575: INFO: Created: latency-svc-phhxt
  Apr 30 16:45:38.576: INFO: Got endpoints: latency-svc-gtzzf [228.426102ms]
  Apr 30 16:45:38.576: INFO: Got endpoints: latency-svc-vk7mn [306.026433ms]
  Apr 30 16:45:38.599: INFO: Got endpoints: latency-svc-kr7zn [195.257687ms]
  Apr 30 16:45:38.607: INFO: Got endpoints: latency-svc-phhxt [85.673944ms]
  Apr 30 16:45:38.608: INFO: Got endpoints: latency-svc-kw9xd [279.011109ms]
  Apr 30 16:45:38.609: INFO: Created: latency-svc-mg9ql
  Apr 30 16:45:38.620: INFO: Created: latency-svc-k4k5b
  Apr 30 16:45:38.620: INFO: Got endpoints: latency-svc-mg9ql [98.767688ms]
  Apr 30 16:45:38.631: INFO: Created: latency-svc-4rgfr
  Apr 30 16:45:38.637: INFO: Got endpoints: latency-svc-k4k5b [115.586982ms]
  Apr 30 16:45:38.642: INFO: Created: latency-svc-dkphh
  Apr 30 16:45:38.650: INFO: Created: latency-svc-h94zj
  Apr 30 16:45:38.666: INFO: Created: latency-svc-lscxc
  Apr 30 16:45:38.679: INFO: Created: latency-svc-zxxpk
  Apr 30 16:45:38.689: INFO: Got endpoints: latency-svc-4rgfr [164.391821ms]
  Apr 30 16:45:38.694: INFO: Created: latency-svc-vt4fr
  Apr 30 16:45:38.705: INFO: Created: latency-svc-wt54s
  Apr 30 16:45:38.715: INFO: Created: latency-svc-gndhn
  Apr 30 16:45:38.721: INFO: Created: latency-svc-v582q
  Apr 30 16:45:38.729: INFO: Created: latency-svc-n2ftd
  Apr 30 16:45:38.743: INFO: Got endpoints: latency-svc-dkphh [211.707636ms]
  Apr 30 16:45:38.745: INFO: Created: latency-svc-j8rwt
  Apr 30 16:45:38.752: INFO: Created: latency-svc-wpf62
  Apr 30 16:45:38.764: INFO: Created: latency-svc-52sp5
  Apr 30 16:45:38.773: INFO: Created: latency-svc-9crq4
  Apr 30 16:45:38.788: INFO: Got endpoints: latency-svc-h94zj [251.66847ms]
  Apr 30 16:45:38.789: INFO: Created: latency-svc-7hrmr
  Apr 30 16:45:38.797: INFO: Created: latency-svc-9mn7g
  Apr 30 16:45:38.810: INFO: Created: latency-svc-mfhmj
  Apr 30 16:45:38.820: INFO: Created: latency-svc-gnbhx
  Apr 30 16:45:38.832: INFO: Got endpoints: latency-svc-lscxc [274.499999ms]
  Apr 30 16:45:38.847: INFO: Created: latency-svc-kp7jk
  Apr 30 16:45:38.888: INFO: Got endpoints: latency-svc-zxxpk [331.650229ms]
  Apr 30 16:45:38.903: INFO: Created: latency-svc-hlvqj
  Apr 30 16:45:38.935: INFO: Got endpoints: latency-svc-vt4fr [365.527578ms]
  Apr 30 16:45:38.951: INFO: Created: latency-svc-twfzt
  Apr 30 16:45:38.988: INFO: Got endpoints: latency-svc-wt54s [415.923814ms]
  Apr 30 16:45:39.001: INFO: Created: latency-svc-8t9rp
  Apr 30 16:45:39.032: INFO: Got endpoints: latency-svc-gndhn [460.866313ms]
  Apr 30 16:45:39.052: INFO: Created: latency-svc-z5zlk
  Apr 30 16:45:39.084: INFO: Got endpoints: latency-svc-v582q [507.588737ms]
  Apr 30 16:45:39.100: INFO: Created: latency-svc-jsv6n
  Apr 30 16:45:39.134: INFO: Got endpoints: latency-svc-n2ftd [557.604384ms]
  Apr 30 16:45:39.149: INFO: Created: latency-svc-6x4kd
  Apr 30 16:45:39.186: INFO: Got endpoints: latency-svc-j8rwt [587.340238ms]
  Apr 30 16:45:39.204: INFO: Created: latency-svc-w5t7b
  Apr 30 16:45:39.236: INFO: Got endpoints: latency-svc-wpf62 [628.728215ms]
  Apr 30 16:45:39.251: INFO: Created: latency-svc-64cnf
  Apr 30 16:45:39.286: INFO: Got endpoints: latency-svc-52sp5 [677.45119ms]
  Apr 30 16:45:39.298: INFO: Created: latency-svc-dj9ch
  Apr 30 16:45:39.340: INFO: Got endpoints: latency-svc-9crq4 [719.575776ms]
  Apr 30 16:45:39.353: INFO: Created: latency-svc-xpt8x
  Apr 30 16:45:39.388: INFO: Got endpoints: latency-svc-7hrmr [750.878629ms]
  Apr 30 16:45:39.400: INFO: Created: latency-svc-p5shl
  Apr 30 16:45:39.440: INFO: Got endpoints: latency-svc-9mn7g [750.779066ms]
  Apr 30 16:45:39.458: INFO: Created: latency-svc-hpzns
  Apr 30 16:45:39.486: INFO: Got endpoints: latency-svc-mfhmj [743.207666ms]
  Apr 30 16:45:39.502: INFO: Created: latency-svc-fp8mm
  Apr 30 16:45:39.539: INFO: Got endpoints: latency-svc-gnbhx [750.64589ms]
  Apr 30 16:45:39.558: INFO: Created: latency-svc-qhs4q
  Apr 30 16:45:39.585: INFO: Got endpoints: latency-svc-kp7jk [753.560833ms]
  Apr 30 16:45:39.601: INFO: Created: latency-svc-wj78v
  Apr 30 16:45:39.636: INFO: Got endpoints: latency-svc-hlvqj [747.649965ms]
  Apr 30 16:45:39.649: INFO: Created: latency-svc-j6hrb
  Apr 30 16:45:39.682: INFO: Got endpoints: latency-svc-twfzt [746.724641ms]
  Apr 30 16:45:39.699: INFO: Created: latency-svc-zhggf
  Apr 30 16:45:39.736: INFO: Got endpoints: latency-svc-8t9rp [747.774301ms]
  Apr 30 16:45:39.750: INFO: Created: latency-svc-xj9ls
  Apr 30 16:45:39.787: INFO: Got endpoints: latency-svc-z5zlk [754.35816ms]
  Apr 30 16:45:39.804: INFO: Created: latency-svc-fpxbm
  Apr 30 16:45:39.833: INFO: Got endpoints: latency-svc-jsv6n [749.126406ms]
  Apr 30 16:45:39.853: INFO: Created: latency-svc-pjpf5
  Apr 30 16:45:39.882: INFO: Got endpoints: latency-svc-6x4kd [747.968463ms]
  Apr 30 16:45:39.896: INFO: Created: latency-svc-5kj9m
  Apr 30 16:45:39.935: INFO: Got endpoints: latency-svc-w5t7b [748.223309ms]
  Apr 30 16:45:39.949: INFO: Created: latency-svc-qqkz5
  Apr 30 16:45:39.989: INFO: Got endpoints: latency-svc-64cnf [752.400663ms]
  Apr 30 16:45:40.002: INFO: Created: latency-svc-2qbm8
  Apr 30 16:45:40.038: INFO: Got endpoints: latency-svc-dj9ch [751.658856ms]
  Apr 30 16:45:40.051: INFO: Created: latency-svc-b4st8
  Apr 30 16:45:40.086: INFO: Got endpoints: latency-svc-xpt8x [746.049018ms]
  Apr 30 16:45:40.107: INFO: Created: latency-svc-89dqq
  Apr 30 16:45:40.134: INFO: Got endpoints: latency-svc-p5shl [745.342573ms]
  Apr 30 16:45:40.151: INFO: Created: latency-svc-x75bm
  Apr 30 16:45:40.186: INFO: Got endpoints: latency-svc-hpzns [745.471545ms]
  Apr 30 16:45:40.205: INFO: Created: latency-svc-n5jjl
  Apr 30 16:45:40.239: INFO: Got endpoints: latency-svc-fp8mm [753.202145ms]
  Apr 30 16:45:40.254: INFO: Created: latency-svc-shpbd
  Apr 30 16:45:40.290: INFO: Got endpoints: latency-svc-qhs4q [751.460394ms]
  Apr 30 16:45:40.304: INFO: Created: latency-svc-fndj4
  Apr 30 16:45:40.335: INFO: Got endpoints: latency-svc-wj78v [749.60333ms]
  Apr 30 16:45:40.357: INFO: Created: latency-svc-27ms8
  Apr 30 16:45:40.383: INFO: Got endpoints: latency-svc-j6hrb [746.465579ms]
  Apr 30 16:45:40.404: INFO: Created: latency-svc-t79gf
  Apr 30 16:45:40.433: INFO: Got endpoints: latency-svc-zhggf [750.539095ms]
  Apr 30 16:45:40.451: INFO: Created: latency-svc-njkcn
  Apr 30 16:45:40.488: INFO: Got endpoints: latency-svc-xj9ls [752.346102ms]
  Apr 30 16:45:40.504: INFO: Created: latency-svc-7t2cw
  Apr 30 16:45:40.531: INFO: Got endpoints: latency-svc-fpxbm [744.275874ms]
  Apr 30 16:45:40.544: INFO: Created: latency-svc-zxwqt
  Apr 30 16:45:40.587: INFO: Got endpoints: latency-svc-pjpf5 [753.681475ms]
  Apr 30 16:45:40.601: INFO: Created: latency-svc-r92qx
  Apr 30 16:45:40.636: INFO: Got endpoints: latency-svc-5kj9m [753.827582ms]
  Apr 30 16:45:40.657: INFO: Created: latency-svc-nkh2k
  Apr 30 16:45:40.682: INFO: Got endpoints: latency-svc-qqkz5 [747.374738ms]
  Apr 30 16:45:40.702: INFO: Created: latency-svc-8v2ks
  Apr 30 16:45:40.732: INFO: Got endpoints: latency-svc-2qbm8 [743.313254ms]
  Apr 30 16:45:40.746: INFO: Created: latency-svc-xgvlp
  Apr 30 16:45:40.786: INFO: Got endpoints: latency-svc-b4st8 [747.842335ms]
  Apr 30 16:45:40.803: INFO: Created: latency-svc-wnpql
  Apr 30 16:45:40.846: INFO: Got endpoints: latency-svc-89dqq [759.417003ms]
  Apr 30 16:45:40.862: INFO: Created: latency-svc-hmrfm
  Apr 30 16:45:40.885: INFO: Got endpoints: latency-svc-x75bm [750.816843ms]
  Apr 30 16:45:40.905: INFO: Created: latency-svc-9lz7m
  Apr 30 16:45:40.930: INFO: Got endpoints: latency-svc-n5jjl [743.703459ms]
  Apr 30 16:45:40.945: INFO: Created: latency-svc-zs2qm
  Apr 30 16:45:40.983: INFO: Got endpoints: latency-svc-shpbd [744.157276ms]
  Apr 30 16:45:40.997: INFO: Created: latency-svc-gc7kq
  Apr 30 16:45:41.034: INFO: Got endpoints: latency-svc-fndj4 [743.024044ms]
  Apr 30 16:45:41.051: INFO: Created: latency-svc-kfsw4
  Apr 30 16:45:41.085: INFO: Got endpoints: latency-svc-27ms8 [749.645909ms]
  Apr 30 16:45:41.102: INFO: Created: latency-svc-ckbzh
  Apr 30 16:45:41.136: INFO: Got endpoints: latency-svc-t79gf [753.608267ms]
  Apr 30 16:45:41.156: INFO: Created: latency-svc-bljkf
  Apr 30 16:45:41.183: INFO: Got endpoints: latency-svc-njkcn [750.341333ms]
  Apr 30 16:45:41.201: INFO: Created: latency-svc-58g9d
  Apr 30 16:45:41.232: INFO: Got endpoints: latency-svc-7t2cw [744.077066ms]
  Apr 30 16:45:41.250: INFO: Created: latency-svc-qn99j
  Apr 30 16:45:41.285: INFO: Got endpoints: latency-svc-zxwqt [753.183121ms]
  Apr 30 16:45:41.299: INFO: Created: latency-svc-n8qxj
  Apr 30 16:45:41.334: INFO: Got endpoints: latency-svc-r92qx [747.49275ms]
  Apr 30 16:45:41.357: INFO: Created: latency-svc-8qrmd
  Apr 30 16:45:41.384: INFO: Got endpoints: latency-svc-nkh2k [747.14487ms]
  Apr 30 16:45:41.395: INFO: Created: latency-svc-7zv78
  Apr 30 16:45:41.440: INFO: Got endpoints: latency-svc-8v2ks [757.798562ms]
  Apr 30 16:45:41.458: INFO: Created: latency-svc-c5gkd
  Apr 30 16:45:41.485: INFO: Got endpoints: latency-svc-xgvlp [752.338416ms]
  Apr 30 16:45:41.501: INFO: Created: latency-svc-zkfmc
  Apr 30 16:45:41.535: INFO: Got endpoints: latency-svc-wnpql [748.306566ms]
  Apr 30 16:45:41.550: INFO: Created: latency-svc-7tr6l
  Apr 30 16:45:41.587: INFO: Got endpoints: latency-svc-hmrfm [741.189324ms]
  Apr 30 16:45:41.607: INFO: Created: latency-svc-zk6sp
  Apr 30 16:45:41.634: INFO: Got endpoints: latency-svc-9lz7m [748.367664ms]
  Apr 30 16:45:41.649: INFO: Created: latency-svc-6dd7q
  Apr 30 16:45:41.684: INFO: Got endpoints: latency-svc-zs2qm [753.561866ms]
  Apr 30 16:45:41.711: INFO: Created: latency-svc-jq4w5
  Apr 30 16:45:41.733: INFO: Got endpoints: latency-svc-gc7kq [749.771637ms]
  Apr 30 16:45:41.749: INFO: Created: latency-svc-x7x26
  Apr 30 16:45:41.784: INFO: Got endpoints: latency-svc-kfsw4 [750.230713ms]
  Apr 30 16:45:41.797: INFO: Created: latency-svc-m4tlr
  Apr 30 16:45:41.835: INFO: Got endpoints: latency-svc-ckbzh [750.194097ms]
  Apr 30 16:45:41.849: INFO: Created: latency-svc-j2vdb
  Apr 30 16:45:41.886: INFO: Got endpoints: latency-svc-bljkf [749.181221ms]
  Apr 30 16:45:41.897: INFO: Created: latency-svc-6hc6r
  Apr 30 16:45:41.937: INFO: Got endpoints: latency-svc-58g9d [753.462206ms]
  Apr 30 16:45:41.951: INFO: Created: latency-svc-zvljb
  Apr 30 16:45:41.985: INFO: Got endpoints: latency-svc-qn99j [752.147671ms]
  Apr 30 16:45:42.000: INFO: Created: latency-svc-tr7h5
  Apr 30 16:45:42.033: INFO: Got endpoints: latency-svc-n8qxj [748.320393ms]
  Apr 30 16:45:42.049: INFO: Created: latency-svc-hlkjs
  Apr 30 16:45:42.086: INFO: Got endpoints: latency-svc-8qrmd [751.882135ms]
  Apr 30 16:45:42.098: INFO: Created: latency-svc-hzzrm
  Apr 30 16:45:42.133: INFO: Got endpoints: latency-svc-7zv78 [749.930209ms]
  Apr 30 16:45:42.149: INFO: Created: latency-svc-jv47w
  Apr 30 16:45:42.186: INFO: Got endpoints: latency-svc-c5gkd [746.155216ms]
  Apr 30 16:45:42.201: INFO: Created: latency-svc-v7dpv
  Apr 30 16:45:42.238: INFO: Got endpoints: latency-svc-zkfmc [752.817204ms]
  Apr 30 16:45:42.251: INFO: Created: latency-svc-z42jn
  Apr 30 16:45:42.282: INFO: Got endpoints: latency-svc-7tr6l [747.54178ms]
  Apr 30 16:45:42.305: INFO: Created: latency-svc-qxnfb
  Apr 30 16:45:42.332: INFO: Got endpoints: latency-svc-zk6sp [744.427149ms]
  Apr 30 16:45:42.349: INFO: Created: latency-svc-l6qkr
  Apr 30 16:45:42.383: INFO: Got endpoints: latency-svc-6dd7q [749.250929ms]
  Apr 30 16:45:42.396: INFO: Created: latency-svc-zvz9w
  Apr 30 16:45:42.439: INFO: Got endpoints: latency-svc-jq4w5 [755.408431ms]
  Apr 30 16:45:42.455: INFO: Created: latency-svc-wxwnv
  Apr 30 16:45:42.490: INFO: Got endpoints: latency-svc-x7x26 [757.18689ms]
  Apr 30 16:45:42.504: INFO: Created: latency-svc-xsk4x
  Apr 30 16:45:42.536: INFO: Got endpoints: latency-svc-m4tlr [752.432182ms]
  Apr 30 16:45:42.557: INFO: Created: latency-svc-rstfs
  Apr 30 16:45:42.582: INFO: Got endpoints: latency-svc-j2vdb [747.072298ms]
  Apr 30 16:45:42.602: INFO: Created: latency-svc-r94m2
  Apr 30 16:45:42.634: INFO: Got endpoints: latency-svc-6hc6r [747.964958ms]
  Apr 30 16:45:42.648: INFO: Created: latency-svc-5gw82
  Apr 30 16:45:42.687: INFO: Got endpoints: latency-svc-zvljb [750.341939ms]
  Apr 30 16:45:42.702: INFO: Created: latency-svc-4ppzl
  Apr 30 16:45:42.734: INFO: Got endpoints: latency-svc-tr7h5 [749.644156ms]
  Apr 30 16:45:42.748: INFO: Created: latency-svc-7r2kr
  Apr 30 16:45:42.788: INFO: Got endpoints: latency-svc-hlkjs [754.4772ms]
  Apr 30 16:45:42.800: INFO: Created: latency-svc-qvmcb
  Apr 30 16:45:42.839: INFO: Got endpoints: latency-svc-hzzrm [752.647191ms]
  Apr 30 16:45:42.853: INFO: Created: latency-svc-pgbs4
  Apr 30 16:45:42.885: INFO: Got endpoints: latency-svc-jv47w [751.228768ms]
  Apr 30 16:45:42.902: INFO: Created: latency-svc-b4tms
  Apr 30 16:45:42.934: INFO: Got endpoints: latency-svc-v7dpv [747.234675ms]
  Apr 30 16:45:42.958: INFO: Created: latency-svc-g84fv
  Apr 30 16:45:42.984: INFO: Got endpoints: latency-svc-z42jn [746.658896ms]
  Apr 30 16:45:43.001: INFO: Created: latency-svc-9lwnc
  Apr 30 16:45:43.035: INFO: Got endpoints: latency-svc-qxnfb [752.712431ms]
  Apr 30 16:45:43.046: INFO: Created: latency-svc-vbrp9
  Apr 30 16:45:43.088: INFO: Got endpoints: latency-svc-l6qkr [755.579951ms]
  Apr 30 16:45:43.100: INFO: Created: latency-svc-mcvcm
  Apr 30 16:45:43.140: INFO: Got endpoints: latency-svc-zvz9w [756.620497ms]
  Apr 30 16:45:43.152: INFO: Created: latency-svc-2gf5n
  Apr 30 16:45:43.189: INFO: Got endpoints: latency-svc-wxwnv [749.890367ms]
  Apr 30 16:45:43.203: INFO: Created: latency-svc-v85k8
  Apr 30 16:45:43.240: INFO: Got endpoints: latency-svc-xsk4x [749.26322ms]
  Apr 30 16:45:43.254: INFO: Created: latency-svc-crgfv
  Apr 30 16:45:43.290: INFO: Got endpoints: latency-svc-rstfs [753.95631ms]
  Apr 30 16:45:43.304: INFO: Created: latency-svc-h6tcx
  Apr 30 16:45:43.338: INFO: Got endpoints: latency-svc-r94m2 [755.029464ms]
  Apr 30 16:45:43.350: INFO: Created: latency-svc-4w782
  Apr 30 16:45:43.383: INFO: Got endpoints: latency-svc-5gw82 [749.560837ms]
  Apr 30 16:45:43.401: INFO: Created: latency-svc-dhtz5
  Apr 30 16:45:43.433: INFO: Got endpoints: latency-svc-4ppzl [746.432227ms]
  Apr 30 16:45:43.449: INFO: Created: latency-svc-5ngqx
  Apr 30 16:45:43.483: INFO: Got endpoints: latency-svc-7r2kr [749.073526ms]
  Apr 30 16:45:43.496: INFO: Created: latency-svc-dj9dw
  Apr 30 16:45:43.534: INFO: Got endpoints: latency-svc-qvmcb [746.563689ms]
  Apr 30 16:45:43.550: INFO: Created: latency-svc-tb8mx
  Apr 30 16:45:43.587: INFO: Got endpoints: latency-svc-pgbs4 [747.366497ms]
  Apr 30 16:45:43.599: INFO: Created: latency-svc-bb2gv
  Apr 30 16:45:43.638: INFO: Got endpoints: latency-svc-b4tms [752.723748ms]
  Apr 30 16:45:43.651: INFO: Created: latency-svc-7vzjr
  Apr 30 16:45:43.689: INFO: Got endpoints: latency-svc-g84fv [754.460117ms]
  Apr 30 16:45:43.709: INFO: Created: latency-svc-dq9sf
  Apr 30 16:45:43.742: INFO: Got endpoints: latency-svc-9lwnc [757.753126ms]
  Apr 30 16:45:43.759: INFO: Created: latency-svc-zv8xr
  Apr 30 16:45:43.785: INFO: Got endpoints: latency-svc-vbrp9 [750.427421ms]
  Apr 30 16:45:43.803: INFO: Created: latency-svc-nbfv6
  Apr 30 16:45:43.845: INFO: Got endpoints: latency-svc-mcvcm [757.014243ms]
  Apr 30 16:45:43.867: INFO: Created: latency-svc-qcqbz
  Apr 30 16:45:43.886: INFO: Got endpoints: latency-svc-2gf5n [745.462259ms]
  Apr 30 16:45:43.906: INFO: Created: latency-svc-psk84
  Apr 30 16:45:43.937: INFO: Got endpoints: latency-svc-v85k8 [747.344999ms]
  Apr 30 16:45:43.951: INFO: Created: latency-svc-g65gk
  Apr 30 16:45:43.991: INFO: Got endpoints: latency-svc-crgfv [750.904632ms]
  Apr 30 16:45:44.016: INFO: Created: latency-svc-zqcvm
  Apr 30 16:45:44.042: INFO: Got endpoints: latency-svc-h6tcx [751.399263ms]
  Apr 30 16:45:44.094: INFO: Got endpoints: latency-svc-4w782 [756.248816ms]
  Apr 30 16:45:44.100: INFO: Created: latency-svc-fhlr7
  Apr 30 16:45:44.116: INFO: Created: latency-svc-zpbcz
  Apr 30 16:45:44.133: INFO: Got endpoints: latency-svc-dhtz5 [749.72328ms]
  Apr 30 16:45:44.146: INFO: Created: latency-svc-z6bzm
  Apr 30 16:45:44.184: INFO: Got endpoints: latency-svc-5ngqx [750.404138ms]
  Apr 30 16:45:44.199: INFO: Created: latency-svc-6ds8f
  Apr 30 16:45:44.237: INFO: Got endpoints: latency-svc-dj9dw [753.896343ms]
  Apr 30 16:45:44.254: INFO: Created: latency-svc-fxdgx
  Apr 30 16:45:44.290: INFO: Got endpoints: latency-svc-tb8mx [756.120029ms]
  Apr 30 16:45:44.305: INFO: Created: latency-svc-bdxvq
  Apr 30 16:45:44.337: INFO: Got endpoints: latency-svc-bb2gv [750.181711ms]
  Apr 30 16:45:44.351: INFO: Created: latency-svc-k8lth
  Apr 30 16:45:44.386: INFO: Got endpoints: latency-svc-7vzjr [747.785428ms]
  Apr 30 16:45:44.402: INFO: Created: latency-svc-c8rqv
  Apr 30 16:45:44.437: INFO: Got endpoints: latency-svc-dq9sf [748.260185ms]
  Apr 30 16:45:44.453: INFO: Created: latency-svc-l8hwm
  Apr 30 16:45:44.482: INFO: Got endpoints: latency-svc-zv8xr [740.094268ms]
  Apr 30 16:45:44.495: INFO: Created: latency-svc-p8nv2
  Apr 30 16:45:44.537: INFO: Got endpoints: latency-svc-nbfv6 [751.40805ms]
  Apr 30 16:45:44.550: INFO: Created: latency-svc-f4zwg
  Apr 30 16:45:44.584: INFO: Got endpoints: latency-svc-qcqbz [739.369439ms]
  Apr 30 16:45:44.602: INFO: Created: latency-svc-4sp5t
  Apr 30 16:45:44.648: INFO: Got endpoints: latency-svc-psk84 [762.535003ms]
  Apr 30 16:45:44.662: INFO: Created: latency-svc-t6kqw
  Apr 30 16:45:44.682: INFO: Got endpoints: latency-svc-g65gk [744.829787ms]
  Apr 30 16:45:44.698: INFO: Created: latency-svc-rgffq
  Apr 30 16:45:44.735: INFO: Got endpoints: latency-svc-zqcvm [744.579289ms]
  Apr 30 16:45:44.756: INFO: Created: latency-svc-6xqcm
  Apr 30 16:45:44.784: INFO: Got endpoints: latency-svc-fhlr7 [741.240506ms]
  Apr 30 16:45:44.797: INFO: Created: latency-svc-ghj56
  Apr 30 16:45:44.831: INFO: Got endpoints: latency-svc-zpbcz [736.126206ms]
  Apr 30 16:45:44.844: INFO: Created: latency-svc-28dms
  Apr 30 16:45:44.885: INFO: Got endpoints: latency-svc-z6bzm [752.199211ms]
  Apr 30 16:45:44.898: INFO: Created: latency-svc-bmg2h
  Apr 30 16:45:44.933: INFO: Got endpoints: latency-svc-6ds8f [749.311719ms]
  Apr 30 16:45:44.951: INFO: Created: latency-svc-hdp6v
  Apr 30 16:45:44.985: INFO: Got endpoints: latency-svc-fxdgx [747.528461ms]
  Apr 30 16:45:45.004: INFO: Created: latency-svc-zq8s8
  Apr 30 16:45:45.032: INFO: Got endpoints: latency-svc-bdxvq [741.291174ms]
  Apr 30 16:45:45.046: INFO: Created: latency-svc-8fdnr
  Apr 30 16:45:45.092: INFO: Got endpoints: latency-svc-k8lth [754.833501ms]
  Apr 30 16:45:45.109: INFO: Created: latency-svc-gzpvh
  Apr 30 16:45:45.137: INFO: Got endpoints: latency-svc-c8rqv [751.328778ms]
  Apr 30 16:45:45.153: INFO: Created: latency-svc-xr6s5
  Apr 30 16:45:45.190: INFO: Got endpoints: latency-svc-l8hwm [753.103116ms]
  Apr 30 16:45:45.208: INFO: Created: latency-svc-klts6
  Apr 30 16:45:45.236: INFO: Got endpoints: latency-svc-p8nv2 [753.27029ms]
  Apr 30 16:45:45.248: INFO: Created: latency-svc-66glf
  Apr 30 16:45:45.281: INFO: Got endpoints: latency-svc-f4zwg [744.611802ms]
  Apr 30 16:45:45.299: INFO: Created: latency-svc-74cfl
  Apr 30 16:45:45.334: INFO: Got endpoints: latency-svc-4sp5t [749.053607ms]
  Apr 30 16:45:45.347: INFO: Created: latency-svc-zzdqh
  Apr 30 16:45:45.389: INFO: Got endpoints: latency-svc-t6kqw [740.741855ms]
  Apr 30 16:45:45.402: INFO: Created: latency-svc-8r8gq
  Apr 30 16:45:45.434: INFO: Got endpoints: latency-svc-rgffq [752.143048ms]
  Apr 30 16:45:45.448: INFO: Created: latency-svc-m2trj
  Apr 30 16:45:45.484: INFO: Got endpoints: latency-svc-6xqcm [748.456561ms]
  Apr 30 16:45:45.500: INFO: Created: latency-svc-mmpj8
  Apr 30 16:45:45.534: INFO: Got endpoints: latency-svc-ghj56 [750.377196ms]
  Apr 30 16:45:45.557: INFO: Created: latency-svc-9ggk9
  Apr 30 16:45:45.586: INFO: Got endpoints: latency-svc-28dms [755.238064ms]
  Apr 30 16:45:45.604: INFO: Created: latency-svc-ncgp7
  Apr 30 16:45:45.631: INFO: Got endpoints: latency-svc-bmg2h [745.678757ms]
  Apr 30 16:45:45.650: INFO: Created: latency-svc-mx2kg
  Apr 30 16:45:45.690: INFO: Got endpoints: latency-svc-hdp6v [756.174632ms]
  Apr 30 16:45:45.704: INFO: Created: latency-svc-hf669
  Apr 30 16:45:45.737: INFO: Got endpoints: latency-svc-zq8s8 [752.058274ms]
  Apr 30 16:45:45.756: INFO: Created: latency-svc-kvr5v
  Apr 30 16:45:45.786: INFO: Got endpoints: latency-svc-8fdnr [753.557265ms]
  Apr 30 16:45:45.801: INFO: Created: latency-svc-xnv8n
  Apr 30 16:45:45.836: INFO: Got endpoints: latency-svc-gzpvh [743.88841ms]
  Apr 30 16:45:45.851: INFO: Created: latency-svc-bjc9f
  Apr 30 16:45:45.887: INFO: Got endpoints: latency-svc-xr6s5 [749.189659ms]
  Apr 30 16:45:45.898: INFO: Created: latency-svc-pjz2z
  Apr 30 16:45:45.931: INFO: Got endpoints: latency-svc-klts6 [741.114317ms]
  Apr 30 16:45:45.984: INFO: Got endpoints: latency-svc-66glf [748.262709ms]
  Apr 30 16:45:46.035: INFO: Got endpoints: latency-svc-74cfl [752.992206ms]
  Apr 30 16:45:46.088: INFO: Got endpoints: latency-svc-zzdqh [754.03026ms]
  Apr 30 16:45:46.137: INFO: Got endpoints: latency-svc-8r8gq [747.95004ms]
  Apr 30 16:45:46.183: INFO: Got endpoints: latency-svc-m2trj [747.998734ms]
  Apr 30 16:45:46.234: INFO: Got endpoints: latency-svc-mmpj8 [750.208449ms]
  Apr 30 16:45:46.284: INFO: Got endpoints: latency-svc-9ggk9 [749.696722ms]
  Apr 30 16:45:46.336: INFO: Got endpoints: latency-svc-ncgp7 [749.546992ms]
  Apr 30 16:45:46.382: INFO: Got endpoints: latency-svc-mx2kg [750.788294ms]
  Apr 30 16:45:46.436: INFO: Got endpoints: latency-svc-hf669 [746.278772ms]
  Apr 30 16:45:46.481: INFO: Got endpoints: latency-svc-kvr5v [744.226278ms]
  Apr 30 16:45:46.536: INFO: Got endpoints: latency-svc-xnv8n [750.220517ms]
  Apr 30 16:45:46.585: INFO: Got endpoints: latency-svc-bjc9f [749.240118ms]
  Apr 30 16:45:46.636: INFO: Got endpoints: latency-svc-pjz2z [748.955856ms]
  Apr 30 16:45:46.636: INFO: Latencies: [28.25898ms 39.303357ms 62.944145ms 79.550528ms 83.56718ms 85.673944ms 90.158386ms 98.767688ms 105.222108ms 111.85342ms 115.586982ms 116.23601ms 141.048812ms 145.677291ms 145.917829ms 150.86257ms 160.059339ms 164.391821ms 173.095945ms 184.686999ms 191.004888ms 195.257687ms 208.100058ms 209.244126ms 211.051999ms 211.707636ms 215.690273ms 216.447452ms 218.198581ms 218.410113ms 222.910065ms 227.130607ms 227.71497ms 228.426102ms 236.967982ms 251.66847ms 274.499999ms 279.011109ms 298.321979ms 306.026433ms 310.888797ms 325.753448ms 331.650229ms 339.607636ms 354.967605ms 365.527578ms 415.923814ms 460.866313ms 507.588737ms 557.604384ms 587.340238ms 628.728215ms 677.45119ms 719.575776ms 736.126206ms 739.369439ms 740.094268ms 740.741855ms 741.114317ms 741.189324ms 741.240506ms 741.291174ms 743.024044ms 743.207666ms 743.313254ms 743.703459ms 743.88841ms 744.077066ms 744.157276ms 744.226278ms 744.275874ms 744.427149ms 744.579289ms 744.611802ms 744.829787ms 745.342573ms 745.462259ms 745.471545ms 745.678757ms 746.049018ms 746.155216ms 746.278772ms 746.432227ms 746.465579ms 746.563689ms 746.658896ms 746.724641ms 747.072298ms 747.14487ms 747.234675ms 747.344999ms 747.366497ms 747.374738ms 747.49275ms 747.528461ms 747.54178ms 747.649965ms 747.774301ms 747.785428ms 747.842335ms 747.95004ms 747.964958ms 747.968463ms 747.998734ms 748.223309ms 748.260185ms 748.262709ms 748.306566ms 748.320393ms 748.367664ms 748.456561ms 748.955856ms 749.053607ms 749.073526ms 749.126406ms 749.181221ms 749.189659ms 749.240118ms 749.250929ms 749.26322ms 749.311719ms 749.546992ms 749.560837ms 749.60333ms 749.644156ms 749.645909ms 749.696722ms 749.72328ms 749.771637ms 749.890367ms 749.930209ms 750.181711ms 750.194097ms 750.208449ms 750.220517ms 750.230713ms 750.341333ms 750.341939ms 750.377196ms 750.404138ms 750.427421ms 750.539095ms 750.64589ms 750.779066ms 750.788294ms 750.816843ms 750.878629ms 750.904632ms 751.228768ms 751.328778ms 751.399263ms 751.40805ms 751.460394ms 751.658856ms 751.882135ms 752.058274ms 752.143048ms 752.147671ms 752.199211ms 752.338416ms 752.346102ms 752.400663ms 752.432182ms 752.647191ms 752.712431ms 752.723748ms 752.817204ms 752.992206ms 753.103116ms 753.183121ms 753.202145ms 753.27029ms 753.462206ms 753.557265ms 753.560833ms 753.561866ms 753.608267ms 753.681475ms 753.827582ms 753.896343ms 753.95631ms 754.03026ms 754.35816ms 754.460117ms 754.4772ms 754.833501ms 755.029464ms 755.238064ms 755.408431ms 755.579951ms 756.120029ms 756.174632ms 756.248816ms 756.620497ms 757.014243ms 757.18689ms 757.753126ms 757.798562ms 759.417003ms 762.535003ms]
  Apr 30 16:45:46.637: INFO: 50 %ile: 747.95004ms
  Apr 30 16:45:46.637: INFO: 90 %ile: 753.95631ms
  Apr 30 16:45:46.637: INFO: 99 %ile: 759.417003ms
  Apr 30 16:45:46.638: INFO: Total sample count: 200
  Apr 30 16:45:46.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7607" for this suite. @ 04/30/24 16:45:46.647
• [10.791 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/30/24 16:45:46.662
  Apr 30 16:45:46.662: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:45:46.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:46.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:46.695
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 16:45:46.699
  STEP: Saw pod success @ 04/30/24 16:45:50.738
  Apr 30 16:45:50.742: INFO: Trying to get logs from node perfermance-4 pod downwardapi-volume-bb10a111-e8f0-4dc4-b438-61bf4b73757f container client-container: <nil>
  STEP: delete the pod @ 04/30/24 16:45:50.761
  Apr 30 16:45:50.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7522" for this suite. @ 04/30/24 16:45:50.79
• [4.137 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/30/24 16:45:50.799
  Apr 30 16:45:50.799: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 16:45:50.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:45:50.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:45:50.827
  STEP: Creating a test externalName service @ 04/30/24 16:45:50.832
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8766.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local; sleep 1; done
   @ 04/30/24 16:45:50.842
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8766.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local; sleep 1; done
   @ 04/30/24 16:45:50.842
  STEP: creating a pod to probe DNS @ 04/30/24 16:45:50.842
  STEP: submitting the pod to kubernetes @ 04/30/24 16:45:50.842
  STEP: retrieving the pod @ 04/30/24 16:45:52.88
  STEP: looking for the results for each expected name from probers @ 04/30/24 16:45:52.887
  Apr 30 16:45:52.901: INFO: DNS probes using dns-test-3b69ee39-54a6-4393-a920-8196a3853163 succeeded

  STEP: changing the externalName to bar.example.com @ 04/30/24 16:45:52.902
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8766.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local; sleep 1; done
   @ 04/30/24 16:45:52.919
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8766.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local; sleep 1; done
   @ 04/30/24 16:45:52.919
  STEP: creating a second pod to probe DNS @ 04/30/24 16:45:52.92
  STEP: submitting the pod to kubernetes @ 04/30/24 16:45:52.92
  STEP: retrieving the pod @ 04/30/24 16:45:56.946
  STEP: looking for the results for each expected name from probers @ 04/30/24 16:45:56.95
  Apr 30 16:45:56.957: INFO: File wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:45:56.962: INFO: File jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:45:56.963: INFO: Lookups using dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a failed for: [wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local]

  Apr 30 16:45:56.973: INFO: Pod client logs for webserver: 
  Apr 30 16:45:56.981: INFO: Pod client logs for querier: 
  Apr 30 16:45:56.989: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:46:01.961: INFO: File wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:01.965: INFO: File jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:01.965: INFO: Lookups using dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a failed for: [wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local]

  Apr 30 16:46:01.971: INFO: Pod client logs for webserver: 
  Apr 30 16:46:01.978: INFO: Pod client logs for querier: 
  Apr 30 16:46:01.983: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:46:06.956: INFO: File wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:06.959: INFO: File jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:06.959: INFO: Lookups using dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a failed for: [wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local]

  Apr 30 16:46:06.965: INFO: Pod client logs for webserver: 
  Apr 30 16:46:06.970: INFO: Pod client logs for querier: 
  Apr 30 16:46:06.976: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:46:11.961: INFO: File wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:11.965: INFO: File jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:11.965: INFO: Lookups using dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a failed for: [wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local]

  Apr 30 16:46:11.972: INFO: Pod client logs for webserver: 
  Apr 30 16:46:11.978: INFO: Pod client logs for querier: 
  Apr 30 16:46:11.985: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:46:16.957: INFO: File wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:16.962: INFO: File jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:16.962: INFO: Lookups using dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a failed for: [wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local]

  Apr 30 16:46:16.970: INFO: Pod client logs for webserver: 
  Apr 30 16:46:16.977: INFO: Pod client logs for querier: 
  Apr 30 16:46:16.984: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:46:21.961: INFO: File wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:21.965: INFO: File jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 30 16:46:21.965: INFO: Lookups using dns-8766/dns-test-986eb2a4-b93c-4457-9505-760874c0b71a failed for: [wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local]

  Apr 30 16:46:21.971: INFO: Pod client logs for webserver: 
  Apr 30 16:46:21.978: INFO: Pod client logs for querier: 
  Apr 30 16:46:21.984: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:46:26.961: INFO: DNS probes using dns-test-986eb2a4-b93c-4457-9505-760874c0b71a succeeded

  STEP: changing the service to type=ClusterIP @ 04/30/24 16:46:26.961
  W0430 16:46:26.982727      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8766.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8766.svc.cluster.local; sleep 1; done
   @ 04/30/24 16:46:26.982
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8766.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local; sleep 1; done
   @ 04/30/24 16:46:26.982
  STEP: creating a third pod to probe DNS @ 04/30/24 16:46:26.982
  STEP: submitting the pod to kubernetes @ 04/30/24 16:46:26.987
  STEP: retrieving the pod @ 04/30/24 16:46:29.021
  STEP: looking for the results for each expected name from probers @ 04/30/24 16:46:29.024
  Apr 30 16:46:29.036: INFO: File jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local from pod  dns-8766/dns-test-82ea5b53-942e-40e2-83ed-fa6d23616a26 contains '' instead of '10.96.1.193'
  Apr 30 16:46:29.036: INFO: Lookups using dns-8766/dns-test-82ea5b53-942e-40e2-83ed-fa6d23616a26 failed for: [jessie_udp@dns-test-service-3.dns-8766.svc.cluster.local]

  Apr 30 16:46:29.042: INFO: Pod client logs for webserver: 
  Apr 30 16:46:29.048: INFO: Pod client logs for querier: 
  Apr 30 16:46:29.054: INFO: Pod client logs for jessie-querier: 
  Apr 30 16:46:34.037: INFO: DNS probes using dns-test-82ea5b53-942e-40e2-83ed-fa6d23616a26 succeeded

  STEP: deleting the pod @ 04/30/24 16:46:34.037
  STEP: deleting the pod @ 04/30/24 16:46:34.069
  STEP: deleting the pod @ 04/30/24 16:46:34.095
  STEP: deleting the test externalName service @ 04/30/24 16:46:34.139
  Apr 30 16:46:34.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8766" for this suite. @ 04/30/24 16:46:34.175
• [43.388 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/30/24 16:46:34.187
  Apr 30 16:46:34.187: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename watch @ 04/30/24 16:46:34.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:46:34.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:46:34.217
  STEP: creating a new configmap @ 04/30/24 16:46:34.221
  STEP: modifying the configmap once @ 04/30/24 16:46:34.274
  STEP: modifying the configmap a second time @ 04/30/24 16:46:34.288
  STEP: deleting the configmap @ 04/30/24 16:46:34.299
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/30/24 16:46:34.307
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/30/24 16:46:34.308
  Apr 30 16:46:34.309: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2732  adf417c4-cbe2-4a0f-838a-cde498b65553 206068 0 2024-04-30 16:46:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-30 16:46:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 16:46:34.309: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2732  adf417c4-cbe2-4a0f-838a-cde498b65553 206069 0 2024-04-30 16:46:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-30 16:46:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 16:46:34.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2732" for this suite. @ 04/30/24 16:46:34.315
• [0.135 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 04/30/24 16:46:34.322
  Apr 30 16:46:34.322: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 16:46:34.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:46:34.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:46:34.354
  STEP: Counting existing ResourceQuota @ 04/30/24 16:46:51.363
  STEP: Creating a ResourceQuota @ 04/30/24 16:46:56.368
  STEP: Ensuring resource quota status is calculated @ 04/30/24 16:46:56.375
  STEP: Creating a ConfigMap @ 04/30/24 16:46:58.382
  STEP: Ensuring resource quota status captures configMap creation @ 04/30/24 16:46:58.399
  STEP: Deleting a ConfigMap @ 04/30/24 16:47:00.403
  STEP: Ensuring resource quota status released usage @ 04/30/24 16:47:00.411
  Apr 30 16:47:02.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4742" for this suite. @ 04/30/24 16:47:02.422
• [28.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/30/24 16:47:02.436
  Apr 30 16:47:02.436: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 16:47:02.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:47:02.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:47:02.465
  STEP: Creating a pod to test downward api env vars @ 04/30/24 16:47:02.468
  STEP: Saw pod success @ 04/30/24 16:47:06.496
  Apr 30 16:47:06.500: INFO: Trying to get logs from node perfermance-5 pod downward-api-54fdbb55-41a4-46e9-b4ef-cba1bab4ee39 container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 16:47:06.508
  Apr 30 16:47:06.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4453" for this suite. @ 04/30/24 16:47:06.535
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/30/24 16:47:06.546
  Apr 30 16:47:06.546: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replication-controller @ 04/30/24 16:47:06.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:47:06.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:47:06.582
  STEP: creating a ReplicationController @ 04/30/24 16:47:06.589
  STEP: waiting for RC to be added @ 04/30/24 16:47:06.603
  STEP: waiting for available Replicas @ 04/30/24 16:47:06.604
  STEP: patching ReplicationController @ 04/30/24 16:47:07.877
  STEP: waiting for RC to be modified @ 04/30/24 16:47:07.89
  STEP: patching ReplicationController status @ 04/30/24 16:47:07.89
  STEP: waiting for RC to be modified @ 04/30/24 16:47:07.901
  STEP: waiting for available Replicas @ 04/30/24 16:47:07.901
  STEP: fetching ReplicationController status @ 04/30/24 16:47:07.916
  STEP: patching ReplicationController scale @ 04/30/24 16:47:07.92
  STEP: waiting for RC to be modified @ 04/30/24 16:47:07.926
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/30/24 16:47:07.927
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/30/24 16:47:09.24
  STEP: updating ReplicationController status @ 04/30/24 16:47:09.243
  STEP: waiting for RC to be modified @ 04/30/24 16:47:09.256
  STEP: listing all ReplicationControllers @ 04/30/24 16:47:09.256
  STEP: checking that ReplicationController has expected values @ 04/30/24 16:47:09.271
  STEP: deleting ReplicationControllers by collection @ 04/30/24 16:47:09.272
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/30/24 16:47:09.282
  Apr 30 16:47:09.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0430 16:47:09.362359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5506" for this suite. @ 04/30/24 16:47:09.368
• [2.835 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 04/30/24 16:47:09.382
  Apr 30 16:47:09.382: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/30/24 16:47:09.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:47:09.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:47:09.425
  STEP: create the container to handle the HTTPGet hook request. @ 04/30/24 16:47:09.432
  E0430 16:47:10.362679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:11.363207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/30/24 16:47:11.459
  E0430 16:47:12.363759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:13.364050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/30/24 16:47:13.477
  STEP: delete the pod with lifecycle hook @ 04/30/24 16:47:13.484
  E0430 16:47:14.364302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:15.364591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:16.365072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:17.365676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:47:17.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9747" for this suite. @ 04/30/24 16:47:17.52
• [8.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/30/24 16:47:17.537
  Apr 30 16:47:17.537: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 16:47:17.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:47:17.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:47:17.59
  E0430 16:47:18.366014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:19.366770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:47:19.615: INFO: Deleting pod "var-expansion-afd38301-53e5-4a2b-a17d-78420e0bbbe1" in namespace "var-expansion-9799"
  Apr 30 16:47:19.627: INFO: Wait up to 5m0s for pod "var-expansion-afd38301-53e5-4a2b-a17d-78420e0bbbe1" to be fully deleted
  E0430 16:47:20.367543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:21.367885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:22.368337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:23.368466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:47:23.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9799" for this suite. @ 04/30/24 16:47:23.645
• [6.116 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 04/30/24 16:47:23.654
  Apr 30 16:47:23.654: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 16:47:23.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:47:23.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:47:23.688
  STEP: Creating a ResourceQuota @ 04/30/24 16:47:23.692
  STEP: Getting a ResourceQuota @ 04/30/24 16:47:23.699
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/30/24 16:47:23.702
  STEP: Patching the ResourceQuota @ 04/30/24 16:47:23.707
  STEP: Deleting a Collection of ResourceQuotas @ 04/30/24 16:47:23.717
  STEP: Verifying the deleted ResourceQuota @ 04/30/24 16:47:23.733
  Apr 30 16:47:23.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9377" for this suite. @ 04/30/24 16:47:23.747
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/30/24 16:47:23.757
  Apr 30 16:47:23.757: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 16:47:23.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:47:23.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:47:23.792
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/30/24 16:47:23.796
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/30/24 16:47:23.796
  STEP: creating a pod to probe DNS @ 04/30/24 16:47:23.796
  STEP: submitting the pod to kubernetes @ 04/30/24 16:47:23.796
  E0430 16:47:24.369497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:25.370732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/30/24 16:47:25.828
  STEP: looking for the results for each expected name from probers @ 04/30/24 16:47:25.832
  Apr 30 16:47:25.858: INFO: DNS probes using dns-8300/dns-test-a8c0d2aa-e968-4086-9ab6-2ecd8aa5a1cc succeeded

  STEP: deleting the pod @ 04/30/24 16:47:25.858
  Apr 30 16:47:25.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8300" for this suite. @ 04/30/24 16:47:25.883
• [2.134 seconds]
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/30/24 16:47:25.891
  Apr 30 16:47:25.891: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename taint-single-pod @ 04/30/24 16:47:25.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:47:25.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:47:25.922
  Apr 30 16:47:25.926: INFO: Waiting up to 1m0s for all nodes to be ready
  E0430 16:47:26.371175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:27.371997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:28.373059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:29.373357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:30.374201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:31.374565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:32.375093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:33.375369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:34.376101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:35.376369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:36.377189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:37.378736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:38.379835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:39.380096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:40.380144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:41.380425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:42.381160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:43.381446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:44.381515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:45.381798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:46.382877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:47.383192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:48.383330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:49.383750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:50.384772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:51.385064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:52.385233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:53.385556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:54.385617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:55.386466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:56.386798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:57.387260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:58.387349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:47:59.387748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:00.388353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:01.388682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:02.389163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:03.389601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:04.390587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:05.390942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:06.391345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:07.392138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:08.392369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:09.392676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:10.393402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:11.393678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:12.394259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:13.394642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:14.395031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:15.395429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:16.396291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:17.396805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:18.397577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:19.397928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:20.398163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:21.398474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:22.399327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:23.399715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:24.400051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:25.400272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:48:25.927: INFO: Waiting for terminating namespaces to be deleted...
  Apr 30 16:48:25.936: INFO: Starting informer...
  STEP: Starting pod... @ 04/30/24 16:48:25.936
  Apr 30 16:48:26.153: INFO: Pod is running on perfermance-5. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/30/24 16:48:26.154
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/30/24 16:48:26.172
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/30/24 16:48:26.176
  Apr 30 16:48:26.176: INFO: Pod wasn't evicted. Proceeding
  Apr 30 16:48:26.176: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/30/24 16:48:26.199
  STEP: Waiting some time to make sure that toleration time passed. @ 04/30/24 16:48:26.205
  E0430 16:48:26.401117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:27.402103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:28.402801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:29.402678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:30.403438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:31.403670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:32.404238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:33.404420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:34.404616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:35.404733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:36.404883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:37.405611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:38.405907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:39.406072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:40.407101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:41.407706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:42.408186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:43.408358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:44.408462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:45.408745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:46.409240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:47.410110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:48.410963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:49.411763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:50.412251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:51.412861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:52.413452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:53.413711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:54.414060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:55.414722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:56.415496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:57.416495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:58.417065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:48:59.417488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:00.417936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:01.418170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:02.418617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:03.419741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:04.420038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:05.420287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:06.420849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:07.421341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:08.421598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:09.421896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:10.422151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:11.422404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:12.423078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:13.423292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:14.423741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:15.423974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:16.424458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:17.425195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:18.425326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:19.426234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:20.426746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:21.426989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:22.427458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:23.427686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:24.427922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:25.428151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:26.428266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:27.428817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:28.428960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:29.429527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:30.429633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:31.430061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:32.430790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:33.431046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:34.431342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:35.431563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:36.431994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:37.432369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:38.432582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:39.432797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:40.433050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:49:41.205: INFO: Pod wasn't evicted. Test successful
  Apr 30 16:49:41.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7874" for this suite. @ 04/30/24 16:49:41.213
• [135.332 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/30/24 16:49:41.223
  Apr 30 16:49:41.223: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 16:49:41.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:49:41.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:49:41.261
  E0430 16:49:41.433916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:42.434918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:49:43.286: INFO: Deleting pod "var-expansion-cf2c2cd1-f4c3-4829-81d2-6c6168ae6e3a" in namespace "var-expansion-2371"
  Apr 30 16:49:43.298: INFO: Wait up to 5m0s for pod "var-expansion-cf2c2cd1-f4c3-4829-81d2-6c6168ae6e3a" to be fully deleted
  E0430 16:49:43.435830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:44.436537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:49:45.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2371" for this suite. @ 04/30/24 16:49:45.315
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/30/24 16:49:45.323
  Apr 30 16:49:45.323: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 16:49:45.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:49:45.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:49:45.358
  STEP: Creating the pod @ 04/30/24 16:49:45.362
  E0430 16:49:45.437381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:46.438112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:47.438747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:49:47.933: INFO: Successfully updated pod "annotationupdate2bed0eab-d9ba-4864-9f4a-74706d099f72"
  E0430 16:49:48.439359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:49.439794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:50.439943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:51.440079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:49:51.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8411" for this suite. @ 04/30/24 16:49:51.964
• [6.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/30/24 16:49:51.978
  Apr 30 16:49:51.978: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename ingressclass @ 04/30/24 16:49:51.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:49:52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:49:52.003
  STEP: getting /apis @ 04/30/24 16:49:52.007
  STEP: getting /apis/networking.k8s.io @ 04/30/24 16:49:52.012
  STEP: getting /apis/networking.k8s.iov1 @ 04/30/24 16:49:52.013
  STEP: creating @ 04/30/24 16:49:52.015
  STEP: getting @ 04/30/24 16:49:52.038
  STEP: listing @ 04/30/24 16:49:52.042
  STEP: watching @ 04/30/24 16:49:52.051
  Apr 30 16:49:52.051: INFO: starting watch
  STEP: patching @ 04/30/24 16:49:52.053
  STEP: updating @ 04/30/24 16:49:52.06
  Apr 30 16:49:52.066: INFO: waiting for watch events with expected annotations
  Apr 30 16:49:52.066: INFO: saw patched and updated annotations
  STEP: deleting @ 04/30/24 16:49:52.066
  STEP: deleting a collection @ 04/30/24 16:49:52.08
  Apr 30 16:49:52.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-111" for this suite. @ 04/30/24 16:49:52.102
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 04/30/24 16:49:52.116
  Apr 30 16:49:52.116: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 16:49:52.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:49:52.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:49:52.141
  STEP: Creating resourceQuota "e2e-rq-status-rjkkc" @ 04/30/24 16:49:52.147
  Apr 30 16:49:52.166: INFO: Resource quota "e2e-rq-status-rjkkc" reports spec: hard cpu limit of 500m
  Apr 30 16:49:52.166: INFO: Resource quota "e2e-rq-status-rjkkc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-rjkkc" /status @ 04/30/24 16:49:52.166
  STEP: Confirm /status for "e2e-rq-status-rjkkc" resourceQuota via watch @ 04/30/24 16:49:52.174
  Apr 30 16:49:52.176: INFO: observed resourceQuota "e2e-rq-status-rjkkc" in namespace "resourcequota-1006" with hard status: v1.ResourceList(nil)
  Apr 30 16:49:52.176: INFO: Found resourceQuota "e2e-rq-status-rjkkc" in namespace "resourcequota-1006" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 30 16:49:52.176: INFO: ResourceQuota "e2e-rq-status-rjkkc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/30/24 16:49:52.18
  Apr 30 16:49:52.187: INFO: Resource quota "e2e-rq-status-rjkkc" reports spec: hard cpu limit of 1
  Apr 30 16:49:52.187: INFO: Resource quota "e2e-rq-status-rjkkc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-rjkkc" /status @ 04/30/24 16:49:52.187
  STEP: Confirm /status for "e2e-rq-status-rjkkc" resourceQuota via watch @ 04/30/24 16:49:52.199
  Apr 30 16:49:52.201: INFO: observed resourceQuota "e2e-rq-status-rjkkc" in namespace "resourcequota-1006" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 30 16:49:52.201: INFO: Found resourceQuota "e2e-rq-status-rjkkc" in namespace "resourcequota-1006" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 30 16:49:52.201: INFO: ResourceQuota "e2e-rq-status-rjkkc" /status was patched
  STEP: Get "e2e-rq-status-rjkkc" /status @ 04/30/24 16:49:52.201
  Apr 30 16:49:52.205: INFO: Resourcequota "e2e-rq-status-rjkkc" reports status: hard cpu of 1
  Apr 30 16:49:52.205: INFO: Resourcequota "e2e-rq-status-rjkkc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-rjkkc" /status before checking Spec is unchanged @ 04/30/24 16:49:52.208
  Apr 30 16:49:52.215: INFO: Resourcequota "e2e-rq-status-rjkkc" reports status: hard cpu of 2
  Apr 30 16:49:52.215: INFO: Resourcequota "e2e-rq-status-rjkkc" reports status: hard memory of 2Gi
  Apr 30 16:49:52.217: INFO: Found resourceQuota "e2e-rq-status-rjkkc" in namespace "resourcequota-1006" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 30 16:49:52.221: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013fecd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013fed20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013fed98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:49:52.440799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:53.441562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:54.441797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:55.441934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:56.442341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:49:57.220: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001653818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001653860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0016538a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:49:57.442829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:58.443075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:49:59.443207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:00.443341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:01.443473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:02.223: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001653e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001653ed8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001653f20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:50:02.443685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:03.444045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:04.444275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:05.444464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:06.445082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:07.225: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a4e300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a4e330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a4e378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:50:07.445190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:08.445890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:09.446593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:10.446877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:11.447191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:12.223: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013fe168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013fe1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013fe330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:50:12.447365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:13.447608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:14.448014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:15.448308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:16.448974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:17.221: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470e2d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470e300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470e348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:50:17.449244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:18.449469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:19.449690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:20.449891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:21.450102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:22.222: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470e6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470e6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470e708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:50:22.450368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:23.450633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:24.450931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:25.451322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:26.451949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:27.223: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-rjkkc", GenerateName:"", Namespace:"resourcequota-1006", SelfLink:"", UID:"02001314-5f31-403a-9fc7-8366a381384e", ResourceVersion:"207251", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-rjkkc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470e9d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470ea20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 16, 49, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470ea50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0430 16:50:27.452711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:28.452796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:29.452941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:30.453088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:31.453202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:32.222: INFO: ResourceQuota "e2e-rq-status-rjkkc" Spec was unchanged and /status reset
  Apr 30 16:50:32.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1006" for this suite. @ 04/30/24 16:50:32.228
• [40.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 04/30/24 16:50:32.237
  Apr 30 16:50:32.237: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 16:50:32.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:32.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:32.266
  STEP: validating api versions @ 04/30/24 16:50:32.27
  Apr 30 16:50:32.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5265 api-versions'
  Apr 30 16:50:32.352: INFO: stderr: ""
  Apr 30 16:50:32.352: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\noperator.tigera.io/v1\npolicy/v1\nprojectcalico.org/v3\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 30 16:50:32.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5265" for this suite. @ 04/30/24 16:50:32.358
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/30/24 16:50:32.367
  Apr 30 16:50:32.367: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename controllerrevisions @ 04/30/24 16:50:32.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:32.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:32.4
  STEP: Creating DaemonSet "e2e-knzg4-daemon-set" @ 04/30/24 16:50:32.427
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/30/24 16:50:32.434
  Apr 30 16:50:32.440: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:32.440: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:32.440: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:32.443: INFO: Number of nodes with available pods controlled by daemonset e2e-knzg4-daemon-set: 0
  Apr 30 16:50:32.443: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 16:50:32.454200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:33.442: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:33.442: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:33.442: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:33.446: INFO: Number of nodes with available pods controlled by daemonset e2e-knzg4-daemon-set: 1
  Apr 30 16:50:33.446: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 16:50:33.454692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:34.442: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:34.442: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:34.442: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:50:34.447: INFO: Number of nodes with available pods controlled by daemonset e2e-knzg4-daemon-set: 2
  Apr 30 16:50:34.447: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-knzg4-daemon-set
  STEP: Confirm DaemonSet "e2e-knzg4-daemon-set" successfully created with "daemonset-name=e2e-knzg4-daemon-set" label @ 04/30/24 16:50:34.451
  E0430 16:50:34.455373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-knzg4-daemon-set" @ 04/30/24 16:50:34.458
  Apr 30 16:50:34.462: INFO: Located ControllerRevision: "e2e-knzg4-daemon-set-6c6d85cdbf"
  STEP: Patching ControllerRevision "e2e-knzg4-daemon-set-6c6d85cdbf" @ 04/30/24 16:50:34.465
  Apr 30 16:50:34.474: INFO: e2e-knzg4-daemon-set-6c6d85cdbf has been patched
  STEP: Create a new ControllerRevision @ 04/30/24 16:50:34.474
  Apr 30 16:50:34.485: INFO: Created ControllerRevision: e2e-knzg4-daemon-set-58669d746f
  STEP: Confirm that there are two ControllerRevisions @ 04/30/24 16:50:34.485
  Apr 30 16:50:34.485: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 30 16:50:34.491: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-knzg4-daemon-set-6c6d85cdbf" @ 04/30/24 16:50:34.491
  STEP: Confirm that there is only one ControllerRevision @ 04/30/24 16:50:34.497
  Apr 30 16:50:34.497: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 30 16:50:34.500: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-knzg4-daemon-set-58669d746f" @ 04/30/24 16:50:34.503
  Apr 30 16:50:34.512: INFO: e2e-knzg4-daemon-set-58669d746f has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/30/24 16:50:34.513
  W0430 16:50:34.525861      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/30/24 16:50:34.526
  Apr 30 16:50:34.526: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0430 16:50:35.455684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:35.526: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 30 16:50:35.531: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-knzg4-daemon-set-58669d746f=updated" @ 04/30/24 16:50:35.532
  STEP: Confirm that there is only one ControllerRevision @ 04/30/24 16:50:35.542
  Apr 30 16:50:35.542: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 30 16:50:35.546: INFO: Found 1 ControllerRevisions
  Apr 30 16:50:35.551: INFO: ControllerRevision "e2e-knzg4-daemon-set-6b879f9568" has revision 3
  STEP: Deleting DaemonSet "e2e-knzg4-daemon-set" @ 04/30/24 16:50:35.554
  STEP: deleting DaemonSet.extensions e2e-knzg4-daemon-set in namespace controllerrevisions-6284, will wait for the garbage collector to delete the pods @ 04/30/24 16:50:35.555
  Apr 30 16:50:35.623: INFO: Deleting DaemonSet.extensions e2e-knzg4-daemon-set took: 14.405049ms
  Apr 30 16:50:35.724: INFO: Terminating DaemonSet.extensions e2e-knzg4-daemon-set pods took: 101.089642ms
  E0430 16:50:36.456433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:36.830: INFO: Number of nodes with available pods controlled by daemonset e2e-knzg4-daemon-set: 0
  Apr 30 16:50:36.830: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-knzg4-daemon-set
  Apr 30 16:50:36.836: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"207502"},"items":null}

  Apr 30 16:50:36.839: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"207502"},"items":null}

  Apr 30 16:50:36.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6284" for this suite. @ 04/30/24 16:50:36.856
• [4.500 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/30/24 16:50:36.869
  Apr 30 16:50:36.869: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/30/24 16:50:36.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:36.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:36.897
  STEP: getting /apis @ 04/30/24 16:50:36.9
  STEP: getting /apis/storage.k8s.io @ 04/30/24 16:50:36.905
  STEP: getting /apis/storage.k8s.io/v1 @ 04/30/24 16:50:36.906
  STEP: creating @ 04/30/24 16:50:36.907
  STEP: watching @ 04/30/24 16:50:36.929
  Apr 30 16:50:36.929: INFO: starting watch
  STEP: getting @ 04/30/24 16:50:36.938
  STEP: listing in namespace @ 04/30/24 16:50:36.941
  STEP: listing across namespaces @ 04/30/24 16:50:36.944
  STEP: patching @ 04/30/24 16:50:36.947
  STEP: updating @ 04/30/24 16:50:36.953
  Apr 30 16:50:36.960: INFO: waiting for watch events with expected annotations in namespace
  Apr 30 16:50:36.960: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/30/24 16:50:36.961
  STEP: deleting a collection @ 04/30/24 16:50:36.972
  Apr 30 16:50:36.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4159" for this suite. @ 04/30/24 16:50:36.996
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/30/24 16:50:37.003
  Apr 30 16:50:37.003: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename security-context @ 04/30/24 16:50:37.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:37.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:37.032
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/30/24 16:50:37.035
  E0430 16:50:37.457163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:38.457705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:39.458269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:40.458596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:50:41.058
  Apr 30 16:50:41.061: INFO: Trying to get logs from node perfermance-5 pod security-context-da25ca95-c2b2-4108-8b44-67840bf4c2ed container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:50:41.072
  Apr 30 16:50:41.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5529" for this suite. @ 04/30/24 16:50:41.101
• [4.106 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 04/30/24 16:50:41.11
  Apr 30 16:50:41.110: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename security-context-test @ 04/30/24 16:50:41.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:41.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:41.139
  E0430 16:50:41.461653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:42.462334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:43.462473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:44.462943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:45.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2822" for this suite. @ 04/30/24 16:50:45.172
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/30/24 16:50:45.18
  Apr 30 16:50:45.181: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svcaccounts @ 04/30/24 16:50:45.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:45.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:45.208
  Apr 30 16:50:45.215: INFO: Got root ca configmap in namespace "svcaccounts-1133"
  Apr 30 16:50:45.222: INFO: Deleted root ca configmap in namespace "svcaccounts-1133"
  E0430 16:50:45.463925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 04/30/24 16:50:45.723
  Apr 30 16:50:45.728: INFO: Recreated root ca configmap in namespace "svcaccounts-1133"
  Apr 30 16:50:45.734: INFO: Updated root ca configmap in namespace "svcaccounts-1133"
  STEP: waiting for the root ca configmap reconciled @ 04/30/24 16:50:46.235
  Apr 30 16:50:46.239: INFO: Reconciled root ca configmap in namespace "svcaccounts-1133"
  Apr 30 16:50:46.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1133" for this suite. @ 04/30/24 16:50:46.247
• [1.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/30/24 16:50:46.26
  Apr 30 16:50:46.260: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:50:46.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:46.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:46.283
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/30/24 16:50:46.286
  E0430 16:50:46.464798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:47.465313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:48.466548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:49.466683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:50:50.318
  Apr 30 16:50:50.322: INFO: Trying to get logs from node perfermance-5 pod pod-39093bfa-0da5-414e-a088-6a719fd61880 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:50:50.329
  Apr 30 16:50:50.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1271" for this suite. @ 04/30/24 16:50:50.389
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/30/24 16:50:50.404
  Apr 30 16:50:50.404: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:50:50.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:50.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:50.428
  STEP: Creating configMap with name projected-configmap-test-volume-1c070c5d-ca09-4c56-a5a5-56d0712bc32e @ 04/30/24 16:50:50.431
  STEP: Creating a pod to test consume configMaps @ 04/30/24 16:50:50.441
  E0430 16:50:50.467409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:51.467991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:52.468649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:53.469240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:50:54.466
  E0430 16:50:54.469763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:50:54.470: INFO: Trying to get logs from node perfermance-5 pod pod-projected-configmaps-5ed0170d-f707-425e-8c55-a489d1d22ad6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 16:50:54.478
  Apr 30 16:50:54.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5499" for this suite. @ 04/30/24 16:50:54.503
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/30/24 16:50:54.515
  Apr 30 16:50:54.515: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:50:54.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:54.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:54.543
  STEP: Creating configMap with name projected-configmap-test-volume-map-435512c0-b4d4-444f-8f9c-714bc76e4c9c @ 04/30/24 16:50:54.546
  STEP: Creating a pod to test consume configMaps @ 04/30/24 16:50:54.553
  E0430 16:50:55.470578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:56.471184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:57.471322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:50:58.471431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:50:58.586
  Apr 30 16:50:58.589: INFO: Trying to get logs from node perfermance-5 pod pod-projected-configmaps-0cd782ab-2de4-418f-8c69-7b90cfccb6d3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 16:50:58.596
  Apr 30 16:50:58.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3" for this suite. @ 04/30/24 16:50:58.622
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 04/30/24 16:50:58.631
  Apr 30 16:50:58.631: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:50:58.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:50:58.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:50:58.662
  STEP: creating service in namespace services-1824 @ 04/30/24 16:50:58.665
  STEP: creating service affinity-nodeport-transition in namespace services-1824 @ 04/30/24 16:50:58.665
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1824 @ 04/30/24 16:50:58.682
  I0430 16:50:58.690751      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-1824, replica count: 3
  E0430 16:50:59.472335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:00.473384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:01.473376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0430 16:51:01.742019      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:51:01.754: INFO: Creating new exec pod
  E0430 16:51:02.473358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:03.473739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:04.473737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:04.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1824 exec execpod-affinitysk2v8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Apr 30 16:51:04.935: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 30 16:51:04.935: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:51:04.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1824 exec execpod-affinitysk2v8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.170 80'
  Apr 30 16:51:05.082: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.170 80\nConnection to 10.96.1.170 80 port [tcp/http] succeeded!\n"
  Apr 30 16:51:05.082: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:51:05.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1824 exec execpod-affinitysk2v8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.64 31462'
  Apr 30 16:51:05.219: INFO: stderr: "+ echo hostName+ \nnc -v -t -w 2 192.168.111.64 31462\nConnection to 192.168.111.64 31462 port [tcp/*] succeeded!\n"
  Apr 30 16:51:05.219: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:51:05.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1824 exec execpod-affinitysk2v8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.111.203 31462'
  Apr 30 16:51:05.365: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.111.203 31462\nConnection to 192.168.111.203 31462 port [tcp/*] succeeded!\n"
  Apr 30 16:51:05.365: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:51:05.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1824 exec execpod-affinitysk2v8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.111.64:31462/ ; done'
  E0430 16:51:05.473961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:05.635: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n"
  Apr 30 16:51:05.635: INFO: stdout: "\naffinity-nodeport-transition-dklbh\naffinity-nodeport-transition-fq7xn\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-dklbh\naffinity-nodeport-transition-fq7xn\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-dklbh\naffinity-nodeport-transition-fq7xn\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-dklbh\naffinity-nodeport-transition-fq7xn\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-dklbh\naffinity-nodeport-transition-fq7xn\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-dklbh"
  Apr 30 16:51:05.635: INFO: Received response from host: affinity-nodeport-transition-dklbh
  Apr 30 16:51:05.635: INFO: Received response from host: affinity-nodeport-transition-fq7xn
  Apr 30 16:51:05.635: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.635: INFO: Received response from host: affinity-nodeport-transition-dklbh
  Apr 30 16:51:05.635: INFO: Received response from host: affinity-nodeport-transition-fq7xn
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-dklbh
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-fq7xn
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-dklbh
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-fq7xn
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-dklbh
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-fq7xn
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.636: INFO: Received response from host: affinity-nodeport-transition-dklbh
  Apr 30 16:51:05.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1824 exec execpod-affinitysk2v8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.111.64:31462/ ; done'
  Apr 30 16:51:05.909: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.111.64:31462/\n"
  Apr 30 16:51:05.909: INFO: stdout: "\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f\naffinity-nodeport-transition-9wv4f"
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Received response from host: affinity-nodeport-transition-9wv4f
  Apr 30 16:51:05.909: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1824, will wait for the garbage collector to delete the pods @ 04/30/24 16:51:05.925
  Apr 30 16:51:05.992: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.719031ms
  Apr 30 16:51:06.092: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.326721ms
  E0430 16:51:06.474866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:07.475548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:08.476516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:09.476758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:09.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1824" for this suite. @ 04/30/24 16:51:09.622
• [11.003 seconds]
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/30/24 16:51:09.634
  Apr 30 16:51:09.634: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 16:51:09.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:09.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:09.667
  STEP: creating the pod @ 04/30/24 16:51:09.671
  STEP: submitting the pod to kubernetes @ 04/30/24 16:51:09.671
  STEP: verifying QOS class is set on the pod @ 04/30/24 16:51:09.685
  Apr 30 16:51:09.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-194" for this suite. @ 04/30/24 16:51:09.693
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/30/24 16:51:09.7
  Apr 30 16:51:09.700: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename field-validation @ 04/30/24 16:51:09.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:09.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:09.734
  Apr 30 16:51:09.737: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 16:51:10.477807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:11.478497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0430 16:51:12.290465      21 warnings.go:70] unknown field "alpha"
  W0430 16:51:12.290496      21 warnings.go:70] unknown field "beta"
  W0430 16:51:12.290502      21 warnings.go:70] unknown field "delta"
  W0430 16:51:12.290507      21 warnings.go:70] unknown field "epsilon"
  W0430 16:51:12.290512      21 warnings.go:70] unknown field "gamma"
  E0430 16:51:12.478909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:12.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8556" for this suite. @ 04/30/24 16:51:12.835
• [3.144 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/30/24 16:51:12.845
  Apr 30 16:51:12.845: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:51:12.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:12.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:12.868
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-e004ab90-16cc-44d5-8122-cc25519c4044 @ 04/30/24 16:51:12.875
  STEP: Creating the pod @ 04/30/24 16:51:12.88
  E0430 16:51:13.479731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:14.480204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-e004ab90-16cc-44d5-8122-cc25519c4044 @ 04/30/24 16:51:14.913
  STEP: waiting to observe update in volume @ 04/30/24 16:51:14.92
  E0430 16:51:15.480943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:16.481821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:16.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7904" for this suite. @ 04/30/24 16:51:16.942
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 04/30/24 16:51:16.95
  Apr 30 16:51:16.950: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:51:16.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:16.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:16.982
  STEP: creating service multiprotocol-test in namespace services-1964 @ 04/30/24 16:51:16.985
  STEP: creating pod pod1 in namespace services-1964 @ 04/30/24 16:51:16.996
  STEP: Creating pod pod1 in namespace services-1964 @ 04/30/24 16:51:16.996
  E0430 16:51:17.481952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:18.482079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1964 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/30/24 16:51:19.026
  Apr 30 16:51:19.037: INFO: successfully validated that service multiprotocol-test in namespace services-1964 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/30/24 16:51:19.037
  Apr 30 16:51:19.037: INFO: Creating new exec pod
  E0430 16:51:19.482686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:20.482867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:21.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80'
  Apr 30 16:51:21.215: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.3.154 80\nConnection to 10.96.3.154 80 port [tcp/http] succeeded!\n"
  Apr 30 16:51:21.215: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:51:21.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80'
  E0430 16:51:21.483575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:22.483607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:23.484098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:24.484256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:25.356: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.3.154 80\nConnection to 10.96.3.154 80 port [udp/*] succeeded!\n"
  Apr 30 16:51:25.356: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/30/24 16:51:25.356
  Apr 30 16:51:25.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80'
  E0430 16:51:25.486622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:25.518: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.3.154 80\nConnection to 10.96.3.154 80 port [tcp/http] succeeded!\n"
  Apr 30 16:51:25.518: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:51:25.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80'
  Apr 30 16:51:25.671: INFO: rc: 1
  Apr 30 16:51:25.671: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.96.3.154 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0430 16:51:26.487673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:27.488364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:27.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80'
  Apr 30 16:51:27.669: INFO: rc: 1
  Apr 30 16:51:27.669: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.96.3.154 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0430 16:51:28.489055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:29.489328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:29.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80'
  Apr 30 16:51:29.657: INFO: rc: 1
  Apr 30 16:51:29.657: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.96.3.154 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0430 16:51:30.490332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:31.490670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:31.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80'
  Apr 30 16:51:31.668: INFO: rc: 1
  Apr 30 16:51:31.668: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.96.3.154 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 04/30/24 16:51:31.668
  Apr 30 16:51:31.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80'
  Apr 30 16:51:31.849: INFO: rc: 1
  Apr 30 16:51:31.849: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.96.3.154 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0430 16:51:32.491259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:33.491426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:33.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.3.154 80'
  E0430 16:51:34.491465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:35.491747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:36.492477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:37.492890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:37.834: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.3.154 80\nConnection to 10.96.3.154 80 port [udp/*] succeeded!\n"
  Apr 30 16:51:37.834: INFO: stdout: "pod1"
  Apr 30 16:51:37.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80'
  Apr 30 16:51:37.976: INFO: rc: 1
  Apr 30 16:51:37.976: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.3.154 80
  nc: connect to 10.96.3.154 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0430 16:51:38.493488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:39.493684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:39.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80'
  Apr 30 16:51:39.971: INFO: rc: 1
  Apr 30 16:51:39.971: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.3.154 80
  nc: connect to 10.96.3.154 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0430 16:51:40.493820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:41.494386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:41.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80'
  Apr 30 16:51:41.977: INFO: rc: 1
  Apr 30 16:51:41.977: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.3.154 80
  nc: connect to 10.96.3.154 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0430 16:51:42.494921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:43.495774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:43.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80'
  Apr 30 16:51:43.980: INFO: rc: 1
  Apr 30 16:51:43.980: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-1964 exec execpod8v2mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.3.154 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.3.154 80
  nc: connect to 10.96.3.154 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 30 16:51:43.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1964" for this suite. @ 04/30/24 16:51:43.986
• [27.050 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 04/30/24 16:51:44
  Apr 30 16:51:44.000: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:51:44.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:44.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:44.028
  STEP: fetching services @ 04/30/24 16:51:44.032
  Apr 30 16:51:44.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2156" for this suite. @ 04/30/24 16:51:44.04
• [0.054 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/30/24 16:51:44.054
  Apr 30 16:51:44.054: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 16:51:44.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:44.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:44.08
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 16:51:44.083
  E0430 16:51:44.496544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:45.497063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:46.497642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:47.498509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:51:48.113
  Apr 30 16:51:48.117: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-61398676-cf7b-46e8-a582-981d3a713734 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 16:51:48.124
  Apr 30 16:51:48.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2040" for this suite. @ 04/30/24 16:51:48.152
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/30/24 16:51:48.162
  Apr 30 16:51:48.162: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 16:51:48.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:48.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:48.204
  STEP: creating a Deployment @ 04/30/24 16:51:48.212
  Apr 30 16:51:48.212: INFO: Creating simple deployment test-deployment-8qqbl
  Apr 30 16:51:48.232: INFO: deployment "test-deployment-8qqbl" doesn't have the required revision set
  E0430 16:51:48.498985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:49.499764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/30/24 16:51:50.247
  Apr 30 16:51:50.252: INFO: Deployment test-deployment-8qqbl has Conditions: [{Available True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8qqbl-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/30/24 16:51:50.252
  Apr 30 16:51:50.278: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 48, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-8qqbl-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/30/24 16:51:50.278
  Apr 30 16:51:50.281: INFO: Observed &Deployment event: ADDED
  Apr 30 16:51:50.281: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8qqbl-5d576bd769"}
  Apr 30 16:51:50.281: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.281: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8qqbl-5d576bd769"}
  Apr 30 16:51:50.281: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 30 16:51:50.281: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.281: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 30 16:51:50.281: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-8qqbl-5d576bd769" is progressing.}
  Apr 30 16:51:50.281: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.282: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 30 16:51:50.282: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8qqbl-5d576bd769" has successfully progressed.}
  Apr 30 16:51:50.282: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.282: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 30 16:51:50.282: INFO: Observed Deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8qqbl-5d576bd769" has successfully progressed.}
  Apr 30 16:51:50.282: INFO: Found Deployment test-deployment-8qqbl in namespace deployment-558 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 30 16:51:50.282: INFO: Deployment test-deployment-8qqbl has an updated status
  STEP: patching the Statefulset Status @ 04/30/24 16:51:50.282
  Apr 30 16:51:50.282: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 30 16:51:50.303: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/30/24 16:51:50.303
  Apr 30 16:51:50.307: INFO: Observed &Deployment event: ADDED
  Apr 30 16:51:50.307: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8qqbl-5d576bd769"}
  Apr 30 16:51:50.308: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.308: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8qqbl-5d576bd769"}
  Apr 30 16:51:50.308: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 30 16:51:50.309: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.309: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 30 16:51:50.310: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:48 +0000 UTC 2024-04-30 16:51:48 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-8qqbl-5d576bd769" is progressing.}
  Apr 30 16:51:50.310: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.310: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 30 16:51:50.311: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8qqbl-5d576bd769" has successfully progressed.}
  Apr 30 16:51:50.311: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.311: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 30 16:51:50.312: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-30 16:51:49 +0000 UTC 2024-04-30 16:51:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8qqbl-5d576bd769" has successfully progressed.}
  Apr 30 16:51:50.312: INFO: Observed deployment test-deployment-8qqbl in namespace deployment-558 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 30 16:51:50.312: INFO: Observed &Deployment event: MODIFIED
  Apr 30 16:51:50.313: INFO: Found deployment test-deployment-8qqbl in namespace deployment-558 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 30 16:51:50.313: INFO: Deployment test-deployment-8qqbl has a patched status
  Apr 30 16:51:50.319: INFO: Deployment "test-deployment-8qqbl":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-8qqbl",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-558",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8134fb6-4eba-4579-a7d3-fc8a6979bd5e",
      ResourceVersion: (string) (len=6) "208316",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850092708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-8qqbl-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 30 16:51:50.347: INFO: New ReplicaSet "test-deployment-8qqbl-5d576bd769" of Deployment "test-deployment-8qqbl":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8qqbl-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-558",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aec525dd-0751-486e-903d-c522a1cb1c6d",
      ResourceVersion: (string) (len=6) "208305",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850092708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-8qqbl",
          UID: (types.UID) (len=36) "c8134fb6-4eba-4579-a7d3-fc8a6979bd5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 63 38 31  |k:{\"uid\":\"c81|
              00000120  33 34 66 62 36 2d 34 65  62 61 2d 34 35 37 39 2d  |34fb6-4eba-4579-|
              00000130  61 37 64 33 2d 66 63 38  61 36 39 37 39 62 64 35  |a7d3-fc8a6979bd5|
              00000140  65 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |e\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 16:51:50.360: INFO: Pod "test-deployment-8qqbl-5d576bd769-4xbj2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-8qqbl-5d576bd769-4xbj2",
      GenerateName: (string) (len=33) "test-deployment-8qqbl-5d576bd769-",
      Namespace: (string) (len=14) "deployment-558",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c828bee9-494f-4d38-9b35-e27096c234f6",
      ResourceVersion: (string) (len=6) "208303",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850092708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a906ba1b1921a53a5f1ff2733c66f89c5d23e2c56587f1fe11bc000a9f1bdea8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "100.73.144.71/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "100.73.144.71/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-8qqbl-5d576bd769",
          UID: (types.UID) (len=36) "aec525dd-0751-486e-903d-c522a1cb1c6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 65 63 35 32 35 64  64 2d 30 37 35 31 2d 34  |"aec525dd-0751-4|
              000000a0  38 36 65 2d 39 30 33 64  2d 63 35 32 32 61 31 63  |86e-903d-c522a1c|
              000000b0  62 31 63 36 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b1c6d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 37 31 5c 22 7d 22 3a  |0.73.144.71\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qvqc4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qvqc4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850092708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=13) "100.73.144.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "100.73.144.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850092708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850092709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://65eaf8c6bc1b87d12ed541b268cbc1345a81163d1a87a5cd822aa88e56a09232",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 16:51:50.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-558" for this suite. @ 04/30/24 16:51:50.368
• [2.214 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/30/24 16:51:50.377
  Apr 30 16:51:50.378: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename aggregator @ 04/30/24 16:51:50.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:51:50.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:51:50.409
  Apr 30 16:51:50.412: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Registering the sample API server. @ 04/30/24 16:51:50.413
  E0430 16:51:50.499722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:51.011: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 30 16:51:51.048: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0430 16:51:51.500439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:52.501093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:53.112: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:51:53.502049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:54.502195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:55.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:51:55.502905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:56.504035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:57.120: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:51:57.505062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:51:58.505459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:51:59.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:51:59.505743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:00.505902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:01.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:01.506298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:02.506682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:03.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:03.507211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:04.507543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:05.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:05.508379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:06.509021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:07.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:07.509063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:08.510035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:09.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:09.509652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:10.509863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:11.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:11.510681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:12.511151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:13.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:13.512011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:14.512329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:15.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:15.512972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:16.513860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:17.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:17.514849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:18.515592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:19.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:19.515636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:20.516422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:21.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:21.516762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:22.517340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:23.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:23.518033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:24.518760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:25.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 16, 51, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 16:52:25.518869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:26.519323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:27.242: INFO: Waited 115.173112ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/30/24 16:52:27.292
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/30/24 16:52:27.296
  STEP: List APIServices @ 04/30/24 16:52:27.31
  Apr 30 16:52:27.317: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/30/24 16:52:27.317
  Apr 30 16:52:27.339: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/30/24 16:52:27.339
  Apr 30 16:52:27.354: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 30, 16, 52, 27, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/30/24 16:52:27.354
  Apr 30 16:52:27.358: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-30 16:52:27 +0000 UTC Passed all checks passed}
  Apr 30 16:52:27.358: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 30 16:52:27.359: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/30/24 16:52:27.359
  Apr 30 16:52:27.378: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-901357042" @ 04/30/24 16:52:27.378
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/30/24 16:52:27.394
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/30/24 16:52:27.405
  STEP: Patch APIService Status @ 04/30/24 16:52:27.409
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/30/24 16:52:27.42
  Apr 30 16:52:27.425: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-30 16:52:27 +0000 UTC Passed all checks passed}
  Apr 30 16:52:27.425: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 30 16:52:27.425: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 30 16:52:27.425: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/30/24 16:52:27.425
  STEP: Confirm that the generated APIService has been deleted @ 04/30/24 16:52:27.436
  Apr 30 16:52:27.436: INFO: Requesting list of APIServices to confirm quantity
  Apr 30 16:52:27.442: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Apr 30 16:52:27.442: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  E0430 16:52:27.519240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:27.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1467" for this suite. @ 04/30/24 16:52:27.601
• [37.236 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/30/24 16:52:27.613
  Apr 30 16:52:27.614: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename field-validation @ 04/30/24 16:52:27.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:52:27.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:52:27.647
  Apr 30 16:52:27.653: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  W0430 16:52:27.654380      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0010f2510 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0430 16:52:28.520015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:29.520690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0430 16:52:30.211258      21 warnings.go:70] unknown field "alpha"
  W0430 16:52:30.211296      21 warnings.go:70] unknown field "beta"
  W0430 16:52:30.211302      21 warnings.go:70] unknown field "delta"
  W0430 16:52:30.211307      21 warnings.go:70] unknown field "epsilon"
  W0430 16:52:30.211312      21 warnings.go:70] unknown field "gamma"
  E0430 16:52:30.521647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:30.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1628" for this suite. @ 04/30/24 16:52:30.764
• [3.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/30/24 16:52:30.777
  Apr 30 16:52:30.777: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 16:52:30.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:52:30.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:52:30.804
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 16:52:30.807
  E0430 16:52:31.521920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:32.522861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:33.523113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:34.523365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:52:34.838
  Apr 30 16:52:34.842: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-6dd73a2a-8421-442e-b48a-4eaeb5321667 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 16:52:34.848
  Apr 30 16:52:34.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1784" for this suite. @ 04/30/24 16:52:34.873
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 04/30/24 16:52:34.885
  Apr 30 16:52:34.885: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 16:52:34.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:52:34.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:52:34.908
  STEP: creating service in namespace services-4278 @ 04/30/24 16:52:34.911
  STEP: creating service affinity-clusterip in namespace services-4278 @ 04/30/24 16:52:34.911
  STEP: creating replication controller affinity-clusterip in namespace services-4278 @ 04/30/24 16:52:34.925
  I0430 16:52:34.935472      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4278, replica count: 3
  E0430 16:52:35.523770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:36.524535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:37.524869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0430 16:52:37.986660      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 16:52:37.994: INFO: Creating new exec pod
  E0430 16:52:38.524923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:39.525097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:40.525507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:41.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-4278 exec execpod-affinitywbq8t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 30 16:52:41.173: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 30 16:52:41.173: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:52:41.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-4278 exec execpod-affinitywbq8t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.249 80'
  Apr 30 16:52:41.310: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.249 80\nConnection to 10.96.1.249 80 port [tcp/http] succeeded!\n"
  Apr 30 16:52:41.310: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 16:52:41.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-4278 exec execpod-affinitywbq8t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.1.249:80/ ; done'
  E0430 16:52:41.525846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:41.526: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.1.249:80/\n"
  Apr 30 16:52:41.526: INFO: stdout: "\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68\naffinity-clusterip-zdm68"
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Received response from host: affinity-clusterip-zdm68
  Apr 30 16:52:41.526: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4278, will wait for the garbage collector to delete the pods @ 04/30/24 16:52:41.545
  Apr 30 16:52:41.612: INFO: Deleting ReplicationController affinity-clusterip took: 7.940849ms
  Apr 30 16:52:41.712: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.582982ms
  E0430 16:52:42.526249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:43.526628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:44.526753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:52:45.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4278" for this suite. @ 04/30/24 16:52:45.145
• [10.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/30/24 16:52:45.158
  Apr 30 16:52:45.158: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svcaccounts @ 04/30/24 16:52:45.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:52:45.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:52:45.187
  Apr 30 16:52:45.208: INFO: created pod
  E0430 16:52:45.527492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:46.527621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:47.527698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:48.527844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:52:49.223
  E0430 16:52:49.528617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:50.528753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:51.528886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:52.529031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:53.529166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:54.529382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:55.529439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:56.529804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:57.530332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:58.530476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:52:59.530853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:00.531380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:01.531594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:02.532160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:03.532300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:04.532418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:05.532568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:06.533119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:07.533356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:08.533410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:09.533693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:10.534062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:11.534456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:12.534980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:13.535267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:14.535751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:15.536023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:16.536608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:17.537192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:18.537373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:53:19.223: INFO: polling logs
  Apr 30 16:53:19.232: INFO: Pod logs: 
  I0430 16:52:46.024370       1 log.go:194] OK: Got token
  I0430 16:52:46.024452       1 log.go:194] validating with in-cluster discovery
  I0430 16:52:46.024907       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0430 16:52:46.024944       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2782:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048a30), NotBefore:(*jwt.NumericDate)(0xc000048b18), IssuedAt:(*jwt.NumericDate)(0xc000048a40), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2782", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6de02ad4-7e64-40f8-bf04-d3b025a0b126"}}}
  I0430 16:52:46.037749       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0430 16:52:46.045540       1 log.go:194] OK: Validated signature on JWT
  I0430 16:52:46.045643       1 log.go:194] OK: Got valid claims from token!
  I0430 16:52:46.045677       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-2782:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000049408), NotBefore:(*jwt.NumericDate)(0xc000049430), IssuedAt:(*jwt.NumericDate)(0xc000049410), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2782", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6de02ad4-7e64-40f8-bf04-d3b025a0b126"}}}

  Apr 30 16:53:19.232: INFO: completed pod
  Apr 30 16:53:19.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2782" for this suite. @ 04/30/24 16:53:19.244
• [34.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 04/30/24 16:53:19.259
  Apr 30 16:53:19.259: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename security-context-test @ 04/30/24 16:53:19.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:53:19.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:53:19.286
  E0430 16:53:19.538570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:20.538735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:21.539809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:22.540827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:53:23.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7311" for this suite. @ 04/30/24 16:53:23.336
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/30/24 16:53:23.347
  Apr 30 16:53:23.347: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 16:53:23.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:53:23.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:53:23.378
  E0430 16:53:23.541037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:24.541546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:25.541977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:26.542012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:27.542768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:28.543687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:29.544556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:30.544694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:31.545157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:32.545593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:33.546559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:34.546776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:35.546763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:36.547096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:37.547447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:38.547639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:39.548482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:40.548554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:41.549154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:42.549324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:43.549759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:44.550132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:53:45.467: INFO: Container started at 2024-04-30 16:53:24 +0000 UTC, pod became ready at 2024-04-30 16:53:43 +0000 UTC
  Apr 30 16:53:45.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2194" for this suite. @ 04/30/24 16:53:45.473
• [22.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/30/24 16:53:45.484
  Apr 30 16:53:45.484: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename subpath @ 04/30/24 16:53:45.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:53:45.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:53:45.514
  STEP: Setting up data @ 04/30/24 16:53:45.517
  STEP: Creating pod pod-subpath-test-configmap-wldk @ 04/30/24 16:53:45.53
  STEP: Creating a pod to test atomic-volume-subpath @ 04/30/24 16:53:45.531
  E0430 16:53:45.550121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:46.550885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:47.551474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:48.552484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:49.552891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:50.553436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:51.553798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:52.554642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:53.555005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:54.555821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:55.556039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:56.556809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:57.557442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:58.557543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:53:59.557706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:00.558013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:01.558036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:02.558166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:03.558311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:04.558606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:05.559025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:06.560112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:07.560245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:08.560453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:09.560829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:54:09.63
  Apr 30 16:54:09.635: INFO: Trying to get logs from node perfermance-5 pod pod-subpath-test-configmap-wldk container test-container-subpath-configmap-wldk: <nil>
  STEP: delete the pod @ 04/30/24 16:54:09.642
  STEP: Deleting pod pod-subpath-test-configmap-wldk @ 04/30/24 16:54:09.665
  Apr 30 16:54:09.665: INFO: Deleting pod "pod-subpath-test-configmap-wldk" in namespace "subpath-3077"
  Apr 30 16:54:09.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3077" for this suite. @ 04/30/24 16:54:09.672
• [24.196 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/30/24 16:54:09.686
  Apr 30 16:54:09.686: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename lease-test @ 04/30/24 16:54:09.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:09.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:09.717
  Apr 30 16:54:09.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4480" for this suite. @ 04/30/24 16:54:09.789
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/30/24 16:54:09.798
  Apr 30 16:54:09.798: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replication-controller @ 04/30/24 16:54:09.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:09.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:09.829
  Apr 30 16:54:09.832: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0430 16:54:10.560746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/30/24 16:54:10.846
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/30/24 16:54:10.853
  E0430 16:54:11.561705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/30/24 16:54:11.861
  Apr 30 16:54:11.871: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/30/24 16:54:11.871
  E0430 16:54:12.562552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:12.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2029" for this suite. @ 04/30/24 16:54:12.885
• [3.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/30/24 16:54:12.9
  Apr 30 16:54:12.900: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename namespaces @ 04/30/24 16:54:12.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:12.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:12.934
  STEP: creating a Namespace @ 04/30/24 16:54:12.939
  STEP: patching the Namespace @ 04/30/24 16:54:12.967
  STEP: get the Namespace and ensuring it has the label @ 04/30/24 16:54:12.974
  Apr 30 16:54:12.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8897" for this suite. @ 04/30/24 16:54:12.983
  STEP: Destroying namespace "nspatchtest-ffdc902e-000f-4218-9da6-26674ec20dda-5852" for this suite. @ 04/30/24 16:54:12.993
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/30/24 16:54:13
  Apr 30 16:54:13.000: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 16:54:13.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:13.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:13.029
  STEP: creating the pod @ 04/30/24 16:54:13.032
  STEP: submitting the pod to kubernetes @ 04/30/24 16:54:13.033
  E0430 16:54:13.562591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:14.563401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/30/24 16:54:15.053
  STEP: updating the pod @ 04/30/24 16:54:15.056
  E0430 16:54:15.563510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:15.572: INFO: Successfully updated pod "pod-update-9b08ff5e-24b8-41a4-9062-e0c05881abd9"
  STEP: verifying the updated pod is in kubernetes @ 04/30/24 16:54:15.577
  Apr 30 16:54:15.579: INFO: Pod update OK
  Apr 30 16:54:15.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5103" for this suite. @ 04/30/24 16:54:15.59
• [2.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/30/24 16:54:15.597
  Apr 30 16:54:15.597: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename daemonsets @ 04/30/24 16:54:15.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:15.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:15.623
  Apr 30 16:54:15.655: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/30/24 16:54:15.662
  Apr 30 16:54:15.667: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:15.667: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:15.667: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:15.674: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:54:15.674: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 16:54:16.564347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:16.669: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:16.669: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:16.669: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:16.673: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:54:16.673: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 16:54:17.564436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:17.670: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:17.670: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:17.670: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:17.675: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 16:54:17.675: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/30/24 16:54:17.692
  STEP: Check that daemon pods images are updated. @ 04/30/24 16:54:17.711
  Apr 30 16:54:17.715: INFO: Wrong image for pod: daemon-set-4k4kv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 30 16:54:17.715: INFO: Wrong image for pod: daemon-set-bkmh8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 30 16:54:17.725: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:17.725: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:17.726: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0430 16:54:18.564970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:18.726: INFO: Wrong image for pod: daemon-set-4k4kv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 30 16:54:18.731: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:18.731: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:18.731: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0430 16:54:19.565727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:19.718: INFO: Wrong image for pod: daemon-set-4k4kv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 30 16:54:19.718: INFO: Pod daemon-set-mr7h4 is not available
  Apr 30 16:54:19.724: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:19.724: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:19.724: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0430 16:54:20.566410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:20.720: INFO: Wrong image for pod: daemon-set-4k4kv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 30 16:54:20.720: INFO: Pod daemon-set-mr7h4 is not available
  Apr 30 16:54:20.724: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:20.725: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:20.725: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0430 16:54:21.566531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:22.225: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:22.225: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:22.225: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0430 16:54:22.567366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:22.717: INFO: Pod daemon-set-cbl5v is not available
  Apr 30 16:54:22.722: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:22.722: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:22.722: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/30/24 16:54:22.722
  Apr 30 16:54:22.726: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:22.726: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:22.726: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:22.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 16:54:22.731: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 16:54:23.567448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:23.730: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:23.730: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:23.730: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 16:54:23.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 16:54:23.739: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/30/24 16:54:23.782
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7873, will wait for the garbage collector to delete the pods @ 04/30/24 16:54:23.783
  Apr 30 16:54:23.846: INFO: Deleting DaemonSet.extensions daemon-set took: 8.104316ms
  Apr 30 16:54:23.946: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.498804ms
  E0430 16:54:24.568233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:25.568723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:26.354: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 16:54:26.354: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 30 16:54:26.358: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"209586"},"items":null}

  Apr 30 16:54:26.362: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"209586"},"items":null}

  Apr 30 16:54:26.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7873" for this suite. @ 04/30/24 16:54:26.38
• [10.794 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/30/24 16:54:26.392
  Apr 30 16:54:26.392: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:54:26.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:26.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:26.42
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/30/24 16:54:26.424
  E0430 16:54:26.568827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:27.569325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:28.569339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:29.569486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:54:30.458
  Apr 30 16:54:30.465: INFO: Trying to get logs from node perfermance-5 pod pod-d4d2d8ca-02f0-4e6f-b092-29c27c355e0a container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:54:30.477
  Apr 30 16:54:30.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2763" for this suite. @ 04/30/24 16:54:30.517
• [4.133 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/30/24 16:54:30.525
  Apr 30 16:54:30.525: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename gc @ 04/30/24 16:54:30.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:30.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:30.557
  STEP: create the rc1 @ 04/30/24 16:54:30.566
  E0430 16:54:30.569512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the rc2 @ 04/30/24 16:54:30.573
  E0430 16:54:31.569616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:32.570298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:33.570781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:34.571264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:35.571711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:36.572676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/30/24 16:54:36.591
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/30/24 16:54:37.358
  STEP: wait for the rc to be deleted @ 04/30/24 16:54:37.378
  E0430 16:54:37.573375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:38.573590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:39.573715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:40.574099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:41.574654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:42.408: INFO: 68 pods remaining
  Apr 30 16:54:42.409: INFO: 67 pods has nil DeletionTimestamp
  Apr 30 16:54:42.409: INFO: 
  E0430 16:54:42.574796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:43.575457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:44.575572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:45.576156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:46.576559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/30/24 16:54:47.394
  Apr 30 16:54:47.483: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 30 16:54:47.483: INFO: Deleting pod "simpletest-rc-to-be-deleted-2bq4r" in namespace "gc-4483"
  Apr 30 16:54:47.504: INFO: Deleting pod "simpletest-rc-to-be-deleted-2ldrq" in namespace "gc-4483"
  Apr 30 16:54:47.531: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vftq" in namespace "gc-4483"
  Apr 30 16:54:47.546: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vl7z" in namespace "gc-4483"
  Apr 30 16:54:47.562: INFO: Deleting pod "simpletest-rc-to-be-deleted-2z6r5" in namespace "gc-4483"
  E0430 16:54:47.577518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:47.591: INFO: Deleting pod "simpletest-rc-to-be-deleted-47tt6" in namespace "gc-4483"
  Apr 30 16:54:47.614: INFO: Deleting pod "simpletest-rc-to-be-deleted-4gkbg" in namespace "gc-4483"
  Apr 30 16:54:47.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-4gtzg" in namespace "gc-4483"
  Apr 30 16:54:47.666: INFO: Deleting pod "simpletest-rc-to-be-deleted-4j86j" in namespace "gc-4483"
  Apr 30 16:54:47.689: INFO: Deleting pod "simpletest-rc-to-be-deleted-4nhpj" in namespace "gc-4483"
  Apr 30 16:54:47.706: INFO: Deleting pod "simpletest-rc-to-be-deleted-5c8wh" in namespace "gc-4483"
  Apr 30 16:54:47.733: INFO: Deleting pod "simpletest-rc-to-be-deleted-5ffhx" in namespace "gc-4483"
  Apr 30 16:54:47.760: INFO: Deleting pod "simpletest-rc-to-be-deleted-5l4fp" in namespace "gc-4483"
  Apr 30 16:54:47.780: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rk5s" in namespace "gc-4483"
  Apr 30 16:54:47.797: INFO: Deleting pod "simpletest-rc-to-be-deleted-642z4" in namespace "gc-4483"
  Apr 30 16:54:47.816: INFO: Deleting pod "simpletest-rc-to-be-deleted-6bl5v" in namespace "gc-4483"
  Apr 30 16:54:47.835: INFO: Deleting pod "simpletest-rc-to-be-deleted-6mx6v" in namespace "gc-4483"
  Apr 30 16:54:47.852: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zb4w" in namespace "gc-4483"
  Apr 30 16:54:47.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-7pss9" in namespace "gc-4483"
  Apr 30 16:54:47.893: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bf8n" in namespace "gc-4483"
  Apr 30 16:54:47.908: INFO: Deleting pod "simpletest-rc-to-be-deleted-8kn8d" in namespace "gc-4483"
  Apr 30 16:54:47.938: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vmt9" in namespace "gc-4483"
  Apr 30 16:54:47.964: INFO: Deleting pod "simpletest-rc-to-be-deleted-92rv4" in namespace "gc-4483"
  Apr 30 16:54:47.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-95slf" in namespace "gc-4483"
  Apr 30 16:54:48.008: INFO: Deleting pod "simpletest-rc-to-be-deleted-9dvsx" in namespace "gc-4483"
  Apr 30 16:54:48.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xxnm" in namespace "gc-4483"
  Apr 30 16:54:48.054: INFO: Deleting pod "simpletest-rc-to-be-deleted-b76f4" in namespace "gc-4483"
  Apr 30 16:54:48.079: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwmx8" in namespace "gc-4483"
  Apr 30 16:54:48.099: INFO: Deleting pod "simpletest-rc-to-be-deleted-d6tgs" in namespace "gc-4483"
  Apr 30 16:54:48.119: INFO: Deleting pod "simpletest-rc-to-be-deleted-d87sr" in namespace "gc-4483"
  Apr 30 16:54:48.136: INFO: Deleting pod "simpletest-rc-to-be-deleted-dq5s8" in namespace "gc-4483"
  Apr 30 16:54:48.157: INFO: Deleting pod "simpletest-rc-to-be-deleted-dq9pv" in namespace "gc-4483"
  Apr 30 16:54:48.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqc2c" in namespace "gc-4483"
  Apr 30 16:54:48.210: INFO: Deleting pod "simpletest-rc-to-be-deleted-dtg46" in namespace "gc-4483"
  Apr 30 16:54:48.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-fn6ns" in namespace "gc-4483"
  Apr 30 16:54:48.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-fsx6r" in namespace "gc-4483"
  Apr 30 16:54:48.293: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwlvs" in namespace "gc-4483"
  Apr 30 16:54:48.314: INFO: Deleting pod "simpletest-rc-to-be-deleted-g82m8" in namespace "gc-4483"
  Apr 30 16:54:48.331: INFO: Deleting pod "simpletest-rc-to-be-deleted-gg2qw" in namespace "gc-4483"
  Apr 30 16:54:48.348: INFO: Deleting pod "simpletest-rc-to-be-deleted-gm8hv" in namespace "gc-4483"
  Apr 30 16:54:48.373: INFO: Deleting pod "simpletest-rc-to-be-deleted-gmbrx" in namespace "gc-4483"
  Apr 30 16:54:48.392: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqgnn" in namespace "gc-4483"
  Apr 30 16:54:48.415: INFO: Deleting pod "simpletest-rc-to-be-deleted-gw85p" in namespace "gc-4483"
  Apr 30 16:54:48.444: INFO: Deleting pod "simpletest-rc-to-be-deleted-hmkdh" in namespace "gc-4483"
  Apr 30 16:54:48.472: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnzjj" in namespace "gc-4483"
  Apr 30 16:54:48.495: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrd25" in namespace "gc-4483"
  Apr 30 16:54:48.522: INFO: Deleting pod "simpletest-rc-to-be-deleted-hwlrq" in namespace "gc-4483"
  Apr 30 16:54:48.542: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5cqp" in namespace "gc-4483"
  Apr 30 16:54:48.565: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbh6g" in namespace "gc-4483"
  E0430 16:54:48.578494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:48.596: INFO: Deleting pod "simpletest-rc-to-be-deleted-jh77m" in namespace "gc-4483"
  Apr 30 16:54:48.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4483" for this suite. @ 04/30/24 16:54:48.639
• [18.126 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 04/30/24 16:54:48.652
  Apr 30 16:54:48.652: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 16:54:48.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:54:48.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:54:48.691
  STEP: Creating service test in namespace statefulset-8499 @ 04/30/24 16:54:48.709
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/30/24 16:54:48.718
  STEP: Creating stateful set ss in namespace statefulset-8499 @ 04/30/24 16:54:48.727
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8499 @ 04/30/24 16:54:48.74
  Apr 30 16:54:48.745: INFO: Found 0 stateful pods, waiting for 1
  E0430 16:54:49.578693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:50.578671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:51.579720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:52.579820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:53.579960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:54.580128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:55.580274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:56.580910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:57.581121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:54:58.581248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:54:58.747: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/30/24 16:54:58.747
  Apr 30 16:54:58.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:54:58.896: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:54:58.896: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:54:58.896: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:54:58.901: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0430 16:54:59.581252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:00.581413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:01.582025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:02.582144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:03.582311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:04.582666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:05.583730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:06.583957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:07.584629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:08.585114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:08.904: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 30 16:55:08.904: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 30 16:55:08.929: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999545s
  E0430 16:55:09.585231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:09.934: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99585016s
  E0430 16:55:10.585687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:10.939: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990295603s
  E0430 16:55:11.586665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:11.944: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.985386929s
  E0430 16:55:12.586740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:12.950: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.980324375s
  E0430 16:55:13.587694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:13.955: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.975068747s
  E0430 16:55:14.587796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:14.961: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.968644846s
  E0430 16:55:15.588447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:15.966: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.96349711s
  E0430 16:55:16.588989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:16.972: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.957992004s
  E0430 16:55:17.589844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:17.977: INFO: Verifying statefulset ss doesn't scale past 1 for another 953.098883ms
  E0430 16:55:18.589986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8499 @ 04/30/24 16:55:18.977
  Apr 30 16:55:18.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:55:19.130: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 30 16:55:19.130: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:55:19.130: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:55:19.135: INFO: Found 1 stateful pods, waiting for 3
  E0430 16:55:19.590490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:20.590558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:21.590884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:22.591800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:23.592185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:24.592496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:25.592739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:26.593132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:27.593435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:28.593741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:29.136: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:55:29.136: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 30 16:55:29.136: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/30/24 16:55:29.136
  STEP: Scale down will halt with unhealthy stateful pod @ 04/30/24 16:55:29.136
  Apr 30 16:55:29.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:55:29.295: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:55:29.295: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:55:29.295: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:55:29.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:55:29.444: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:55:29.444: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:55:29.444: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:55:29.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 30 16:55:29.586: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 30 16:55:29.586: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 30 16:55:29.586: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 30 16:55:29.586: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 30 16:55:29.590: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0430 16:55:29.594641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:30.594820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:31.594917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:32.595717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:33.595999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:34.596290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:35.596791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:36.597071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:37.597597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:38.597861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:39.596: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 30 16:55:39.596: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 30 16:55:39.596: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  E0430 16:55:39.598148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:39.613: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999286s
  E0430 16:55:40.598643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:40.621: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994583711s
  E0430 16:55:41.599658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:41.626: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.987545944s
  E0430 16:55:42.600359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:42.632: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.981836462s
  E0430 16:55:43.600682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:43.638: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975524233s
  E0430 16:55:44.601263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:44.643: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970776156s
  E0430 16:55:45.601662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:45.648: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.965320086s
  E0430 16:55:46.602327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:46.655: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.95981947s
  E0430 16:55:47.602792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:47.661: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.953279083s
  E0430 16:55:48.602824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:55:48.669: INFO: Verifying statefulset ss doesn't scale past 3 for another 947.290302ms
  E0430 16:55:49.602980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8499 @ 04/30/24 16:55:49.669
  Apr 30 16:55:49.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:55:49.830: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 30 16:55:49.830: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:55:49.830: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:55:49.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:55:49.978: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 30 16:55:49.978: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:55:49.978: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:55:49.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=statefulset-8499 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 30 16:55:50.125: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 30 16:55:50.125: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 30 16:55:50.125: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 30 16:55:50.125: INFO: Scaling statefulset ss to 0
  E0430 16:55:50.603976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:51.604318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:52.604875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:53.605120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:54.605745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:55.605887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:56.606025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:57.606789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:58.606931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:55:59.607061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/30/24 16:56:00.15
  Apr 30 16:56:00.150: INFO: Deleting all statefulset in ns statefulset-8499
  Apr 30 16:56:00.153: INFO: Scaling statefulset ss to 0
  Apr 30 16:56:00.164: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 16:56:00.168: INFO: Deleting statefulset ss
  Apr 30 16:56:00.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8499" for this suite. @ 04/30/24 16:56:00.186
• [71.544 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/30/24 16:56:00.196
  Apr 30 16:56:00.196: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 16:56:00.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:00.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:00.226
  STEP: set up a multi version CRD @ 04/30/24 16:56:00.229
  Apr 30 16:56:00.230: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 16:56:00.607133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:01.607602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:02.608630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:03.609319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:04.609840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/30/24 16:56:04.684
  STEP: check the unserved version gets removed @ 04/30/24 16:56:04.714
  E0430 16:56:05.609903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/30/24 16:56:06.09
  E0430 16:56:06.610862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:07.611270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:08.611406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 16:56:09.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8148" for this suite. @ 04/30/24 16:56:09.468
• [9.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/30/24 16:56:09.483
  Apr 30 16:56:09.483: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:56:09.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:09.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:09.51
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/30/24 16:56:09.513
  E0430 16:56:09.611465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:10.612135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:11.612162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:12.612323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:56:13.542
  Apr 30 16:56:13.546: INFO: Trying to get logs from node perfermance-5 pod pod-24b2f75d-93f7-4dc5-9945-678080147422 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:56:13.569
  Apr 30 16:56:13.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9037" for this suite. @ 04/30/24 16:56:13.602
  E0430 16:56:13.612845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/30/24 16:56:13.624
  Apr 30 16:56:13.624: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 16:56:13.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:13.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:13.666
  E0430 16:56:14.613167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:15.613636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:16.614308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:17.614886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:18.615476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:19.615721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:56:19.747
  Apr 30 16:56:19.750: INFO: Trying to get logs from node perfermance-5 pod client-envvars-26d9e234-26e4-4d02-91f5-0832e6cb117a container env3cont: <nil>
  STEP: delete the pod @ 04/30/24 16:56:19.758
  Apr 30 16:56:19.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6700" for this suite. @ 04/30/24 16:56:19.781
• [6.167 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/30/24 16:56:19.791
  Apr 30 16:56:19.791: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:56:19.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:19.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:19.815
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/30/24 16:56:19.817
  E0430 16:56:20.615937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:21.616494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:22.616853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:23.617160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:56:23.849
  Apr 30 16:56:23.853: INFO: Trying to get logs from node perfermance-5 pod pod-35d9c244-1644-4168-a215-c8b6180a9b7b container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:56:23.86
  Apr 30 16:56:23.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4686" for this suite. @ 04/30/24 16:56:23.894
• [4.111 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/30/24 16:56:23.906
  Apr 30 16:56:23.906: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 16:56:23.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:23.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:23.938
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/30/24 16:56:23.941
  E0430 16:56:24.618067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:25.618672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:26.619741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:27.620273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:56:27.978
  Apr 30 16:56:27.981: INFO: Trying to get logs from node perfermance-5 pod pod-ab84ddf4-9287-48e9-be78-0cbebd920711 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 16:56:27.988
  Apr 30 16:56:28.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1632" for this suite. @ 04/30/24 16:56:28.044
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 04/30/24 16:56:28.052
  Apr 30 16:56:28.052: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 16:56:28.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:28.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:28.072
  STEP: creating secret secrets-6764/secret-test-8ddb0e6e-ca59-44f0-a4d9-aed40df08fc9 @ 04/30/24 16:56:28.075
  STEP: Creating a pod to test consume secrets @ 04/30/24 16:56:28.081
  E0430 16:56:28.621292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:29.621801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:30.621845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:31.622221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 16:56:32.104
  Apr 30 16:56:32.108: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-6fb2a775-1b0e-4e90-bdd4-a5c9c97e938f container env-test: <nil>
  STEP: delete the pod @ 04/30/24 16:56:32.115
  Apr 30 16:56:32.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6764" for this suite. @ 04/30/24 16:56:32.148
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/30/24 16:56:32.156
  Apr 30 16:56:32.156: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/30/24 16:56:32.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:32.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:32.179
  STEP: Creating two CSIDrivers @ 04/30/24 16:56:32.182
  STEP: Getting "inline-driver-aa1ec89c-912a-478e-aa33-5dc16e824aad" & "inline-driver-749ff638-1504-483e-a6d4-7c61281f565e" @ 04/30/24 16:56:32.201
  STEP: Patching the CSIDriver "inline-driver-749ff638-1504-483e-a6d4-7c61281f565e" @ 04/30/24 16:56:32.207
  STEP: Updating the CSIDriver "inline-driver-749ff638-1504-483e-a6d4-7c61281f565e" @ 04/30/24 16:56:32.216
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7434" @ 04/30/24 16:56:32.226
  STEP: Deleting CSIDriver "inline-driver-aa1ec89c-912a-478e-aa33-5dc16e824aad" @ 04/30/24 16:56:32.23
  STEP: Confirm deletion of CSIDriver "inline-driver-aa1ec89c-912a-478e-aa33-5dc16e824aad" @ 04/30/24 16:56:32.237
  STEP: Deleting CSIDriver "inline-driver-749ff638-1504-483e-a6d4-7c61281f565e" via DeleteCollection @ 04/30/24 16:56:32.24
  STEP: Confirm deletion of CSIDriver "inline-driver-749ff638-1504-483e-a6d4-7c61281f565e" @ 04/30/24 16:56:32.252
  Apr 30 16:56:32.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7434" for this suite. @ 04/30/24 16:56:32.259
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 04/30/24 16:56:32.268
  Apr 30 16:56:32.268: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 16:56:32.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:32.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:32.29
  STEP: creating a secret @ 04/30/24 16:56:32.293
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/30/24 16:56:32.299
  STEP: patching the secret @ 04/30/24 16:56:32.304
  STEP: deleting the secret using a LabelSelector @ 04/30/24 16:56:32.322
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/30/24 16:56:32.331
  Apr 30 16:56:32.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-687" for this suite. @ 04/30/24 16:56:32.339
• [0.083 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/30/24 16:56:32.352
  Apr 30 16:56:32.352: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename cronjob @ 04/30/24 16:56:32.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 16:56:32.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 16:56:32.375
  STEP: Creating a ForbidConcurrent cronjob @ 04/30/24 16:56:32.379
  STEP: Ensuring a job is scheduled @ 04/30/24 16:56:32.388
  E0430 16:56:32.623050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:33.623364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:34.624455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:35.624825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:36.625584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:37.626239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:38.627006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:39.627401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:40.627933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:41.628290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:42.629068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:43.629662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:44.630314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:45.630595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:46.631761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:47.632644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:48.632728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:49.633029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:50.633816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:51.634050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:52.635037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:53.635540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:54.636489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:55.636671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:56.637476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:57.638107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:58.638155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:56:59.638474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/30/24 16:57:00.393
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/30/24 16:57:00.396
  STEP: Ensuring no more jobs are scheduled @ 04/30/24 16:57:00.399
  E0430 16:57:00.639325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:01.639906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:02.640240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:03.640419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:04.640681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:05.640907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:06.641401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:07.642041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:08.642640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:09.642907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:10.643389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:11.643677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:12.643878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:13.644060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:14.644307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:15.644525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:16.645464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:17.645874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:18.646392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:19.646557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:20.647543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:21.647824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:22.647839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:23.648136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:24.648856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:25.649001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:26.649450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:27.650589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:28.651162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:29.651516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:30.651578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:31.652074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:32.652903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:33.653397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:34.653905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:35.654276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:36.654412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:37.654870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:38.655729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:39.656720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:40.656867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:41.657006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:42.657071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:43.657477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:44.657734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:45.657896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:46.658953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:47.659406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:48.660117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:49.660451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:50.660628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:51.660954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:52.661137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:53.661437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:54.661671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:55.661762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:56.662055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:57.662780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:58.663319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:57:59.663624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:00.664318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:01.664627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:02.665262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:03.665437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:04.666407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:05.666657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:06.666703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:07.667135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:08.667811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:09.668445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:10.669355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:11.669685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:12.670275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:13.670708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:14.671664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:15.672426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:16.672499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:17.673423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:18.674466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:19.674894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:20.675581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:21.675922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:22.676063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:23.676438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:24.677391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:25.677449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:26.677677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:27.678386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:28.678711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:29.678935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:30.679026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:31.679300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:32.680200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:33.680442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:34.680675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:35.680984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:36.681641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:37.682296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:38.682580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:39.682989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:40.683522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:41.684064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:42.684983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:43.685525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:44.685770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:45.686323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:46.686461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:47.687410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:48.688400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:49.688728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:50.689375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:51.689641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:52.690685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:53.690905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:54.691585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:55.691861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:56.691962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:57.692586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:58.693511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:58:59.693807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:00.693973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:01.694212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:02.695079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:03.695337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:04.695835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:05.696136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:06.696165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:07.696559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:08.696803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:09.697063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:10.697390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:11.697712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:12.697833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:13.698379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:14.699251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:15.699911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:16.700805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:17.701459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:18.702059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:19.702297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:20.702614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:21.702875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:22.703705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:23.704123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:24.704876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:25.705131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:26.705636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:27.706325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:28.707358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:29.707606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:30.708644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:31.708934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:32.709232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:33.709346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:34.710143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:35.710580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:36.710711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:37.711508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:38.712143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:39.712379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:40.712393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:41.712566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:42.713372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:43.713568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:44.713871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:45.714611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:46.714732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:47.715630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:48.716109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:49.716384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:50.716849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:51.717195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:52.718452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:53.718876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:54.718976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:55.719256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:56.720323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:57.720454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:58.720991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 16:59:59.721407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:00.722298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:01.722683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:02.723199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:03.723582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:04.723767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:05.723829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:06.723984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:07.724117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:08.724966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:09.725480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:10.726061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:11.726752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:12.727669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:13.728084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:14.728725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:15.728945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:16.729010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:17.729217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:18.730195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:19.730699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:20.731262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:21.731639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:22.732417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:23.732731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:24.733680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:25.733732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:26.734150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:27.734350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:28.734590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:29.734844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:30.735667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:31.736836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:32.737441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:33.737533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:34.738413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:35.738796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:36.739319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:37.739683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:38.740569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:39.740849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:40.741362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:41.741660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:42.742367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:43.742513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:44.743365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:45.743638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:46.744554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:47.744668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:48.744773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:49.745139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:50.745381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:51.745817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:52.746653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:53.747712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:54.748673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:55.748863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:56.749164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:57.749679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:58.749773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:00:59.750058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:00.750971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:01.751404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:02.752381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:03.752621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:04.752824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:05.753127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:06.753406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:07.754204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:08.754739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:09.755305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:10.755433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:11.755821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:12.756744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:13.759626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:14.759753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:15.759839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:16.760031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:17.760633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:18.760871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:19.761035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:20.761685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:21.761836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:22.761867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:23.762033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:24.762843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:25.762994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:26.763545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:27.764390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:28.764729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:29.764813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:30.765581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:31.766231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:32.766675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:33.770654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:34.770795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:35.771214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:36.771903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:37.772788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:38.773610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:39.773944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:40.774130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:41.774480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:42.775189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:43.775703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:44.775792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:45.776125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:46.777208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:47.777733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:48.778398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:49.778910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:50.778958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:51.779070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:52.779480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:53.779699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:54.780540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:55.780982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:56.781102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:57.781781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:58.782647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:01:59.782947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/30/24 17:02:00.412
  Apr 30 17:02:00.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-367" for this suite. @ 04/30/24 17:02:00.429
• [328.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/30/24 17:02:00.439
  Apr 30 17:02:00.439: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename init-container @ 04/30/24 17:02:00.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:02:00.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:02:00.527
  STEP: creating the pod @ 04/30/24 17:02:00.531
  Apr 30 17:02:00.531: INFO: PodSpec: initContainers in spec.initContainers
  E0430 17:02:00.783927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:01.784826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:02.784988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:03.785149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:04.785304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:05.785846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:06.786007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:07.786633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:08.787133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:09.787133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:10.787273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:11.787495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:12.787662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:13.787788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:14.787905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:15.787972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:16.788200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:17.788338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:18.788496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:19.789498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:20.790618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:21.790735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:22.791717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:23.792004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:24.792781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:25.792684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:26.793486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:27.793881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:28.794243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:29.794548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:30.794657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:31.795001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:32.795488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:33.795667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:34.796609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:35.797195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:36.797655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:37.798167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:38.798337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:39.798447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:40.798663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:41.798761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:42.798905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:43.799121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:44.799365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:45.799614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:46.800324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:02:47.592: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-c58f3669-8a02-4986-9384-b7b962630a22", GenerateName:"", Namespace:"init-container-7052", SelfLink:"", UID:"83fac7d0-2a70-4b8c-bfb0-9efb3f5c99ee", ResourceVersion:"213840", Generation:0, CreationTimestamp:time.Date(2024, time.April, 30, 17, 2, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"531533569"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"150225e624b167547fd084959acfb90dbc05ee0d111d5d91563825c4e50737b3", "cni.projectcalico.org/podIP":"100.73.144.103/32", "cni.projectcalico.org/podIPs":"100.73.144.103/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 17, 2, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003eee558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 17, 2, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003eee5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 30, 17, 2, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003eee600), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-jfpp9", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0050fd240), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jfpp9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jfpp9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jfpp9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0062feb70), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"perfermance-5", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0004a42a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0062fec10)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0062fec30)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0062fec38), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0062fec3c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003d2f230), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 30, 17, 2, 2, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 30, 17, 2, 0, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 30, 17, 2, 0, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 30, 17, 2, 0, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 30, 17, 2, 0, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.111.203", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.111.203"}}, PodIP:"100.73.144.103", PodIPs:[]v1.PodIP{v1.PodIP{IP:"100.73.144.103"}}, StartTime:time.Date(2024, time.April, 30, 17, 2, 0, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004a4460)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004a44d0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://a0ce753f84687ba431d1512701b24d4407826bf1e1ea8edeeb0b7d3a7ea3dce4", Started:(*bool)(0xc0062fecdf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0050fd2e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0062fece5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0050fd2c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0062fecb4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 30 17:02:47.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7052" for this suite. @ 04/30/24 17:02:47.6
• [47.176 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/30/24 17:02:47.615
  Apr 30 17:02:47.615: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-preemption @ 04/30/24 17:02:47.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:02:47.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:02:47.666
  Apr 30 17:02:47.690: INFO: Waiting up to 1m0s for all nodes to be ready
  E0430 17:02:47.801048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:48.801704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:49.801963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:50.802268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:51.802998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:52.803566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:53.803903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:54.804124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:55.804701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:56.805186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:57.805601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:58.806648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:02:59.807530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:00.807804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:01.808788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:02.809488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:03.809637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:04.810011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:05.810759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:06.811356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:07.811910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:08.812108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:09.812351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:10.812443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:11.812763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:12.812954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:13.813235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:14.813313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:15.813613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:16.814186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:17.814970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:18.815780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:19.816064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:20.816175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:21.817080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:22.817634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:23.818460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:24.818856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:25.819705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:26.819980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:27.820719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:28.821210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:29.821572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:30.821820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:31.822627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:32.822778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:33.823463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:34.823789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:35.824341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:36.824883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:37.825490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:38.826323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:39.827250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:40.827535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:41.827996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:42.828614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:43.828819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:44.829316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:45.829711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:46.830318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:03:47.698: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/30/24 17:03:47.703
  Apr 30 17:03:47.703: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/30/24 17:03:47.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:03:47.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:03:47.735
  Apr 30 17:03:47.767: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 30 17:03:47.771: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  E0430 17:03:47.831203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:03:47.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2789" for this suite. @ 04/30/24 17:03:47.964
  Apr 30 17:03:47.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8105" for this suite. @ 04/30/24 17:03:47.995
• [60.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/30/24 17:03:48.004
  Apr 30 17:03:48.004: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 17:03:48.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:03:48.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:03:48.047
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/30/24 17:03:48.051
  Apr 30 17:03:48.052: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:03:48.831400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:49.832259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:50.832596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:51.833069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:52.834190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:53.834641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:54.834827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/30/24 17:03:55.226
  Apr 30 17:03:55.227: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:03:55.835612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:56.836718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:03:57.240: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:03:57.837415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:58.837652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:03:59.838155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:00.839138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:01.839667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:02.840164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:03.840294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:04:04.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8669" for this suite. @ 04/30/24 17:04:04.489
• [16.503 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/30/24 17:04:04.508
  Apr 30 17:04:04.508: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename subjectreview @ 04/30/24 17:04:04.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:04:04.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:04:04.562
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6017" @ 04/30/24 17:04:04.566
  Apr 30 17:04:04.597: INFO: saUsername: "system:serviceaccount:subjectreview-6017:e2e"
  Apr 30 17:04:04.597: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6017"}
  Apr 30 17:04:04.597: INFO: saUID: "d486f7e6-087e-4db8-bb42-d262e2e9041d"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6017:e2e" @ 04/30/24 17:04:04.597
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6017:e2e" @ 04/30/24 17:04:04.598
  Apr 30 17:04:04.600: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6017:e2e" api 'list' configmaps in "subjectreview-6017" namespace @ 04/30/24 17:04:04.6
  Apr 30 17:04:04.602: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6017:e2e" @ 04/30/24 17:04:04.602
  Apr 30 17:04:04.604: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 30 17:04:04.604: INFO: LocalSubjectAccessReview has been verified
  Apr 30 17:04:04.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6017" for this suite. @ 04/30/24 17:04:04.609
• [0.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/30/24 17:04:04.618
  Apr 30 17:04:04.618: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 17:04:04.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:04:04.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:04:04.644
  STEP: creating the pod @ 04/30/24 17:04:04.65
  STEP: submitting the pod to kubernetes @ 04/30/24 17:04:04.651
  W0430 17:04:04.675504      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0430 17:04:04.840503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:05.840555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/30/24 17:04:06.754
  STEP: updating the pod @ 04/30/24 17:04:06.759
  E0430 17:04:06.841565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:04:07.328: INFO: Successfully updated pod "pod-update-activedeadlineseconds-72e9c5ef-383a-48f3-ade1-345492dbb2e7"
  E0430 17:04:07.842643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:08.842995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:09.843115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:10.843279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:04:11.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1023" for this suite. @ 04/30/24 17:04:11.386
• [6.797 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/30/24 17:04:11.417
  Apr 30 17:04:11.417: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-preemption @ 04/30/24 17:04:11.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:04:11.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:04:11.468
  Apr 30 17:04:11.570: INFO: Waiting up to 1m0s for all nodes to be ready
  E0430 17:04:11.844041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:12.844650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:13.845330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:14.845696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:15.845907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:16.846367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:17.846586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:18.847511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:19.848460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:20.848747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:21.848910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:22.849967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:23.850096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:24.850400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:25.850989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:26.851430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:27.852092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:28.852498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:29.852658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:30.853092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:31.853773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:32.854271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:33.855308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:34.855608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:35.856141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:36.856526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:37.857752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:38.858232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:39.858779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:40.859159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:41.861063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:42.861579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:43.862166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:44.862453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:45.862785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:46.863408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:47.863742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:48.864076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:49.864743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:50.864871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:51.865747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:52.866616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:53.866785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:54.867403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:55.867501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:56.867912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:57.867731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:58.868226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:04:59.868884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:00.869041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:01.870248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:02.870380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:03.870628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:04.870883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:05.871843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:06.872392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:07.873409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:08.873644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:09.874739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:10.875750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:05:11.576: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/30/24 17:05:11.58
  Apr 30 17:05:11.580: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/30/24 17:05:11.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:05:11.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:05:11.618
  STEP: Finding an available node @ 04/30/24 17:05:11.622
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/30/24 17:05:11.622
  E0430 17:05:11.876711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:12.876907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/30/24 17:05:13.65
  Apr 30 17:05:13.685: INFO: found a healthy node: perfermance-5
  E0430 17:05:13.877231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:14.877400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:15.877804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:16.877912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:17.878258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:18.878387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:19.878371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:20.879040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:05:21.823: INFO: pods created so far: [1 1 1]
  Apr 30 17:05:21.823: INFO: length of pods created so far: 3
  E0430 17:05:21.882079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:22.882728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:05:23.835: INFO: pods created so far: [2 2 1]
  E0430 17:05:23.882932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:24.883046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:25.883827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:26.884196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:27.885008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:28.885348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:29.885531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:30.885717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:05:30.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4733" for this suite. @ 04/30/24 17:05:30.944
  Apr 30 17:05:30.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4339" for this suite. @ 04/30/24 17:05:30.969
• [79.567 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/30/24 17:05:30.984
  Apr 30 17:05:30.984: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename watch @ 04/30/24 17:05:30.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:05:31.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:05:31.008
  STEP: creating a watch on configmaps with a certain label @ 04/30/24 17:05:31.011
  STEP: creating a new configmap @ 04/30/24 17:05:31.012
  STEP: modifying the configmap once @ 04/30/24 17:05:31.023
  STEP: changing the label value of the configmap @ 04/30/24 17:05:31.032
  STEP: Expecting to observe a delete notification for the watched object @ 04/30/24 17:05:31.042
  Apr 30 17:05:31.042: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5334  7231865b-3c14-4022-bad2-18acdb5de4a0 214704 0 2024-04-30 17:05:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-30 17:05:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:05:31.043: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5334  7231865b-3c14-4022-bad2-18acdb5de4a0 214705 0 2024-04-30 17:05:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-30 17:05:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:05:31.043: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5334  7231865b-3c14-4022-bad2-18acdb5de4a0 214706 0 2024-04-30 17:05:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-30 17:05:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/30/24 17:05:31.043
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/30/24 17:05:31.055
  E0430 17:05:31.886613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:32.887262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:33.887498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:34.887822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:35.888288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:36.888405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:37.889077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:38.889377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:39.889628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:40.889861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/30/24 17:05:41.056
  STEP: modifying the configmap a third time @ 04/30/24 17:05:41.069
  STEP: deleting the configmap @ 04/30/24 17:05:41.084
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/30/24 17:05:41.091
  Apr 30 17:05:41.091: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5334  7231865b-3c14-4022-bad2-18acdb5de4a0 214814 0 2024-04-30 17:05:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-30 17:05:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:05:41.091: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5334  7231865b-3c14-4022-bad2-18acdb5de4a0 214815 0 2024-04-30 17:05:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-30 17:05:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:05:41.092: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5334  7231865b-3c14-4022-bad2-18acdb5de4a0 214816 0 2024-04-30 17:05:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-30 17:05:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:05:41.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5334" for this suite. @ 04/30/24 17:05:41.098
• [10.123 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/30/24 17:05:41.107
  Apr 30 17:05:41.107: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 17:05:41.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:05:41.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:05:41.135
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/30/24 17:05:41.139
  E0430 17:05:41.889919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:42.890649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:43.891482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:44.891886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:05:45.179
  Apr 30 17:05:45.184: INFO: Trying to get logs from node perfermance-5 pod pod-a30c8f25-16ce-411f-8262-80b86d8d0f6f container test-container: <nil>
  STEP: delete the pod @ 04/30/24 17:05:45.209
  Apr 30 17:05:45.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-905" for this suite. @ 04/30/24 17:05:45.248
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/30/24 17:05:45.262
  Apr 30 17:05:45.262: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/30/24 17:05:45.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:05:45.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:05:45.292
  STEP: creating @ 04/30/24 17:05:45.295
  STEP: getting @ 04/30/24 17:05:45.336
  STEP: listing in namespace @ 04/30/24 17:05:45.355
  STEP: patching @ 04/30/24 17:05:45.358
  STEP: deleting @ 04/30/24 17:05:45.37
  Apr 30 17:05:45.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4089" for this suite. @ 04/30/24 17:05:45.397
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/30/24 17:05:45.409
  Apr 30 17:05:45.409: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 17:05:45.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:05:45.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:05:45.439
  Apr 30 17:05:45.443: INFO: Creating deployment "test-recreate-deployment"
  Apr 30 17:05:45.448: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 30 17:05:45.459: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0430 17:05:45.892606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:46.893423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:05:47.466: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 30 17:05:47.469: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 30 17:05:47.482: INFO: Updating deployment test-recreate-deployment
  Apr 30 17:05:47.482: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Apr 30 17:05:47.619: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "960178ca-1332-4855-90ff-57682f06cc43",
      ResourceVersion: (string) (len=6) "214924",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093545,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 30 17:05:47.627: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d00d44e9-9d19-4306-9747-5d337a6c9259",
      ResourceVersion: (string) (len=6) "214922",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "960178ca-1332-4855-90ff-57682f06cc43",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 36 30 31 37 38  63 61 2d 31 33 33 32 2d  |\"960178ca-1332-|
              00000120  34 38 35 35 2d 39 30 66  66 2d 35 37 36 38 32 66  |4855-90ff-57682f|
              00000130  30 36 63 63 34 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |06cc43\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 17:05:47.629: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 30 17:05:47.630: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41ee77db-f291-4aba-895f-b573ec6a64e0",
      ResourceVersion: (string) (len=6) "214913",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093545,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "960178ca-1332-4855-90ff-57682f06cc43",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 36 30 31 37 38  63 61 2d 31 33 33 32 2d  |\"960178ca-1332-|
              00000120  34 38 35 35 2d 39 30 66  66 2d 35 37 36 38 32 66  |4855-90ff-57682f|
              00000130  30 36 63 63 34 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |06cc43\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 17:05:47.637: INFO: Pod "test-recreate-deployment-76fb77d45-j495g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-j495g",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-5047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49a5acfe-a819-4291-a92f-1ea1ec6f5919",
      ResourceVersion: (string) (len=6) "214919",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "d00d44e9-9d19-4306-9747-5d337a6c9259",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  30 64 34 34 65 39 2d 39  |d\":\"d00d44e9-9|
              00000090  64 31 39 2d 34 33 30 36  2d 39 37 34 37 2d 35 64  |d19-4306-9747-5d|
              000000a0  33 33 37 61 36 63 39 32  35 39 5c 22 7d 22 3a 7b  |337a6c9259\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q2rcd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q2rcd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:05:47.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5047" for this suite. @ 04/30/24 17:05:47.646
• [2.250 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/30/24 17:05:47.66
  Apr 30 17:05:47.660: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:05:47.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:05:47.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:05:47.684
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:05:47.687
  E0430 17:05:47.894513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:48.895035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:49.895690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:50.896033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:05:51.724
  Apr 30 17:05:51.727: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-a5c0536d-6923-4e27-a57a-8f33d1d6c7de container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:05:51.735
  Apr 30 17:05:51.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3382" for this suite. @ 04/30/24 17:05:51.768
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/30/24 17:05:51.78
  Apr 30 17:05:51.780: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 17:05:51.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:05:51.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:05:51.805
  E0430 17:05:51.897050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:52.897861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:53.898629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:54.899232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:55.899894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:56.900434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:57.901217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:58.901736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:05:59.902157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:00.902883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:01.903552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:02.904283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:03.904320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:04.905058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:05.905578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:06.905795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:07.906670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:08.907423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:09.907616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:10.907773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:11.908646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:12.909252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:13.909478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:14.909940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:15.910817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:16.911049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:17.911905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:18.912155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:19.912233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:20.912385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:21.913026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:22.913901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:23.914693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:24.914857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:25.915028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:26.915189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:27.915382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:28.915729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:29.915896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:30.916609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:31.917627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:32.917674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:33.917860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:34.917858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:35.918044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:36.919035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:37.919173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:38.919331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:39.919628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:40.920339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:41.920483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:42.920723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:43.920795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:44.921018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:45.922149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:46.922515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:47.922599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:48.923003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:49.924214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:50.924408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:06:51.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3642" for this suite. @ 04/30/24 17:06:51.833
• [60.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/30/24 17:06:51.847
  Apr 30 17:06:51.847: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-preemption @ 04/30/24 17:06:51.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:06:51.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:06:51.874
  Apr 30 17:06:51.896: INFO: Waiting up to 1m0s for all nodes to be ready
  E0430 17:06:51.924681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:52.925281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:53.925711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:54.926080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:55.927002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:56.927813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:57.928283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:58.928480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:06:59.929238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:00.929512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:01.930231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:02.930761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:03.931049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:04.931530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:05.932019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:06.932471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:07.932970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:08.933407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:09.934202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:10.934557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:11.934772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:12.935686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:13.936006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:14.936168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:15.936581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:16.936739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:17.936974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:18.937649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:19.938625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:20.938848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:21.939568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:22.940598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:23.941447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:24.941671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:25.942514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:26.942834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:27.943466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:28.943970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:29.944065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:30.944381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:31.945405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:32.945989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:33.946532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:34.947080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:35.948059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:36.948607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:37.948685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:38.948961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:39.949648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:40.949914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:41.950832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:42.951748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:43.952432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:44.952754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:45.953847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:46.954342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:47.955438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:48.955776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:49.956314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:50.956717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:07:51.903: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/30/24 17:07:51.907
  Apr 30 17:07:51.937: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 30 17:07:51.950: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  E0430 17:07:51.957362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:07:51.994: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 30 17:07:52.014: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/30/24 17:07:52.014
  E0430 17:07:52.957542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:53.958364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/30/24 17:07:54.052
  E0430 17:07:54.958625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:55.958849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:56.959675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:57.960222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:07:58.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6181" for this suite. @ 04/30/24 17:07:58.162
• [66.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/30/24 17:07:58.171
  Apr 30 17:07:58.171: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 17:07:58.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:07:58.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:07:58.2
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:07:58.204
  E0430 17:07:58.961191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:07:59.961802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:00.962689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:01.962968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:08:02.232
  Apr 30 17:08:02.236: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-c88b939a-9895-4ac4-a684-f1669e62f185 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:08:02.253
  Apr 30 17:08:02.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4501" for this suite. @ 04/30/24 17:08:02.281
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/30/24 17:08:02.294
  Apr 30 17:08:02.294: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename limitrange @ 04/30/24 17:08:02.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:02.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:02.322
  STEP: Creating LimitRange "e2e-limitrange-nlvg5" in namespace "limitrange-224" @ 04/30/24 17:08:02.325
  STEP: Creating another limitRange in another namespace @ 04/30/24 17:08:02.332
  Apr 30 17:08:02.361: INFO: Namespace "e2e-limitrange-nlvg5-5257" created
  Apr 30 17:08:02.361: INFO: Creating LimitRange "e2e-limitrange-nlvg5" in namespace "e2e-limitrange-nlvg5-5257"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-nlvg5" @ 04/30/24 17:08:02.369
  Apr 30 17:08:02.372: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-nlvg5" in "limitrange-224" namespace @ 04/30/24 17:08:02.373
  Apr 30 17:08:02.388: INFO: LimitRange "e2e-limitrange-nlvg5" has been patched
  STEP: Delete LimitRange "e2e-limitrange-nlvg5" by Collection with labelSelector: "e2e-limitrange-nlvg5=patched" @ 04/30/24 17:08:02.388
  STEP: Confirm that the limitRange "e2e-limitrange-nlvg5" has been deleted @ 04/30/24 17:08:02.397
  Apr 30 17:08:02.397: INFO: Requesting list of LimitRange to confirm quantity
  Apr 30 17:08:02.401: INFO: Found 0 LimitRange with label "e2e-limitrange-nlvg5=patched"
  Apr 30 17:08:02.401: INFO: LimitRange "e2e-limitrange-nlvg5" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-nlvg5" @ 04/30/24 17:08:02.401
  Apr 30 17:08:02.405: INFO: Found 1 limitRange
  Apr 30 17:08:02.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-224" for this suite. @ 04/30/24 17:08:02.41
  STEP: Destroying namespace "e2e-limitrange-nlvg5-5257" for this suite. @ 04/30/24 17:08:02.42
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/30/24 17:08:02.433
  Apr 30 17:08:02.433: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replicaset @ 04/30/24 17:08:02.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:02.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:02.457
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/30/24 17:08:02.46
  Apr 30 17:08:02.470: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0430 17:08:02.963762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:03.964824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:04.965143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:05.965583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:06.965691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:07.475: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/30/24 17:08:07.475
  STEP: getting scale subresource @ 04/30/24 17:08:07.476
  STEP: updating a scale subresource @ 04/30/24 17:08:07.479
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/30/24 17:08:07.493
  STEP: Patch a scale subresource @ 04/30/24 17:08:07.507
  Apr 30 17:08:07.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5754" for this suite. @ 04/30/24 17:08:07.569
• [5.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/30/24 17:08:07.604
  Apr 30 17:08:07.604: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename conformance-tests @ 04/30/24 17:08:07.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:07.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:07.64
  STEP: Getting node addresses @ 04/30/24 17:08:07.644
  Apr 30 17:08:07.644: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 30 17:08:07.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6554" for this suite. @ 04/30/24 17:08:07.659
• [0.065 seconds]
------------------------------
S
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 04/30/24 17:08:07.669
  Apr 30 17:08:07.669: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 17:08:07.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:07.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:07.696
  STEP: creating a collection of services @ 04/30/24 17:08:07.7
  Apr 30 17:08:07.700: INFO: Creating e2e-svc-a-c5wvg
  Apr 30 17:08:07.721: INFO: Creating e2e-svc-b-p2btx
  Apr 30 17:08:07.740: INFO: Creating e2e-svc-c-8tl5n
  STEP: deleting service collection @ 04/30/24 17:08:07.774
  Apr 30 17:08:07.838: INFO: Collection of services has been deleted
  Apr 30 17:08:07.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2783" for this suite. @ 04/30/24 17:08:07.844
• [0.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/30/24 17:08:07.858
  Apr 30 17:08:07.858: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/30/24 17:08:07.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:07.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:07.896
  STEP: mirroring a new custom Endpoint @ 04/30/24 17:08:07.915
  Apr 30 17:08:07.929: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0430 17:08:07.965916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:08.967045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/30/24 17:08:09.934
  Apr 30 17:08:09.944: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0430 17:08:09.967472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:10.967518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 04/30/24 17:08:11.948
  Apr 30 17:08:11.964: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0430 17:08:11.968451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:12.968960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:13.968959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:13.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7520" for this suite. @ 04/30/24 17:08:13.973
• [6.127 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/30/24 17:08:13.986
  Apr 30 17:08:13.986: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 17:08:13.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:14.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:14.01
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/30/24 17:08:14.013
  E0430 17:08:14.969194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:15.969704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:16.969989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:17.970192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:08:18.038
  Apr 30 17:08:18.044: INFO: Trying to get logs from node perfermance-5 pod pod-d3e02a7e-ca82-4bb6-bfab-a5278920382a container test-container: <nil>
  STEP: delete the pod @ 04/30/24 17:08:18.05
  Apr 30 17:08:18.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5791" for this suite. @ 04/30/24 17:08:18.08
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/30/24 17:08:18.092
  Apr 30 17:08:18.092: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename namespaces @ 04/30/24 17:08:18.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:18.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:18.113
  STEP: Creating a test namespace @ 04/30/24 17:08:18.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:18.133
  STEP: Creating a service in the namespace @ 04/30/24 17:08:18.135
  STEP: Deleting the namespace @ 04/30/24 17:08:18.147
  STEP: Waiting for the namespace to be removed. @ 04/30/24 17:08:18.161
  E0430 17:08:18.970365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:19.971410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:20.971525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:21.971957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:22.973102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:23.973215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/30/24 17:08:24.166
  STEP: Verifying there is no service in the namespace @ 04/30/24 17:08:24.186
  Apr 30 17:08:24.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3158" for this suite. @ 04/30/24 17:08:24.196
  STEP: Destroying namespace "nsdeletetest-2074" for this suite. @ 04/30/24 17:08:24.21
  Apr 30 17:08:24.214: INFO: Namespace nsdeletetest-2074 was already deleted
  STEP: Destroying namespace "nsdeletetest-6168" for this suite. @ 04/30/24 17:08:24.214
• [6.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/30/24 17:08:24.224
  Apr 30 17:08:24.224: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:08:24.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:24.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:24.253
  STEP: Creating configMap with name projected-configmap-test-volume-map-43167d4f-f021-4cbf-9c16-d4d5e644c788 @ 04/30/24 17:08:24.256
  STEP: Creating a pod to test consume configMaps @ 04/30/24 17:08:24.263
  E0430 17:08:24.973531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:25.973747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:26.974466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:27.975474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:08:28.29
  Apr 30 17:08:28.294: INFO: Trying to get logs from node perfermance-5 pod pod-projected-configmaps-88fe1831-e43f-408f-9754-4b1d8718172e container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 17:08:28.308
  Apr 30 17:08:28.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7155" for this suite. @ 04/30/24 17:08:28.34
• [4.125 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/30/24 17:08:28.349
  Apr 30 17:08:28.350: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:08:28.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:28.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:28.379
  STEP: Creating projection with secret that has name projected-secret-test-map-d17f4581-5b67-46c0-b4c5-04f2e2041037 @ 04/30/24 17:08:28.383
  STEP: Creating a pod to test consume secrets @ 04/30/24 17:08:28.39
  E0430 17:08:28.975765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:29.976155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:30.976290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:31.976780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:08:32.42
  Apr 30 17:08:32.424: INFO: Trying to get logs from node perfermance-5 pod pod-projected-secrets-e8c65856-8231-4909-bcb2-7f7a95c05d1b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 17:08:32.431
  Apr 30 17:08:32.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6019" for this suite. @ 04/30/24 17:08:32.461
• [4.123 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 04/30/24 17:08:32.474
  Apr 30 17:08:32.474: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename job @ 04/30/24 17:08:32.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:32.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:32.497
  STEP: Creating a job @ 04/30/24 17:08:32.5
  STEP: Ensuring job reaches completions @ 04/30/24 17:08:32.515
  E0430 17:08:32.977552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:33.977743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:34.977964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:35.978302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:36.979245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:37.979768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:38.980427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:39.980703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:40.980825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:41.981095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:42.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3659" for this suite. @ 04/30/24 17:08:42.531
• [10.071 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 04/30/24 17:08:42.545
  Apr 30 17:08:42.545: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubelet-test @ 04/30/24 17:08:42.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:42.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:42.572
  E0430 17:08:42.981230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:43.981503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:44.982623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:45.982782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:46.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6230" for this suite. @ 04/30/24 17:08:46.608
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 04/30/24 17:08:46.618
  Apr 30 17:08:46.619: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 17:08:46.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:46.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:46.649
  STEP: starting the proxy server @ 04/30/24 17:08:46.652
  Apr 30 17:08:46.652: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-8909 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/30/24 17:08:46.722
  Apr 30 17:08:46.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8909" for this suite. @ 04/30/24 17:08:46.739
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/30/24 17:08:46.753
  Apr 30 17:08:46.753: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:08:46.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:46.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:46.78
  STEP: Creating secret with name s-test-opt-del-809ea101-e45f-45d7-bb24-b240d5b90267 @ 04/30/24 17:08:46.787
  STEP: Creating secret with name s-test-opt-upd-36e0ede8-53a9-46f3-bbc6-3e54151127ab @ 04/30/24 17:08:46.797
  STEP: Creating the pod @ 04/30/24 17:08:46.806
  E0430 17:08:46.982931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:47.983038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-809ea101-e45f-45d7-bb24-b240d5b90267 @ 04/30/24 17:08:48.871
  STEP: Updating secret s-test-opt-upd-36e0ede8-53a9-46f3-bbc6-3e54151127ab @ 04/30/24 17:08:48.879
  STEP: Creating secret with name s-test-opt-create-5a4a25d4-fab0-4261-9753-b3e386265b54 @ 04/30/24 17:08:48.892
  STEP: waiting to observe update in volume @ 04/30/24 17:08:48.9
  E0430 17:08:48.984088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:49.984505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:50.984668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:51.985450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:52.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8263" for this suite. @ 04/30/24 17:08:52.947
• [6.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/30/24 17:08:52.956
  Apr 30 17:08:52.956: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 17:08:52.958
  E0430 17:08:52.986339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:53.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:53.038
  STEP: Create set of pods @ 04/30/24 17:08:53.04
  Apr 30 17:08:53.054: INFO: created test-pod-1
  Apr 30 17:08:53.064: INFO: created test-pod-2
  Apr 30 17:08:53.078: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/30/24 17:08:53.079
  E0430 17:08:53.986581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:54.987273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/30/24 17:08:55.161
  Apr 30 17:08:55.165: INFO: Pod quantity 3 is different from expected quantity 0
  E0430 17:08:55.987604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:56.167: INFO: Pod quantity 3 is different from expected quantity 0
  E0430 17:08:56.990735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:57.168: INFO: Pod quantity 3 is different from expected quantity 0
  E0430 17:08:57.990962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:08:58.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7554" for this suite. @ 04/30/24 17:08:58.171
• [5.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 04/30/24 17:08:58.189
  Apr 30 17:08:58.189: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 17:08:58.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:08:58.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:08:58.224
  STEP: Creating a ResourceQuota with terminating scope @ 04/30/24 17:08:58.229
  STEP: Ensuring ResourceQuota status is calculated @ 04/30/24 17:08:58.237
  E0430 17:08:58.991149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:08:59.991399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/30/24 17:09:00.242
  STEP: Ensuring ResourceQuota status is calculated @ 04/30/24 17:09:00.248
  E0430 17:09:00.991483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:01.992076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/30/24 17:09:02.253
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/30/24 17:09:02.271
  E0430 17:09:02.992999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:03.993241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/30/24 17:09:04.277
  E0430 17:09:04.994161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:05.994397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/30/24 17:09:06.282
  STEP: Ensuring resource quota status released the pod usage @ 04/30/24 17:09:06.314
  E0430 17:09:06.995338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:07.996148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/30/24 17:09:08.319
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/30/24 17:09:08.335
  E0430 17:09:08.997046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:09.997293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/30/24 17:09:10.34
  E0430 17:09:10.997372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:11.997621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/30/24 17:09:12.346
  STEP: Ensuring resource quota status released the pod usage @ 04/30/24 17:09:12.364
  E0430 17:09:12.998812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:13.999383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:09:14.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8765" for this suite. @ 04/30/24 17:09:14.374
• [16.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/30/24 17:09:14.385
  Apr 30 17:09:14.385: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:09:14.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:14.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:14.415
  STEP: Creating configMap with name projected-configmap-test-volume-map-c7a29572-dfd1-4bf7-86dc-e09384d7d219 @ 04/30/24 17:09:14.42
  STEP: Creating a pod to test consume configMaps @ 04/30/24 17:09:14.428
  E0430 17:09:14.999870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:16.000769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:17.000811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:18.000934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:09:18.458
  Apr 30 17:09:18.461: INFO: Trying to get logs from node perfermance-5 pod pod-projected-configmaps-9a7458db-6ffa-467c-bf40-58dd69d91158 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 17:09:18.468
  Apr 30 17:09:18.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5517" for this suite. @ 04/30/24 17:09:18.491
• [4.116 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/30/24 17:09:18.501
  Apr 30 17:09:18.501: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 17:09:18.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:18.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:18.524
  STEP: Creating the pod @ 04/30/24 17:09:18.528
  E0430 17:09:19.001137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:20.001671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:21.001486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:09:21.084: INFO: Successfully updated pod "labelsupdate22e9d06a-b072-4e9d-a796-762f33bff4e6"
  E0430 17:09:22.002626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:23.003096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:24.003325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:25.003473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:09:25.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-347" for this suite. @ 04/30/24 17:09:25.118
• [6.637 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 04/30/24 17:09:25.139
  Apr 30 17:09:25.139: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubelet-test @ 04/30/24 17:09:25.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:25.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:25.166
  E0430 17:09:26.003589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:27.003786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:09:27.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7326" for this suite. @ 04/30/24 17:09:27.219
• [2.092 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/30/24 17:09:27.23
  Apr 30 17:09:27.230: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename proxy @ 04/30/24 17:09:27.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:27.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:27.258
  STEP: starting an echo server on multiple ports @ 04/30/24 17:09:27.276
  STEP: creating replication controller proxy-service-7dvtt in namespace proxy-8837 @ 04/30/24 17:09:27.276
  I0430 17:09:27.292986      21 runners.go:197] Created replication controller with name: proxy-service-7dvtt, namespace: proxy-8837, replica count: 1
  E0430 17:09:28.004089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0430 17:09:28.343841      21 runners.go:197] proxy-service-7dvtt Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0430 17:09:29.005049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0430 17:09:29.344814      21 runners.go:197] proxy-service-7dvtt Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0430 17:09:30.005281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0430 17:09:30.345165      21 runners.go:197] proxy-service-7dvtt Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 30 17:09:30.349: INFO: setup took 3.089065228s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/30/24 17:09:30.349
  Apr 30 17:09:30.358: INFO: (0) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 8.311185ms)
  Apr 30 17:09:30.363: INFO: (0) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 13.009206ms)
  Apr 30 17:09:30.363: INFO: (0) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 13.066409ms)
  Apr 30 17:09:30.363: INFO: (0) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 12.97807ms)
  Apr 30 17:09:30.363: INFO: (0) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 13.198779ms)
  Apr 30 17:09:30.363: INFO: (0) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 13.268887ms)
  Apr 30 17:09:30.363: INFO: (0) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 13.266248ms)
  Apr 30 17:09:30.364: INFO: (0) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 14.460804ms)
  Apr 30 17:09:30.371: INFO: (0) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 21.205151ms)
  Apr 30 17:09:30.371: INFO: (0) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 21.28904ms)
  Apr 30 17:09:30.371: INFO: (0) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 21.566392ms)
  Apr 30 17:09:30.372: INFO: (0) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 21.64554ms)
  Apr 30 17:09:30.373: INFO: (0) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 22.72803ms)
  Apr 30 17:09:30.374: INFO: (0) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 23.838618ms)
  Apr 30 17:09:30.374: INFO: (0) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 24.407091ms)
  Apr 30 17:09:30.374: INFO: (0) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 24.037464ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 6.852366ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 7.421898ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.204702ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 8.167751ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 7.621886ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 7.80048ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 8.036217ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 8.124646ms)
  Apr 30 17:09:30.383: INFO: (1) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 9.024187ms)
  Apr 30 17:09:30.384: INFO: (1) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 9.557304ms)
  Apr 30 17:09:30.384: INFO: (1) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 8.987253ms)
  Apr 30 17:09:30.386: INFO: (1) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 11.154459ms)
  Apr 30 17:09:30.386: INFO: (1) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 11.337816ms)
  Apr 30 17:09:30.386: INFO: (1) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 11.648309ms)
  Apr 30 17:09:30.386: INFO: (1) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 10.211267ms)
  Apr 30 17:09:30.386: INFO: (1) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 10.705791ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 8.41561ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 7.297905ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 7.192581ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 8.340263ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 7.815266ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 8.244544ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 7.956717ms)
  Apr 30 17:09:30.395: INFO: (2) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 8.093105ms)
  Apr 30 17:09:30.396: INFO: (2) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.716691ms)
  Apr 30 17:09:30.396: INFO: (2) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 9.541538ms)
  Apr 30 17:09:30.396: INFO: (2) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 8.356153ms)
  Apr 30 17:09:30.398: INFO: (2) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 10.012423ms)
  Apr 30 17:09:30.399: INFO: (2) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 12.426451ms)
  Apr 30 17:09:30.399: INFO: (2) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 11.934214ms)
  Apr 30 17:09:30.399: INFO: (2) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 11.45436ms)
  Apr 30 17:09:30.399: INFO: (2) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 11.230898ms)
  Apr 30 17:09:30.404: INFO: (3) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 4.892677ms)
  Apr 30 17:09:30.405: INFO: (3) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 4.418839ms)
  Apr 30 17:09:30.409: INFO: (3) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 10.002193ms)
  Apr 30 17:09:30.410: INFO: (3) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 9.646724ms)
  Apr 30 17:09:30.410: INFO: (3) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 10.03528ms)
  Apr 30 17:09:30.410: INFO: (3) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 10.494153ms)
  Apr 30 17:09:30.410: INFO: (3) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 9.679429ms)
  Apr 30 17:09:30.410: INFO: (3) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 9.69607ms)
  Apr 30 17:09:30.410: INFO: (3) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 10.459169ms)
  Apr 30 17:09:30.411: INFO: (3) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 10.63311ms)
  Apr 30 17:09:30.411: INFO: (3) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 10.955347ms)
  Apr 30 17:09:30.411: INFO: (3) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 10.323567ms)
  Apr 30 17:09:30.412: INFO: (3) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 12.365643ms)
  Apr 30 17:09:30.413: INFO: (3) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 13.348052ms)
  Apr 30 17:09:30.414: INFO: (3) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 14.062855ms)
  Apr 30 17:09:30.414: INFO: (3) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 13.595819ms)
  Apr 30 17:09:30.419: INFO: (4) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 5.276534ms)
  Apr 30 17:09:30.419: INFO: (4) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 5.35424ms)
  Apr 30 17:09:30.419: INFO: (4) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 5.719051ms)
  Apr 30 17:09:30.420: INFO: (4) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.354967ms)
  Apr 30 17:09:30.421: INFO: (4) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 6.482309ms)
  Apr 30 17:09:30.421: INFO: (4) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.820193ms)
  Apr 30 17:09:30.421: INFO: (4) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.831093ms)
  Apr 30 17:09:30.421: INFO: (4) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 6.974525ms)
  Apr 30 17:09:30.421: INFO: (4) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 7.125947ms)
  Apr 30 17:09:30.421: INFO: (4) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.444731ms)
  Apr 30 17:09:30.422: INFO: (4) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 8.114946ms)
  Apr 30 17:09:30.422: INFO: (4) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 8.234559ms)
  Apr 30 17:09:30.424: INFO: (4) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 9.704984ms)
  Apr 30 17:09:30.424: INFO: (4) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 9.405859ms)
  Apr 30 17:09:30.424: INFO: (4) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 9.355973ms)
  Apr 30 17:09:30.424: INFO: (4) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 9.505619ms)
  Apr 30 17:09:30.427: INFO: (5) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 3.709083ms)
  Apr 30 17:09:30.429: INFO: (5) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 5.221017ms)
  Apr 30 17:09:30.430: INFO: (5) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 6.680681ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.883208ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.858217ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 7.050273ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 7.039436ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.975328ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 6.996893ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 7.286359ms)
  Apr 30 17:09:30.431: INFO: (5) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 7.257159ms)
  Apr 30 17:09:30.432: INFO: (5) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 8.247961ms)
  Apr 30 17:09:30.433: INFO: (5) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 9.452262ms)
  Apr 30 17:09:30.433: INFO: (5) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 9.461886ms)
  Apr 30 17:09:30.434: INFO: (5) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 9.865055ms)
  Apr 30 17:09:30.434: INFO: (5) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 9.981966ms)
  Apr 30 17:09:30.438: INFO: (6) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 3.643118ms)
  Apr 30 17:09:30.440: INFO: (6) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 5.155393ms)
  Apr 30 17:09:30.440: INFO: (6) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 5.675563ms)
  Apr 30 17:09:30.440: INFO: (6) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 5.225143ms)
  Apr 30 17:09:30.440: INFO: (6) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 5.587293ms)
  Apr 30 17:09:30.440: INFO: (6) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 5.788873ms)
  Apr 30 17:09:30.442: INFO: (6) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 7.390447ms)
  Apr 30 17:09:30.442: INFO: (6) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 7.954692ms)
  Apr 30 17:09:30.442: INFO: (6) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.644702ms)
  Apr 30 17:09:30.443: INFO: (6) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 8.525262ms)
  Apr 30 17:09:30.443: INFO: (6) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 8.753747ms)
  Apr 30 17:09:30.443: INFO: (6) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 7.751066ms)
  Apr 30 17:09:30.443: INFO: (6) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 9.032472ms)
  Apr 30 17:09:30.445: INFO: (6) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 9.909937ms)
  Apr 30 17:09:30.445: INFO: (6) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 10.109089ms)
  Apr 30 17:09:30.445: INFO: (6) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 10.354104ms)
  Apr 30 17:09:30.450: INFO: (7) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 4.446333ms)
  Apr 30 17:09:30.450: INFO: (7) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 4.39075ms)
  Apr 30 17:09:30.450: INFO: (7) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 4.494421ms)
  Apr 30 17:09:30.455: INFO: (7) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 9.170279ms)
  Apr 30 17:09:30.455: INFO: (7) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 9.13048ms)
  Apr 30 17:09:30.455: INFO: (7) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 9.295361ms)
  Apr 30 17:09:30.455: INFO: (7) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 9.343195ms)
  Apr 30 17:09:30.455: INFO: (7) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 9.393362ms)
  Apr 30 17:09:30.455: INFO: (7) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 9.31861ms)
  Apr 30 17:09:30.455: INFO: (7) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 9.623941ms)
  Apr 30 17:09:30.457: INFO: (7) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 11.234844ms)
  Apr 30 17:09:30.459: INFO: (7) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 12.964068ms)
  Apr 30 17:09:30.459: INFO: (7) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 13.052092ms)
  Apr 30 17:09:30.459: INFO: (7) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 13.344946ms)
  Apr 30 17:09:30.459: INFO: (7) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 13.500244ms)
  Apr 30 17:09:30.459: INFO: (7) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 13.428519ms)
  Apr 30 17:09:30.464: INFO: (8) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 4.783281ms)
  Apr 30 17:09:30.467: INFO: (8) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 7.816392ms)
  Apr 30 17:09:30.467: INFO: (8) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 7.683737ms)
  Apr 30 17:09:30.467: INFO: (8) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 7.84942ms)
  Apr 30 17:09:30.467: INFO: (8) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 8.083499ms)
  Apr 30 17:09:30.467: INFO: (8) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 8.118493ms)
  Apr 30 17:09:30.467: INFO: (8) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 8.35966ms)
  Apr 30 17:09:30.468: INFO: (8) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 8.985865ms)
  Apr 30 17:09:30.468: INFO: (8) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 9.233994ms)
  Apr 30 17:09:30.468: INFO: (8) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 9.134952ms)
  Apr 30 17:09:30.469: INFO: (8) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 9.961477ms)
  Apr 30 17:09:30.470: INFO: (8) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 11.202163ms)
  Apr 30 17:09:30.470: INFO: (8) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 11.192797ms)
  Apr 30 17:09:30.470: INFO: (8) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 11.263736ms)
  Apr 30 17:09:30.471: INFO: (8) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 11.597917ms)
  Apr 30 17:09:30.471: INFO: (8) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 11.581968ms)
  Apr 30 17:09:30.478: INFO: (9) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.478668ms)
  Apr 30 17:09:30.478: INFO: (9) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 6.83475ms)
  Apr 30 17:09:30.478: INFO: (9) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.968607ms)
  Apr 30 17:09:30.478: INFO: (9) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 7.181049ms)
  Apr 30 17:09:30.478: INFO: (9) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 7.266914ms)
  Apr 30 17:09:30.478: INFO: (9) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 7.331108ms)
  Apr 30 17:09:30.478: INFO: (9) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 7.401783ms)
  Apr 30 17:09:30.479: INFO: (9) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 7.730237ms)
  Apr 30 17:09:30.479: INFO: (9) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.568418ms)
  Apr 30 17:09:30.479: INFO: (9) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 7.662273ms)
  Apr 30 17:09:30.479: INFO: (9) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 7.822162ms)
  Apr 30 17:09:30.480: INFO: (9) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 8.500029ms)
  Apr 30 17:09:30.481: INFO: (9) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 9.556273ms)
  Apr 30 17:09:30.481: INFO: (9) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 9.760255ms)
  Apr 30 17:09:30.481: INFO: (9) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 9.925463ms)
  Apr 30 17:09:30.481: INFO: (9) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 9.927297ms)
  Apr 30 17:09:30.485: INFO: (10) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 4.088316ms)
  Apr 30 17:09:30.486: INFO: (10) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 4.887596ms)
  Apr 30 17:09:30.486: INFO: (10) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 5.095068ms)
  Apr 30 17:09:30.489: INFO: (10) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.417941ms)
  Apr 30 17:09:30.489: INFO: (10) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.797917ms)
  Apr 30 17:09:30.489: INFO: (10) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 6.86929ms)
  Apr 30 17:09:30.489: INFO: (10) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.613593ms)
  Apr 30 17:09:30.489: INFO: (10) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 7.136013ms)
  Apr 30 17:09:30.489: INFO: (10) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 6.564756ms)
  Apr 30 17:09:30.489: INFO: (10) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 7.071581ms)
  Apr 30 17:09:30.492: INFO: (10) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 10.471782ms)
  Apr 30 17:09:30.492: INFO: (10) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 10.420499ms)
  Apr 30 17:09:30.492: INFO: (10) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 10.35766ms)
  Apr 30 17:09:30.492: INFO: (10) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 10.282606ms)
  Apr 30 17:09:30.492: INFO: (10) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 9.868763ms)
  Apr 30 17:09:30.492: INFO: (10) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 10.920105ms)
  Apr 30 17:09:30.497: INFO: (11) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 4.664462ms)
  Apr 30 17:09:30.497: INFO: (11) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 5.289705ms)
  Apr 30 17:09:30.497: INFO: (11) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 5.077424ms)
  Apr 30 17:09:30.500: INFO: (11) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.884273ms)
  Apr 30 17:09:30.502: INFO: (11) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 8.925207ms)
  Apr 30 17:09:30.503: INFO: (11) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 9.997813ms)
  Apr 30 17:09:30.503: INFO: (11) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 10.001531ms)
  Apr 30 17:09:30.503: INFO: (11) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 9.983667ms)
  Apr 30 17:09:30.503: INFO: (11) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 10.13973ms)
  Apr 30 17:09:30.503: INFO: (11) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 10.287956ms)
  Apr 30 17:09:30.503: INFO: (11) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 10.696542ms)
  Apr 30 17:09:30.504: INFO: (11) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 11.663885ms)
  Apr 30 17:09:30.506: INFO: (11) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 13.260927ms)
  Apr 30 17:09:30.506: INFO: (11) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 13.719507ms)
  Apr 30 17:09:30.506: INFO: (11) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 13.498247ms)
  Apr 30 17:09:30.506: INFO: (11) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 14.161833ms)
  Apr 30 17:09:30.510: INFO: (12) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 3.879026ms)
  Apr 30 17:09:30.512: INFO: (12) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 5.392041ms)
  Apr 30 17:09:30.513: INFO: (12) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 5.967091ms)
  Apr 30 17:09:30.513: INFO: (12) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 6.446277ms)
  Apr 30 17:09:30.513: INFO: (12) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 6.646013ms)
  Apr 30 17:09:30.513: INFO: (12) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 6.376339ms)
  Apr 30 17:09:30.514: INFO: (12) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 7.198663ms)
  Apr 30 17:09:30.514: INFO: (12) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 8.28624ms)
  Apr 30 17:09:30.515: INFO: (12) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 7.461959ms)
  Apr 30 17:09:30.515: INFO: (12) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 7.334717ms)
  Apr 30 17:09:30.515: INFO: (12) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.136099ms)
  Apr 30 17:09:30.515: INFO: (12) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 7.925475ms)
  Apr 30 17:09:30.516: INFO: (12) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 8.795931ms)
  Apr 30 17:09:30.517: INFO: (12) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 9.354541ms)
  Apr 30 17:09:30.517: INFO: (12) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 9.701669ms)
  Apr 30 17:09:30.517: INFO: (12) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 9.50673ms)
  Apr 30 17:09:30.520: INFO: (13) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 3.333876ms)
  Apr 30 17:09:30.523: INFO: (13) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 4.956641ms)
  Apr 30 17:09:30.523: INFO: (13) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 5.578498ms)
  Apr 30 17:09:30.523: INFO: (13) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 5.563886ms)
  Apr 30 17:09:30.523: INFO: (13) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 5.521195ms)
  Apr 30 17:09:30.523: INFO: (13) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 5.678852ms)
  Apr 30 17:09:30.524: INFO: (13) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.416162ms)
  Apr 30 17:09:30.526: INFO: (13) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 8.380683ms)
  Apr 30 17:09:30.526: INFO: (13) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 8.212774ms)
  Apr 30 17:09:30.526: INFO: (13) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 8.191515ms)
  Apr 30 17:09:30.527: INFO: (13) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 8.362576ms)
  Apr 30 17:09:30.527: INFO: (13) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 9.088198ms)
  Apr 30 17:09:30.527: INFO: (13) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 9.401503ms)
  Apr 30 17:09:30.528: INFO: (13) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 10.351031ms)
  Apr 30 17:09:30.528: INFO: (13) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 9.639032ms)
  Apr 30 17:09:30.528: INFO: (13) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 9.513075ms)
  Apr 30 17:09:30.533: INFO: (14) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 5.245645ms)
  Apr 30 17:09:30.533: INFO: (14) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 5.176026ms)
  Apr 30 17:09:30.534: INFO: (14) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 5.689094ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 6.920532ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.850039ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 6.994463ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 7.081552ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 6.573026ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 7.546072ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 6.463941ms)
  Apr 30 17:09:30.535: INFO: (14) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.833244ms)
  Apr 30 17:09:30.536: INFO: (14) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 7.24994ms)
  Apr 30 17:09:30.536: INFO: (14) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 7.831482ms)
  Apr 30 17:09:30.536: INFO: (14) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 7.028945ms)
  Apr 30 17:09:30.536: INFO: (14) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 8.219776ms)
  Apr 30 17:09:30.537: INFO: (14) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 7.717649ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 7.917585ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 7.960604ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 8.12423ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 8.014684ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 8.334863ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 8.232523ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 8.27656ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 8.314198ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 8.259168ms)
  Apr 30 17:09:30.545: INFO: (15) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 8.466697ms)
  Apr 30 17:09:30.555: INFO: (15) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 18.139545ms)
  Apr 30 17:09:30.555: INFO: (15) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 18.232137ms)
  Apr 30 17:09:30.555: INFO: (15) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 18.240039ms)
  Apr 30 17:09:30.555: INFO: (15) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 18.380469ms)
  Apr 30 17:09:30.555: INFO: (15) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 18.367945ms)
  Apr 30 17:09:30.555: INFO: (15) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 18.330138ms)
  Apr 30 17:09:30.560: INFO: (16) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 5.027839ms)
  Apr 30 17:09:30.560: INFO: (16) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 4.787076ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.68244ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 6.900248ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.865774ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.835807ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 7.076576ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 7.198106ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 7.151736ms)
  Apr 30 17:09:30.563: INFO: (16) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 7.093505ms)
  Apr 30 17:09:30.566: INFO: (16) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 11.02566ms)
  Apr 30 17:09:30.567: INFO: (16) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 10.674994ms)
  Apr 30 17:09:30.567: INFO: (16) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 10.703668ms)
  Apr 30 17:09:30.567: INFO: (16) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 10.982204ms)
  Apr 30 17:09:30.567: INFO: (16) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 10.828489ms)
  Apr 30 17:09:30.567: INFO: (16) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 11.156822ms)
  Apr 30 17:09:30.573: INFO: (17) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 5.675934ms)
  Apr 30 17:09:30.573: INFO: (17) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 5.037985ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 6.602654ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.240221ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 6.464628ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 6.179691ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 6.578613ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 6.100486ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 5.850019ms)
  Apr 30 17:09:30.574: INFO: (17) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 6.993722ms)
  Apr 30 17:09:30.575: INFO: (17) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 7.06606ms)
  Apr 30 17:09:30.576: INFO: (17) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 8.975747ms)
  Apr 30 17:09:30.577: INFO: (17) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 8.71252ms)
  Apr 30 17:09:30.577: INFO: (17) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 9.187986ms)
  Apr 30 17:09:30.579: INFO: (17) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 10.252447ms)
  Apr 30 17:09:30.579: INFO: (17) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 10.545639ms)
  Apr 30 17:09:30.584: INFO: (18) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 5.450122ms)
  Apr 30 17:09:30.588: INFO: (18) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 8.919331ms)
  Apr 30 17:09:30.588: INFO: (18) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 9.278775ms)
  Apr 30 17:09:30.588: INFO: (18) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 8.968556ms)
  Apr 30 17:09:30.589: INFO: (18) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 9.642068ms)
  Apr 30 17:09:30.590: INFO: (18) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 9.988051ms)
  Apr 30 17:09:30.589: INFO: (18) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 9.754194ms)
  Apr 30 17:09:30.589: INFO: (18) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 9.743618ms)
  Apr 30 17:09:30.590: INFO: (18) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 10.118463ms)
  Apr 30 17:09:30.590: INFO: (18) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 10.275839ms)
  Apr 30 17:09:30.592: INFO: (18) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 12.10727ms)
  Apr 30 17:09:30.592: INFO: (18) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 12.514698ms)
  Apr 30 17:09:30.592: INFO: (18) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 12.495972ms)
  Apr 30 17:09:30.592: INFO: (18) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 12.702815ms)
  Apr 30 17:09:30.592: INFO: (18) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 12.673881ms)
  Apr 30 17:09:30.592: INFO: (18) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 12.852424ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 10.54209ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:162/proxy/: bar (200; 10.445052ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 10.475833ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">test<... (200; 10.542014ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:462/proxy/: tls qux (200; 10.591795ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/proxy-service-7dvtt-rfqxk/proxy/rewriteme">test</a> (200; 10.806957ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:460/proxy/: tls baz (200; 10.674416ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:160/proxy/: foo (200; 10.573388ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/http:proxy-service-7dvtt-rfqxk:1080/proxy/rewriteme">... (200; 10.670534ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/: <a href="/api/v1/namespaces/proxy-8837/pods/https:proxy-service-7dvtt-rfqxk:443/proxy/tlsrewritem... (200; 10.779878ms)
  Apr 30 17:09:30.603: INFO: (19) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname2/proxy/: bar (200; 10.982812ms)
  Apr 30 17:09:30.604: INFO: (19) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname1/proxy/: tls baz (200; 11.778274ms)
  Apr 30 17:09:30.605: INFO: (19) /api/v1/namespaces/proxy-8837/services/http:proxy-service-7dvtt:portname1/proxy/: foo (200; 12.971933ms)
  Apr 30 17:09:30.606: INFO: (19) /api/v1/namespaces/proxy-8837/services/https:proxy-service-7dvtt:tlsportname2/proxy/: tls qux (200; 13.144787ms)
  Apr 30 17:09:30.606: INFO: (19) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname1/proxy/: foo (200; 13.124325ms)
  Apr 30 17:09:30.606: INFO: (19) /api/v1/namespaces/proxy-8837/services/proxy-service-7dvtt:portname2/proxy/: bar (200; 13.120953ms)
  STEP: deleting ReplicationController proxy-service-7dvtt in namespace proxy-8837, will wait for the garbage collector to delete the pods @ 04/30/24 17:09:30.606
  Apr 30 17:09:30.673: INFO: Deleting ReplicationController proxy-service-7dvtt took: 14.019913ms
  Apr 30 17:09:30.773: INFO: Terminating ReplicationController proxy-service-7dvtt pods took: 100.136683ms
  E0430 17:09:31.005998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:32.006136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:09:32.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8837" for this suite. @ 04/30/24 17:09:32.783
• [5.565 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/30/24 17:09:32.796
  Apr 30 17:09:32.796: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 17:09:32.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:32.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:32.825
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2447.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2447.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/30/24 17:09:32.828
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2447.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2447.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/30/24 17:09:32.828
  STEP: creating a pod to probe /etc/hosts @ 04/30/24 17:09:32.828
  STEP: submitting the pod to kubernetes @ 04/30/24 17:09:32.828
  E0430 17:09:33.007258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:34.007561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/30/24 17:09:34.854
  STEP: looking for the results for each expected name from probers @ 04/30/24 17:09:34.859
  Apr 30 17:09:34.881: INFO: DNS probes using dns-2447/dns-test-bf00e34e-523e-44b8-b56b-a3e89d3e8186 succeeded

  STEP: deleting the pod @ 04/30/24 17:09:34.881
  Apr 30 17:09:34.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2447" for this suite. @ 04/30/24 17:09:34.908
• [2.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 04/30/24 17:09:34.923
  Apr 30 17:09:34.923: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 17:09:34.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:34.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:34.949
  STEP: Counting existing ResourceQuota @ 04/30/24 17:09:34.952
  E0430 17:09:35.007709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:36.008750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:37.009259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:38.010265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:39.011411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/30/24 17:09:39.957
  STEP: Ensuring resource quota status is calculated @ 04/30/24 17:09:39.968
  E0430 17:09:40.011689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:41.012237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:09:41.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5967" for this suite. @ 04/30/24 17:09:41.981
• [7.066 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 04/30/24 17:09:41.99
  Apr 30 17:09:41.990: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 17:09:41.992
  E0430 17:09:42.012258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:42.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:42.017
  STEP: Counting existing ResourceQuota @ 04/30/24 17:09:42.02
  E0430 17:09:43.012816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:44.013289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:45.014028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:46.014247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:47.014620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/30/24 17:09:47.025
  STEP: Ensuring resource quota status is calculated @ 04/30/24 17:09:47.032
  E0430 17:09:48.014729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:49.015242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/30/24 17:09:49.038
  STEP: Ensuring resource quota status captures replicaset creation @ 04/30/24 17:09:49.057
  E0430 17:09:50.015444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:51.015839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/30/24 17:09:51.063
  STEP: Ensuring resource quota status released usage @ 04/30/24 17:09:51.072
  E0430 17:09:52.015984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:53.016159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:09:53.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3554" for this suite. @ 04/30/24 17:09:53.082
• [11.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/30/24 17:09:53.097
  Apr 30 17:09:53.097: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename svcaccounts @ 04/30/24 17:09:53.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:53.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:53.121
  STEP: Creating a pod to test service account token:  @ 04/30/24 17:09:53.124
  E0430 17:09:54.018627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:55.018867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:56.019544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:57.019866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:09:57.153
  Apr 30 17:09:57.159: INFO: Trying to get logs from node perfermance-5 pod test-pod-91084007-e35d-4f00-b08a-7fa88c083af2 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 17:09:57.169
  Apr 30 17:09:57.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1337" for this suite. @ 04/30/24 17:09:57.199
• [4.111 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/30/24 17:09:57.208
  Apr 30 17:09:57.208: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 17:09:57.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:09:57.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:09:57.237
  STEP: Creating secret with name s-test-opt-del-7f0317d7-365c-4096-89df-9475e004e3c2 @ 04/30/24 17:09:57.246
  STEP: Creating secret with name s-test-opt-upd-45c6472d-3300-439a-8c28-212b7df91c10 @ 04/30/24 17:09:57.253
  STEP: Creating the pod @ 04/30/24 17:09:57.259
  E0430 17:09:58.020018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:09:59.020198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-7f0317d7-365c-4096-89df-9475e004e3c2 @ 04/30/24 17:09:59.306
  STEP: Updating secret s-test-opt-upd-45c6472d-3300-439a-8c28-212b7df91c10 @ 04/30/24 17:09:59.315
  STEP: Creating secret with name s-test-opt-create-88871441-a1ec-4d8a-b3e7-a958b7d4f38d @ 04/30/24 17:09:59.322
  STEP: waiting to observe update in volume @ 04/30/24 17:09:59.33
  E0430 17:10:00.020371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:01.020720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:01.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3419" for this suite. @ 04/30/24 17:10:01.363
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/30/24 17:10:01.373
  Apr 30 17:10:01.373: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename disruption @ 04/30/24 17:10:01.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:01.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:01.406
  STEP: Waiting for the pdb to be processed @ 04/30/24 17:10:01.418
  E0430 17:10:02.020967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:03.021655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/30/24 17:10:03.459
  Apr 30 17:10:03.479: INFO: running pods: 0 < 3
  E0430 17:10:04.022188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:05.022406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:05.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2856" for this suite. @ 04/30/24 17:10:05.473
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/30/24 17:10:05.491
  Apr 30 17:10:05.491: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename field-validation @ 04/30/24 17:10:05.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:05.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:05.532
  Apr 30 17:10:05.536: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:10:06.023011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:07.023773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:08.024311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0430 17:10:08.093523      21 warnings.go:70] unknown field "alpha"
  W0430 17:10:08.093555      21 warnings.go:70] unknown field "beta"
  W0430 17:10:08.093561      21 warnings.go:70] unknown field "delta"
  W0430 17:10:08.093566      21 warnings.go:70] unknown field "epsilon"
  W0430 17:10:08.093571      21 warnings.go:70] unknown field "gamma"
  Apr 30 17:10:08.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6829" for this suite. @ 04/30/24 17:10:08.65
• [3.171 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 04/30/24 17:10:08.663
  Apr 30 17:10:08.663: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/30/24 17:10:08.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:08.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:08.691
  STEP: create the container to handle the HTTPGet hook request. @ 04/30/24 17:10:08.698
  E0430 17:10:09.025347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:10.026382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/30/24 17:10:10.736
  E0430 17:10:11.026616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:12.027173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/30/24 17:10:12.758
  E0430 17:10:13.028035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:14.028675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:15.029274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:16.029456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/30/24 17:10:16.785
  Apr 30 17:10:16.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8545" for this suite. @ 04/30/24 17:10:16.799
• [8.147 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/30/24 17:10:16.811
  Apr 30 17:10:16.811: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 17:10:16.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:16.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:16.836
  STEP: Creating a pod to test downward api env vars @ 04/30/24 17:10:16.839
  E0430 17:10:17.030004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:18.030695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:19.030783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:20.031144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:10:20.878
  Apr 30 17:10:20.885: INFO: Trying to get logs from node perfermance-4 pod downward-api-7d50826e-1bb8-4e73-bd3c-4b609b608c6e container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 17:10:20.905
  Apr 30 17:10:20.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7898" for this suite. @ 04/30/24 17:10:20.933
• [4.132 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/30/24 17:10:20.944
  Apr 30 17:10:20.944: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 17:10:20.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:20.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:20.981
  STEP: Setting up server cert @ 04/30/24 17:10:21.017
  E0430 17:10:21.031934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 17:10:21.34
  STEP: Deploying the webhook pod @ 04/30/24 17:10:21.354
  STEP: Wait for the deployment to be ready @ 04/30/24 17:10:21.38
  Apr 30 17:10:21.408: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0430 17:10:22.032099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:23.032585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/30/24 17:10:23.419
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 17:10:23.431
  E0430 17:10:24.033219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:24.432: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/30/24 17:10:24.441
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/30/24 17:10:24.441
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/30/24 17:10:24.465
  E0430 17:10:25.034223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/30/24 17:10:25.477
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/30/24 17:10:25.477
  E0430 17:10:26.035039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 04/30/24 17:10:26.516
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/30/24 17:10:26.516
  E0430 17:10:27.035219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:28.035584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:29.035855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:30.036142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:31.036505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/30/24 17:10:31.564
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/30/24 17:10:31.565
  E0430 17:10:32.037020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:33.037549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:34.037708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:35.038118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:36.038460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:36.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7193" for this suite. @ 04/30/24 17:10:36.721
  STEP: Destroying namespace "webhook-markers-9849" for this suite. @ 04/30/24 17:10:36.736
• [15.801 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 04/30/24 17:10:36.745
  Apr 30 17:10:36.745: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-webhook @ 04/30/24 17:10:36.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:36.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:36.78
  STEP: Setting up server cert @ 04/30/24 17:10:36.784
  E0430 17:10:37.038589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/30/24 17:10:37.338
  STEP: Deploying the custom resource conversion webhook pod @ 04/30/24 17:10:37.345
  STEP: Wait for the deployment to be ready @ 04/30/24 17:10:37.366
  Apr 30 17:10:37.378: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0430 17:10:38.039706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:39.040870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/30/24 17:10:39.39
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 17:10:39.403
  E0430 17:10:40.041929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:40.403: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 30 17:10:40.418: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:10:41.042683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:42.042679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/30/24 17:10:43.003
  STEP: v2 custom resource should be converted @ 04/30/24 17:10:43.016
  E0430 17:10:43.043338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:43.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5827" for this suite. @ 04/30/24 17:10:43.611
• [6.897 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/30/24 17:10:43.642
  Apr 30 17:10:43.642: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 17:10:43.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:43.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:43.678
  STEP: creating the pod @ 04/30/24 17:10:43.681
  STEP: setting up watch @ 04/30/24 17:10:43.681
  STEP: submitting the pod to kubernetes @ 04/30/24 17:10:43.786
  STEP: verifying the pod is in kubernetes @ 04/30/24 17:10:43.802
  STEP: verifying pod creation was observed @ 04/30/24 17:10:43.817
  E0430 17:10:44.044338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:45.044468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:46.044995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:47.045587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/30/24 17:10:47.836
  STEP: verifying pod deletion was observed @ 04/30/24 17:10:47.846
  E0430 17:10:48.046154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:48.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6290" for this suite. @ 04/30/24 17:10:48.949
• [5.318 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 04/30/24 17:10:48.963
  Apr 30 17:10:48.963: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-pred @ 04/30/24 17:10:48.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:48.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:49.002
  Apr 30 17:10:49.005: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 30 17:10:49.015: INFO: Waiting for terminating namespaces to be deleted...
  Apr 30 17:10:49.018: INFO: 
  Logging pods the apiserver thinks is on node perfermance-4 before test
  Apr 30 17:10:49.028: INFO: calico-apiserver-858c89fdd8-wj65g from calico-apiserver started at 2024-04-30 06:40:07 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container calico-apiserver ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: calico-kube-controllers-fbfd8f68d-n8rqd from calico-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: calico-node-x8h5t from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: calico-typha-bd54b44f-6wlc4 from calico-system started at 2024-04-30 06:39:42 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: csi-node-driver-shg6w from calico-system started at 2024-04-30 06:39:55 +0000 UTC (2 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: coredns-76f75df574-5c95b from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: coredns-76f75df574-z5fss from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: kube-proxy-2srcz from kube-system started at 2024-04-30 06:36:53 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: kube-sealos-lvscare-perfermance-4 from kube-system started at 2024-04-30 06:37:11 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-wgmnv from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: tigera-operator-66996c666d-nrzq2 from tigera-operator started at 2024-04-30 06:39:27 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.028: INFO: 	Container tigera-operator ready: true, restart count 0
  Apr 30 17:10:49.028: INFO: 
  Logging pods the apiserver thinks is on node perfermance-5 before test
  Apr 30 17:10:49.036: INFO: calico-node-tslfb from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.036: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 17:10:49.036: INFO: calico-typha-bd54b44f-kwfhr from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.037: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 17:10:49.037: INFO: csi-node-driver-vdcj5 from calico-system started at 2024-04-30 16:48:26 +0000 UTC (2 container statuses recorded)
  Apr 30 17:10:49.037: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 17:10:49.037: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 17:10:49.038: INFO: kube-proxy-t5fn7 from kube-system started at 2024-04-30 06:36:52 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.038: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 17:10:49.038: INFO: kube-sealos-lvscare-perfermance-5 from kube-system started at 2024-04-30 06:37:10 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.038: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 17:10:49.038: INFO: sonobuoy from sonobuoy started at 2024-04-30 15:42:34 +0000 UTC (1 container statuses recorded)
  Apr 30 17:10:49.039: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 30 17:10:49.039: INFO: sonobuoy-e2e-job-dc5cbc99c8b64d76 from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 17:10:49.039: INFO: 	Container e2e ready: true, restart count 0
  Apr 30 17:10:49.040: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 17:10:49.040: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-hqf4m from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 17:10:49.040: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 17:10:49.040: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/30/24 17:10:49.041
  E0430 17:10:49.046092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17cb1dfb7b55d353], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 04/30/24 17:10:49.09
  E0430 17:10:50.046339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:10:50.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4325" for this suite. @ 04/30/24 17:10:50.085
• [1.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 04/30/24 17:10:50.123
  Apr 30 17:10:50.123: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/30/24 17:10:50.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:50.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:50.152
  STEP: create the container to handle the HTTPGet hook request. @ 04/30/24 17:10:50.16
  E0430 17:10:51.047012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:52.047507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/30/24 17:10:52.191
  E0430 17:10:53.047667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:54.048136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/30/24 17:10:54.21
  E0430 17:10:55.049142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:56.049432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:57.049750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:10:58.050269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/30/24 17:10:58.507
  Apr 30 17:10:58.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9568" for this suite. @ 04/30/24 17:10:58.52
• [8.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/30/24 17:10:58.528
  Apr 30 17:10:58.528: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename cronjob @ 04/30/24 17:10:58.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:10:58.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:10:58.556
  STEP: Creating a ReplaceConcurrent cronjob @ 04/30/24 17:10:58.558
  STEP: Ensuring a job is scheduled @ 04/30/24 17:10:58.566
  E0430 17:10:59.050376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:00.050663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/30/24 17:11:00.572
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/30/24 17:11:00.578
  STEP: Ensuring the job is replaced with a new one @ 04/30/24 17:11:00.585
  E0430 17:11:01.051517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:02.051890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:03.051938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:04.052267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:05.052539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:06.052857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:07.053558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:08.053710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:09.054636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:10.054773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:11.055039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:12.055363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:13.056139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:14.056452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:15.056577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:16.056893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:17.058003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:18.058569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:19.059510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:20.059752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:21.060124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:22.060380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:23.061194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:24.061433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:25.061774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:26.062091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:27.062481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:28.062760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:29.063713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:30.063951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:31.064984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:32.065228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:33.065328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:34.065582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:35.065828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:36.065968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:37.066807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:38.067744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:39.067746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:40.068019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:41.068155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:42.068581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:43.068830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:44.069619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:45.070473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:46.071154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:47.072011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:48.072753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:49.072912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:50.073136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:51.073368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:52.073672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:53.074567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:54.075151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:55.075583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:56.075914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:57.076049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:58.077049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:11:59.077736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:00.078210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/30/24 17:12:00.591
  Apr 30 17:12:00.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2702" for this suite. @ 04/30/24 17:12:00.604
• [62.091 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/30/24 17:12:00.619
  Apr 30 17:12:00.619: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 17:12:00.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:12:00.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:12:00.658
  STEP: Creating a pod to test substitution in volume subpath @ 04/30/24 17:12:00.662
  E0430 17:12:01.078407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:02.078527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:03.079462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:04.079678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:12:04.714
  Apr 30 17:12:04.717: INFO: Trying to get logs from node perfermance-4 pod var-expansion-d3e0e5b0-195f-4a4f-8f6c-960444c5af9b container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 17:12:04.724
  Apr 30 17:12:04.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6486" for this suite. @ 04/30/24 17:12:04.753
• [4.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/30/24 17:12:04.764
  Apr 30 17:12:04.764: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename containers @ 04/30/24 17:12:04.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:12:04.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:12:04.788
  STEP: Creating a pod to test override arguments @ 04/30/24 17:12:04.79
  E0430 17:12:05.080379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:06.080493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:07.081267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:08.081711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:12:08.829
  Apr 30 17:12:08.833: INFO: Trying to get logs from node perfermance-5 pod client-containers-bf73e9f3-6e38-4c21-aabb-9c2b73b1fe88 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 17:12:08.851
  Apr 30 17:12:08.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9870" for this suite. @ 04/30/24 17:12:08.875
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/30/24 17:12:08.889
  Apr 30 17:12:08.890: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 17:12:08.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:12:08.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:12:08.919
  STEP: Creating pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645 @ 04/30/24 17:12:08.922
  E0430 17:12:09.082512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:10.082632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 17:12:10.958
  Apr 30 17:12:10.961: INFO: Initial restart count of pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 is 0
  Apr 30 17:12:10.964: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:11.082790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:12.083332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:12.969: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:13.084240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:14.084789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:14.974: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:15.085043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:16.085776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:16.979: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:17.086063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:18.086206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:18.984: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:19.087067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:20.087732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:20.989: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:21.087910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:22.088217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:22.995: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:23.089120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:24.089419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:24.999: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:25.089997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:26.090209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:27.005: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:27.091039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:28.091841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:29.010: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  E0430 17:12:29.092873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:30.093158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:31.016: INFO: Get pod liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 in namespace container-probe-8645
  Apr 30 17:12:31.016: INFO: Restart count of pod container-probe-8645/liveness-42836f19-aa4e-467a-8d00-0e34433f6aa3 is now 1 (20.055144845s elapsed)
  STEP: deleting the pod @ 04/30/24 17:12:31.016
  Apr 30 17:12:31.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8645" for this suite. @ 04/30/24 17:12:31.04
• [22.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 04/30/24 17:12:31.054
  Apr 30 17:12:31.054: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename sched-pred @ 04/30/24 17:12:31.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:12:31.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:12:31.083
  Apr 30 17:12:31.086: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  E0430 17:12:31.093281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:31.100: INFO: Waiting for terminating namespaces to be deleted...
  Apr 30 17:12:31.103: INFO: 
  Logging pods the apiserver thinks is on node perfermance-4 before test
  Apr 30 17:12:31.112: INFO: calico-apiserver-858c89fdd8-wj65g from calico-apiserver started at 2024-04-30 06:40:07 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container calico-apiserver ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: calico-kube-controllers-fbfd8f68d-n8rqd from calico-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: calico-node-x8h5t from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: calico-typha-bd54b44f-6wlc4 from calico-system started at 2024-04-30 06:39:42 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: csi-node-driver-shg6w from calico-system started at 2024-04-30 06:39:55 +0000 UTC (2 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: coredns-76f75df574-5c95b from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: coredns-76f75df574-z5fss from kube-system started at 2024-04-30 06:39:55 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container coredns ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: kube-proxy-2srcz from kube-system started at 2024-04-30 06:36:53 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: kube-sealos-lvscare-perfermance-4 from kube-system started at 2024-04-30 06:37:11 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-wgmnv from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: tigera-operator-66996c666d-nrzq2 from tigera-operator started at 2024-04-30 06:39:27 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.112: INFO: 	Container tigera-operator ready: true, restart count 0
  Apr 30 17:12:31.112: INFO: 
  Logging pods the apiserver thinks is on node perfermance-5 before test
  Apr 30 17:12:31.128: INFO: calico-node-tslfb from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.128: INFO: 	Container calico-node ready: true, restart count 0
  Apr 30 17:12:31.128: INFO: calico-typha-bd54b44f-kwfhr from calico-system started at 2024-04-30 06:39:33 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.128: INFO: 	Container calico-typha ready: true, restart count 0
  Apr 30 17:12:31.128: INFO: csi-node-driver-vdcj5 from calico-system started at 2024-04-30 16:48:26 +0000 UTC (2 container statuses recorded)
  Apr 30 17:12:31.128: INFO: 	Container calico-csi ready: true, restart count 0
  Apr 30 17:12:31.128: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
  Apr 30 17:12:31.128: INFO: replace-28574951-lvgtq from cronjob-2702 started at 2024-04-30 17:11:00 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.128: INFO: 	Container c ready: false, restart count 0
  Apr 30 17:12:31.128: INFO: replace-28574952-cxgqr from cronjob-2702 started at 2024-04-30 17:12:00 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.128: INFO: 	Container c ready: true, restart count 0
  Apr 30 17:12:31.128: INFO: kube-proxy-t5fn7 from kube-system started at 2024-04-30 06:36:52 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.128: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 30 17:12:31.128: INFO: kube-sealos-lvscare-perfermance-5 from kube-system started at 2024-04-30 06:37:10 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.129: INFO: 	Container kube-sealos-lvscare ready: true, restart count 0
  Apr 30 17:12:31.129: INFO: sonobuoy from sonobuoy started at 2024-04-30 15:42:34 +0000 UTC (1 container statuses recorded)
  Apr 30 17:12:31.129: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 30 17:12:31.129: INFO: sonobuoy-e2e-job-dc5cbc99c8b64d76 from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 17:12:31.129: INFO: 	Container e2e ready: true, restart count 0
  Apr 30 17:12:31.129: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 17:12:31.129: INFO: sonobuoy-systemd-logs-daemon-set-4ca69f8a7f864b69-hqf4m from sonobuoy started at 2024-04-30 15:42:35 +0000 UTC (2 container statuses recorded)
  Apr 30 17:12:31.129: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 30 17:12:31.129: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/30/24 17:12:31.129
  E0430 17:12:32.093720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:33.094758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/30/24 17:12:33.16
  STEP: Trying to apply a random label on the found node. @ 04/30/24 17:12:33.186
  STEP: verifying the node has the label kubernetes.io/e2e-d032227f-1c32-4956-870b-75e39cef3f0d 42 @ 04/30/24 17:12:33.209
  STEP: Trying to relaunch the pod, now with labels. @ 04/30/24 17:12:33.213
  E0430 17:12:34.095456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:35.095664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-d032227f-1c32-4956-870b-75e39cef3f0d off the node perfermance-5 @ 04/30/24 17:12:35.235
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d032227f-1c32-4956-870b-75e39cef3f0d @ 04/30/24 17:12:35.254
  Apr 30 17:12:35.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-616" for this suite. @ 04/30/24 17:12:35.263
• [4.218 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 04/30/24 17:12:35.272
  Apr 30 17:12:35.272: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 17:12:35.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:12:35.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:12:35.301
  STEP: Counting existing ResourceQuota @ 04/30/24 17:12:35.304
  E0430 17:12:36.096243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:37.097346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:38.097548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:39.097590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:40.097642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/30/24 17:12:40.308
  STEP: Ensuring resource quota status is calculated @ 04/30/24 17:12:40.322
  E0430 17:12:41.097903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:42.098121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 04/30/24 17:12:42.33
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/30/24 17:12:42.357
  E0430 17:12:43.098721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:44.099189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/30/24 17:12:44.363
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/30/24 17:12:44.366
  STEP: Ensuring a pod cannot update its resource requirements @ 04/30/24 17:12:44.368
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/30/24 17:12:44.373
  E0430 17:12:45.099750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:46.099911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/30/24 17:12:46.379
  STEP: Ensuring resource quota status released the pod usage @ 04/30/24 17:12:46.413
  E0430 17:12:47.100857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:48.101289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:48.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2453" for this suite. @ 04/30/24 17:12:48.424
• [13.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/30/24 17:12:48.439
  Apr 30 17:12:48.439: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename deployment @ 04/30/24 17:12:48.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:12:48.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:12:48.462
  Apr 30 17:12:48.465: INFO: Creating deployment "webserver-deployment"
  Apr 30 17:12:48.476: INFO: Waiting for observed generation 1
  E0430 17:12:49.102071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:50.102262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:50.488: INFO: Waiting for all required pods to come up
  Apr 30 17:12:50.502: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/30/24 17:12:50.502
  E0430 17:12:51.102708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:52.103139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:52.515: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 30 17:12:52.522: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 30 17:12:52.539: INFO: Updating deployment webserver-deployment
  Apr 30 17:12:52.539: INFO: Waiting for observed generation 2
  E0430 17:12:53.103291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:54.104678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:12:54.611: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 30 17:12:54.614: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 30 17:12:54.618: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 30 17:12:54.627: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 30 17:12:54.627: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 30 17:12:54.629: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 30 17:12:54.635: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 30 17:12:54.635: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 30 17:12:54.650: INFO: Updating deployment webserver-deployment
  Apr 30 17:12:54.650: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 30 17:12:54.660: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 30 17:12:54.674: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 30 17:12:54.725: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20aab171-f568-447c-a629-84dfc1a35937",
      ResourceVersion: (string) (len=6) "218607",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 30 17:12:54.735: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
      ResourceVersion: (string) (len=6) "218604",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "20aab171-f568-447c-a629-84dfc1a35937",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 30 61 61 62 31  37 31 2d 66 35 36 38 2d  |\"20aab171-f568-|
              00000120  34 34 37 63 2d 61 36 32  39 2d 38 34 64 66 63 31  |447c-a629-84dfc1|
              00000130  61 33 35 39 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a35937\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 17:12:54.736: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 30 17:12:54.736: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
      ResourceVersion: (string) (len=6) "218601",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "20aab171-f568-447c-a629-84dfc1a35937",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 30 61 61 62 31  37 31 2d 66 35 36 38 2d  |\"20aab171-f568-|
              00000120  34 34 37 63 2d 61 36 32  39 2d 38 34 64 66 63 31  |447c-a629-84dfc1|
              00000130  61 33 35 39 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a35937\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 30 17:12:54.764: INFO: Pod "webserver-deployment-557759b7c7-8dh6r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8dh6r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af19e9a7-79e7-47ce-80c1-b772b004fb89",
      ResourceVersion: (string) (len=6) "218621",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wb44h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wb44h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.772: INFO: Pod "webserver-deployment-557759b7c7-8fj7n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8fj7n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43973836-34fe-4fcc-8a52-052ff63cb2c7",
      ResourceVersion: (string) (len=6) "218478",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "66f46574acc651ae7b0294a12f11b0e85570c9f7e085262ed58e8b7267a75a09",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "100.115.206.209/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "100.115.206.209/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 31 31 35 2e 32 30  36 2e 32 30 39 5c 22 7d  |0.115.206.209\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q6tjp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q6tjp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.64"
        }
      },
      PodIP: (string) (len=15) "100.115.206.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "100.115.206.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1784e0c18ee4e25758b8b32dac50cc9f7417111410caca7a19be278dce9f2e07",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.774: INFO: Pod "webserver-deployment-557759b7c7-bp6q8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bp6q8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1963b89-0821-4bde-bbb9-49304f5b4b2b",
      ResourceVersion: (string) (len=6) "218428",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b70b3279cbb0cfbf960daf4c7bf01e4a4a9b43278d82d43384ef7c3b4e6875d9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "100.73.144.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "100.73.144.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 38 34 5c 22 7d 22 3a  |0.73.144.84\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xqlg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xqlg6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=13) "100.73.144.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "100.73.144.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cfd74d5ab5a581fc1f4640364b894e8af37121489af5998a73618c421ce9f5ca",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.777: INFO: Pod "webserver-deployment-557759b7c7-fszp9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fszp9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5708d9a-4d36-44a4-b84b-8ae0f516a89d",
      ResourceVersion: (string) (len=6) "218501",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "82ca79c5ea22e5e4e2cc7b79436dc54fef546f1240123d98259ef612942bfa30",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "100.73.144.83/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "100.73.144.83/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 38 33 5c 22 7d 22 3a  |0.73.144.83\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gggv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gggv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=13) "100.73.144.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "100.73.144.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://59a9da6715dfeb875c416506cfde38ec181ffa912b9d9a16fe62abef71987a1f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.779: INFO: Pod "webserver-deployment-557759b7c7-gw6kr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gw6kr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6217600-f7f1-45cf-89ad-1b3412502673",
      ResourceVersion: (string) (len=6) "218609",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2qzj9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2qzj9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.781: INFO: Pod "webserver-deployment-557759b7c7-hc25s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hc25s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "519cef54-bb22-4a79-889d-479600ce5cf2",
      ResourceVersion: (string) (len=6) "218615",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bd67t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bd67t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.782: INFO: Pod "webserver-deployment-557759b7c7-hq7wj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hq7wj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2edaef34-9122-427a-9d76-2df8b62c1962",
      ResourceVersion: (string) (len=6) "218475",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e6c943800f6ea88c92b11973a6099f076d9f231b9ffc87299dea7b52c04b3a90",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "100.115.206.199/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "100.115.206.199/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 31 31 35 2e 32 30  36 2e 31 39 39 5c 22 7d  |0.115.206.199\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nw86d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nw86d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.64"
        }
      },
      PodIP: (string) (len=15) "100.115.206.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "100.115.206.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://045168cf41645672317ee5f0e474896632440ad496b87747a0ce2d04ed2ca67b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.784: INFO: Pod "webserver-deployment-557759b7c7-lpvxc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lpvxc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d257ca2f-e303-4963-94d7-79c82172194b",
      ResourceVersion: (string) (len=6) "218481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3f5eb78f028ebcb87fd18372df8d7cc4b31cced03ade8c12430d22742be51ca9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "100.115.206.233/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "100.115.206.233/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 31 31 35 2e 32 30  36 2e 32 33 33 5c 22 7d  |0.115.206.233\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l9q8h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l9q8h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.64"
        }
      },
      PodIP: (string) (len=15) "100.115.206.233",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "100.115.206.233"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fef5697c7f65da7b556f9808518fcaf985b62f397d3e9c132a537e9f754d6d08",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.786: INFO: Pod "webserver-deployment-557759b7c7-nfz6q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nfz6q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b242b72c-a009-41a4-a61e-67e3075cda76",
      ResourceVersion: (string) (len=6) "218506",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "51c38d4ae13336370adfb24a7fb2869bd1e9f16f95218dfb7c22efb80ca7eb05",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "100.115.206.223/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "100.115.206.223/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 31 31 35 2e 32 30  36 2e 32 32 33 5c 22 7d  |0.115.206.223\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nmtts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nmtts",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.64"
        }
      },
      PodIP: (string) (len=15) "100.115.206.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "100.115.206.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2b162e4c96bc465c6d70cd2b4b467e3dc11b2a9e83a4065b55677294896b0409",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.788: INFO: Pod "webserver-deployment-557759b7c7-q8t7s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q8t7s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8cc5f4b-69af-43c1-b97d-3e2181db9fd2",
      ResourceVersion: (string) (len=6) "218624",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k8xnf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k8xnf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.789: INFO: Pod "webserver-deployment-557759b7c7-skpd4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-skpd4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "126f6840-1c13-4770-b682-e8f2c186b6d1",
      ResourceVersion: (string) (len=6) "218625",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t2fpc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t2fpc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.791: INFO: Pod "webserver-deployment-557759b7c7-tp5rs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tp5rs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ef026ea-62d8-4a1d-a55a-d7f2e509d6b3",
      ResourceVersion: (string) (len=6) "218628",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-npmvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-npmvb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.792: INFO: Pod "webserver-deployment-557759b7c7-wm742" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wm742",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec908093-9293-4a70-9cd0-890366775393",
      ResourceVersion: (string) (len=6) "218494",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f6be7f8bbc66e38ea61c1176825e75a40b7ba83973ef5ebc02bf95e28a0dbe4f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "100.115.206.243/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "100.115.206.243/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 31 31 35 2e 32 30  36 2e 32 34 33 5c 22 7d  |0.115.206.243\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rcxxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rcxxj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.64"
        }
      },
      PodIP: (string) (len=15) "100.115.206.243",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "100.115.206.243"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aa44e3861ffd9c57cd6909a3680e7d7a7b6e03749cd9096b1f2164313f45264e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.794: INFO: Pod "webserver-deployment-557759b7c7-xjwx7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xjwx7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dafc9aba-63dc-4fde-8515-09de7debae7d",
      ResourceVersion: (string) (len=6) "218619",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2r2w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2r2w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.800: INFO: Pod "webserver-deployment-557759b7c7-z8wq6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z8wq6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "804ce602-bce8-4f2e-9b90-f0437ccc3961",
      ResourceVersion: (string) (len=6) "218486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e3620b5d0bb4bc493ad92a80619473acbc30dc54da1f4e20142d33a300c9db80",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "100.73.144.122/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "100.73.144.122/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b6537e71-3f49-4869-a757-b7dc9415ad0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  35 33 37 65 37 31 2d 33  |d\":\"b6537e71-3|
              00000090  66 34 39 2d 34 38 36 39  2d 61 37 35 37 2d 62 37  |f49-4869-a757-b7|
              000000a0  64 63 39 34 31 35 61 64  30 65 5c 22 7d 22 3a 7b  |dc9415ad0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  30 2e 37 33 2e 31 34 34  2e 31 32 32 5c 22 7d 22  |0.73.144.122\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lncsb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lncsb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) (len=14) "100.73.144.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "100.73.144.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850093970,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5b186bbf5cb94f6b04839dd713faacf0e42adab195d0160f21cb9fef5387f1e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.811: INFO: Pod "webserver-deployment-9b4f5bf69-595pp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-595pp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "771b1bcf-4cde-4b5a-a715-36b63b8e26de",
      ResourceVersion: (string) (len=6) "218591",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "100.115.206.236/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e6dfb43b17d88dd3161421ba4f7770e9a957a4ae8a302cbadcb5b6610a66c165",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "100.115.206.236/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hwvzt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hwvzt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.64"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.814: INFO: Pod "webserver-deployment-9b4f5bf69-75qk9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-75qk9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4209d65-f359-4f57-98a0-b38e54b5981a",
      ResourceVersion: (string) (len=6) "218597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "522984e4f961791ff8acda2fbf746051bd4fcd630c42155921721577161e343d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "100.73.144.69/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "100.73.144.69/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5gvl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5gvl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.820: INFO: Pod "webserver-deployment-9b4f5bf69-7shrg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7shrg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd49d3cd-1da4-43b0-9824-1a0ab9f51596",
      ResourceVersion: (string) (len=6) "218569",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c7e5385afc9d908f3baa9395f1a370c12b4047978c2657e83ed591fe640b865e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "100.115.206.228/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "100.115.206.228/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mjhgz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mjhgz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.111.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.111.64"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.824: INFO: Pod "webserver-deployment-9b4f5bf69-8bbpd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8bbpd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "353f55ec-eabe-4ceb-9529-949ee64a558f",
      ResourceVersion: (string) (len=6) "218620",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x4ckh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x4ckh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.825: INFO: Pod "webserver-deployment-9b4f5bf69-8t4tx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8t4tx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "384b3ed8-04ee-4b67-bd17-f3cac78178e4",
      ResourceVersion: (string) (len=6) "218623",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6cfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6cfs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.829: INFO: Pod "webserver-deployment-9b4f5bf69-dnnmh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dnnmh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96c3a216-fbeb-4fba-87b0-cc5252e0e1f1",
      ResourceVersion: (string) (len=6) "218626",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jltm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jltm6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.831: INFO: Pod "webserver-deployment-9b4f5bf69-ftrxr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ftrxr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aad6f5e0-94d7-4e5e-b32b-ecc9fe0d9676",
      ResourceVersion: (string) (len=6) "218594",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "100.73.144.112/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "100.73.144.112/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9d29efbd9b9125f023bd5e77ab20aad8f74fc5406a84bbcc0c163323942d050b"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rcdxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rcdxc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.833: INFO: Pod "webserver-deployment-9b4f5bf69-gsq77" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gsq77",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46bf7057-62c0-4036-8454-c7120231f9c5",
      ResourceVersion: (string) (len=6) "218629",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vzddq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vzddq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.837: INFO: Pod "webserver-deployment-9b4f5bf69-kbn9k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kbn9k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca8fc333-2205-42dd-b9d0-a8a47b2392fb",
      ResourceVersion: (string) (len=6) "218622",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vzkhg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vzkhg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.839: INFO: Pod "webserver-deployment-9b4f5bf69-pnsx4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pnsx4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fe7f3fa-90df-4041-97b6-229bcef513fc",
      ResourceVersion: (string) (len=6) "218614",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdktk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdktk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.841: INFO: Pod "webserver-deployment-9b4f5bf69-sbrqx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sbrqx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cc03c9f-8e0d-4fd9-976a-7b78d2338c12",
      ResourceVersion: (string) (len=6) "218567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aa2cfc9bf3cd7e4f85ae111d7b7f64b5ceaa821dbf7afb2abfd8c260f1ea3d92",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "100.73.144.127/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "100.73.144.127/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dhp7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dhp7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "perfermance-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.111.203",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.111.203"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093972,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.843: INFO: Pod "webserver-deployment-9b4f5bf69-t45hx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t45hx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6533",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "102ba570-c9a1-4f13-bffd-f1bd8d3c8d2a",
      ResourceVersion: (string) (len=6) "218627",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850093974,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e164e6b1-19f6-4557-a41e-4f6ce09fa67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850093974,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 31  36 34 65 36 62 31 2d 31  |d\":\"e164e6b1-1|
              00000090  39 66 36 2d 34 35 35 37  2d 61 34 31 65 2d 34 66  |9f6-4557-a41e-4f|
              000000a0  36 63 65 30 39 66 61 36  37 65 5c 22 7d 22 3a 7b  |6ce09fa67e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7r4rd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7r4rd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 30 17:12:54.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6533" for this suite. @ 04/30/24 17:12:54.864
• [6.437 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/30/24 17:12:54.877
  Apr 30 17:12:54.877: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:12:54.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:12:54.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:12:54.927
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:12:54.929
  E0430 17:12:55.104903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:56.105332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:57.105818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:58.105963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:12:59.106638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:00.106794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:01.107546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:02.107522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:03.108115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:04.108415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:05.109332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:06.109727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:13:06.975
  Apr 30 17:13:06.979: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-8f99db39-5a77-4f25-9c45-33ba34401254 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:13:06.986
  Apr 30 17:13:07.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2201" for this suite. @ 04/30/24 17:13:07.011
• [12.144 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/30/24 17:13:07.022
  Apr 30 17:13:07.022: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 17:13:07.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:07.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:07.044
  STEP: creating service multi-endpoint-test in namespace services-3554 @ 04/30/24 17:13:07.049
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3554 to expose endpoints map[] @ 04/30/24 17:13:07.063
  Apr 30 17:13:07.075: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0430 17:13:07.110724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:08.087: INFO: successfully validated that service multi-endpoint-test in namespace services-3554 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3554 @ 04/30/24 17:13:08.087
  E0430 17:13:08.111552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:09.111712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:10.112366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3554 to expose endpoints map[pod1:[100]] @ 04/30/24 17:13:10.123
  Apr 30 17:13:10.134: INFO: successfully validated that service multi-endpoint-test in namespace services-3554 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3554 @ 04/30/24 17:13:10.135
  E0430 17:13:11.112667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:12.113567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3554 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/30/24 17:13:12.162
  Apr 30 17:13:12.176: INFO: successfully validated that service multi-endpoint-test in namespace services-3554 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/30/24 17:13:12.177
  Apr 30 17:13:12.177: INFO: Creating new exec pod
  E0430 17:13:13.114216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:14.114847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:15.114932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:15.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-3554 exec execpod2cqmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 30 17:13:15.357: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 30 17:13:15.357: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 17:13:15.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-3554 exec execpod2cqmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.114 80'
  Apr 30 17:13:15.494: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.114 80\nConnection to 10.96.1.114 80 port [tcp/http] succeeded!\n"
  Apr 30 17:13:15.494: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 17:13:15.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-3554 exec execpod2cqmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 30 17:13:15.625: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 30 17:13:15.625: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 30 17:13:15.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=services-3554 exec execpod2cqmx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.1.114 81'
  Apr 30 17:13:15.773: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.1.114 81\nConnection to 10.96.1.114 81 port [tcp/*] succeeded!\n"
  Apr 30 17:13:15.774: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3554 @ 04/30/24 17:13:15.774
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3554 to expose endpoints map[pod2:[101]] @ 04/30/24 17:13:15.805
  Apr 30 17:13:15.829: INFO: successfully validated that service multi-endpoint-test in namespace services-3554 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3554 @ 04/30/24 17:13:15.829
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3554 to expose endpoints map[] @ 04/30/24 17:13:15.857
  Apr 30 17:13:15.871: INFO: successfully validated that service multi-endpoint-test in namespace services-3554 exposes endpoints map[]
  Apr 30 17:13:15.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3554" for this suite. @ 04/30/24 17:13:15.907
• [8.902 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 04/30/24 17:13:15.926
  Apr 30 17:13:15.926: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename resourcequota @ 04/30/24 17:13:15.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:15.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:15.951
  STEP: Counting existing ResourceQuota @ 04/30/24 17:13:15.955
  E0430 17:13:16.114939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:17.115338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:18.116378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:19.117102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:20.117850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/30/24 17:13:20.96
  STEP: Ensuring resource quota status is calculated @ 04/30/24 17:13:20.969
  E0430 17:13:21.117925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:22.118100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/30/24 17:13:22.974
  STEP: Ensuring resource quota status captures replication controller creation @ 04/30/24 17:13:22.992
  E0430 17:13:23.118940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:24.119278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/30/24 17:13:24.998
  STEP: Ensuring resource quota status released usage @ 04/30/24 17:13:25.013
  E0430 17:13:25.119866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:26.120145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:27.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8956" for this suite. @ 04/30/24 17:13:27.024
• [11.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/30/24 17:13:27.038
  Apr 30 17:13:27.038: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-runtime @ 04/30/24 17:13:27.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:27.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:27.064
  STEP: create the container @ 04/30/24 17:13:27.068
  W0430 17:13:27.088913      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/30/24 17:13:27.089
  E0430 17:13:27.121119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:28.121171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:29.122107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/30/24 17:13:30.108
  STEP: the container should be terminated @ 04/30/24 17:13:30.112
  STEP: the termination message should be set @ 04/30/24 17:13:30.112
  Apr 30 17:13:30.112: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/30/24 17:13:30.112
  E0430 17:13:30.122320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:30.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1486" for this suite. @ 04/30/24 17:13:30.139
• [3.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/30/24 17:13:30.146
  Apr 30 17:13:30.146: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:13:30.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:30.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:30.172
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:13:30.175
  E0430 17:13:31.122736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:32.123236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:33.123554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:34.123989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:13:34.212
  Apr 30 17:13:34.216: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-21a5a6e9-7bce-4f04-9de0-c07fa6ad95c8 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:13:34.223
  Apr 30 17:13:34.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-214" for this suite. @ 04/30/24 17:13:34.262
• [4.123 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/30/24 17:13:34.27
  Apr 30 17:13:34.270: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 17:13:34.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:34.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:34.297
  STEP: Creating configMap with name configmap-test-upd-16eecc0e-b093-477e-b46c-59c9c69baf2d @ 04/30/24 17:13:34.306
  STEP: Creating the pod @ 04/30/24 17:13:34.326
  E0430 17:13:35.124643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:36.125103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/30/24 17:13:36.35
  STEP: Waiting for pod with binary data @ 04/30/24 17:13:36.357
  Apr 30 17:13:36.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8567" for this suite. @ 04/30/24 17:13:36.368
• [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/30/24 17:13:36.381
  Apr 30 17:13:36.381: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename gc @ 04/30/24 17:13:36.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:36.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:36.409
  STEP: create the rc @ 04/30/24 17:13:36.419
  W0430 17:13:36.431053      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0430 17:13:37.125928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:38.126905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:39.127093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:40.127870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:41.128807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:42.130632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/30/24 17:13:42.436
  STEP: wait for the rc to be deleted @ 04/30/24 17:13:42.444
  E0430 17:13:43.130835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:43.467: INFO: 80 pods remaining
  Apr 30 17:13:43.467: INFO: 80 pods has nil DeletionTimestamp
  Apr 30 17:13:43.467: INFO: 
  E0430 17:13:44.131151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:44.463: INFO: 71 pods remaining
  Apr 30 17:13:44.463: INFO: 71 pods has nil DeletionTimestamp
  Apr 30 17:13:44.463: INFO: 
  E0430 17:13:45.131741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:45.872: INFO: 60 pods remaining
  Apr 30 17:13:45.872: INFO: 59 pods has nil DeletionTimestamp
  Apr 30 17:13:45.872: INFO: 
  E0430 17:13:46.135813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:46.459: INFO: 41 pods remaining
  Apr 30 17:13:46.459: INFO: 41 pods has nil DeletionTimestamp
  Apr 30 17:13:46.459: INFO: 
  E0430 17:13:47.135979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:47.509: INFO: 30 pods remaining
  Apr 30 17:13:47.509: INFO: 29 pods has nil DeletionTimestamp
  Apr 30 17:13:47.509: INFO: 
  E0430 17:13:48.136843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:48.458: INFO: 20 pods remaining
  Apr 30 17:13:48.458: INFO: 20 pods has nil DeletionTimestamp
  Apr 30 17:13:48.458: INFO: 
  E0430 17:13:49.137237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/30/24 17:13:49.457
  Apr 30 17:13:49.551: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 30 17:13:49.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7364" for this suite. @ 04/30/24 17:13:49.56
• [13.189 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/30/24 17:13:49.571
  Apr 30 17:13:49.571: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 17:13:49.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:49.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:49.6
  STEP: Setting up server cert @ 04/30/24 17:13:49.63
  E0430 17:13:50.137418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 17:13:50.308
  STEP: Deploying the webhook pod @ 04/30/24 17:13:50.328
  STEP: Wait for the deployment to be ready @ 04/30/24 17:13:50.353
  Apr 30 17:13:50.370: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0430 17:13:51.138360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:52.138593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:52.397: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 17:13:53.139533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:54.139833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:54.401: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 17:13:55.140289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:56.140578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:56.404: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 30, 17, 13, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0430 17:13:57.141161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:13:58.141805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/30/24 17:13:58.402
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 17:13:58.422
  E0430 17:13:59.141892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:13:59.422: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/30/24 17:13:59.43
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/30/24 17:13:59.454
  STEP: Creating a dummy validating-webhook-configuration object @ 04/30/24 17:13:59.474
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/30/24 17:13:59.489
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/30/24 17:13:59.497
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/30/24 17:13:59.511
  Apr 30 17:13:59.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7944" for this suite. @ 04/30/24 17:13:59.623
  STEP: Destroying namespace "webhook-markers-955" for this suite. @ 04/30/24 17:13:59.635
• [10.073 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/30/24 17:13:59.645
  Apr 30 17:13:59.645: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 17:13:59.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:13:59.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:13:59.689
  STEP: Creating configMap with name configmap-test-volume-ea69a779-f3c7-4018-b728-5812c0b4f0ed @ 04/30/24 17:13:59.695
  STEP: Creating a pod to test consume configMaps @ 04/30/24 17:13:59.703
  E0430 17:14:00.142244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:01.142474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:02.142606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:03.143731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:14:03.732
  Apr 30 17:14:03.735: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-3ec67895-7028-4475-abc8-4a75071fe5a6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 17:14:03.741
  Apr 30 17:14:03.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3188" for this suite. @ 04/30/24 17:14:03.771
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/30/24 17:14:03.783
  Apr 30 17:14:03.783: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pods @ 04/30/24 17:14:03.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:03.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:03.806
  STEP: creating a Pod with a static label @ 04/30/24 17:14:03.817
  STEP: watching for Pod to be ready @ 04/30/24 17:14:03.83
  Apr 30 17:14:03.832: INFO: observed Pod pod-test in namespace pods-4331 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 30 17:14:03.836: INFO: observed Pod pod-test in namespace pods-4331 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  }]
  Apr 30 17:14:03.857: INFO: observed Pod pod-test in namespace pods-4331 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  }]
  E0430 17:14:04.144465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:04.395: INFO: observed Pod pod-test in namespace pods-4331 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  }]
  E0430 17:14:05.145123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:05.490: INFO: Found Pod pod-test in namespace pods-4331 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:05 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:05 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-30 17:14:03 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/30/24 17:14:05.494
  STEP: getting the Pod and ensuring that it's patched @ 04/30/24 17:14:05.508
  STEP: replacing the Pod's status Ready condition to False @ 04/30/24 17:14:05.522
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/30/24 17:14:05.539
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/30/24 17:14:05.539
  STEP: watching for the Pod to be deleted @ 04/30/24 17:14:05.552
  Apr 30 17:14:05.554: INFO: observed event type MODIFIED
  E0430 17:14:06.146076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:07.146181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:07.491: INFO: observed event type MODIFIED
  Apr 30 17:14:07.783: INFO: observed event type MODIFIED
  Apr 30 17:14:07.988: INFO: observed event type MODIFIED
  E0430 17:14:08.146794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:08.495: INFO: observed event type MODIFIED
  Apr 30 17:14:08.511: INFO: observed event type MODIFIED
  Apr 30 17:14:08.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4331" for this suite. @ 04/30/24 17:14:08.527
• [4.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/30/24 17:14:08.534
  Apr 30 17:14:08.534: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 17:14:08.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:08.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:08.562
  STEP: Creating configMap with name configmap-test-volume-ff1f9ac0-c0c7-4933-aabd-9adb6a0a8652 @ 04/30/24 17:14:08.565
  STEP: Creating a pod to test consume configMaps @ 04/30/24 17:14:08.571
  E0430 17:14:09.146982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:10.147322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:11.147588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:12.147932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:14:12.6
  Apr 30 17:14:12.604: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-8f3a1c29-9477-4a8b-9d33-c7f764a44883 container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 17:14:12.611
  Apr 30 17:14:12.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1619" for this suite. @ 04/30/24 17:14:12.638
• [4.111 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 04/30/24 17:14:12.646
  Apr 30 17:14:12.646: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pv @ 04/30/24 17:14:12.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:12.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:12.673
  STEP: Creating initial PV and PVC @ 04/30/24 17:14:12.676
  Apr 30 17:14:12.676: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5943" @ 04/30/24 17:14:12.691
  STEP: Listing PVCs in namespace "pv-5943" @ 04/30/24 17:14:12.696
  STEP: Reading "pvc-v77pl" Status @ 04/30/24 17:14:12.708
  STEP: Reading "pv-5943-rpqnj" Status @ 04/30/24 17:14:12.713
  STEP: Patching "pvc-v77pl" Status @ 04/30/24 17:14:12.727
  STEP: Patching "pv-5943-rpqnj" Status @ 04/30/24 17:14:12.733
  STEP: Updating "pvc-v77pl" Status @ 04/30/24 17:14:12.778
  STEP: Updating "pv-5943-rpqnj" Status @ 04/30/24 17:14:12.789
  Apr 30 17:14:12.802: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 30 17:14:12.802: INFO: Deleting PersistentVolumeClaim "pvc-v77pl"
  Apr 30 17:14:12.813: INFO: Deleting PersistentVolume "pv-5943-rpqnj"
  Apr 30 17:14:12.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5943" for this suite. @ 04/30/24 17:14:12.828
• [0.190 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/30/24 17:14:12.838
  Apr 30 17:14:12.839: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename podtemplate @ 04/30/24 17:14:12.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:12.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:12.872
  STEP: Create set of pod templates @ 04/30/24 17:14:12.875
  Apr 30 17:14:12.881: INFO: created test-podtemplate-1
  Apr 30 17:14:12.895: INFO: created test-podtemplate-2
  Apr 30 17:14:12.905: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/30/24 17:14:12.906
  STEP: delete collection of pod templates @ 04/30/24 17:14:12.91
  Apr 30 17:14:12.910: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/30/24 17:14:12.929
  Apr 30 17:14:12.929: INFO: requesting list of pod templates to confirm quantity
  Apr 30 17:14:12.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5972" for this suite. @ 04/30/24 17:14:12.937
• [0.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/30/24 17:14:12.946
  Apr 30 17:14:12.947: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename proxy @ 04/30/24 17:14:12.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:12.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:12.977
  Apr 30 17:14:12.980: INFO: Creating pod...
  E0430 17:14:13.148566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:14.149186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:14.999: INFO: Creating service...
  Apr 30 17:14:15.014: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/pods/agnhost/proxy?method=DELETE
  Apr 30 17:14:15.038: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 30 17:14:15.038: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/pods/agnhost/proxy?method=OPTIONS
  Apr 30 17:14:15.043: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 30 17:14:15.043: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/pods/agnhost/proxy?method=PATCH
  Apr 30 17:14:15.048: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 30 17:14:15.048: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/pods/agnhost/proxy?method=POST
  Apr 30 17:14:15.057: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 30 17:14:15.057: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/pods/agnhost/proxy?method=PUT
  Apr 30 17:14:15.065: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 30 17:14:15.065: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 30 17:14:15.085: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 30 17:14:15.085: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 30 17:14:15.101: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 30 17:14:15.101: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 30 17:14:15.114: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 30 17:14:15.114: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/services/e2e-proxy-test-service/proxy?method=POST
  Apr 30 17:14:15.122: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 30 17:14:15.122: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 30 17:14:15.134: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 30 17:14:15.134: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/pods/agnhost/proxy?method=GET
  Apr 30 17:14:15.140: INFO: http.Client request:GET StatusCode:301
  Apr 30 17:14:15.140: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/services/e2e-proxy-test-service/proxy?method=GET
  Apr 30 17:14:15.146: INFO: http.Client request:GET StatusCode:301
  Apr 30 17:14:15.146: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/pods/agnhost/proxy?method=HEAD
  Apr 30 17:14:15.149: INFO: http.Client request:HEAD StatusCode:301
  Apr 30 17:14:15.149: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-822/services/e2e-proxy-test-service/proxy?method=HEAD
  E0430 17:14:15.150051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:15.155: INFO: http.Client request:HEAD StatusCode:301
  Apr 30 17:14:15.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-822" for this suite. @ 04/30/24 17:14:15.161
• [2.224 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/30/24 17:14:15.173
  Apr 30 17:14:15.174: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replication-controller @ 04/30/24 17:14:15.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:15.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:15.207
  STEP: Given a ReplicationController is created @ 04/30/24 17:14:15.209
  STEP: When the matched label of one of its pods change @ 04/30/24 17:14:15.22
  Apr 30 17:14:15.224: INFO: Pod name pod-release: Found 0 pods out of 1
  E0430 17:14:16.150158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:17.150695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:18.150869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:19.150989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:20.151150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:20.229: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/30/24 17:14:20.246
  E0430 17:14:21.151301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:21.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7970" for this suite. @ 04/30/24 17:14:21.273
• [6.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/30/24 17:14:21.286
  Apr 30 17:14:21.286: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename dns @ 04/30/24 17:14:21.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:21.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:21.315
  STEP: Creating a test headless service @ 04/30/24 17:14:21.318
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9506.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9506.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/30/24 17:14:21.326
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9506.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9506.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/30/24 17:14:21.326
  STEP: creating a pod to probe DNS @ 04/30/24 17:14:21.327
  STEP: submitting the pod to kubernetes @ 04/30/24 17:14:21.327
  E0430 17:14:22.151612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:23.152726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/30/24 17:14:23.359
  STEP: looking for the results for each expected name from probers @ 04/30/24 17:14:23.362
  Apr 30 17:14:23.378: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-9506/dns-test-38e9b6fc-ad5a-4bbe-bfa3-3b25fa7882ff: the server could not find the requested resource (get pods dns-test-38e9b6fc-ad5a-4bbe-bfa3-3b25fa7882ff)
  Apr 30 17:14:23.378: INFO: Lookups using dns-9506/dns-test-38e9b6fc-ad5a-4bbe-bfa3-3b25fa7882ff failed for: [jessie_hosts@dns-querier-2]

  Apr 30 17:14:23.385: INFO: Pod client logs for webserver: 
  Apr 30 17:14:23.391: INFO: Pod client logs for querier: 
  Apr 30 17:14:23.397: INFO: Pod client logs for jessie-querier: 
  E0430 17:14:24.153234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:25.154216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:26.154665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:27.154974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:28.155392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:28.383: INFO: DNS probes using dns-9506/dns-test-38e9b6fc-ad5a-4bbe-bfa3-3b25fa7882ff succeeded

  STEP: deleting the pod @ 04/30/24 17:14:28.383
  STEP: deleting the test headless service @ 04/30/24 17:14:28.414
  Apr 30 17:14:28.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9506" for this suite. @ 04/30/24 17:14:28.45
• [7.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/30/24 17:14:28.463
  Apr 30 17:14:28.463: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/30/24 17:14:28.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:28.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:28.49
  STEP: fetching the /apis discovery document @ 04/30/24 17:14:28.493
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/30/24 17:14:28.494
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/30/24 17:14:28.495
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/30/24 17:14:28.495
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/30/24 17:14:28.496
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/30/24 17:14:28.496
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/30/24 17:14:28.497
  Apr 30 17:14:28.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5112" for this suite. @ 04/30/24 17:14:28.502
• [0.047 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/30/24 17:14:28.51
  Apr 30 17:14:28.510: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename watch @ 04/30/24 17:14:28.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:28.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:28.535
  STEP: creating a watch on configmaps with label A @ 04/30/24 17:14:28.538
  STEP: creating a watch on configmaps with label B @ 04/30/24 17:14:28.54
  STEP: creating a watch on configmaps with label A or B @ 04/30/24 17:14:28.541
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/30/24 17:14:28.543
  Apr 30 17:14:28.549: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221292 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:14:28.549: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221292 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/30/24 17:14:28.55
  Apr 30 17:14:28.559: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221293 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:14:28.559: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221293 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/30/24 17:14:28.559
  Apr 30 17:14:28.569: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221294 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:14:28.569: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221294 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/30/24 17:14:28.569
  Apr 30 17:14:28.576: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221295 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:14:28.576: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5867  5728bd51-808f-4c78-893a-153b4dfc8160 221295 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/30/24 17:14:28.576
  Apr 30 17:14:28.582: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5867  594ef36a-4b7c-4559-9716-6b9a1a296d01 221296 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:14:28.582: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5867  594ef36a-4b7c-4559-9716-6b9a1a296d01 221296 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0430 17:14:29.155916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:30.156663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:31.157312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:32.157608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:33.157773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:34.157911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:35.158157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:36.158555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:37.159199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:38.159699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/30/24 17:14:38.583
  Apr 30 17:14:38.593: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5867  594ef36a-4b7c-4559-9716-6b9a1a296d01 221357 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 30 17:14:38.593: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5867  594ef36a-4b7c-4559-9716-6b9a1a296d01 221357 0 2024-04-30 17:14:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-30 17:14:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0430 17:14:39.159877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:40.160899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:41.161167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:42.161302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:43.161993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:44.162273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:45.162513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:46.162830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:47.163524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:48.164119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:48.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5867" for this suite. @ 04/30/24 17:14:48.601
• [20.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/30/24 17:14:48.61
  Apr 30 17:14:48.610: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename csi-storageclass @ 04/30/24 17:14:48.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:48.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:48.639
  STEP: Creating a StorageClass @ 04/30/24 17:14:48.642
  STEP: Get StorageClass "e2e-zszlg" @ 04/30/24 17:14:48.649
  STEP: Patching the StorageClass "e2e-zszlg" @ 04/30/24 17:14:48.653
  STEP: Delete StorageClass "e2e-zszlg" @ 04/30/24 17:14:48.659
  STEP: Confirm deletion of StorageClass "e2e-zszlg" @ 04/30/24 17:14:48.667
  STEP: Create a replacement StorageClass @ 04/30/24 17:14:48.671
  STEP: Updating StorageClass "e2e-v2-jmt96" @ 04/30/24 17:14:48.677
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-jmt96=updated" @ 04/30/24 17:14:48.685
  STEP: Deleting StorageClass "e2e-v2-jmt96" via DeleteCollection @ 04/30/24 17:14:48.689
  STEP: Confirm deletion of StorageClass "e2e-v2-jmt96" @ 04/30/24 17:14:48.698
  Apr 30 17:14:48.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-306" for this suite. @ 04/30/24 17:14:48.706
• [0.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/30/24 17:14:48.719
  Apr 30 17:14:48.719: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename containers @ 04/30/24 17:14:48.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:48.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:48.739
  E0430 17:14:49.164457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:50.164729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:14:50.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-830" for this suite. @ 04/30/24 17:14:50.784
• [2.078 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/30/24 17:14:50.797
  Apr 30 17:14:50.797: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 17:14:50.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:50.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:50.821
  STEP: Creating a pod to test downward api env vars @ 04/30/24 17:14:50.824
  E0430 17:14:51.164952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:52.165123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:53.165640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:54.166461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:14:54.858
  Apr 30 17:14:54.862: INFO: Trying to get logs from node perfermance-5 pod downward-api-07096243-5a1e-4632-b330-550a2e7a072c container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 17:14:54.87
  Apr 30 17:14:54.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-814" for this suite. @ 04/30/24 17:14:54.906
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 04/30/24 17:14:54.915
  Apr 30 17:14:54.915: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/30/24 17:14:54.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:14:54.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:14:54.94
  STEP: create the container to handle the HTTPGet hook request. @ 04/30/24 17:14:54.948
  E0430 17:14:55.166591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:56.167238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/30/24 17:14:56.979
  E0430 17:14:57.167704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:14:58.168475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/30/24 17:14:59.007
  STEP: delete the pod with lifecycle hook @ 04/30/24 17:14:59.027
  E0430 17:14:59.169086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:00.169515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:01.169820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:02.170284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:15:03.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8133" for this suite. @ 04/30/24 17:15:03.066
• [8.165 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/30/24 17:15:03.08
  Apr 30 17:15:03.080: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 17:15:03.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:03.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:03.103
  STEP: Creating secret with name secret-test-03a5b3b5-1164-4e23-b983-05bc96920568 @ 04/30/24 17:15:03.106
  STEP: Creating a pod to test consume secrets @ 04/30/24 17:15:03.115
  E0430 17:15:03.170696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:04.171359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:05.171804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:06.171954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:15:07.146
  Apr 30 17:15:07.150: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-4915b254-f59a-4159-b530-0e8e2f6342b0 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 17:15:07.156
  E0430 17:15:07.172924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:15:07.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9662" for this suite. @ 04/30/24 17:15:07.185
• [4.120 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/30/24 17:15:07.2
  Apr 30 17:15:07.200: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename discovery @ 04/30/24 17:15:07.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:07.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:07.229
  STEP: Setting up server cert @ 04/30/24 17:15:07.233
  Apr 30 17:15:07.868: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 30 17:15:07.869: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 30 17:15:07.869: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 30 17:15:07.870: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 30 17:15:07.870: INFO: Checking APIGroup: apps
  Apr 30 17:15:07.871: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 30 17:15:07.871: INFO: Versions found [{apps/v1 v1}]
  Apr 30 17:15:07.871: INFO: apps/v1 matches apps/v1
  Apr 30 17:15:07.872: INFO: Checking APIGroup: events.k8s.io
  Apr 30 17:15:07.873: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 30 17:15:07.873: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 30 17:15:07.873: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 30 17:15:07.873: INFO: Checking APIGroup: authentication.k8s.io
  Apr 30 17:15:07.875: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 30 17:15:07.875: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 30 17:15:07.875: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 30 17:15:07.875: INFO: Checking APIGroup: authorization.k8s.io
  Apr 30 17:15:07.876: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 30 17:15:07.876: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 30 17:15:07.877: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 30 17:15:07.877: INFO: Checking APIGroup: autoscaling
  Apr 30 17:15:07.879: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 30 17:15:07.879: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 30 17:15:07.879: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 30 17:15:07.879: INFO: Checking APIGroup: batch
  Apr 30 17:15:07.880: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 30 17:15:07.880: INFO: Versions found [{batch/v1 v1}]
  Apr 30 17:15:07.880: INFO: batch/v1 matches batch/v1
  Apr 30 17:15:07.880: INFO: Checking APIGroup: certificates.k8s.io
  Apr 30 17:15:07.882: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 30 17:15:07.882: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 30 17:15:07.882: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 30 17:15:07.882: INFO: Checking APIGroup: networking.k8s.io
  Apr 30 17:15:07.883: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 30 17:15:07.884: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 30 17:15:07.884: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 30 17:15:07.884: INFO: Checking APIGroup: policy
  Apr 30 17:15:07.886: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 30 17:15:07.886: INFO: Versions found [{policy/v1 v1}]
  Apr 30 17:15:07.886: INFO: policy/v1 matches policy/v1
  Apr 30 17:15:07.886: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 30 17:15:07.887: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 30 17:15:07.887: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 30 17:15:07.888: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 30 17:15:07.888: INFO: Checking APIGroup: storage.k8s.io
  Apr 30 17:15:07.889: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 30 17:15:07.889: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 30 17:15:07.889: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 30 17:15:07.890: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 30 17:15:07.891: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 30 17:15:07.891: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 30 17:15:07.891: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 30 17:15:07.891: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 30 17:15:07.893: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 30 17:15:07.893: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 30 17:15:07.893: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 30 17:15:07.893: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 30 17:15:07.894: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 30 17:15:07.894: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 30 17:15:07.894: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 30 17:15:07.894: INFO: Checking APIGroup: coordination.k8s.io
  Apr 30 17:15:07.896: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 30 17:15:07.896: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 30 17:15:07.896: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 30 17:15:07.896: INFO: Checking APIGroup: node.k8s.io
  Apr 30 17:15:07.897: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 30 17:15:07.897: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 30 17:15:07.897: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 30 17:15:07.897: INFO: Checking APIGroup: discovery.k8s.io
  Apr 30 17:15:07.898: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 30 17:15:07.898: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 30 17:15:07.898: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 30 17:15:07.898: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 30 17:15:07.899: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Apr 30 17:15:07.899: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Apr 30 17:15:07.899: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Apr 30 17:15:07.900: INFO: Checking APIGroup: projectcalico.org
  Apr 30 17:15:07.901: INFO: PreferredVersion.GroupVersion: projectcalico.org/v3
  Apr 30 17:15:07.901: INFO: Versions found [{projectcalico.org/v3 v3}]
  Apr 30 17:15:07.901: INFO: projectcalico.org/v3 matches projectcalico.org/v3
  Apr 30 17:15:07.901: INFO: Checking APIGroup: crd.projectcalico.org
  Apr 30 17:15:07.902: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Apr 30 17:15:07.902: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Apr 30 17:15:07.902: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Apr 30 17:15:07.903: INFO: Checking APIGroup: operator.tigera.io
  Apr 30 17:15:07.904: INFO: PreferredVersion.GroupVersion: operator.tigera.io/v1
  Apr 30 17:15:07.904: INFO: Versions found [{operator.tigera.io/v1 v1}]
  Apr 30 17:15:07.904: INFO: operator.tigera.io/v1 matches operator.tigera.io/v1
  Apr 30 17:15:07.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7329" for this suite. @ 04/30/24 17:15:07.909
• [0.717 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/30/24 17:15:07.92
  Apr 30 17:15:07.920: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-runtime @ 04/30/24 17:15:07.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:07.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:07.946
  STEP: create the container @ 04/30/24 17:15:07.949
  W0430 17:15:07.967426      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/30/24 17:15:07.967
  E0430 17:15:08.173216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:09.174281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:10.175227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/30/24 17:15:10.992
  STEP: the container should be terminated @ 04/30/24 17:15:10.998
  STEP: the termination message should be set @ 04/30/24 17:15:10.998
  Apr 30 17:15:10.999: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/30/24 17:15:10.999
  Apr 30 17:15:11.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-109" for this suite. @ 04/30/24 17:15:11.029
• [3.123 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/30/24 17:15:11.043
  Apr 30 17:15:11.043: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename field-validation @ 04/30/24 17:15:11.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:11.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:11.062
  STEP: apply creating a deployment @ 04/30/24 17:15:11.065
  Apr 30 17:15:11.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1886" for this suite. @ 04/30/24 17:15:11.085
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/30/24 17:15:11.098
  Apr 30 17:15:11.098: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replication-controller @ 04/30/24 17:15:11.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:11.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:11.124
  STEP: Creating replication controller my-hostname-basic-31c04419-9d7e-46af-8057-cc0fcdfab898 @ 04/30/24 17:15:11.128
  Apr 30 17:15:11.142: INFO: Pod name my-hostname-basic-31c04419-9d7e-46af-8057-cc0fcdfab898: Found 0 pods out of 1
  E0430 17:15:11.175400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:12.175962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:13.176518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:14.176838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:15.177855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:15:16.148: INFO: Pod name my-hostname-basic-31c04419-9d7e-46af-8057-cc0fcdfab898: Found 1 pods out of 1
  Apr 30 17:15:16.148: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-31c04419-9d7e-46af-8057-cc0fcdfab898" are running
  Apr 30 17:15:16.159: INFO: Pod "my-hostname-basic-31c04419-9d7e-46af-8057-cc0fcdfab898-gp5lv" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:12 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:11 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:12 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:12 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:11 +0000 UTC Reason: Message:}])
  Apr 30 17:15:16.159: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/30/24 17:15:16.159
  Apr 30 17:15:16.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3496" for this suite. @ 04/30/24 17:15:16.176
  E0430 17:15:16.178158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/30/24 17:15:16.188
  Apr 30 17:15:16.188: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replicaset @ 04/30/24 17:15:16.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:16.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:16.213
  Apr 30 17:15:16.216: INFO: Creating ReplicaSet my-hostname-basic-81e4d84d-efde-4c92-ba9b-04cf4160e782
  Apr 30 17:15:16.227: INFO: Pod name my-hostname-basic-81e4d84d-efde-4c92-ba9b-04cf4160e782: Found 0 pods out of 1
  E0430 17:15:17.178761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:18.179412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:19.179908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:20.181019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:21.181303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:15:21.235: INFO: Pod name my-hostname-basic-81e4d84d-efde-4c92-ba9b-04cf4160e782: Found 1 pods out of 1
  Apr 30 17:15:21.235: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-81e4d84d-efde-4c92-ba9b-04cf4160e782" is running
  Apr 30 17:15:21.240: INFO: Pod "my-hostname-basic-81e4d84d-efde-4c92-ba9b-04cf4160e782-f5f6z" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:17 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:16 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:17 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:17 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-30 17:15:16 +0000 UTC Reason: Message:}])
  Apr 30 17:15:21.240: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/30/24 17:15:21.24
  Apr 30 17:15:21.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-413" for this suite. @ 04/30/24 17:15:21.264
• [5.084 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/30/24 17:15:21.274
  Apr 30 17:15:21.275: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 17:15:21.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:21.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:21.306
  STEP: Setting up server cert @ 04/30/24 17:15:21.342
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 17:15:21.85
  STEP: Deploying the webhook pod @ 04/30/24 17:15:21.862
  STEP: Wait for the deployment to be ready @ 04/30/24 17:15:21.88
  Apr 30 17:15:21.891: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0430 17:15:22.182391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:23.183204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/30/24 17:15:23.904
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 17:15:23.918
  E0430 17:15:24.184089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:15:24.919: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/30/24 17:15:24.925
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/30/24 17:15:24.946
  Apr 30 17:15:24.946: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 17:15:25.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5251" for this suite. @ 04/30/24 17:15:25.045
  STEP: Destroying namespace "webhook-markers-5212" for this suite. @ 04/30/24 17:15:25.057
• [3.792 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/30/24 17:15:25.067
  Apr 30 17:15:25.067: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 17:15:25.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:15:25.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:15:25.09
  STEP: creating the pod with failed condition @ 04/30/24 17:15:25.093
  E0430 17:15:25.184698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:26.185370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:27.185835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:28.186739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:29.187465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:30.187884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:31.187977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:32.188246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:33.188475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:34.188933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:35.189931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:36.190408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:37.190876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:38.191295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:39.191387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:40.191644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:41.192473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:42.192580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:43.193157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:44.193767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:45.194569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:46.194915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:47.195056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:48.195280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:49.196353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:50.196800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:51.197016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:52.197371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:53.197336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:54.198410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:55.198940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:56.199377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:57.200023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:58.200533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:15:59.200948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:00.201818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:01.202496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:02.203470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:03.203971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:04.204093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:05.204253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:06.204388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:07.205109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:08.205260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:09.206404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:10.207348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:11.207653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:12.208102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:13.208318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:14.208653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:15.208975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:16.209540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:17.210052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:18.210172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:19.210330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:20.210505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:21.210818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:22.210987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:23.211544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:24.211735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:25.211903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:26.212070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:27.212215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:28.212899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:29.213179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:30.213781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:31.214144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:32.214578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:33.215063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:34.215995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:35.216448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:36.216547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:37.216730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:38.216861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:39.217191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:40.217305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:41.217438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:42.217663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:43.217796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:44.217933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:45.218082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:46.218671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:47.219736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:48.220824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:49.221095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:50.221269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:51.221369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:52.221512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:53.221634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:54.221805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:55.222389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:56.222602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:57.223058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:58.223864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:16:59.224022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:00.224121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:01.224711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:02.224757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:03.225040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:04.225693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:05.226113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:06.226920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:07.227539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:08.228216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:09.228644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:10.229044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:11.229492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:12.230109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:13.230908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:14.231886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:15.232101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:16.232573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:17.233166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:18.233668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:19.234306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:20.234625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:21.234678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:22.235498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:23.236200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:24.236358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/30/24 17:17:25.108
  E0430 17:17:25.236839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:17:25.628: INFO: Successfully updated pod "var-expansion-8c874259-073e-4016-8cfc-de4f5a75ccab"
  STEP: waiting for pod running @ 04/30/24 17:17:25.628
  E0430 17:17:26.236960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:27.237155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/30/24 17:17:27.642
  Apr 30 17:17:27.642: INFO: Deleting pod "var-expansion-8c874259-073e-4016-8cfc-de4f5a75ccab" in namespace "var-expansion-4133"
  Apr 30 17:17:27.655: INFO: Wait up to 5m0s for pod "var-expansion-8c874259-073e-4016-8cfc-de4f5a75ccab" to be fully deleted
  E0430 17:17:28.237686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:29.237948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:30.238740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:31.239000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:32.239870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:33.240509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:34.240612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:35.240787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:36.242165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:37.243023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:38.243250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:39.243575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:40.243897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:41.244193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:42.244571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:43.244900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:44.245743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:45.245889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:46.246039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:47.246763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:48.246812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:49.246915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:50.247664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:51.248293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:52.249185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:53.249475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:54.250098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:55.250663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:56.251376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:57.252161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:58.252359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:17:59.252767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:17:59.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4133" for this suite. @ 04/30/24 17:17:59.76
• [154.704 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/30/24 17:17:59.771
  Apr 30 17:17:59.771: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:17:59.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:17:59.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:17:59.795
  STEP: Creating secret with name projected-secret-test-1745c961-29f8-429c-bf79-e8b82eca7e09 @ 04/30/24 17:17:59.804
  STEP: Creating a pod to test consume secrets @ 04/30/24 17:17:59.813
  E0430 17:18:00.253045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:01.253615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:02.254739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:03.255090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:18:03.845
  Apr 30 17:18:03.848: INFO: Trying to get logs from node perfermance-5 pod pod-projected-secrets-4d31955b-c12d-4dea-80f3-55ec1c469410 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 17:18:03.866
  Apr 30 17:18:03.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8417" for this suite. @ 04/30/24 17:18:03.901
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/30/24 17:18:03.916
  Apr 30 17:18:03.916: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 17:18:03.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:03.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:03.945
  STEP: Creating a pod to test downward api env vars @ 04/30/24 17:18:03.948
  E0430 17:18:04.256091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:05.256824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:06.256956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:07.257913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:18:07.978
  Apr 30 17:18:07.981: INFO: Trying to get logs from node perfermance-5 pod downward-api-936f464e-a396-40ac-b3a0-4fb01318b595 container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 17:18:07.989
  Apr 30 17:18:08.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1418" for this suite. @ 04/30/24 17:18:08.045
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 04/30/24 17:18:08.063
  Apr 30 17:18:08.064: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 17:18:08.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:08.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:08.115
  STEP: Creating service test in namespace statefulset-5162 @ 04/30/24 17:18:08.121
  STEP: Looking for a node to schedule stateful set and pod @ 04/30/24 17:18:08.133
  STEP: Creating pod with conflicting port in namespace statefulset-5162 @ 04/30/24 17:18:08.139
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5162 @ 04/30/24 17:18:08.177
  E0430 17:18:08.258096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:09.258192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-5162 @ 04/30/24 17:18:10.188
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5162 @ 04/30/24 17:18:10.198
  Apr 30 17:18:10.225: INFO: Observed stateful pod in namespace: statefulset-5162, name: ss-0, uid: 806564b9-3aa5-4041-9918-386180d34264, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 30 17:18:10.243: INFO: Observed stateful pod in namespace: statefulset-5162, name: ss-0, uid: 806564b9-3aa5-4041-9918-386180d34264, status phase: Failed. Waiting for statefulset controller to delete.
  E0430 17:18:10.258917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:10.268: INFO: Observed stateful pod in namespace: statefulset-5162, name: ss-0, uid: 806564b9-3aa5-4041-9918-386180d34264, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 30 17:18:10.275: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-5162
  STEP: Removing pod with conflicting port in namespace statefulset-5162 @ 04/30/24 17:18:10.275
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5162 and will be in running state @ 04/30/24 17:18:10.323
  E0430 17:18:11.259875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:12.260576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:12.340: INFO: Deleting all statefulset in ns statefulset-5162
  Apr 30 17:18:12.344: INFO: Scaling statefulset ss to 0
  E0430 17:18:13.261069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:14.261662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:15.261831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:16.261966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:17.262371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:18.262583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:19.262621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:20.262773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:21.262895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:22.263215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:22.362: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 17:18:22.366: INFO: Deleting statefulset ss
  Apr 30 17:18:22.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5162" for this suite. @ 04/30/24 17:18:22.394
• [14.343 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/30/24 17:18:22.407
  Apr 30 17:18:22.407: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename events @ 04/30/24 17:18:22.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:22.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:22.432
  STEP: creating a test event @ 04/30/24 17:18:22.435
  STEP: listing events in all namespaces @ 04/30/24 17:18:22.448
  STEP: listing events in test namespace @ 04/30/24 17:18:22.452
  STEP: listing events with field selection filtering on source @ 04/30/24 17:18:22.455
  STEP: listing events with field selection filtering on reportingController @ 04/30/24 17:18:22.458
  STEP: getting the test event @ 04/30/24 17:18:22.461
  STEP: patching the test event @ 04/30/24 17:18:22.464
  STEP: getting the test event @ 04/30/24 17:18:22.474
  STEP: updating the test event @ 04/30/24 17:18:22.477
  STEP: getting the test event @ 04/30/24 17:18:22.486
  STEP: deleting the test event @ 04/30/24 17:18:22.49
  STEP: listing events in all namespaces @ 04/30/24 17:18:22.498
  STEP: listing events in test namespace @ 04/30/24 17:18:22.502
  Apr 30 17:18:22.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6866" for this suite. @ 04/30/24 17:18:22.509
• [0.110 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/30/24 17:18:22.517
  Apr 30 17:18:22.517: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 17:18:22.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:22.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:22.541
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/30/24 17:18:22.543
  E0430 17:18:23.263239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:24.263845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:25.264295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:26.264680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:18:26.577
  Apr 30 17:18:26.580: INFO: Trying to get logs from node perfermance-5 pod pod-92be36f8-de82-48cf-8ff4-eda1e09df46b container test-container: <nil>
  STEP: delete the pod @ 04/30/24 17:18:26.587
  Apr 30 17:18:26.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8363" for this suite. @ 04/30/24 17:18:26.615
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/30/24 17:18:26.623
  Apr 30 17:18:26.623: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename field-validation @ 04/30/24 17:18:26.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:26.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:26.651
  Apr 30 17:18:26.653: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:18:27.265225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:28.265513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:29.266482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:29.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-765" for this suite. @ 04/30/24 17:18:29.761
• [3.147 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/30/24 17:18:29.77
  Apr 30 17:18:29.770: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename daemonsets @ 04/30/24 17:18:29.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:29.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:29.799
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/30/24 17:18:29.821
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/30/24 17:18:29.831
  Apr 30 17:18:29.835: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:29.835: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:29.835: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:29.839: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 17:18:29.839: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 17:18:30.267397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:31.219: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:31.219: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:31.219: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:31.223: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 17:18:31.223: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 17:18:31.267437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:31.841: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:31.841: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:31.841: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:31.852: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 17:18:31.852: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 17:18:32.267944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:32.836: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:32.836: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:32.836: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:32.839: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 17:18:32.839: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/30/24 17:18:32.842
  Apr 30 17:18:32.869: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:32.869: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:32.869: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:32.877: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 17:18:32.878: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 17:18:33.268037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:33.864: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:33.864: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:33.864: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:33.868: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 30 17:18:33.868: INFO: Node perfermance-4 is running 0 daemon pod, expected 1
  E0430 17:18:34.268322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:34.863: INFO: DaemonSet pods can't tolerate node perfermance-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:34.863: INFO: DaemonSet pods can't tolerate node perfermance-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:34.863: INFO: DaemonSet pods can't tolerate node perfermance-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 30 17:18:34.867: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 30 17:18:34.867: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/30/24 17:18:34.867
  STEP: Deleting DaemonSet "daemon-set" @ 04/30/24 17:18:34.873
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2821, will wait for the garbage collector to delete the pods @ 04/30/24 17:18:34.873
  Apr 30 17:18:34.935: INFO: Deleting DaemonSet.extensions daemon-set took: 7.165879ms
  Apr 30 17:18:35.035: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.109483ms
  E0430 17:18:35.268608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:36.269001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:37.269778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:37.541: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 30 17:18:37.541: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 30 17:18:37.544: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"222930"},"items":null}

  Apr 30 17:18:37.547: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"222930"},"items":null}

  Apr 30 17:18:37.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2821" for this suite. @ 04/30/24 17:18:37.56
• [7.842 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/30/24 17:18:37.613
  Apr 30 17:18:37.613: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename webhook @ 04/30/24 17:18:37.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:37.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:37.658
  STEP: Setting up server cert @ 04/30/24 17:18:37.688
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/30/24 17:18:37.986
  STEP: Deploying the webhook pod @ 04/30/24 17:18:37.996
  STEP: Wait for the deployment to be ready @ 04/30/24 17:18:38.019
  Apr 30 17:18:38.038: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0430 17:18:38.270662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:39.271600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/30/24 17:18:40.05
  STEP: Verifying the service has paired with the endpoint @ 04/30/24 17:18:40.067
  E0430 17:18:40.271799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:41.068: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/30/24 17:18:41.076
  STEP: create a pod that should be updated by the webhook @ 04/30/24 17:18:41.101
  Apr 30 17:18:41.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4359" for this suite. @ 04/30/24 17:18:41.244
  STEP: Destroying namespace "webhook-markers-8375" for this suite. @ 04/30/24 17:18:41.257
• [3.658 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/30/24 17:18:41.271
  Apr 30 17:18:41.271: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:18:41.271791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename sysctl @ 04/30/24 17:18:41.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:41.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:41.306
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/30/24 17:18:41.309
  Apr 30 17:18:41.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1181" for this suite. @ 04/30/24 17:18:41.32
• [0.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/30/24 17:18:41.331
  Apr 30 17:18:41.331: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename disruption @ 04/30/24 17:18:41.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:41.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:41.36
  STEP: Creating a kubernetes client @ 04/30/24 17:18:41.363
  Apr 30 17:18:41.363: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename disruption-2 @ 04/30/24 17:18:41.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:41.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:41.393
  STEP: Waiting for the pdb to be processed @ 04/30/24 17:18:41.407
  E0430 17:18:42.272351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:43.272849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/30/24 17:18:43.416
  E0430 17:18:44.272902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:45.273282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/30/24 17:18:45.43
  E0430 17:18:46.273582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:47.274180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/30/24 17:18:47.435
  STEP: listing a collection of PDBs in namespace disruption-7393 @ 04/30/24 17:18:47.439
  STEP: deleting a collection of PDBs @ 04/30/24 17:18:47.442
  STEP: Waiting for the PDB collection to be deleted @ 04/30/24 17:18:47.458
  Apr 30 17:18:47.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-185" for this suite. @ 04/30/24 17:18:47.468
  Apr 30 17:18:47.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7393" for this suite. @ 04/30/24 17:18:47.486
• [6.163 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/30/24 17:18:47.495
  Apr 30 17:18:47.495: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 17:18:47.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:47.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:47.522
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/30/24 17:18:47.525
  E0430 17:18:48.274680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:49.274997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:50.275558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:51.275730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:18:51.564
  Apr 30 17:18:51.567: INFO: Trying to get logs from node perfermance-5 pod pod-59f112ba-030c-4566-9761-4bb3832c8eac container test-container: <nil>
  STEP: delete the pod @ 04/30/24 17:18:51.574
  Apr 30 17:18:51.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5162" for this suite. @ 04/30/24 17:18:51.607
• [4.121 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/30/24 17:18:51.616
  Apr 30 17:18:51.616: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename proxy @ 04/30/24 17:18:51.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:51.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:51.643
  Apr 30 17:18:51.646: INFO: Creating pod...
  E0430 17:18:52.276364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:53.276921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:53.664: INFO: Creating service...
  Apr 30 17:18:53.685: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy/some/path/with/DELETE
  Apr 30 17:18:53.699: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 30 17:18:53.699: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy/some/path/with/GET
  Apr 30 17:18:53.703: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 30 17:18:53.703: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy/some/path/with/HEAD
  Apr 30 17:18:53.708: INFO: http.Client request:HEAD | StatusCode:200
  Apr 30 17:18:53.708: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 30 17:18:53.712: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 30 17:18:53.713: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy/some/path/with/PATCH
  Apr 30 17:18:53.717: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 30 17:18:53.717: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy/some/path/with/POST
  Apr 30 17:18:53.722: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 30 17:18:53.723: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy/some/path/with/PUT
  Apr 30 17:18:53.727: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 30 17:18:53.727: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/services/test-service/proxy/some/path/with/DELETE
  Apr 30 17:18:53.733: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 30 17:18:53.734: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/services/test-service/proxy/some/path/with/GET
  Apr 30 17:18:53.741: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 30 17:18:53.741: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/services/test-service/proxy/some/path/with/HEAD
  Apr 30 17:18:53.746: INFO: http.Client request:HEAD | StatusCode:200
  Apr 30 17:18:53.746: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/services/test-service/proxy/some/path/with/OPTIONS
  Apr 30 17:18:53.763: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 30 17:18:53.764: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/services/test-service/proxy/some/path/with/PATCH
  Apr 30 17:18:53.769: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 30 17:18:53.769: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/services/test-service/proxy/some/path/with/POST
  Apr 30 17:18:53.775: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 30 17:18:53.775: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7679/services/test-service/proxy/some/path/with/PUT
  Apr 30 17:18:53.781: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 30 17:18:53.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7679" for this suite. @ 04/30/24 17:18:53.786
• [2.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/30/24 17:18:53.803
  Apr 30 17:18:53.803: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 17:18:53.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:18:53.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:18:53.836
  STEP: Creating pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330 @ 04/30/24 17:18:53.84
  E0430 17:18:54.276940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:55.277848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 17:18:55.882
  Apr 30 17:18:55.886: INFO: Initial restart count of pod test-grpc-97da119c-f2be-4920-8603-a35203659815 is 0
  Apr 30 17:18:55.889: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:18:56.277390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:57.278132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:57.895: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:18:58.278456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:18:59.278625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:18:59.901: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:00.280303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:01.280758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:01.906: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:02.281798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:03.282540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:03.911: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:04.282933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:05.283286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:05.916: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:06.283852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:07.284615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:07.921: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:08.284930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:09.285400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:09.926: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:10.286188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:11.286508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:11.932: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:12.286880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:13.287584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:13.936: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:14.287934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:15.288131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:15.941: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:16.288881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:17.289256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:17.947: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:18.290138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:19.290647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:19.954: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:20.290805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:21.291200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:21.959: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:22.292140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:23.292344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:23.964: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:24.293199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:25.293401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:25.970: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:26.293791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:27.294312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:27.975: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:28.294638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:29.295016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:29.980: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:30.295819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:31.296038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:31.986: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:32.296697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:33.297274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:33.991: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:34.297917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:35.298331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:35.996: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:36.299318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:37.299884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:38.008: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:38.300684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:39.300840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:40.013: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:40.301851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:41.302354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:42.018: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:42.303227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:43.303870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:44.024: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:44.304077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:45.304683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:46.030: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:46.305512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:47.306173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:48.036: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:48.306327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:49.307111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:50.041: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:50.307445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:51.308049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:52.047: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:52.309132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:53.309479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:54.053: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:54.309798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:55.310299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:56.059: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:56.310553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:57.311338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:19:58.064: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  E0430 17:19:58.311405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:19:59.311578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:00.068: INFO: Get pod test-grpc-97da119c-f2be-4920-8603-a35203659815 in namespace container-probe-1330
  Apr 30 17:20:00.068: INFO: Restart count of pod container-probe-1330/test-grpc-97da119c-f2be-4920-8603-a35203659815 is now 1 (1m4.18253645s elapsed)
  STEP: deleting the pod @ 04/30/24 17:20:00.069
  Apr 30 17:20:00.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1330" for this suite. @ 04/30/24 17:20:00.092
• [66.302 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/30/24 17:20:00.105
  Apr 30 17:20:00.105: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename namespaces @ 04/30/24 17:20:00.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:00.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:00.144
  STEP: Read namespace status @ 04/30/24 17:20:00.148
  Apr 30 17:20:00.154: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/30/24 17:20:00.154
  Apr 30 17:20:00.165: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/30/24 17:20:00.165
  Apr 30 17:20:00.179: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 30 17:20:00.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3809" for this suite. @ 04/30/24 17:20:00.184
• [0.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 04/30/24 17:20:00.195
  Apr 30 17:20:00.195: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 17:20:00.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:00.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:00.221
  STEP: creating a replication controller @ 04/30/24 17:20:00.224
  Apr 30 17:20:00.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 create -f -'
  E0430 17:20:00.312303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:00.387: INFO: stderr: ""
  Apr 30 17:20:00.387: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/30/24 17:20:00.387
  Apr 30 17:20:00.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 30 17:20:00.500: INFO: stderr: ""
  Apr 30 17:20:00.500: INFO: stdout: "update-demo-nautilus-fmkbd update-demo-nautilus-gww4t "
  Apr 30 17:20:00.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-fmkbd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 30 17:20:00.595: INFO: stderr: ""
  Apr 30 17:20:00.595: INFO: stdout: ""
  Apr 30 17:20:00.595: INFO: update-demo-nautilus-fmkbd is created but not running
  E0430 17:20:01.313392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:02.314317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:03.314748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:04.314854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:05.314985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:05.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 30 17:20:05.679: INFO: stderr: ""
  Apr 30 17:20:05.679: INFO: stdout: "update-demo-nautilus-fmkbd update-demo-nautilus-gww4t "
  Apr 30 17:20:05.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-fmkbd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 30 17:20:05.759: INFO: stderr: ""
  Apr 30 17:20:05.759: INFO: stdout: "true"
  Apr 30 17:20:05.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-fmkbd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 30 17:20:05.837: INFO: stderr: ""
  Apr 30 17:20:05.837: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 30 17:20:05.837: INFO: validating pod update-demo-nautilus-fmkbd
  Apr 30 17:20:05.843: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 30 17:20:05.843: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 30 17:20:05.843: INFO: update-demo-nautilus-fmkbd is verified up and running
  Apr 30 17:20:05.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-gww4t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 30 17:20:05.917: INFO: stderr: ""
  Apr 30 17:20:05.918: INFO: stdout: "true"
  Apr 30 17:20:05.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-gww4t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 30 17:20:05.994: INFO: stderr: ""
  Apr 30 17:20:05.994: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 30 17:20:05.994: INFO: validating pod update-demo-nautilus-gww4t
  Apr 30 17:20:06.001: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 30 17:20:06.001: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 30 17:20:06.001: INFO: update-demo-nautilus-gww4t is verified up and running
  STEP: scaling down the replication controller @ 04/30/24 17:20:06.001
  Apr 30 17:20:06.003: INFO: scanned /root for discovery docs: <nil>
  Apr 30 17:20:06.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0430 17:20:06.315718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:07.098: INFO: stderr: ""
  Apr 30 17:20:07.098: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/30/24 17:20:07.098
  Apr 30 17:20:07.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 30 17:20:07.183: INFO: stderr: ""
  Apr 30 17:20:07.183: INFO: stdout: "update-demo-nautilus-fmkbd update-demo-nautilus-gww4t "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 04/30/24 17:20:07.183
  E0430 17:20:07.316826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:08.317345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:09.317475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:10.317598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:11.317776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:12.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 30 17:20:12.270: INFO: stderr: ""
  Apr 30 17:20:12.270: INFO: stdout: "update-demo-nautilus-fmkbd "
  Apr 30 17:20:12.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-fmkbd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0430 17:20:12.318202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:12.355: INFO: stderr: ""
  Apr 30 17:20:12.355: INFO: stdout: "true"
  Apr 30 17:20:12.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-fmkbd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 30 17:20:12.439: INFO: stderr: ""
  Apr 30 17:20:12.439: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 30 17:20:12.439: INFO: validating pod update-demo-nautilus-fmkbd
  Apr 30 17:20:12.444: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 30 17:20:12.444: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 30 17:20:12.444: INFO: update-demo-nautilus-fmkbd is verified up and running
  STEP: scaling up the replication controller @ 04/30/24 17:20:12.444
  Apr 30 17:20:12.446: INFO: scanned /root for discovery docs: <nil>
  Apr 30 17:20:12.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0430 17:20:13.318915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:13.563: INFO: stderr: ""
  Apr 30 17:20:13.563: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/30/24 17:20:13.563
  Apr 30 17:20:13.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 30 17:20:13.657: INFO: stderr: ""
  Apr 30 17:20:13.657: INFO: stdout: "update-demo-nautilus-5fl9d update-demo-nautilus-fmkbd "
  Apr 30 17:20:13.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-5fl9d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 30 17:20:13.739: INFO: stderr: ""
  Apr 30 17:20:13.739: INFO: stdout: "true"
  Apr 30 17:20:13.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-5fl9d -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 30 17:20:13.840: INFO: stderr: ""
  Apr 30 17:20:13.840: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 30 17:20:13.840: INFO: validating pod update-demo-nautilus-5fl9d
  Apr 30 17:20:13.845: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 30 17:20:13.845: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 30 17:20:13.845: INFO: update-demo-nautilus-5fl9d is verified up and running
  Apr 30 17:20:13.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-fmkbd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 30 17:20:13.931: INFO: stderr: ""
  Apr 30 17:20:13.931: INFO: stdout: "true"
  Apr 30 17:20:13.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods update-demo-nautilus-fmkbd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 30 17:20:14.012: INFO: stderr: ""
  Apr 30 17:20:14.012: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 30 17:20:14.012: INFO: validating pod update-demo-nautilus-fmkbd
  Apr 30 17:20:14.017: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 30 17:20:14.017: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 30 17:20:14.017: INFO: update-demo-nautilus-fmkbd is verified up and running
  STEP: using delete to clean up resources @ 04/30/24 17:20:14.017
  Apr 30 17:20:14.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 delete --grace-period=0 --force -f -'
  Apr 30 17:20:14.110: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 30 17:20:14.110: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 30 17:20:14.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get rc,svc -l name=update-demo --no-headers'
  Apr 30 17:20:14.200: INFO: stderr: "No resources found in kubectl-5668 namespace.\n"
  Apr 30 17:20:14.201: INFO: stdout: ""
  Apr 30 17:20:14.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-5668 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 30 17:20:14.281: INFO: stderr: ""
  Apr 30 17:20:14.281: INFO: stdout: ""
  Apr 30 17:20:14.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5668" for this suite. @ 04/30/24 17:20:14.289
• [14.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/30/24 17:20:14.304
  Apr 30 17:20:14.304: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename var-expansion @ 04/30/24 17:20:14.305
  E0430 17:20:14.318915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:14.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:14.329
  STEP: Creating a pod to test env composition @ 04/30/24 17:20:14.332
  E0430 17:20:15.319161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:16.320027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:17.320118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:18.320289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:20:18.361
  Apr 30 17:20:18.364: INFO: Trying to get logs from node perfermance-5 pod var-expansion-d7d0456b-31f3-4248-ac56-e841a60bb89d container dapi-container: <nil>
  STEP: delete the pod @ 04/30/24 17:20:18.371
  Apr 30 17:20:18.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1364" for this suite. @ 04/30/24 17:20:18.404
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/30/24 17:20:18.414
  Apr 30 17:20:18.414: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:20:18.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:18.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:18.439
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:20:18.442
  E0430 17:20:19.321432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:20.321554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:21.322118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:22.323072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:20:22.467
  Apr 30 17:20:22.471: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-af0884fb-a07e-42b6-904d-6a59da33ad00 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:20:22.48
  Apr 30 17:20:22.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9853" for this suite. @ 04/30/24 17:20:22.512
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/30/24 17:20:22.519
  Apr 30 17:20:22.519: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 17:20:22.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:22.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:22.545
  STEP: Creating secret with name secret-test-f6d3aaac-a1f4-46ca-b493-704fdc5517cf @ 04/30/24 17:20:22.577
  STEP: Creating a pod to test consume secrets @ 04/30/24 17:20:22.583
  E0430 17:20:23.323755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:24.323944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:25.324099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:26.324750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:20:26.608
  Apr 30 17:20:26.611: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-a49102db-2985-40de-865e-9a7b0edd66ae container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 17:20:26.619
  Apr 30 17:20:26.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-779" for this suite. @ 04/30/24 17:20:26.644
  STEP: Destroying namespace "secret-namespace-5802" for this suite. @ 04/30/24 17:20:26.652
• [4.146 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 04/30/24 17:20:26.665
  Apr 30 17:20:26.665: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename security-context-test @ 04/30/24 17:20:26.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:26.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:26.735
  E0430 17:20:27.324904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:28.325157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:29.325688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:30.326064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:30.775: INFO: Got logs for pod "busybox-privileged-false-fc678d65-f9ec-4500-a3ec-d8fa72e59110": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 30 17:20:30.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2808" for this suite. @ 04/30/24 17:20:30.78
• [4.124 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/30/24 17:20:30.791
  Apr 30 17:20:30.791: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename pod-network-test @ 04/30/24 17:20:30.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:30.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:30.82
  STEP: Performing setup for networking test in namespace pod-network-test-879 @ 04/30/24 17:20:30.824
  STEP: creating a selector @ 04/30/24 17:20:30.824
  STEP: Creating the service pods in kubernetes @ 04/30/24 17:20:30.824
  Apr 30 17:20:30.824: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0430 17:20:31.327170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:32.327760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:33.328226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:34.328560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:35.328621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:36.329133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:37.329189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:38.329370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:39.329594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:40.329887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:41.330170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:42.330473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/30/24 17:20:42.916
  E0430 17:20:43.331379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:44.331556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:44.982: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Apr 30 17:20:44.982: INFO: Going to poll 100.115.206.221 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Apr 30 17:20:44.985: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://100.115.206.221:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-879 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 17:20:44.986: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 17:20:44.987: INFO: ExecWithOptions: Clientset creation
  Apr 30 17:20:44.987: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-879/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F100.115.206.221%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 30 17:20:45.059: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 30 17:20:45.059: INFO: Going to poll 100.73.144.125 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Apr 30 17:20:45.066: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://100.73.144.125:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-879 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 30 17:20:45.066: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  Apr 30 17:20:45.066: INFO: ExecWithOptions: Clientset creation
  Apr 30 17:20:45.066: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-879/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F100.73.144.125%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 30 17:20:45.127: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 30 17:20:45.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-879" for this suite. @ 04/30/24 17:20:45.133
• [14.355 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/30/24 17:20:45.147
  Apr 30 17:20:45.147: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl-logs @ 04/30/24 17:20:45.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:45.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:45.186
  STEP: creating an pod @ 04/30/24 17:20:45.189
  Apr 30 17:20:45.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 30 17:20:45.283: INFO: stderr: ""
  Apr 30 17:20:45.283: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/30/24 17:20:45.283
  Apr 30 17:20:45.283: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0430 17:20:45.331629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:46.332090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:47.298: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/30/24 17:20:47.298
  Apr 30 17:20:47.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 logs logs-generator logs-generator'
  E0430 17:20:47.333037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:47.395: INFO: stderr: ""
  Apr 30 17:20:47.395: INFO: stdout: "I0430 17:20:46.180340       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/7nm 201\nI0430 17:20:46.380840       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/9n82 404\nI0430 17:20:46.581216       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/srw 374\nI0430 17:20:46.780563       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/xkp 539\nI0430 17:20:46.980921       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/6lq 561\nI0430 17:20:47.181337       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/t8nz 554\nI0430 17:20:47.380699       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/gg2q 269\n"
  STEP: limiting log lines @ 04/30/24 17:20:47.395
  Apr 30 17:20:47.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 logs logs-generator logs-generator --tail=1'
  Apr 30 17:20:47.492: INFO: stderr: ""
  Apr 30 17:20:47.492: INFO: stdout: "I0430 17:20:47.380699       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/gg2q 269\n"
  Apr 30 17:20:47.492: INFO: got output "I0430 17:20:47.380699       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/gg2q 269\n"
  STEP: limiting log bytes @ 04/30/24 17:20:47.492
  Apr 30 17:20:47.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 logs logs-generator logs-generator --limit-bytes=1'
  Apr 30 17:20:47.583: INFO: stderr: ""
  Apr 30 17:20:47.583: INFO: stdout: "I"
  Apr 30 17:20:47.583: INFO: got output "I"
  STEP: exposing timestamps @ 04/30/24 17:20:47.583
  Apr 30 17:20:47.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 logs logs-generator logs-generator --tail=1 --timestamps'
  Apr 30 17:20:47.675: INFO: stderr: ""
  Apr 30 17:20:47.675: INFO: stdout: "2024-04-30T17:20:47.581210083Z I0430 17:20:47.581031       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/28zz 524\n"
  Apr 30 17:20:47.675: INFO: got output "2024-04-30T17:20:47.581210083Z I0430 17:20:47.581031       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/28zz 524\n"
  STEP: restricting to a time range @ 04/30/24 17:20:47.675
  E0430 17:20:48.333934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:49.334247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:50.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 logs logs-generator logs-generator --since=1s'
  Apr 30 17:20:50.268: INFO: stderr: ""
  Apr 30 17:20:50.268: INFO: stdout: "I0430 17:20:49.381251       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/8hhf 577\nI0430 17:20:49.580537       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/hm8 595\nI0430 17:20:49.780945       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/jl2 289\nI0430 17:20:49.981325       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/7ht5 481\nI0430 17:20:50.180502       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/fvn 282\n"
  Apr 30 17:20:50.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 logs logs-generator logs-generator --since=24h'
  E0430 17:20:50.335152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:50.366: INFO: stderr: ""
  Apr 30 17:20:50.366: INFO: stdout: "I0430 17:20:46.180340       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/7nm 201\nI0430 17:20:46.380840       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/9n82 404\nI0430 17:20:46.581216       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/srw 374\nI0430 17:20:46.780563       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/xkp 539\nI0430 17:20:46.980921       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/6lq 561\nI0430 17:20:47.181337       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/t8nz 554\nI0430 17:20:47.380699       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/gg2q 269\nI0430 17:20:47.581031       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/28zz 524\nI0430 17:20:47.781426       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/jhjp 339\nI0430 17:20:47.980812       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/pxv 378\nI0430 17:20:48.181210       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/z4dv 312\nI0430 17:20:48.380496       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/qt2 283\nI0430 17:20:48.580847       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/xdrs 426\nI0430 17:20:48.781221       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/llq 352\nI0430 17:20:48.980490       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/b4f8 430\nI0430 17:20:49.180854       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/spb 240\nI0430 17:20:49.381251       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/8hhf 577\nI0430 17:20:49.580537       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/hm8 595\nI0430 17:20:49.780945       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/jl2 289\nI0430 17:20:49.981325       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/7ht5 481\nI0430 17:20:50.180502       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/fvn 282\n"
  Apr 30 17:20:50.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-logs-6542 delete pod logs-generator'
  E0430 17:20:51.335596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:52.336252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:20:52.935: INFO: stderr: ""
  Apr 30 17:20:52.935: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 30 17:20:52.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6542" for this suite. @ 04/30/24 17:20:52.941
• [7.802 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/30/24 17:20:52.95
  Apr 30 17:20:52.950: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 17:20:52.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:52.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:52.976
  STEP: Creating configMap with name configmap-test-volume-bd808a4f-22b6-4b3f-957c-938862ba932c @ 04/30/24 17:20:52.978
  STEP: Creating a pod to test consume configMaps @ 04/30/24 17:20:52.984
  E0430 17:20:53.337071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:54.337131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:55.337668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:56.337358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:20:57.037
  Apr 30 17:20:57.040: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-f76b821d-934f-4b59-a9f8-6b9c6c98104e container agnhost-container: <nil>
  STEP: delete the pod @ 04/30/24 17:20:57.046
  Apr 30 17:20:57.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2173" for this suite. @ 04/30/24 17:20:57.076
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/30/24 17:20:57.084
  Apr 30 17:20:57.084: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/30/24 17:20:57.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:20:57.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:20:57.114
  Apr 30 17:20:57.117: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:20:57.337597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:58.338689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:20:59.339412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:00.340022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:01.340506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:02.341029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:03.341147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:21:03.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9012" for this suite. @ 04/30/24 17:21:03.512
• [6.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/30/24 17:21:03.52
  Apr 30 17:21:03.520: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 17:21:03.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:03.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:03.542
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:21:03.545
  E0430 17:21:04.342061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:05.342496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:06.343428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:07.344151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:21:07.575
  Apr 30 17:21:07.578: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-ef336efd-19b5-4ab2-a654-5404db0f7f04 container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:21:07.585
  Apr 30 17:21:07.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1144" for this suite. @ 04/30/24 17:21:07.616
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/30/24 17:21:07.633
  Apr 30 17:21:07.634: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 17:21:07.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:07.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:07.661
  STEP: Creating configMap with name configmap-test-upd-3c5ec32c-27dc-4f97-94ef-73f1967d6281 @ 04/30/24 17:21:07.669
  STEP: Creating the pod @ 04/30/24 17:21:07.676
  E0430 17:21:08.346077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:09.346275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-3c5ec32c-27dc-4f97-94ef-73f1967d6281 @ 04/30/24 17:21:09.715
  STEP: waiting to observe update in volume @ 04/30/24 17:21:09.722
  E0430 17:21:10.346335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:11.346611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:21:11.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-540" for this suite. @ 04/30/24 17:21:11.743
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/30/24 17:21:11.759
  Apr 30 17:21:11.759: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename cronjob @ 04/30/24 17:21:11.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:11.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:11.791
  STEP: Creating a cronjob @ 04/30/24 17:21:11.794
  STEP: creating @ 04/30/24 17:21:11.795
  STEP: getting @ 04/30/24 17:21:11.802
  STEP: listing @ 04/30/24 17:21:11.805
  STEP: watching @ 04/30/24 17:21:11.809
  Apr 30 17:21:11.809: INFO: starting watch
  STEP: cluster-wide listing @ 04/30/24 17:21:11.81
  STEP: cluster-wide watching @ 04/30/24 17:21:11.814
  Apr 30 17:21:11.814: INFO: starting watch
  STEP: patching @ 04/30/24 17:21:11.815
  STEP: updating @ 04/30/24 17:21:11.825
  Apr 30 17:21:11.842: INFO: waiting for watch events with expected annotations
  Apr 30 17:21:11.842: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/30/24 17:21:11.843
  STEP: updating /status @ 04/30/24 17:21:11.852
  STEP: get /status @ 04/30/24 17:21:11.863
  STEP: deleting @ 04/30/24 17:21:11.867
  STEP: deleting a collection @ 04/30/24 17:21:11.889
  Apr 30 17:21:11.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6058" for this suite. @ 04/30/24 17:21:11.905
• [0.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/30/24 17:21:11.914
  Apr 30 17:21:11.914: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename endpointslice @ 04/30/24 17:21:11.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:11.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:11.937
  E0430 17:21:12.346866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:13.347267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:14.347506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:15.347563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:16.348198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/30/24 17:21:17.036
  E0430 17:21:17.348561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:18.349068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:19.349545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:20.350554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:21.350831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 04/30/24 17:21:22.054
  E0430 17:21:22.350884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:23.351157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:24.351317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:25.351741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:26.352406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/30/24 17:21:27.063
  E0430 17:21:27.353221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:28.353755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:29.354020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:30.354407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:31.354549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 04/30/24 17:21:32.075
  Apr 30 17:21:32.100: INFO: EndpointSlice for Service endpointslice-202/example-named-port not found
  E0430 17:21:32.355566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:33.355901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:34.356054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:35.356227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:36.357195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:37.358106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:38.358556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:39.358760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:40.359822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:41.360054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:21:42.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-202" for this suite. @ 04/30/24 17:21:42.112
• [30.205 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/30/24 17:21:42.121
  Apr 30 17:21:42.121: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/30/24 17:21:42.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:42.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:42.151
  Apr 30 17:21:42.154: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:21:42.361097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:43.361264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/30/24 17:21:44.194
  Apr 30 17:21:44.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2660 --namespace=crd-publish-openapi-2660 create -f -'
  Apr 30 17:21:44.321: INFO: stderr: ""
  Apr 30 17:21:44.321: INFO: stdout: "e2e-test-crd-publish-openapi-7189-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 30 17:21:44.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2660 --namespace=crd-publish-openapi-2660 delete e2e-test-crd-publish-openapi-7189-crds test-cr'
  E0430 17:21:44.361612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:21:44.425: INFO: stderr: ""
  Apr 30 17:21:44.425: INFO: stdout: "e2e-test-crd-publish-openapi-7189-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 30 17:21:44.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2660 --namespace=crd-publish-openapi-2660 apply -f -'
  Apr 30 17:21:44.535: INFO: stderr: ""
  Apr 30 17:21:44.535: INFO: stdout: "e2e-test-crd-publish-openapi-7189-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 30 17:21:44.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2660 --namespace=crd-publish-openapi-2660 delete e2e-test-crd-publish-openapi-7189-crds test-cr'
  Apr 30 17:21:44.625: INFO: stderr: ""
  Apr 30 17:21:44.625: INFO: stdout: "e2e-test-crd-publish-openapi-7189-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/30/24 17:21:44.625
  Apr 30 17:21:44.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=crd-publish-openapi-2660 explain e2e-test-crd-publish-openapi-7189-crds'
  Apr 30 17:21:44.700: INFO: stderr: ""
  Apr 30 17:21:44.700: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7189-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0430 17:21:45.362249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:46.362842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:21:46.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2660" for this suite. @ 04/30/24 17:21:46.583
• [4.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/30/24 17:21:46.597
  Apr 30 17:21:46.597: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename gc @ 04/30/24 17:21:46.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:46.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:46.658
  STEP: create the deployment @ 04/30/24 17:21:46.661
  W0430 17:21:46.669021      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/30/24 17:21:46.669
  STEP: delete the deployment @ 04/30/24 17:21:47.179
  STEP: wait for all rs to be garbage collected @ 04/30/24 17:21:47.194
  STEP: expected 0 rs, got 1 rs @ 04/30/24 17:21:47.205
  STEP: expected 0 pods, got 2 pods @ 04/30/24 17:21:47.211
  E0430 17:21:47.363900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/30/24 17:21:47.713
  Apr 30 17:21:47.808: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 30 17:21:47.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8700" for this suite. @ 04/30/24 17:21:47.814
• [1.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/30/24 17:21:47.823
  Apr 30 17:21:47.823: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/30/24 17:21:47.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:47.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:47.852
  Apr 30 17:21:47.855: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  E0430 17:21:48.364014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:21:48.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-384" for this suite. @ 04/30/24 17:21:48.433
• [0.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/30/24 17:21:48.45
  Apr 30 17:21:48.450: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:21:48.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:48.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:48.483
  STEP: Creating projection with secret that has name projected-secret-test-map-a85e1deb-62af-4497-8b4a-256c3a50176b @ 04/30/24 17:21:48.486
  STEP: Creating a pod to test consume secrets @ 04/30/24 17:21:48.493
  E0430 17:21:49.364235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:50.364518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:51.364844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:52.365664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:21:52.523
  Apr 30 17:21:52.526: INFO: Trying to get logs from node perfermance-5 pod pod-projected-secrets-ccb2884b-8ce4-49cf-ab4b-e5631ddd2eaf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 17:21:52.535
  Apr 30 17:21:52.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1831" for this suite. @ 04/30/24 17:21:52.566
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 04/30/24 17:21:52.575
  Apr 30 17:21:52.575: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename configmap @ 04/30/24 17:21:52.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:52.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:52.611
  STEP: Creating configMap configmap-6068/configmap-test-c9547542-4fb6-4e3a-ab0c-a4759b80abbb @ 04/30/24 17:21:52.614
  STEP: Creating a pod to test consume configMaps @ 04/30/24 17:21:52.624
  E0430 17:21:53.365801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:54.366277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:55.366484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:56.366910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:21:56.653
  Apr 30 17:21:56.657: INFO: Trying to get logs from node perfermance-5 pod pod-configmaps-9e90c88c-d7bb-4237-b64b-57a782d12edd container env-test: <nil>
  STEP: delete the pod @ 04/30/24 17:21:56.669
  Apr 30 17:21:56.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6068" for this suite. @ 04/30/24 17:21:56.699
• [4.133 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/30/24 17:21:56.708
  Apr 30 17:21:56.709: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 17:21:56.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:21:56.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:21:56.739
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/30/24 17:21:56.742
  E0430 17:21:57.367664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:58.367957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:21:59.368138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:00.368345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:22:00.775
  Apr 30 17:22:00.779: INFO: Trying to get logs from node perfermance-5 pod pod-ecf6d7d8-3978-417f-af73-04552cf18d34 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 17:22:00.786
  Apr 30 17:22:00.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9419" for this suite. @ 04/30/24 17:22:00.813
• [4.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/30/24 17:22:00.826
  Apr 30 17:22:00.826: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename subpath @ 04/30/24 17:22:00.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:22:00.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:22:00.856
  STEP: Setting up data @ 04/30/24 17:22:00.86
  STEP: Creating pod pod-subpath-test-downwardapi-c72v @ 04/30/24 17:22:00.875
  STEP: Creating a pod to test atomic-volume-subpath @ 04/30/24 17:22:00.875
  E0430 17:22:01.369194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:02.369778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:03.370566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:04.371561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:05.371548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:06.371937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:07.372445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:08.372496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:09.372730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:10.373104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:11.373468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:12.374189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:13.375005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:14.375308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:15.375908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:16.376491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:17.377270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:18.377550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:19.377560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:20.377737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:21.377846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:22.378291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:23.378688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:24.379786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:22:24.961
  Apr 30 17:22:24.964: INFO: Trying to get logs from node perfermance-5 pod pod-subpath-test-downwardapi-c72v container test-container-subpath-downwardapi-c72v: <nil>
  STEP: delete the pod @ 04/30/24 17:22:24.976
  STEP: Deleting pod pod-subpath-test-downwardapi-c72v @ 04/30/24 17:22:24.998
  Apr 30 17:22:24.998: INFO: Deleting pod "pod-subpath-test-downwardapi-c72v" in namespace "subpath-368"
  Apr 30 17:22:25.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-368" for this suite. @ 04/30/24 17:22:25.004
• [24.188 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/30/24 17:22:25.014
  Apr 30 17:22:25.014: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename downward-api @ 04/30/24 17:22:25.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:22:25.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:22:25.042
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:22:25.045
  E0430 17:22:25.380214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:26.380887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:27.381026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:28.381081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:22:29.075
  Apr 30 17:22:29.078: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-ecf3cbc1-41b8-47d9-a3cd-d9ddc8d359ba container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:22:29.087
  Apr 30 17:22:29.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7885" for this suite. @ 04/30/24 17:22:29.122
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/30/24 17:22:29.132
  Apr 30 17:22:29.132: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename field-validation @ 04/30/24 17:22:29.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:22:29.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:22:29.175
  STEP: apply creating a deployment @ 04/30/24 17:22:29.178
  Apr 30 17:22:29.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6974" for this suite. @ 04/30/24 17:22:29.195
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/30/24 17:22:29.203
  Apr 30 17:22:29.203: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename cronjob @ 04/30/24 17:22:29.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:22:29.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:22:29.236
  STEP: Creating a suspended cronjob @ 04/30/24 17:22:29.239
  STEP: Ensuring no jobs are scheduled @ 04/30/24 17:22:29.249
  E0430 17:22:29.381991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:30.382294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:31.383295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:32.383379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:33.383759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:34.384126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:35.385102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:36.385912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:37.386995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:38.388735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:39.389422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:40.389621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:41.390013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:42.390504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:43.391547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:44.391882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:45.392355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:46.392969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:47.393690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:48.393869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:49.394537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:50.394694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:51.394917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:52.395602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:53.396783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:54.397354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:55.397540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:56.398385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:57.399453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:58.399682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:22:59.400592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:00.400695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:01.400999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:02.401336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:03.401987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:04.402701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:05.403643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:06.404256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:07.404954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:08.405923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:09.406574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:10.407621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:11.408145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:12.408821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:13.409279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:14.409635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:15.409802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:16.410483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:17.411487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:18.412137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:19.413056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:20.413720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:21.414054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:22.414190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:23.414865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:24.414971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:25.415070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:26.416028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:27.416198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:28.416333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:29.417063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:30.417214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:31.417585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:32.418234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:33.418324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:34.418504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:35.419269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:36.419814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:37.419950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:38.420274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:39.420877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:40.421257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:41.421849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:42.422604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:43.423618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:44.423958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:45.424189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:46.425018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:47.425791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:48.425650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:49.425847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:50.426840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:51.426946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:52.427693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:53.428257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:54.428408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:55.429303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:56.429853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:57.430626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:58.430965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:23:59.431196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:00.431493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:01.431944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:02.432459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:03.433248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:04.433531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:05.433955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:06.434478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:07.434951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:08.435361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:09.435918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:10.436075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:11.436082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:12.436342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:13.437503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:14.437775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:15.438734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:16.439380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:17.439908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:18.440176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:19.440537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:20.440804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:21.441549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:22.442505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:23.442720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:24.442879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:25.443842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:26.443964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:27.444826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:28.445192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:29.445314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:30.445444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:31.446328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:32.447452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:33.448111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:34.448386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:35.449226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:36.449301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:37.449460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:38.449907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:39.450179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:40.450481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:41.451161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:42.451430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:43.451894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:44.452810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:45.453366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:46.454781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:47.455530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:48.455817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:49.456464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:50.457175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:51.457273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:52.457780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:53.458845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:54.459172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:55.460093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:56.461125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:57.461461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:58.461797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:24:59.461979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:00.462219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:01.462363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:02.462494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:03.462598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:04.462870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:05.463084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:06.464170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:07.464202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:08.464499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:09.465208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:10.465955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:11.466040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:12.466546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:13.467407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:14.467940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:15.468076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:16.468590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:17.468791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:18.469282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:19.470143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:20.470416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:21.471121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:22.471297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:23.472306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:24.472458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:25.472605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:26.473045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:27.474070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:28.474241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:29.474769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:30.475340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:31.476253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:32.476957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:33.477685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:34.477958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:35.478133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:36.478823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:37.478824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:38.479039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:39.479724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:40.480026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:41.480134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:42.481016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:43.481121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:44.481416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:45.482410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:46.483060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:47.483472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:48.483357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:49.483777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:50.484087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:51.485091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:52.485224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:53.486023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:54.486322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:55.487214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:56.488026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:57.488693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:58.488937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:25:59.489609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:00.489908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:01.490647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:02.491248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:03.491507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:04.491813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:05.492750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:06.493311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:07.493378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:08.493521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:09.494338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:10.494690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:11.495646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:12.496223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:13.496448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:14.496976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:15.497856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:16.498412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:17.498738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:18.500462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:19.501006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:20.501299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:21.501471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:22.502199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:23.502320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:24.502917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:25.503009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:26.503940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:27.504037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:28.504776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:29.504864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:30.505005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:31.505923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:32.506295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:33.507043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:34.507183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:35.507675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:36.507812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:37.508348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:38.508476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:39.509196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:40.509541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:41.510213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:42.511346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:43.511302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:44.511469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:45.511696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:46.511855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:47.512314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:48.512977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:49.513725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:50.514134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:51.514592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:52.515231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:53.515588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:54.515895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:55.516805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:56.516952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:57.517725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:58.518014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:26:59.518949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:00.519194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:01.520244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:02.520313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:03.521208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:04.521364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:05.522156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:06.522355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:07.523250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:08.523543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:09.524351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:10.524697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:11.525337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:12.525884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:13.526401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:14.526664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:15.527088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:16.527734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:17.528599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:18.528888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:19.529033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:20.529146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:21.529795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:22.530351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:23.530947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:24.531143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:25.531940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:26.532967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:27.533095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:28.533325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/30/24 17:27:29.258
  STEP: Removing cronjob @ 04/30/24 17:27:29.262
  Apr 30 17:27:29.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9777" for this suite. @ 04/30/24 17:27:29.276
• [300.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 04/30/24 17:27:29.289
  Apr 30 17:27:29.289: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename statefulset @ 04/30/24 17:27:29.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:27:29.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:27:29.325
  STEP: Creating service test in namespace statefulset-9985 @ 04/30/24 17:27:29.329
  STEP: Creating statefulset ss in namespace statefulset-9985 @ 04/30/24 17:27:29.353
  Apr 30 17:27:29.370: INFO: Found 0 stateful pods, waiting for 1
  E0430 17:27:29.533416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:30.533898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:31.534025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:32.534473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:33.534668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:34.535014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:35.535348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:36.535664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:37.536291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:38.536517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:27:39.371: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/30/24 17:27:39.377
  STEP: Getting /status @ 04/30/24 17:27:39.389
  Apr 30 17:27:39.393: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/30/24 17:27:39.393
  Apr 30 17:27:39.409: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/30/24 17:27:39.409
  Apr 30 17:27:39.411: INFO: Observed &StatefulSet event: ADDED
  Apr 30 17:27:39.411: INFO: Found Statefulset ss in namespace statefulset-9985 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 30 17:27:39.411: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/30/24 17:27:39.411
  Apr 30 17:27:39.411: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 30 17:27:39.424: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/30/24 17:27:39.424
  Apr 30 17:27:39.427: INFO: Observed &StatefulSet event: ADDED
  Apr 30 17:27:39.427: INFO: Deleting all statefulset in ns statefulset-9985
  Apr 30 17:27:39.434: INFO: Scaling statefulset ss to 0
  E0430 17:27:39.537450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:40.537556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:41.537874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:42.538476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:43.538820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:44.539133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:45.539564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:46.541079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:47.542028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:48.541775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:27:49.455: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 30 17:27:49.458: INFO: Deleting statefulset ss
  Apr 30 17:27:49.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9985" for this suite. @ 04/30/24 17:27:49.477
• [20.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/30/24 17:27:49.491
  Apr 30 17:27:49.491: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename podtemplate @ 04/30/24 17:27:49.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:27:49.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:27:49.52
  E0430 17:27:49.541981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:27:49.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-586" for this suite. @ 04/30/24 17:27:49.578
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/30/24 17:27:49.596
  Apr 30 17:27:49.596: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:27:49.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:27:49.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:27:49.625
  STEP: Creating a pod to test downward API volume plugin @ 04/30/24 17:27:49.627
  E0430 17:27:50.542661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:51.543099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:52.543178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:53.543521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:27:53.662
  Apr 30 17:27:53.666: INFO: Trying to get logs from node perfermance-5 pod downwardapi-volume-4b37798e-d8e4-4598-9f02-9366cdf4499b container client-container: <nil>
  STEP: delete the pod @ 04/30/24 17:27:53.685
  Apr 30 17:27:53.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1827" for this suite. @ 04/30/24 17:27:53.715
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 04/30/24 17:27:53.74
  Apr 30 17:27:53.740: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 17:27:53.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:27:53.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:27:53.769
  Apr 30 17:27:53.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-8517 version'
  Apr 30 17:27:53.851: INFO: stderr: ""
  Apr 30 17:27:53.851: INFO: stdout: "Client Version: v1.29.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.2\n"
  Apr 30 17:27:53.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8517" for this suite. @ 04/30/24 17:27:53.856
• [0.127 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 04/30/24 17:27:53.867
  Apr 30 17:27:53.867: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 17:27:53.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:27:53.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:27:53.895
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/30/24 17:27:53.898
  Apr 30 17:27:53.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-4948 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 30 17:27:53.984: INFO: stderr: ""
  Apr 30 17:27:53.984: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/30/24 17:27:53.984
  Apr 30 17:27:53.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-4948 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Apr 30 17:27:54.070: INFO: stderr: ""
  Apr 30 17:27:54.070: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/30/24 17:27:54.07
  Apr 30 17:27:54.074: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-4948 delete pods e2e-test-httpd-pod'
  E0430 17:27:54.543861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:55.544477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:27:55.688: INFO: stderr: ""
  Apr 30 17:27:55.688: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 30 17:27:55.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4948" for this suite. @ 04/30/24 17:27:55.694
• [1.838 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 04/30/24 17:27:55.705
  Apr 30 17:27:55.705: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 17:27:55.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:27:55.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:27:55.736
  STEP: create deployment with httpd image @ 04/30/24 17:27:55.739
  Apr 30 17:27:55.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-4111 create -f -'
  Apr 30 17:27:55.859: INFO: stderr: ""
  Apr 30 17:27:55.859: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/30/24 17:27:55.859
  Apr 30 17:27:55.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-4111 diff -f -'
  E0430 17:27:56.545562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:57.546026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:58.546255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:27:59.546478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:00.389: INFO: rc: 1
  Apr 30 17:28:00.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-4111 delete -f -'
  Apr 30 17:28:00.471: INFO: stderr: ""
  Apr 30 17:28:00.471: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 30 17:28:00.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4111" for this suite. @ 04/30/24 17:28:00.479
• [4.794 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/30/24 17:28:00.499
  Apr 30 17:28:00.499: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename container-probe @ 04/30/24 17:28:00.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:28:00.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:28:00.533
  STEP: Creating pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104 @ 04/30/24 17:28:00.537
  E0430 17:28:00.546778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:01.546950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:02.547492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/30/24 17:28:02.565
  Apr 30 17:28:02.568: INFO: Initial restart count of pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 is 0
  Apr 30 17:28:02.571: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:03.547895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:04.548116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:04.576: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:05.548210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:06.548846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:06.622: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:07.549472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:08.549824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:08.627: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:09.549848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:10.550027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:10.633: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:11.550215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:12.550802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:12.638: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:13.550975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:14.551259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:14.643: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:15.551333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:16.551842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:16.648: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:17.552032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:18.552281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:18.654: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:19.553118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:20.553412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:20.661: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:21.554213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:22.554735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:22.666: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:23.554844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:24.555052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:24.673: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:25.556079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:26.556522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:26.684: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:27.557057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:28.557381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:28.689: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:29.558181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:30.558342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:30.694: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:31.558628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:32.559332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:32.700: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:33.559996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:34.560609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:34.705: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:35.560718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:36.561598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:36.709: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:37.562503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:38.562593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:38.714: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:39.562981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:40.563194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:40.719: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:41.564007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:42.564560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:42.724: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:43.565417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:44.565645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:44.730: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:45.565992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:46.566020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:46.735: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:47.566639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:48.567116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:48.741: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:49.567318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:50.567637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:50.746: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  E0430 17:28:51.567750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:52.568215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:28:52.752: INFO: Get pod busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 in namespace container-probe-2104
  Apr 30 17:28:52.752: INFO: Restart count of pod container-probe-2104/busybox-9ce135e3-7451-42a4-b62e-bade46da66c1 is now 1 (50.184001734s elapsed)
  STEP: deleting the pod @ 04/30/24 17:28:52.752
  Apr 30 17:28:52.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2104" for this suite. @ 04/30/24 17:28:52.785
• [52.296 seconds]
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/30/24 17:28:52.795
  Apr 30 17:28:52.795: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename services @ 04/30/24 17:28:52.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:28:52.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:28:52.824
  Apr 30 17:28:52.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3243" for this suite. @ 04/30/24 17:28:52.835
• [0.055 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/30/24 17:28:52.85
  Apr 30 17:28:52.850: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename chunking @ 04/30/24 17:28:52.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:28:52.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:28:52.885
  STEP: creating a large number of resources @ 04/30/24 17:28:52.887
  E0430 17:28:53.568943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:54.569770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:55.569981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:56.570567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:57.570676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:58.570729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:28:59.571332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:00.572184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:01.573094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:02.573652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:03.574138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:04.574859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:05.575081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:06.575787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:07.576723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:08.577267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:09.577494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 04/30/24 17:29:10.566
  E0430 17:29:10.578338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:10.608: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 30 17:29:10.657: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 30 17:29:10.708: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 30 17:29:10.758: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 30 17:29:10.808: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 30 17:29:10.858: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 30 17:29:10.908: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 30 17:29:10.959: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 30 17:29:11.008: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 30 17:29:11.058: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 30 17:29:11.114: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 30 17:29:11.158: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 30 17:29:11.207: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 30 17:29:11.257: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 30 17:29:11.308: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 30 17:29:11.358: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 30 17:29:11.407: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 30 17:29:11.459: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 30 17:29:11.512: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 30 17:29:11.558: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  E0430 17:29:11.578668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:11.608: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 30 17:29:11.657: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 30 17:29:11.708: INFO: Retrieved 17/17 results with rv 226973 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTczLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 30 17:29:11.757: INFO: Retrieved 9/17 results with rv 226973 and continue 
  Apr 30 17:29:11.808: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 30 17:29:11.859: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 30 17:29:11.908: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 30 17:29:11.959: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 30 17:29:12.008: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 30 17:29:12.058: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 30 17:29:12.108: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 30 17:29:12.162: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 30 17:29:12.208: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 30 17:29:12.258: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 30 17:29:12.309: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 30 17:29:12.358: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 30 17:29:12.416: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 30 17:29:12.458: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 30 17:29:12.509: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 30 17:29:12.559: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  E0430 17:29:12.579056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:12.608: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 30 17:29:12.659: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 30 17:29:12.709: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 30 17:29:12.759: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 30 17:29:12.809: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 30 17:29:12.858: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 30 17:29:12.908: INFO: Retrieved 17/17 results with rv 226979 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTc5LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 30 17:29:12.958: INFO: Retrieved 9/17 results with rv 226979 and continue 
  Apr 30 17:29:13.009: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 30 17:29:13.059: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 30 17:29:13.108: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 30 17:29:13.158: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 30 17:29:13.208: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 30 17:29:13.257: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 30 17:29:13.309: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 30 17:29:13.358: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 30 17:29:13.408: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 30 17:29:13.457: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 30 17:29:13.508: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 30 17:29:13.558: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  E0430 17:29:13.580165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:13.609: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 30 17:29:13.659: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 30 17:29:13.708: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 30 17:29:13.758: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 30 17:29:13.808: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 30 17:29:13.858: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 30 17:29:13.908: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 30 17:29:13.958: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 30 17:29:14.009: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 30 17:29:14.059: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 30 17:29:14.109: INFO: Retrieved 17/17 results with rv 226983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI2OTgzLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 30 17:29:14.158: INFO: Retrieved 9/17 results with rv 226983 and continue 
  STEP: retrieving those results all at once @ 04/30/24 17:29:14.158
  Apr 30 17:29:14.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7944" for this suite. @ 04/30/24 17:29:14.259
• [21.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/30/24 17:29:14.312
  Apr 30 17:29:14.312: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename endpointslice @ 04/30/24 17:29:14.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:29:14.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:29:14.338
  Apr 30 17:29:14.349: INFO: Endpoints addresses: [192.168.111.150 192.168.111.4 192.168.111.82] , ports: [6443]
  Apr 30 17:29:14.349: INFO: EndpointSlices addresses: [192.168.111.150 192.168.111.4 192.168.111.82] , ports: [6443]
  Apr 30 17:29:14.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4573" for this suite. @ 04/30/24 17:29:14.353
• [0.048 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/30/24 17:29:14.372
  Apr 30 17:29:14.372: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename emptydir @ 04/30/24 17:29:14.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:29:14.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:29:14.399
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/30/24 17:29:14.402
  E0430 17:29:14.580621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:15.581005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:16.581750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:17.582404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:29:18.434
  Apr 30 17:29:18.438: INFO: Trying to get logs from node perfermance-5 pod pod-6f8cef98-abba-4681-9ba1-e936cc141bd5 container test-container: <nil>
  STEP: delete the pod @ 04/30/24 17:29:18.445
  Apr 30 17:29:18.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3942" for this suite. @ 04/30/24 17:29:18.483
• [4.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/30/24 17:29:18.496
  Apr 30 17:29:18.496: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename projected @ 04/30/24 17:29:18.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:29:18.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:29:18.523
  STEP: Creating projection with secret that has name projected-secret-test-89c92b6a-5317-4c8d-b1f2-7e777198cacf @ 04/30/24 17:29:18.527
  STEP: Creating a pod to test consume secrets @ 04/30/24 17:29:18.536
  E0430 17:29:18.583040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:19.583323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:20.584002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:21.584141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:29:22.566
  Apr 30 17:29:22.570: INFO: Trying to get logs from node perfermance-5 pod pod-projected-secrets-83de47b0-a9c9-4087-b549-990576859662 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 17:29:22.577
  E0430 17:29:22.584593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:22.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3187" for this suite. @ 04/30/24 17:29:22.609
• [4.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 04/30/24 17:29:22.621
  Apr 30 17:29:22.621: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 17:29:22.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:29:22.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:29:22.656
  STEP: creating Agnhost RC @ 04/30/24 17:29:22.66
  Apr 30 17:29:22.660: INFO: namespace kubectl-6890
  Apr 30 17:29:22.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6890 create -f -'
  Apr 30 17:29:22.832: INFO: stderr: ""
  Apr 30 17:29:22.832: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/30/24 17:29:22.832
  E0430 17:29:23.584767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:23.837: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 17:29:23.837: INFO: Found 0 / 1
  E0430 17:29:24.584813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:24.838: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 17:29:24.838: INFO: Found 1 / 1
  Apr 30 17:29:24.838: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 30 17:29:24.842: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 30 17:29:24.842: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 30 17:29:24.842: INFO: wait on agnhost-primary startup in kubectl-6890 
  Apr 30 17:29:24.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6890 logs agnhost-primary-x5jbl agnhost-primary'
  Apr 30 17:29:24.926: INFO: stderr: ""
  Apr 30 17:29:24.926: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/30/24 17:29:24.926
  Apr 30 17:29:24.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6890 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 30 17:29:25.018: INFO: stderr: ""
  Apr 30 17:29:25.018: INFO: stdout: "service/rm2 exposed\n"
  Apr 30 17:29:25.026: INFO: Service rm2 in namespace kubectl-6890 found.
  E0430 17:29:25.585374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:26.586005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/30/24 17:29:27.034
  Apr 30 17:29:27.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6890 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Apr 30 17:29:27.134: INFO: stderr: ""
  Apr 30 17:29:27.134: INFO: stdout: "service/rm3 exposed\n"
  Apr 30 17:29:27.143: INFO: Service rm3 in namespace kubectl-6890 found.
  E0430 17:29:27.586759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:28.586969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:29.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6890" for this suite. @ 04/30/24 17:29:29.156
• [6.547 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/30/24 17:29:29.168
  Apr 30 17:29:29.168: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename secrets @ 04/30/24 17:29:29.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:29:29.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:29:29.199
  STEP: Creating secret with name secret-test-map-5552f0d1-5149-440d-88eb-503ca4932c67 @ 04/30/24 17:29:29.202
  STEP: Creating a pod to test consume secrets @ 04/30/24 17:29:29.207
  E0430 17:29:29.587018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:30.587372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:31.588440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:32.588397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/30/24 17:29:33.236
  Apr 30 17:29:33.239: INFO: Trying to get logs from node perfermance-5 pod pod-secrets-67e595e0-c005-4be3-8057-5181f798c512 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/30/24 17:29:33.246
  Apr 30 17:29:33.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5373" for this suite. @ 04/30/24 17:29:33.275
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/30/24 17:29:33.308
  Apr 30 17:29:33.308: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename replicaset @ 04/30/24 17:29:33.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:29:33.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:29:33.351
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/30/24 17:29:33.353
  E0430 17:29:33.589300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:34.589636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 04/30/24 17:29:35.374
  STEP: Then the orphan pod is adopted @ 04/30/24 17:29:35.384
  E0430 17:29:35.589883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 04/30/24 17:29:36.394
  Apr 30 17:29:36.397: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/30/24 17:29:36.413
  E0430 17:29:36.590606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:37.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6182" for this suite. @ 04/30/24 17:29:37.429
• [4.136 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/30/24 17:29:37.444
  Apr 30 17:29:37.444: INFO: >>> kubeConfig: /tmp/kubeconfig-224958374
  STEP: Building a namespace api object, basename kubectl @ 04/30/24 17:29:37.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/30/24 17:29:37.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/30/24 17:29:37.481
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/30/24 17:29:37.484
  Apr 30 17:29:37.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6700 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 30 17:29:37.572: INFO: stderr: ""
  Apr 30 17:29:37.573: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/30/24 17:29:37.573
  E0430 17:29:37.591044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:38.591924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:39.592026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:40.592467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:41.592740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:42.593356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/30/24 17:29:42.624
  Apr 30 17:29:42.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6700 get pod e2e-test-httpd-pod -o json'
  Apr 30 17:29:42.717: INFO: stderr: ""
  Apr 30 17:29:42.717: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"6aef3c748dc3cf8f994ec1d726882ffb71e17ccf3f78c413e735454efd5c2a0a\",\n            \"cni.projectcalico.org/podIP\": \"100.73.144.107/32\",\n            \"cni.projectcalico.org/podIPs\": \"100.73.144.107/32\"\n        },\n        \"creationTimestamp\": \"2024-04-30T17:29:37Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6700\",\n        \"resourceVersion\": \"227692\",\n        \"uid\": \"f7a76b28-53aa-4df5-a3bd-4b97456f5b50\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-lk5hf\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"perfermance-5\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-lk5hf\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-30T17:29:38Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-30T17:29:37Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-30T17:29:38Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-30T17:29:38Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-30T17:29:37Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://eeea1e1b696f6db70608360cca55dead25e6853f138910f5d2e81d113010e20d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-30T17:29:38Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.111.203\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.111.203\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"100.73.144.107\",\n        \"podIPs\": [\n            {\n                \"ip\": \"100.73.144.107\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-30T17:29:37Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/30/24 17:29:42.717
  Apr 30 17:29:42.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6700 replace -f -'
  Apr 30 17:29:42.904: INFO: stderr: ""
  Apr 30 17:29:42.904: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/30/24 17:29:42.904
  Apr 30 17:29:42.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-224958374 --namespace=kubectl-6700 delete pods e2e-test-httpd-pod'
  E0430 17:29:43.594323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0430 17:29:44.594626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 30 17:29:44.976: INFO: stderr: ""
  Apr 30 17:29:44.976: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 30 17:29:44.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6700" for this suite. @ 04/30/24 17:29:44.985
• [7.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Apr 30 17:29:44.999: INFO: Running AfterSuite actions on node 1
  Apr 30 17:29:44.999: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.073 seconds]
------------------------------

Ran 388 of 7407 Specs in 6427.465 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h47m8.843877749s
Test Suite Passed
