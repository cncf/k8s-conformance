  I0613 10:16:11.223136      23 e2e.go:117] Starting e2e run "84c413ca-8f3f-4cad-a8b5-6f08c8614968" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1718273770 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun 13 10:16:11.471: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:16:11.472: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  E0613 10:16:11.472808      23 progress.go:96] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp 127.0.0.1:8099: connect: connection refused
  E0613 10:16:11.473076      23 progress.go:96] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp 127.0.0.1:8099: connect: connection refused
  Jun 13 10:16:11.503: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun 13 10:16:11.506: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'canal' (0 seconds elapsed)
  Jun 13 10:16:11.506: INFO: e2e test version: v1.29.5
  Jun 13 10:16:11.507: INFO: kube-apiserver version: v1.29.5
  Jun 13 10:16:11.508: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:16:11.511: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/13/24 10:16:11.684
  Jun 13 10:16:11.684: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svc-latency @ 06/13/24 10:16:11.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:16:11.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:16:11.701
  Jun 13 10:16:11.704: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3241 @ 06/13/24 10:16:11.705
  I0613 10:16:11.712436      23 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3241, replica count: 1
  I0613 10:16:12.763705      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 10:16:13.764029      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 10:16:13.877: INFO: Created: latency-svc-z7hmj
  Jun 13 10:16:13.885: INFO: Got endpoints: latency-svc-z7hmj [20.906517ms]
  Jun 13 10:16:13.900: INFO: Created: latency-svc-cm4b2
  Jun 13 10:16:13.907: INFO: Got endpoints: latency-svc-cm4b2 [20.978953ms]
  Jun 13 10:16:13.915: INFO: Created: latency-svc-kgzsm
  Jun 13 10:16:13.930: INFO: Got endpoints: latency-svc-kgzsm [44.460583ms]
  Jun 13 10:16:13.933: INFO: Created: latency-svc-ktmmx
  Jun 13 10:16:13.936: INFO: Got endpoints: latency-svc-ktmmx [50.512787ms]
  Jun 13 10:16:13.939: INFO: Created: latency-svc-dzbdm
  Jun 13 10:16:13.945: INFO: Got endpoints: latency-svc-dzbdm [58.903159ms]
  Jun 13 10:16:13.948: INFO: Created: latency-svc-fzkhn
  Jun 13 10:16:13.955: INFO: Got endpoints: latency-svc-fzkhn [68.652034ms]
  Jun 13 10:16:13.957: INFO: Created: latency-svc-5gs6k
  Jun 13 10:16:13.962: INFO: Got endpoints: latency-svc-5gs6k [75.223296ms]
  Jun 13 10:16:13.964: INFO: Created: latency-svc-hx87m
  Jun 13 10:16:13.971: INFO: Got endpoints: latency-svc-hx87m [84.383882ms]
  Jun 13 10:16:13.973: INFO: Created: latency-svc-qnm2q
  Jun 13 10:16:13.980: INFO: Created: latency-svc-km9hf
  Jun 13 10:16:13.981: INFO: Got endpoints: latency-svc-qnm2q [94.769602ms]
  Jun 13 10:16:13.985: INFO: Got endpoints: latency-svc-km9hf [98.006208ms]
  Jun 13 10:16:13.991: INFO: Created: latency-svc-q2kjs
  Jun 13 10:16:13.993: INFO: Got endpoints: latency-svc-q2kjs [106.269957ms]
  Jun 13 10:16:13.995: INFO: Created: latency-svc-zd45m
  Jun 13 10:16:13.999: INFO: Got endpoints: latency-svc-zd45m [111.990388ms]
  Jun 13 10:16:14.003: INFO: Created: latency-svc-kmzd4
  Jun 13 10:16:14.008: INFO: Got endpoints: latency-svc-kmzd4 [120.750543ms]
  Jun 13 10:16:14.010: INFO: Created: latency-svc-xp98m
  Jun 13 10:16:14.016: INFO: Got endpoints: latency-svc-xp98m [130.208842ms]
  Jun 13 10:16:14.017: INFO: Created: latency-svc-6rrp6
  Jun 13 10:16:14.024: INFO: Got endpoints: latency-svc-6rrp6 [138.279681ms]
  Jun 13 10:16:14.025: INFO: Created: latency-svc-4kmsz
  Jun 13 10:16:14.033: INFO: Created: latency-svc-vsj7w
  Jun 13 10:16:14.033: INFO: Got endpoints: latency-svc-4kmsz [146.306245ms]
  Jun 13 10:16:14.040: INFO: Got endpoints: latency-svc-vsj7w [132.824855ms]
  Jun 13 10:16:14.040: INFO: Created: latency-svc-c5lfp
  Jun 13 10:16:14.046: INFO: Got endpoints: latency-svc-c5lfp [115.10256ms]
  Jun 13 10:16:14.047: INFO: Created: latency-svc-b9tht
  Jun 13 10:16:14.054: INFO: Got endpoints: latency-svc-b9tht [117.877037ms]
  Jun 13 10:16:14.058: INFO: Created: latency-svc-577c5
  Jun 13 10:16:14.070: INFO: Got endpoints: latency-svc-577c5 [124.387676ms]
  Jun 13 10:16:14.076: INFO: Created: latency-svc-vt5w2
  Jun 13 10:16:14.083: INFO: Got endpoints: latency-svc-vt5w2 [127.699537ms]
  Jun 13 10:16:14.086: INFO: Created: latency-svc-wx2rl
  Jun 13 10:16:14.090: INFO: Got endpoints: latency-svc-wx2rl [128.503506ms]
  Jun 13 10:16:14.095: INFO: Created: latency-svc-vsfb5
  Jun 13 10:16:14.114: INFO: Got endpoints: latency-svc-vsfb5 [142.86981ms]
  Jun 13 10:16:14.115: INFO: Created: latency-svc-wt222
  Jun 13 10:16:14.120: INFO: Created: latency-svc-htvfc
  Jun 13 10:16:14.122: INFO: Got endpoints: latency-svc-wt222 [140.623785ms]
  Jun 13 10:16:14.123: INFO: Created: latency-svc-j9fwl
  Jun 13 10:16:14.127: INFO: Got endpoints: latency-svc-htvfc [142.328653ms]
  Jun 13 10:16:14.129: INFO: Got endpoints: latency-svc-j9fwl [135.473386ms]
  Jun 13 10:16:14.131: INFO: Created: latency-svc-kpr7l
  Jun 13 10:16:14.137: INFO: Got endpoints: latency-svc-kpr7l [138.374738ms]
  Jun 13 10:16:14.138: INFO: Created: latency-svc-lhl7t
  Jun 13 10:16:14.142: INFO: Got endpoints: latency-svc-lhl7t [133.954648ms]
  Jun 13 10:16:14.145: INFO: Created: latency-svc-nf69s
  Jun 13 10:16:14.150: INFO: Got endpoints: latency-svc-nf69s [133.646379ms]
  Jun 13 10:16:14.151: INFO: Created: latency-svc-r25fd
  Jun 13 10:16:14.156: INFO: Got endpoints: latency-svc-r25fd [131.806148ms]
  Jun 13 10:16:14.161: INFO: Created: latency-svc-mm7k4
  Jun 13 10:16:14.166: INFO: Got endpoints: latency-svc-mm7k4 [132.173787ms]
  Jun 13 10:16:14.166: INFO: Created: latency-svc-fxvrj
  Jun 13 10:16:14.172: INFO: Got endpoints: latency-svc-fxvrj [132.369898ms]
  Jun 13 10:16:14.174: INFO: Created: latency-svc-hzkcg
  Jun 13 10:16:14.181: INFO: Got endpoints: latency-svc-hzkcg [135.123754ms]
  Jun 13 10:16:14.183: INFO: Created: latency-svc-kldn4
  Jun 13 10:16:14.188: INFO: Got endpoints: latency-svc-kldn4 [134.088756ms]
  Jun 13 10:16:14.191: INFO: Created: latency-svc-z58bd
  Jun 13 10:16:14.194: INFO: Got endpoints: latency-svc-z58bd [123.915663ms]
  Jun 13 10:16:14.196: INFO: Created: latency-svc-l6zpq
  Jun 13 10:16:14.203: INFO: Created: latency-svc-nvd42
  Jun 13 10:16:14.204: INFO: Got endpoints: latency-svc-l6zpq [120.936598ms]
  Jun 13 10:16:14.209: INFO: Created: latency-svc-f8gcn
  Jun 13 10:16:14.216: INFO: Created: latency-svc-tjz8f
  Jun 13 10:16:14.220: INFO: Created: latency-svc-4drl5
  Jun 13 10:16:14.267: INFO: Got endpoints: latency-svc-nvd42 [176.506886ms]
  Jun 13 10:16:14.273: INFO: Created: latency-svc-zsdcx
  Jun 13 10:16:14.277: INFO: Created: latency-svc-9bctb
  Jun 13 10:16:14.280: INFO: Got endpoints: latency-svc-f8gcn [166.170738ms]
  Jun 13 10:16:14.284: INFO: Created: latency-svc-tj4nn
  Jun 13 10:16:14.288: INFO: Created: latency-svc-xc9g7
  Jun 13 10:16:14.293: INFO: Created: latency-svc-bknx6
  Jun 13 10:16:14.298: INFO: Created: latency-svc-2458t
  Jun 13 10:16:14.307: INFO: Created: latency-svc-rntfg
  Jun 13 10:16:14.311: INFO: Created: latency-svc-kkt2v
  Jun 13 10:16:14.316: INFO: Created: latency-svc-vjgwx
  Jun 13 10:16:14.323: INFO: Created: latency-svc-78bvl
  Jun 13 10:16:14.328: INFO: Created: latency-svc-2f82f
  Jun 13 10:16:14.331: INFO: Got endpoints: latency-svc-tjz8f [209.267053ms]
  Jun 13 10:16:14.333: INFO: Created: latency-svc-gjwz6
  Jun 13 10:16:14.339: INFO: Created: latency-svc-zjc6d
  Jun 13 10:16:14.343: INFO: Created: latency-svc-txkdx
  Jun 13 10:16:14.378: INFO: Got endpoints: latency-svc-4drl5 [251.209494ms]
  Jun 13 10:16:14.387: INFO: Created: latency-svc-qhc4b
  Jun 13 10:16:14.429: INFO: Got endpoints: latency-svc-zsdcx [300.821027ms]
  Jun 13 10:16:14.441: INFO: Created: latency-svc-2ppr6
  Jun 13 10:16:14.478: INFO: Got endpoints: latency-svc-9bctb [340.553944ms]
  Jun 13 10:16:14.488: INFO: Created: latency-svc-sscmg
  Jun 13 10:16:14.530: INFO: Got endpoints: latency-svc-tj4nn [388.459557ms]
  Jun 13 10:16:14.539: INFO: Created: latency-svc-j9tfg
  Jun 13 10:16:14.581: INFO: Got endpoints: latency-svc-xc9g7 [431.277612ms]
  Jun 13 10:16:14.590: INFO: Created: latency-svc-zkpcs
  Jun 13 10:16:14.630: INFO: Got endpoints: latency-svc-bknx6 [473.515299ms]
  Jun 13 10:16:14.641: INFO: Created: latency-svc-7k7sb
  Jun 13 10:16:14.678: INFO: Got endpoints: latency-svc-2458t [512.775749ms]
  Jun 13 10:16:14.687: INFO: Created: latency-svc-96kws
  Jun 13 10:16:14.731: INFO: Got endpoints: latency-svc-rntfg [558.419484ms]
  Jun 13 10:16:14.740: INFO: Created: latency-svc-2xdpg
  Jun 13 10:16:14.779: INFO: Got endpoints: latency-svc-kkt2v [598.587125ms]
  Jun 13 10:16:14.789: INFO: Created: latency-svc-cwtxh
  Jun 13 10:16:14.829: INFO: Got endpoints: latency-svc-vjgwx [640.512242ms]
  Jun 13 10:16:14.839: INFO: Created: latency-svc-v7jbp
  Jun 13 10:16:14.882: INFO: Got endpoints: latency-svc-78bvl [687.865032ms]
  Jun 13 10:16:14.892: INFO: Created: latency-svc-fd7kx
  Jun 13 10:16:14.931: INFO: Got endpoints: latency-svc-2f82f [727.358183ms]
  Jun 13 10:16:14.940: INFO: Created: latency-svc-jx99j
  Jun 13 10:16:14.979: INFO: Got endpoints: latency-svc-gjwz6 [712.354141ms]
  Jun 13 10:16:14.990: INFO: Created: latency-svc-jm8p4
  Jun 13 10:16:15.029: INFO: Got endpoints: latency-svc-zjc6d [748.418013ms]
  Jun 13 10:16:15.037: INFO: Created: latency-svc-48jmf
  Jun 13 10:16:15.078: INFO: Got endpoints: latency-svc-txkdx [747.017916ms]
  Jun 13 10:16:15.092: INFO: Created: latency-svc-rg4m4
  Jun 13 10:16:15.130: INFO: Got endpoints: latency-svc-qhc4b [751.692566ms]
  Jun 13 10:16:15.139: INFO: Created: latency-svc-zg5w5
  Jun 13 10:16:15.179: INFO: Got endpoints: latency-svc-2ppr6 [749.453582ms]
  Jun 13 10:16:15.189: INFO: Created: latency-svc-4jfwl
  Jun 13 10:16:15.229: INFO: Got endpoints: latency-svc-sscmg [751.205287ms]
  Jun 13 10:16:15.239: INFO: Created: latency-svc-m9wvm
  Jun 13 10:16:15.279: INFO: Got endpoints: latency-svc-j9tfg [748.923908ms]
  Jun 13 10:16:15.290: INFO: Created: latency-svc-fcdd2
  Jun 13 10:16:15.328: INFO: Got endpoints: latency-svc-zkpcs [746.360751ms]
  Jun 13 10:16:15.336: INFO: Created: latency-svc-x6bdz
  Jun 13 10:16:15.379: INFO: Got endpoints: latency-svc-7k7sb [748.727202ms]
  Jun 13 10:16:15.387: INFO: Created: latency-svc-ldccl
  Jun 13 10:16:15.432: INFO: Got endpoints: latency-svc-96kws [753.154194ms]
  Jun 13 10:16:15.442: INFO: Created: latency-svc-9p8bp
  Jun 13 10:16:15.479: INFO: Got endpoints: latency-svc-2xdpg [747.982926ms]
  Jun 13 10:16:15.488: INFO: Created: latency-svc-bhjr8
  Jun 13 10:16:15.529: INFO: Got endpoints: latency-svc-cwtxh [750.032338ms]
  Jun 13 10:16:15.541: INFO: Created: latency-svc-rtqm8
  Jun 13 10:16:15.579: INFO: Got endpoints: latency-svc-v7jbp [749.92056ms]
  Jun 13 10:16:15.588: INFO: Created: latency-svc-rbvhw
  Jun 13 10:16:15.630: INFO: Got endpoints: latency-svc-fd7kx [748.580163ms]
  Jun 13 10:16:15.640: INFO: Created: latency-svc-85wzq
  Jun 13 10:16:15.681: INFO: Got endpoints: latency-svc-jx99j [749.693384ms]
  Jun 13 10:16:15.690: INFO: Created: latency-svc-c6277
  Jun 13 10:16:15.730: INFO: Got endpoints: latency-svc-jm8p4 [751.176566ms]
  Jun 13 10:16:15.741: INFO: Created: latency-svc-tfc7f
  Jun 13 10:16:15.780: INFO: Got endpoints: latency-svc-48jmf [751.062186ms]
  Jun 13 10:16:15.788: INFO: Created: latency-svc-l8l2n
  Jun 13 10:16:15.831: INFO: Got endpoints: latency-svc-rg4m4 [752.274488ms]
  Jun 13 10:16:15.841: INFO: Created: latency-svc-wkxjf
  Jun 13 10:16:15.882: INFO: Got endpoints: latency-svc-zg5w5 [751.393581ms]
  Jun 13 10:16:15.890: INFO: Created: latency-svc-x7wnj
  Jun 13 10:16:15.928: INFO: Got endpoints: latency-svc-4jfwl [749.259966ms]
  Jun 13 10:16:15.936: INFO: Created: latency-svc-2zhn2
  Jun 13 10:16:15.980: INFO: Got endpoints: latency-svc-m9wvm [750.675609ms]
  Jun 13 10:16:15.990: INFO: Created: latency-svc-lx59j
  Jun 13 10:16:16.030: INFO: Got endpoints: latency-svc-fcdd2 [750.379088ms]
  Jun 13 10:16:16.039: INFO: Created: latency-svc-m2vw9
  Jun 13 10:16:16.080: INFO: Got endpoints: latency-svc-x6bdz [752.512476ms]
  Jun 13 10:16:16.125: INFO: Created: latency-svc-52kg9
  Jun 13 10:16:16.130: INFO: Got endpoints: latency-svc-ldccl [751.90694ms]
  Jun 13 10:16:16.139: INFO: Created: latency-svc-xjd9c
  Jun 13 10:16:16.178: INFO: Got endpoints: latency-svc-9p8bp [746.719184ms]
  Jun 13 10:16:16.188: INFO: Created: latency-svc-dt8m2
  Jun 13 10:16:16.229: INFO: Got endpoints: latency-svc-bhjr8 [750.264482ms]
  Jun 13 10:16:16.238: INFO: Created: latency-svc-jdctr
  Jun 13 10:16:16.279: INFO: Got endpoints: latency-svc-rtqm8 [749.308371ms]
  Jun 13 10:16:16.290: INFO: Created: latency-svc-992gs
  Jun 13 10:16:16.329: INFO: Got endpoints: latency-svc-rbvhw [750.52882ms]
  Jun 13 10:16:16.340: INFO: Created: latency-svc-h7rjx
  Jun 13 10:16:16.379: INFO: Got endpoints: latency-svc-85wzq [748.785989ms]
  Jun 13 10:16:16.390: INFO: Created: latency-svc-rf7vt
  Jun 13 10:16:16.431: INFO: Got endpoints: latency-svc-c6277 [750.475447ms]
  Jun 13 10:16:16.440: INFO: Created: latency-svc-rrrbk
  Jun 13 10:16:16.478: INFO: Got endpoints: latency-svc-tfc7f [747.783103ms]
  Jun 13 10:16:16.489: INFO: Created: latency-svc-8xc4b
  Jun 13 10:16:16.528: INFO: Got endpoints: latency-svc-l8l2n [748.754394ms]
  Jun 13 10:16:16.540: INFO: Created: latency-svc-94n9f
  Jun 13 10:16:16.581: INFO: Got endpoints: latency-svc-wkxjf [750.266166ms]
  Jun 13 10:16:16.591: INFO: Created: latency-svc-zg492
  Jun 13 10:16:16.631: INFO: Got endpoints: latency-svc-x7wnj [749.222065ms]
  Jun 13 10:16:16.641: INFO: Created: latency-svc-z2wgl
  Jun 13 10:16:16.680: INFO: Got endpoints: latency-svc-2zhn2 [751.348584ms]
  Jun 13 10:16:16.690: INFO: Created: latency-svc-lgbtt
  Jun 13 10:16:16.729: INFO: Got endpoints: latency-svc-lx59j [748.975814ms]
  Jun 13 10:16:16.739: INFO: Created: latency-svc-clbmj
  Jun 13 10:16:16.781: INFO: Got endpoints: latency-svc-m2vw9 [751.517339ms]
  Jun 13 10:16:16.791: INFO: Created: latency-svc-qk2gf
  Jun 13 10:16:16.829: INFO: Got endpoints: latency-svc-52kg9 [748.127854ms]
  Jun 13 10:16:16.838: INFO: Created: latency-svc-tmfzt
  Jun 13 10:16:16.880: INFO: Got endpoints: latency-svc-xjd9c [749.14647ms]
  Jun 13 10:16:16.888: INFO: Created: latency-svc-x2nv5
  Jun 13 10:16:16.930: INFO: Got endpoints: latency-svc-dt8m2 [751.098136ms]
  Jun 13 10:16:16.942: INFO: Created: latency-svc-d9ncd
  Jun 13 10:16:16.980: INFO: Got endpoints: latency-svc-jdctr [750.858888ms]
  Jun 13 10:16:16.989: INFO: Created: latency-svc-8pm95
  Jun 13 10:16:17.028: INFO: Got endpoints: latency-svc-992gs [749.619532ms]
  Jun 13 10:16:17.039: INFO: Created: latency-svc-lntcs
  Jun 13 10:16:17.079: INFO: Got endpoints: latency-svc-h7rjx [749.092401ms]
  Jun 13 10:16:17.088: INFO: Created: latency-svc-7mj29
  Jun 13 10:16:17.128: INFO: Got endpoints: latency-svc-rf7vt [749.13907ms]
  Jun 13 10:16:17.140: INFO: Created: latency-svc-xmnlw
  Jun 13 10:16:17.178: INFO: Got endpoints: latency-svc-rrrbk [746.609311ms]
  Jun 13 10:16:17.192: INFO: Created: latency-svc-6lhdd
  Jun 13 10:16:17.231: INFO: Got endpoints: latency-svc-8xc4b [752.271226ms]
  Jun 13 10:16:17.239: INFO: Created: latency-svc-h8szp
  Jun 13 10:16:17.278: INFO: Got endpoints: latency-svc-94n9f [749.77822ms]
  Jun 13 10:16:17.288: INFO: Created: latency-svc-j28t7
  Jun 13 10:16:17.330: INFO: Got endpoints: latency-svc-zg492 [748.501853ms]
  Jun 13 10:16:17.341: INFO: Created: latency-svc-xjjsb
  Jun 13 10:16:17.379: INFO: Got endpoints: latency-svc-z2wgl [748.255059ms]
  Jun 13 10:16:17.406: INFO: Created: latency-svc-2zggv
  Jun 13 10:16:17.428: INFO: Got endpoints: latency-svc-lgbtt [748.489025ms]
  Jun 13 10:16:17.438: INFO: Created: latency-svc-pvcng
  Jun 13 10:16:17.481: INFO: Got endpoints: latency-svc-clbmj [752.051464ms]
  Jun 13 10:16:17.489: INFO: Created: latency-svc-xbcl2
  Jun 13 10:16:17.528: INFO: Got endpoints: latency-svc-qk2gf [746.857127ms]
  Jun 13 10:16:17.537: INFO: Created: latency-svc-597w7
  Jun 13 10:16:17.579: INFO: Got endpoints: latency-svc-tmfzt [750.72004ms]
  Jun 13 10:16:17.589: INFO: Created: latency-svc-dpfgp
  Jun 13 10:16:17.629: INFO: Got endpoints: latency-svc-x2nv5 [749.531925ms]
  Jun 13 10:16:17.638: INFO: Created: latency-svc-vss2k
  Jun 13 10:16:17.682: INFO: Got endpoints: latency-svc-d9ncd [752.271235ms]
  Jun 13 10:16:17.692: INFO: Created: latency-svc-hr9fr
  Jun 13 10:16:17.728: INFO: Got endpoints: latency-svc-8pm95 [748.15292ms]
  Jun 13 10:16:17.737: INFO: Created: latency-svc-5rz6g
  Jun 13 10:16:17.782: INFO: Got endpoints: latency-svc-lntcs [753.703802ms]
  Jun 13 10:16:17.792: INFO: Created: latency-svc-8tpj5
  Jun 13 10:16:17.829: INFO: Got endpoints: latency-svc-7mj29 [749.900843ms]
  Jun 13 10:16:17.840: INFO: Created: latency-svc-vb6xt
  Jun 13 10:16:17.878: INFO: Got endpoints: latency-svc-xmnlw [749.618654ms]
  Jun 13 10:16:17.890: INFO: Created: latency-svc-ww4fx
  Jun 13 10:16:17.929: INFO: Got endpoints: latency-svc-6lhdd [751.201517ms]
  Jun 13 10:16:17.949: INFO: Created: latency-svc-zrvnz
  Jun 13 10:16:17.978: INFO: Got endpoints: latency-svc-h8szp [747.786832ms]
  Jun 13 10:16:17.988: INFO: Created: latency-svc-2c7rt
  Jun 13 10:16:18.030: INFO: Got endpoints: latency-svc-j28t7 [751.854653ms]
  Jun 13 10:16:18.047: INFO: Created: latency-svc-gqh7v
  Jun 13 10:16:18.079: INFO: Got endpoints: latency-svc-xjjsb [749.395286ms]
  Jun 13 10:16:18.089: INFO: Created: latency-svc-z6jqk
  Jun 13 10:16:18.130: INFO: Got endpoints: latency-svc-2zggv [750.94383ms]
  Jun 13 10:16:18.141: INFO: Created: latency-svc-rm8d9
  Jun 13 10:16:18.180: INFO: Got endpoints: latency-svc-pvcng [751.521097ms]
  Jun 13 10:16:18.192: INFO: Created: latency-svc-v8pgb
  Jun 13 10:16:18.228: INFO: Got endpoints: latency-svc-xbcl2 [746.77216ms]
  Jun 13 10:16:18.237: INFO: Created: latency-svc-9qpt7
  Jun 13 10:16:18.278: INFO: Got endpoints: latency-svc-597w7 [750.169503ms]
  Jun 13 10:16:18.289: INFO: Created: latency-svc-htvhz
  Jun 13 10:16:18.328: INFO: Got endpoints: latency-svc-dpfgp [748.950993ms]
  Jun 13 10:16:18.337: INFO: Created: latency-svc-b52mg
  Jun 13 10:16:18.380: INFO: Got endpoints: latency-svc-vss2k [750.517051ms]
  Jun 13 10:16:18.441: INFO: Got endpoints: latency-svc-hr9fr [758.73211ms]
  Jun 13 10:16:18.443: INFO: Created: latency-svc-z69zf
  Jun 13 10:16:18.450: INFO: Created: latency-svc-hqsgr
  Jun 13 10:16:18.479: INFO: Got endpoints: latency-svc-5rz6g [751.252838ms]
  Jun 13 10:16:18.503: INFO: Created: latency-svc-kth7p
  Jun 13 10:16:18.529: INFO: Got endpoints: latency-svc-8tpj5 [746.44654ms]
  Jun 13 10:16:18.537: INFO: Created: latency-svc-ggvnb
  Jun 13 10:16:18.580: INFO: Got endpoints: latency-svc-vb6xt [751.512114ms]
  Jun 13 10:16:18.590: INFO: Created: latency-svc-9r9rr
  Jun 13 10:16:18.628: INFO: Got endpoints: latency-svc-ww4fx [750.043264ms]
  Jun 13 10:16:18.638: INFO: Created: latency-svc-hlj2t
  Jun 13 10:16:18.679: INFO: Got endpoints: latency-svc-zrvnz [749.223774ms]
  Jun 13 10:16:18.688: INFO: Created: latency-svc-4hwr4
  Jun 13 10:16:18.729: INFO: Got endpoints: latency-svc-2c7rt [750.099459ms]
  Jun 13 10:16:18.739: INFO: Created: latency-svc-wppzg
  Jun 13 10:16:18.779: INFO: Got endpoints: latency-svc-gqh7v [748.477332ms]
  Jun 13 10:16:18.788: INFO: Created: latency-svc-tlh9g
  Jun 13 10:16:18.831: INFO: Got endpoints: latency-svc-z6jqk [752.135989ms]
  Jun 13 10:16:18.841: INFO: Created: latency-svc-7jtkh
  Jun 13 10:16:18.879: INFO: Got endpoints: latency-svc-rm8d9 [748.631657ms]
  Jun 13 10:16:18.889: INFO: Created: latency-svc-dcbqd
  Jun 13 10:16:18.928: INFO: Got endpoints: latency-svc-v8pgb [748.589569ms]
  Jun 13 10:16:18.938: INFO: Created: latency-svc-lq8rh
  Jun 13 10:16:18.978: INFO: Got endpoints: latency-svc-9qpt7 [750.347133ms]
  Jun 13 10:16:18.990: INFO: Created: latency-svc-9kldh
  Jun 13 10:16:19.030: INFO: Got endpoints: latency-svc-htvhz [751.331924ms]
  Jun 13 10:16:19.042: INFO: Created: latency-svc-x62fb
  Jun 13 10:16:19.081: INFO: Got endpoints: latency-svc-b52mg [752.949346ms]
  Jun 13 10:16:19.090: INFO: Created: latency-svc-p44rb
  Jun 13 10:16:19.130: INFO: Got endpoints: latency-svc-z69zf [749.73717ms]
  Jun 13 10:16:19.139: INFO: Created: latency-svc-lg87d
  Jun 13 10:16:19.179: INFO: Got endpoints: latency-svc-hqsgr [738.655148ms]
  Jun 13 10:16:19.188: INFO: Created: latency-svc-9694z
  Jun 13 10:16:19.229: INFO: Got endpoints: latency-svc-kth7p [749.610969ms]
  Jun 13 10:16:19.240: INFO: Created: latency-svc-p8vzh
  Jun 13 10:16:19.279: INFO: Got endpoints: latency-svc-ggvnb [749.881403ms]
  Jun 13 10:16:19.287: INFO: Created: latency-svc-wgnq2
  Jun 13 10:16:19.332: INFO: Got endpoints: latency-svc-9r9rr [751.748645ms]
  Jun 13 10:16:19.341: INFO: Created: latency-svc-v4sdq
  Jun 13 10:16:19.379: INFO: Got endpoints: latency-svc-hlj2t [751.153486ms]
  Jun 13 10:16:19.389: INFO: Created: latency-svc-d9qn8
  Jun 13 10:16:19.432: INFO: Got endpoints: latency-svc-4hwr4 [753.494745ms]
  Jun 13 10:16:19.441: INFO: Created: latency-svc-ps85w
  Jun 13 10:16:19.479: INFO: Got endpoints: latency-svc-wppzg [750.61396ms]
  Jun 13 10:16:19.490: INFO: Created: latency-svc-dml2s
  Jun 13 10:16:19.530: INFO: Got endpoints: latency-svc-tlh9g [751.01721ms]
  Jun 13 10:16:19.539: INFO: Created: latency-svc-4dhkj
  Jun 13 10:16:19.580: INFO: Got endpoints: latency-svc-7jtkh [748.862625ms]
  Jun 13 10:16:19.589: INFO: Created: latency-svc-pbhh8
  Jun 13 10:16:19.628: INFO: Got endpoints: latency-svc-dcbqd [749.467596ms]
  Jun 13 10:16:19.639: INFO: Created: latency-svc-4w9pg
  Jun 13 10:16:19.679: INFO: Got endpoints: latency-svc-lq8rh [750.927443ms]
  Jun 13 10:16:19.688: INFO: Created: latency-svc-fqs9q
  Jun 13 10:16:19.730: INFO: Got endpoints: latency-svc-9kldh [751.510717ms]
  Jun 13 10:16:19.740: INFO: Created: latency-svc-7d8jw
  Jun 13 10:16:19.782: INFO: Got endpoints: latency-svc-x62fb [751.747447ms]
  Jun 13 10:16:19.790: INFO: Created: latency-svc-mssvj
  Jun 13 10:16:19.828: INFO: Got endpoints: latency-svc-p44rb [746.674392ms]
  Jun 13 10:16:19.840: INFO: Created: latency-svc-bxsz8
  Jun 13 10:16:19.879: INFO: Got endpoints: latency-svc-lg87d [749.199689ms]
  Jun 13 10:16:19.888: INFO: Created: latency-svc-zhj9w
  Jun 13 10:16:19.931: INFO: Got endpoints: latency-svc-9694z [751.886107ms]
  Jun 13 10:16:19.943: INFO: Created: latency-svc-flljn
  Jun 13 10:16:19.978: INFO: Got endpoints: latency-svc-p8vzh [749.529696ms]
  Jun 13 10:16:19.987: INFO: Created: latency-svc-wftmz
  Jun 13 10:16:20.030: INFO: Got endpoints: latency-svc-wgnq2 [751.72087ms]
  Jun 13 10:16:20.043: INFO: Created: latency-svc-lpr6g
  Jun 13 10:16:20.081: INFO: Got endpoints: latency-svc-v4sdq [748.982283ms]
  Jun 13 10:16:20.090: INFO: Created: latency-svc-5gz28
  Jun 13 10:16:20.128: INFO: Got endpoints: latency-svc-d9qn8 [749.182527ms]
  Jun 13 10:16:20.140: INFO: Created: latency-svc-h4rjr
  Jun 13 10:16:20.178: INFO: Got endpoints: latency-svc-ps85w [745.817594ms]
  Jun 13 10:16:20.189: INFO: Created: latency-svc-fxm6b
  Jun 13 10:16:20.230: INFO: Got endpoints: latency-svc-dml2s [750.907335ms]
  Jun 13 10:16:20.239: INFO: Created: latency-svc-4sgn4
  Jun 13 10:16:20.297: INFO: Got endpoints: latency-svc-4dhkj [766.897306ms]
  Jun 13 10:16:20.306: INFO: Created: latency-svc-xskvg
  Jun 13 10:16:20.331: INFO: Got endpoints: latency-svc-pbhh8 [750.754276ms]
  Jun 13 10:16:20.360: INFO: Created: latency-svc-vf7wf
  Jun 13 10:16:20.378: INFO: Got endpoints: latency-svc-4w9pg [749.837861ms]
  Jun 13 10:16:20.390: INFO: Created: latency-svc-9t9kl
  Jun 13 10:16:20.429: INFO: Got endpoints: latency-svc-fqs9q [749.902386ms]
  Jun 13 10:16:20.438: INFO: Created: latency-svc-x9wgz
  Jun 13 10:16:20.480: INFO: Got endpoints: latency-svc-7d8jw [750.492689ms]
  Jun 13 10:16:20.490: INFO: Created: latency-svc-q8xx4
  Jun 13 10:16:20.528: INFO: Got endpoints: latency-svc-mssvj [746.365471ms]
  Jun 13 10:16:20.539: INFO: Created: latency-svc-pn8k4
  Jun 13 10:16:20.579: INFO: Got endpoints: latency-svc-bxsz8 [751.066185ms]
  Jun 13 10:16:20.588: INFO: Created: latency-svc-f5nbl
  Jun 13 10:16:20.629: INFO: Got endpoints: latency-svc-zhj9w [750.194849ms]
  Jun 13 10:16:20.639: INFO: Created: latency-svc-gltct
  Jun 13 10:16:20.679: INFO: Got endpoints: latency-svc-flljn [747.503435ms]
  Jun 13 10:16:20.736: INFO: Got endpoints: latency-svc-wftmz [757.802062ms]
  Jun 13 10:16:20.739: INFO: Created: latency-svc-vxtnk
  Jun 13 10:16:20.745: INFO: Created: latency-svc-bl5wz
  Jun 13 10:16:20.814: INFO: Got endpoints: latency-svc-lpr6g [783.714321ms]
  Jun 13 10:16:20.823: INFO: Created: latency-svc-m6rcv
  Jun 13 10:16:20.830: INFO: Got endpoints: latency-svc-5gz28 [748.757078ms]
  Jun 13 10:16:20.840: INFO: Created: latency-svc-7ldx5
  Jun 13 10:16:20.878: INFO: Got endpoints: latency-svc-h4rjr [749.616664ms]
  Jun 13 10:16:20.888: INFO: Created: latency-svc-jk86g
  Jun 13 10:16:20.930: INFO: Got endpoints: latency-svc-fxm6b [752.081359ms]
  Jun 13 10:16:20.939: INFO: Created: latency-svc-frwkq
  Jun 13 10:16:20.982: INFO: Got endpoints: latency-svc-4sgn4 [751.302927ms]
  Jun 13 10:16:20.991: INFO: Created: latency-svc-8xf5g
  Jun 13 10:16:21.030: INFO: Got endpoints: latency-svc-xskvg [732.791516ms]
  Jun 13 10:16:21.041: INFO: Created: latency-svc-62hmx
  Jun 13 10:16:21.079: INFO: Got endpoints: latency-svc-vf7wf [748.001229ms]
  Jun 13 10:16:21.088: INFO: Created: latency-svc-sw59p
  Jun 13 10:16:21.141: INFO: Got endpoints: latency-svc-9t9kl [763.251244ms]
  Jun 13 10:16:21.155: INFO: Created: latency-svc-c9psn
  Jun 13 10:16:21.179: INFO: Got endpoints: latency-svc-x9wgz [749.948768ms]
  Jun 13 10:16:21.189: INFO: Created: latency-svc-z2wlk
  Jun 13 10:16:21.228: INFO: Got endpoints: latency-svc-q8xx4 [748.053384ms]
  Jun 13 10:16:21.238: INFO: Created: latency-svc-zvgd8
  Jun 13 10:16:21.278: INFO: Got endpoints: latency-svc-pn8k4 [750.460455ms]
  Jun 13 10:16:21.290: INFO: Created: latency-svc-8x578
  Jun 13 10:16:21.328: INFO: Got endpoints: latency-svc-f5nbl [748.985998ms]
  Jun 13 10:16:21.338: INFO: Created: latency-svc-w2qn9
  Jun 13 10:16:21.379: INFO: Got endpoints: latency-svc-gltct [749.977444ms]
  Jun 13 10:16:21.389: INFO: Created: latency-svc-h5fwx
  Jun 13 10:16:21.430: INFO: Got endpoints: latency-svc-vxtnk [751.245145ms]
  Jun 13 10:16:21.440: INFO: Created: latency-svc-wn79c
  Jun 13 10:16:21.479: INFO: Got endpoints: latency-svc-bl5wz [742.417547ms]
  Jun 13 10:16:21.488: INFO: Created: latency-svc-7jrnr
  Jun 13 10:16:21.529: INFO: Got endpoints: latency-svc-m6rcv [714.43414ms]
  Jun 13 10:16:21.538: INFO: Created: latency-svc-rpf96
  Jun 13 10:16:21.579: INFO: Got endpoints: latency-svc-7ldx5 [749.757417ms]
  Jun 13 10:16:21.588: INFO: Created: latency-svc-j5lb7
  Jun 13 10:16:21.629: INFO: Got endpoints: latency-svc-jk86g [750.813674ms]
  Jun 13 10:16:21.640: INFO: Created: latency-svc-2rc9s
  Jun 13 10:16:21.680: INFO: Got endpoints: latency-svc-frwkq [749.424703ms]
  Jun 13 10:16:21.689: INFO: Created: latency-svc-qhd2n
  Jun 13 10:16:21.731: INFO: Got endpoints: latency-svc-8xf5g [748.953254ms]
  Jun 13 10:16:21.779: INFO: Got endpoints: latency-svc-62hmx [749.664483ms]
  Jun 13 10:16:21.829: INFO: Got endpoints: latency-svc-sw59p [749.685363ms]
  Jun 13 10:16:21.881: INFO: Got endpoints: latency-svc-c9psn [739.330691ms]
  Jun 13 10:16:21.929: INFO: Got endpoints: latency-svc-z2wlk [749.326289ms]
  Jun 13 10:16:21.979: INFO: Got endpoints: latency-svc-zvgd8 [750.099259ms]
  Jun 13 10:16:22.028: INFO: Got endpoints: latency-svc-8x578 [749.755614ms]
  Jun 13 10:16:22.078: INFO: Got endpoints: latency-svc-w2qn9 [750.125579ms]
  Jun 13 10:16:22.128: INFO: Got endpoints: latency-svc-h5fwx [749.11768ms]
  Jun 13 10:16:22.183: INFO: Got endpoints: latency-svc-wn79c [753.35733ms]
  Jun 13 10:16:22.229: INFO: Got endpoints: latency-svc-7jrnr [750.550152ms]
  Jun 13 10:16:22.280: INFO: Got endpoints: latency-svc-rpf96 [751.497147ms]
  Jun 13 10:16:22.329: INFO: Got endpoints: latency-svc-j5lb7 [749.591458ms]
  Jun 13 10:16:22.381: INFO: Got endpoints: latency-svc-2rc9s [752.279621ms]
  Jun 13 10:16:22.437: INFO: Got endpoints: latency-svc-qhd2n [757.10323ms]
  Jun 13 10:16:22.437: INFO: Latencies: [20.978953ms 44.460583ms 50.512787ms 58.903159ms 68.652034ms 75.223296ms 84.383882ms 94.769602ms 98.006208ms 106.269957ms 111.990388ms 115.10256ms 117.877037ms 120.750543ms 120.936598ms 123.915663ms 124.387676ms 127.699537ms 128.503506ms 130.208842ms 131.806148ms 132.173787ms 132.369898ms 132.824855ms 133.646379ms 133.954648ms 134.088756ms 135.123754ms 135.473386ms 138.279681ms 138.374738ms 140.623785ms 142.328653ms 142.86981ms 146.306245ms 166.170738ms 176.506886ms 209.267053ms 251.209494ms 300.821027ms 340.553944ms 388.459557ms 431.277612ms 473.515299ms 512.775749ms 558.419484ms 598.587125ms 640.512242ms 687.865032ms 712.354141ms 714.43414ms 727.358183ms 732.791516ms 738.655148ms 739.330691ms 742.417547ms 745.817594ms 746.360751ms 746.365471ms 746.44654ms 746.609311ms 746.674392ms 746.719184ms 746.77216ms 746.857127ms 747.017916ms 747.503435ms 747.783103ms 747.786832ms 747.982926ms 748.001229ms 748.053384ms 748.127854ms 748.15292ms 748.255059ms 748.418013ms 748.477332ms 748.489025ms 748.501853ms 748.580163ms 748.589569ms 748.631657ms 748.727202ms 748.754394ms 748.757078ms 748.785989ms 748.862625ms 748.923908ms 748.950993ms 748.953254ms 748.975814ms 748.982283ms 748.985998ms 749.092401ms 749.11768ms 749.13907ms 749.14647ms 749.182527ms 749.199689ms 749.222065ms 749.223774ms 749.259966ms 749.308371ms 749.326289ms 749.395286ms 749.424703ms 749.453582ms 749.467596ms 749.529696ms 749.531925ms 749.591458ms 749.610969ms 749.616664ms 749.618654ms 749.619532ms 749.664483ms 749.685363ms 749.693384ms 749.73717ms 749.755614ms 749.757417ms 749.77822ms 749.837861ms 749.881403ms 749.900843ms 749.902386ms 749.92056ms 749.948768ms 749.977444ms 750.032338ms 750.043264ms 750.099259ms 750.099459ms 750.125579ms 750.169503ms 750.194849ms 750.264482ms 750.266166ms 750.347133ms 750.379088ms 750.460455ms 750.475447ms 750.492689ms 750.517051ms 750.52882ms 750.550152ms 750.61396ms 750.675609ms 750.72004ms 750.754276ms 750.813674ms 750.858888ms 750.907335ms 750.927443ms 750.94383ms 751.01721ms 751.062186ms 751.066185ms 751.098136ms 751.153486ms 751.176566ms 751.201517ms 751.205287ms 751.245145ms 751.252838ms 751.302927ms 751.331924ms 751.348584ms 751.393581ms 751.497147ms 751.510717ms 751.512114ms 751.517339ms 751.521097ms 751.692566ms 751.72087ms 751.747447ms 751.748645ms 751.854653ms 751.886107ms 751.90694ms 752.051464ms 752.081359ms 752.135989ms 752.271226ms 752.271235ms 752.274488ms 752.279621ms 752.512476ms 752.949346ms 753.154194ms 753.35733ms 753.494745ms 753.703802ms 757.10323ms 757.802062ms 758.73211ms 763.251244ms 766.897306ms 783.714321ms]
  Jun 13 10:16:22.437: INFO: 50 %ile: 749.223774ms
  Jun 13 10:16:22.437: INFO: 90 %ile: 751.90694ms
  Jun 13 10:16:22.437: INFO: 99 %ile: 766.897306ms
  Jun 13 10:16:22.437: INFO: Total sample count: 200
  Jun 13 10:16:22.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3241" for this suite. @ 06/13/24 10:16:22.451
• [10.788 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/13/24 10:16:22.472
  Jun 13 10:16:22.472: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 10:16:22.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:16:22.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:16:22.538
  STEP: Updating Namespace "namespaces-605" @ 06/13/24 10:16:22.541
  Jun 13 10:16:22.549: INFO: Namespace "namespaces-605" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"84c413ca-8f3f-4cad-a8b5-6f08c8614968", "kubernetes.io/metadata.name":"namespaces-605", "namespaces-605":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun 13 10:16:22.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-605" for this suite. @ 06/13/24 10:16:22.552
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/13/24 10:16:22.557
  Jun 13 10:16:22.557: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 10:16:22.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:16:22.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:16:22.57
  STEP: Creating configMap with name configmap-test-volume-map-455f9050-23ab-498a-ace9-fb3398e27bf5 @ 06/13/24 10:16:22.58
  STEP: Creating a pod to test consume configMaps @ 06/13/24 10:16:22.585
  STEP: Saw pod success @ 06/13/24 10:16:30.621
  Jun 13 10:16:30.623: INFO: Trying to get logs from node 18.117.132.30 pod pod-configmaps-f3414d5f-cb05-4929-bc68-8d8a320e1c9b container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 10:16:30.646
  Jun 13 10:16:30.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8156" for this suite. @ 06/13/24 10:16:30.663
• [8.113 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/13/24 10:16:30.67
  Jun 13 10:16:30.670: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 10:16:30.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:16:30.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:16:30.687
  STEP: Creating a test externalName service @ 06/13/24 10:16:30.69
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-753.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-753.svc.cluster.local; sleep 1; done
   @ 06/13/24 10:16:30.695
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-753.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-753.svc.cluster.local; sleep 1; done
   @ 06/13/24 10:16:30.695
  STEP: creating a pod to probe DNS @ 06/13/24 10:16:30.695
  STEP: submitting the pod to kubernetes @ 06/13/24 10:16:30.695
  STEP: retrieving the pod @ 06/13/24 10:16:46.74
  STEP: looking for the results for each expected name from probers @ 06/13/24 10:16:46.743
  Jun 13 10:16:46.749: INFO: DNS probes using dns-test-2c66e119-79ca-4ab8-9273-ae940719fb47 succeeded

  STEP: changing the externalName to bar.example.com @ 06/13/24 10:16:46.749
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-753.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-753.svc.cluster.local; sleep 1; done
   @ 06/13/24 10:16:46.756
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-753.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-753.svc.cluster.local; sleep 1; done
   @ 06/13/24 10:16:46.756
  STEP: creating a second pod to probe DNS @ 06/13/24 10:16:46.756
  STEP: submitting the pod to kubernetes @ 06/13/24 10:16:46.756
  STEP: retrieving the pod @ 06/13/24 10:16:56.785
  STEP: looking for the results for each expected name from probers @ 06/13/24 10:16:56.787
  Jun 13 10:16:56.794: INFO: DNS probes using dns-test-b6107662-1f24-4557-a7cc-d4dc6166794c succeeded

  STEP: changing the service to type=ClusterIP @ 06/13/24 10:16:56.794
  W0613 10:16:56.805774      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-753.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-753.svc.cluster.local; sleep 1; done
   @ 06/13/24 10:16:56.805
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-753.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-753.svc.cluster.local; sleep 1; done
   @ 06/13/24 10:16:56.805
  STEP: creating a third pod to probe DNS @ 06/13/24 10:16:56.805
  STEP: submitting the pod to kubernetes @ 06/13/24 10:16:56.808
  STEP: retrieving the pod @ 06/13/24 10:17:10.853
  STEP: looking for the results for each expected name from probers @ 06/13/24 10:17:10.855
  Jun 13 10:17:10.862: INFO: DNS probes using dns-test-e830039f-08d2-4b5e-882c-d93ea4ecd23d succeeded

  STEP: deleting the pod @ 06/13/24 10:17:10.863
  STEP: deleting the pod @ 06/13/24 10:17:10.873
  STEP: deleting the pod @ 06/13/24 10:17:10.882
  STEP: deleting the test externalName service @ 06/13/24 10:17:10.896
  Jun 13 10:17:10.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-753" for this suite. @ 06/13/24 10:17:10.945
• [40.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/13/24 10:17:10.95
  Jun 13 10:17:10.950: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 10:17:10.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:17:10.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:17:10.973
  STEP: Creating configMap with name configmap-test-upd-90951928-ec9b-40b2-af2f-4ca5c3a94b05 @ 06/13/24 10:17:10.98
  STEP: Creating the pod @ 06/13/24 10:17:10.984
  STEP: Waiting for pod with text data @ 06/13/24 10:17:19.01
  STEP: Waiting for pod with binary data @ 06/13/24 10:17:19.026
  Jun 13 10:17:19.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3212" for this suite. @ 06/13/24 10:17:19.036
• [8.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/13/24 10:17:19.042
  Jun 13 10:17:19.042: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 10:17:19.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:17:19.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:17:19.059
  STEP: create the container @ 06/13/24 10:17:19.062
  W0613 10:17:19.068553      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/13/24 10:17:19.068
  STEP: get the container status @ 06/13/24 10:17:23.085
  STEP: the container should be terminated @ 06/13/24 10:17:23.087
  STEP: the termination message should be set @ 06/13/24 10:17:23.087
  Jun 13 10:17:23.087: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/13/24 10:17:23.088
  Jun 13 10:17:23.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4045" for this suite. @ 06/13/24 10:17:23.104
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/13/24 10:17:23.111
  Jun 13 10:17:23.111: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 10:17:23.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:17:23.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:17:23.126
  STEP: Creating configMap with name configmap-test-upd-45da1d4d-9952-4afb-b1c5-e16796c9ca07 @ 06/13/24 10:17:23.131
  STEP: Creating the pod @ 06/13/24 10:17:23.135
  STEP: Updating configmap configmap-test-upd-45da1d4d-9952-4afb-b1c5-e16796c9ca07 @ 06/13/24 10:17:25.157
  STEP: waiting to observe update in volume @ 06/13/24 10:17:25.161
  Jun 13 10:17:27.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4704" for this suite. @ 06/13/24 10:17:27.179
• [4.073 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/13/24 10:17:27.184
  Jun 13 10:17:27.184: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 10:17:27.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:17:27.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:17:27.2
  STEP: Creating secret with name secret-test-8d8b9428-a179-4924-bc73-724d5540a4b3 @ 06/13/24 10:17:27.203
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:17:27.207
  STEP: Saw pod success @ 06/13/24 10:17:31.228
  Jun 13 10:17:31.230: INFO: Trying to get logs from node 18.117.161.199 pod pod-secrets-bce4e15b-fd60-430d-ab33-9872e72afae9 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 10:17:31.237
  Jun 13 10:17:31.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4994" for this suite. @ 06/13/24 10:17:31.252
• [4.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/13/24 10:17:31.257
  Jun 13 10:17:31.258: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 10:17:31.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:17:31.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:17:31.274
  STEP: Creating a suspended cronjob @ 06/13/24 10:17:31.277
  STEP: Ensuring no jobs are scheduled @ 06/13/24 10:17:31.281
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/13/24 10:22:31.287
  STEP: Removing cronjob @ 06/13/24 10:22:31.29
  Jun 13 10:22:31.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6761" for this suite. @ 06/13/24 10:22:31.31
• [300.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/13/24 10:22:31.316
  Jun 13 10:22:31.316: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 10:22:31.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:22:31.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:22:31.334
  STEP: Creating service test in namespace statefulset-250 @ 06/13/24 10:22:31.337
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/13/24 10:22:31.341
  STEP: Creating stateful set ss in namespace statefulset-250 @ 06/13/24 10:22:31.344
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-250 @ 06/13/24 10:22:31.35
  Jun 13 10:22:31.354: INFO: Found 0 stateful pods, waiting for 1
  Jun 13 10:22:41.355: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/13/24 10:22:41.355
  Jun 13 10:22:41.359: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 10:22:41.529: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 10:22:41.529: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 10:22:41.529: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 10:22:41.532: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 13 10:22:51.533: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 10:22:51.533: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 10:22:51.548: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999998633s
  Jun 13 10:22:52.551: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997058612s
  Jun 13 10:22:53.555: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.993651106s
  Jun 13 10:22:54.558: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.990057662s
  Jun 13 10:22:55.562: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.986537561s
  Jun 13 10:22:56.565: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.982988015s
  Jun 13 10:22:57.569: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.979296963s
  Jun 13 10:22:58.572: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.975942425s
  Jun 13 10:22:59.576: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.972301932s
  Jun 13 10:23:00.580: INFO: Verifying statefulset ss doesn't scale past 1 for another 967.902053ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-250 @ 06/13/24 10:23:01.581
  Jun 13 10:23:01.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 10:23:01.737: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 10:23:01.737: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 10:23:01.737: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 10:23:01.740: INFO: Found 1 stateful pods, waiting for 3
  Jun 13 10:23:11.742: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:23:11.742: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:23:11.742: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Pending - Ready=false
  Jun 13 10:23:21.741: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:23:21.741: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:23:21.741: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/13/24 10:23:21.741
  STEP: Scale down will halt with unhealthy stateful pod @ 06/13/24 10:23:21.741
  Jun 13 10:23:21.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 10:23:21.902: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 10:23:21.902: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 10:23:21.902: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 10:23:21.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 10:23:22.059: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 10:23:22.059: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 10:23:22.059: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 10:23:22.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 10:23:22.211: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 10:23:22.211: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 10:23:22.211: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 10:23:22.211: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 10:23:22.214: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Jun 13 10:23:32.218: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 10:23:32.218: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 10:23:32.218: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 10:23:32.227: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999998601s
  Jun 13 10:23:33.231: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997243798s
  Jun 13 10:23:34.235: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993322521s
  Jun 13 10:23:35.239: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98937835s
  Jun 13 10:23:36.244: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.984359577s
  Jun 13 10:23:37.248: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.980593777s
  Jun 13 10:23:38.252: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.976114273s
  Jun 13 10:23:39.256: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.972048169s
  Jun 13 10:23:40.260: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.968293748s
  Jun 13 10:23:41.267: INFO: Verifying statefulset ss doesn't scale past 3 for another 963.635573ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-250 @ 06/13/24 10:23:42.268
  Jun 13 10:23:42.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 10:23:42.430: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 10:23:42.430: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 10:23:42.430: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 10:23:42.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 10:23:42.580: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 10:23:42.580: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 10:23:42.580: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 10:23:42.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-250 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 10:23:42.723: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 10:23:42.723: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 10:23:42.723: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 10:23:42.723: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/13/24 10:23:52.735
  Jun 13 10:23:52.735: INFO: Deleting all statefulset in ns statefulset-250
  Jun 13 10:23:52.737: INFO: Scaling statefulset ss to 0
  Jun 13 10:23:52.746: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 10:23:52.748: INFO: Deleting statefulset ss
  Jun 13 10:23:52.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-250" for this suite. @ 06/13/24 10:23:52.761
• [81.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/13/24 10:23:52.767
  Jun 13 10:23:52.767: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 10:23:52.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:23:52.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:23:52.782
  STEP: Counting existing ResourceQuota @ 06/13/24 10:23:52.785
  STEP: Creating a ResourceQuota @ 06/13/24 10:23:57.789
  STEP: Ensuring resource quota status is calculated @ 06/13/24 10:23:57.793
  STEP: Creating a ReplicaSet @ 06/13/24 10:23:59.798
  STEP: Ensuring resource quota status captures replicaset creation @ 06/13/24 10:23:59.809
  STEP: Deleting a ReplicaSet @ 06/13/24 10:24:01.813
  STEP: Ensuring resource quota status released usage @ 06/13/24 10:24:01.818
  Jun 13 10:24:03.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-626" for this suite. @ 06/13/24 10:24:03.825
• [11.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/13/24 10:24:03.831
  Jun 13 10:24:03.831: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:24:03.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:03.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:03.845
  STEP: Creating configMap with name projected-configmap-test-volume-e171d238-72f2-420d-a5b0-7dc66b1ccad7 @ 06/13/24 10:24:03.848
  STEP: Creating a pod to test consume configMaps @ 06/13/24 10:24:03.852
  STEP: Saw pod success @ 06/13/24 10:24:07.868
  Jun 13 10:24:07.870: INFO: Trying to get logs from node 18.117.132.30 pod pod-projected-configmaps-8bc4679c-be96-4b0d-892d-d1c184df5889 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 10:24:07.879
  Jun 13 10:24:07.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7081" for this suite. @ 06/13/24 10:24:07.899
• [4.072 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/13/24 10:24:07.903
  Jun 13 10:24:07.903: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 10:24:07.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:07.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:07.917
  STEP: Performing setup for networking test in namespace pod-network-test-5571 @ 06/13/24 10:24:07.92
  STEP: creating a selector @ 06/13/24 10:24:07.92
  STEP: Creating the service pods in kubernetes @ 06/13/24 10:24:07.92
  Jun 13 10:24:07.920: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/13/24 10:24:20
  Jun 13 10:24:22.025: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 10:24:22.025: INFO: Going to poll 10.42.2.11 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 10:24:22.027: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.11:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5571 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:24:22.027: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:24:22.027: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:24:22.027: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5571/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.11%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 10:24:22.116: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 13 10:24:22.116: INFO: Going to poll 10.42.0.9 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 10:24:22.119: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.9:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5571 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:24:22.119: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:24:22.120: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:24:22.120: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5571/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.9%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 10:24:22.203: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 13 10:24:22.203: INFO: Going to poll 10.42.1.6 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 10:24:22.206: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.6:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5571 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:24:22.206: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:24:22.206: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:24:22.207: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5571/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.6%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 10:24:22.300: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 13 10:24:22.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5571" for this suite. @ 06/13/24 10:24:22.304
• [14.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/13/24 10:24:22.311
  Jun 13 10:24:22.311: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 10:24:22.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:22.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:22.326
  STEP: Deleting RuntimeClass runtimeclass-1897-delete-me @ 06/13/24 10:24:22.333
  STEP: Waiting for the RuntimeClass to disappear @ 06/13/24 10:24:22.34
  Jun 13 10:24:22.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1897" for this suite. @ 06/13/24 10:24:22.351
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/13/24 10:24:22.356
  Jun 13 10:24:22.356: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 10:24:22.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:22.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:22.371
  STEP: create the container @ 06/13/24 10:24:22.375
  W0613 10:24:22.383500      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/13/24 10:24:22.383
  STEP: get the container status @ 06/13/24 10:24:25.4
  STEP: the container should be terminated @ 06/13/24 10:24:25.403
  STEP: the termination message should be set @ 06/13/24 10:24:25.403
  Jun 13 10:24:25.403: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/13/24 10:24:25.403
  Jun 13 10:24:25.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7357" for this suite. @ 06/13/24 10:24:25.419
• [3.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/13/24 10:24:25.426
  Jun 13 10:24:25.426: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename ingressclass @ 06/13/24 10:24:25.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:25.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:25.439
  STEP: getting /apis @ 06/13/24 10:24:25.442
  STEP: getting /apis/networking.k8s.io @ 06/13/24 10:24:25.446
  STEP: getting /apis/networking.k8s.iov1 @ 06/13/24 10:24:25.448
  STEP: creating @ 06/13/24 10:24:25.449
  STEP: getting @ 06/13/24 10:24:25.461
  STEP: listing @ 06/13/24 10:24:25.463
  STEP: watching @ 06/13/24 10:24:25.465
  Jun 13 10:24:25.466: INFO: starting watch
  STEP: patching @ 06/13/24 10:24:25.467
  STEP: updating @ 06/13/24 10:24:25.471
  Jun 13 10:24:25.474: INFO: waiting for watch events with expected annotations
  Jun 13 10:24:25.475: INFO: saw patched and updated annotations
  STEP: deleting @ 06/13/24 10:24:25.475
  STEP: deleting a collection @ 06/13/24 10:24:25.483
  Jun 13 10:24:25.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4649" for this suite. @ 06/13/24 10:24:25.495
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/13/24 10:24:25.502
  Jun 13 10:24:25.502: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 10:24:25.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:25.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:25.515
  STEP: Creating a ResourceQuota with best effort scope @ 06/13/24 10:24:25.518
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 10:24:25.524
  STEP: Creating a ResourceQuota with not best effort scope @ 06/13/24 10:24:27.533
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 10:24:27.544
  STEP: Creating a best-effort pod @ 06/13/24 10:24:29.547
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/13/24 10:24:29.557
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/13/24 10:24:31.561
  STEP: Deleting the pod @ 06/13/24 10:24:33.565
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 10:24:33.573
  STEP: Creating a not best-effort pod @ 06/13/24 10:24:35.577
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/13/24 10:24:35.587
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/13/24 10:24:37.59
  STEP: Deleting the pod @ 06/13/24 10:24:39.594
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 10:24:39.602
  Jun 13 10:24:41.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5086" for this suite. @ 06/13/24 10:24:41.609
• [16.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/13/24 10:24:41.614
  Jun 13 10:24:41.614: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 10:24:41.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:41.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:41.631
  STEP: Creating a test namespace @ 06/13/24 10:24:41.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:41.645
  STEP: Creating a pod in the namespace @ 06/13/24 10:24:41.649
  STEP: Waiting for the pod to have running status @ 06/13/24 10:24:41.657
  STEP: Deleting the namespace @ 06/13/24 10:24:43.665
  STEP: Waiting for the namespace to be removed. @ 06/13/24 10:24:43.669
  STEP: Recreating the namespace @ 06/13/24 10:24:54.673
  STEP: Verifying there are no pods in the namespace @ 06/13/24 10:24:54.685
  Jun 13 10:24:54.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9984" for this suite. @ 06/13/24 10:24:54.691
  STEP: Destroying namespace "nsdeletetest-1335" for this suite. @ 06/13/24 10:24:54.695
  Jun 13 10:24:54.698: INFO: Namespace nsdeletetest-1335 was already deleted
  STEP: Destroying namespace "nsdeletetest-8237" for this suite. @ 06/13/24 10:24:54.698
• [13.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/13/24 10:24:54.703
  Jun 13 10:24:54.703: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename events @ 06/13/24 10:24:54.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:54.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:54.716
  STEP: creating a test event @ 06/13/24 10:24:54.72
  STEP: listing all events in all namespaces @ 06/13/24 10:24:54.723
  STEP: patching the test event @ 06/13/24 10:24:54.728
  STEP: fetching the test event @ 06/13/24 10:24:54.733
  STEP: updating the test event @ 06/13/24 10:24:54.736
  STEP: getting the test event @ 06/13/24 10:24:54.743
  STEP: deleting the test event @ 06/13/24 10:24:54.745
  STEP: listing all events in all namespaces @ 06/13/24 10:24:54.75
  Jun 13 10:24:54.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-518" for this suite. @ 06/13/24 10:24:54.759
• [0.063 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/13/24 10:24:54.765
  Jun 13 10:24:54.765: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 10:24:54.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:54.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:54.78
  Jun 13 10:24:58.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5284" for this suite. @ 06/13/24 10:24:58.805
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/13/24 10:24:58.812
  Jun 13 10:24:58.812: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 10:24:58.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:24:58.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:24:58.826
  STEP: Counting existing ResourceQuota @ 06/13/24 10:24:58.829
  STEP: Creating a ResourceQuota @ 06/13/24 10:25:03.832
  STEP: Ensuring resource quota status is calculated @ 06/13/24 10:25:03.851
  Jun 13 10:25:05.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4263" for this suite. @ 06/13/24 10:25:05.859
• [7.052 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/13/24 10:25:05.864
  Jun 13 10:25:05.864: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 10:25:05.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:05.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:05.881
  STEP: Creating replication controller my-hostname-basic-b87a65e8-e794-4bfa-92fa-f67bad825354 @ 06/13/24 10:25:05.884
  Jun 13 10:25:05.893: INFO: Pod name my-hostname-basic-b87a65e8-e794-4bfa-92fa-f67bad825354: Found 0 pods out of 1
  Jun 13 10:25:10.897: INFO: Pod name my-hostname-basic-b87a65e8-e794-4bfa-92fa-f67bad825354: Found 1 pods out of 1
  Jun 13 10:25:10.897: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-b87a65e8-e794-4bfa-92fa-f67bad825354" are running
  Jun 13 10:25:10.901: INFO: Pod "my-hostname-basic-b87a65e8-e794-4bfa-92fa-f67bad825354-nk2r6" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:07 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:05 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:07 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:07 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:05 +0000 UTC Reason: Message:}])
  Jun 13 10:25:10.901: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/13/24 10:25:10.901
  Jun 13 10:25:10.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7187" for this suite. @ 06/13/24 10:25:10.916
• [5.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/13/24 10:25:10.92
  Jun 13 10:25:10.920: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename conformance-tests @ 06/13/24 10:25:10.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:10.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:10.934
  STEP: Getting node addresses @ 06/13/24 10:25:10.937
  Jun 13 10:25:10.937: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun 13 10:25:10.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6392" for this suite. @ 06/13/24 10:25:10.945
• [0.030 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/13/24 10:25:10.95
  Jun 13 10:25:10.950: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 10:25:10.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:10.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:10.965
  Jun 13 10:25:12.986: INFO: Deleting pod "var-expansion-01414f58-a651-48e3-992c-5e96d3fc8c1e" in namespace "var-expansion-107"
  Jun 13 10:25:12.993: INFO: Wait up to 5m0s for pod "var-expansion-01414f58-a651-48e3-992c-5e96d3fc8c1e" to be fully deleted
  Jun 13 10:25:17.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-107" for this suite. @ 06/13/24 10:25:17.008
• [6.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/13/24 10:25:17.014
  Jun 13 10:25:17.014: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 10:25:17.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:17.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:17.03
  STEP: Creating secret with name secret-test-e7407f36-d655-41ec-bbb2-1eba19387aa3 @ 06/13/24 10:25:17.033
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:25:17.039
  STEP: Saw pod success @ 06/13/24 10:25:21.055
  Jun 13 10:25:21.058: INFO: Trying to get logs from node 18.117.132.30 pod pod-secrets-6fea4e9f-bab9-4238-a415-82fc23e115a2 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 10:25:21.065
  Jun 13 10:25:21.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2145" for this suite. @ 06/13/24 10:25:21.08
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/13/24 10:25:21.088
  Jun 13 10:25:21.088: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 10:25:21.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:21.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:21.103
  Jun 13 10:25:21.120: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 10:25:21.126
  Jun 13 10:25:21.131: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:25:21.132: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:25:22.133: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:25:22.133: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:25:23.134: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 10:25:23.134: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/13/24 10:25:23.143
  STEP: Check that daemon pods images are updated. @ 06/13/24 10:25:23.154
  Jun 13 10:25:23.157: INFO: Wrong image for pod: daemon-set-66jn8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:23.157: INFO: Wrong image for pod: daemon-set-kctfs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:23.157: INFO: Wrong image for pod: daemon-set-nm5hd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:24.159: INFO: Wrong image for pod: daemon-set-kctfs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:24.159: INFO: Wrong image for pod: daemon-set-nm5hd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:25.159: INFO: Pod daemon-set-bv87j is not available
  Jun 13 10:25:25.159: INFO: Wrong image for pod: daemon-set-kctfs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:25.159: INFO: Wrong image for pod: daemon-set-nm5hd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:26.158: INFO: Pod daemon-set-bv87j is not available
  Jun 13 10:25:26.158: INFO: Wrong image for pod: daemon-set-kctfs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:26.158: INFO: Wrong image for pod: daemon-set-nm5hd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:27.159: INFO: Pod daemon-set-hd7jl is not available
  Jun 13 10:25:27.159: INFO: Wrong image for pod: daemon-set-kctfs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:28.161: INFO: Pod daemon-set-hd7jl is not available
  Jun 13 10:25:28.161: INFO: Wrong image for pod: daemon-set-kctfs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 10:25:29.162: INFO: Pod daemon-set-2zw4g is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/13/24 10:25:29.167
  Jun 13 10:25:29.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 10:25:29.174: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:25:30.175: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 10:25:30.175: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 10:25:30.19
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2767, will wait for the garbage collector to delete the pods @ 06/13/24 10:25:30.19
  Jun 13 10:25:30.248: INFO: Deleting DaemonSet.extensions daemon-set took: 5.176529ms
  Jun 13 10:25:30.349: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.978905ms
  Jun 13 10:25:32.956: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:25:32.956: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 10:25:32.958: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7329"},"items":null}

  Jun 13 10:25:32.961: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7329"},"items":null}

  Jun 13 10:25:32.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2767" for this suite. @ 06/13/24 10:25:32.978
• [11.895 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/13/24 10:25:32.984
  Jun 13 10:25:32.984: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename events @ 06/13/24 10:25:32.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:32.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:33
  STEP: Create set of events @ 06/13/24 10:25:33.003
  STEP: get a list of Events with a label in the current namespace @ 06/13/24 10:25:33.015
  STEP: delete a list of events @ 06/13/24 10:25:33.018
  Jun 13 10:25:33.018: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/13/24 10:25:33.033
  Jun 13 10:25:33.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7783" for this suite. @ 06/13/24 10:25:33.039
• [0.066 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/13/24 10:25:33.05
  Jun 13 10:25:33.050: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 10:25:33.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:33.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:33.066
  Jun 13 10:25:33.070: INFO: Creating ReplicaSet my-hostname-basic-a45164ac-3743-4917-9c2d-3495d6f54574
  Jun 13 10:25:33.081: INFO: Pod name my-hostname-basic-a45164ac-3743-4917-9c2d-3495d6f54574: Found 0 pods out of 1
  Jun 13 10:25:38.087: INFO: Pod name my-hostname-basic-a45164ac-3743-4917-9c2d-3495d6f54574: Found 1 pods out of 1
  Jun 13 10:25:38.087: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a45164ac-3743-4917-9c2d-3495d6f54574" is running
  Jun 13 10:25:38.090: INFO: Pod "my-hostname-basic-a45164ac-3743-4917-9c2d-3495d6f54574-kw9nr" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:34 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:33 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:34 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:34 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 10:25:33 +0000 UTC Reason: Message:}])
  Jun 13 10:25:38.090: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/13/24 10:25:38.09
  Jun 13 10:25:38.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5888" for this suite. @ 06/13/24 10:25:38.107
• [5.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/13/24 10:25:38.115
  Jun 13 10:25:38.115: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename job @ 06/13/24 10:25:38.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:38.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:38.151
  STEP: Creating a job @ 06/13/24 10:25:38.155
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/13/24 10:25:38.162
  STEP: patching /status @ 06/13/24 10:25:40.167
  STEP: updating /status @ 06/13/24 10:25:40.173
  STEP: get /status @ 06/13/24 10:25:40.181
  Jun 13 10:25:40.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7881" for this suite. @ 06/13/24 10:25:40.187
• [2.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/13/24 10:25:40.194
  Jun 13 10:25:40.194: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:25:40.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:40.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:40.212
  STEP: Creating configMap with name projected-configmap-test-volume-3f248aba-3b9f-4bcb-a43a-db63eff1d3c6 @ 06/13/24 10:25:40.215
  STEP: Creating a pod to test consume configMaps @ 06/13/24 10:25:40.221
  STEP: Saw pod success @ 06/13/24 10:25:44.241
  Jun 13 10:25:44.243: INFO: Trying to get logs from node 18.117.161.199 pod pod-projected-configmaps-1fafef1c-5f84-4c4a-b9fa-201f6b027762 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 10:25:44.252
  Jun 13 10:25:44.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7507" for this suite. @ 06/13/24 10:25:44.268
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/13/24 10:25:44.274
  Jun 13 10:25:44.274: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 10:25:44.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:44.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:44.291
  STEP: Setting up server cert @ 06/13/24 10:25:44.31
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 10:25:44.906
  STEP: Deploying the webhook pod @ 06/13/24 10:25:44.914
  STEP: Wait for the deployment to be ready @ 06/13/24 10:25:44.928
  Jun 13 10:25:44.933: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 10:25:46.942
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 10:25:46.95
  Jun 13 10:25:47.950: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/13/24 10:25:47.957
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/13/24 10:25:47.978
  STEP: Creating a dummy validating-webhook-configuration object @ 06/13/24 10:25:47.995
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/13/24 10:25:48.003
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/13/24 10:25:48.008
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/13/24 10:25:48.021
  Jun 13 10:25:48.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-551" for this suite. @ 06/13/24 10:25:48.072
  STEP: Destroying namespace "webhook-markers-3444" for this suite. @ 06/13/24 10:25:48.078
• [3.810 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/13/24 10:25:48.083
  Jun 13 10:25:48.083: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 10:25:48.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:48.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:48.101
  Jun 13 10:25:48.105: INFO: Creating deployment "test-recreate-deployment"
  Jun 13 10:25:48.109: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun 13 10:25:48.114: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jun 13 10:25:50.120: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun 13 10:25:50.122: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun 13 10:25:50.131: INFO: Updating deployment test-recreate-deployment
  Jun 13 10:25:50.131: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun 13 10:25:50.196: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d42e029f-5f41-44c2-bff1-a63e9d3d0410",
      ResourceVersion: (string) (len=4) "7626",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 10:25:50.201: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0ac4099-544f-4aa6-ab2e-102065102ec6",
      ResourceVersion: (string) (len=4) "7622",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d42e029f-5f41-44c2-bff1-a63e9d3d0410",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 34 32 65 30 32  39 66 2d 35 66 34 31 2d  |\"d42e029f-5f41-|
              00000120  34 34 63 32 2d 62 66 66  31 2d 61 36 33 65 39 64  |44c2-bff1-a63e9d|
              00000130  33 64 30 34 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3d0410\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 10:25:50.202: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun 13 10:25:50.202: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5e5c0bc-1ad6-4e91-9c39-59fa24c7bcc9",
      ResourceVersion: (string) (len=4) "7614",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871148,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d42e029f-5f41-44c2-bff1-a63e9d3d0410",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 34 32 65 30 32  39 66 2d 35 66 34 31 2d  |\"d42e029f-5f41-|
              00000120  34 34 63 32 2d 62 66 66  31 2d 61 36 33 65 39 64  |44c2-bff1-a63e9d|
              00000130  33 64 30 34 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3d0410\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 10:25:50.209: INFO: Pod "test-recreate-deployment-76fb77d45-ql9rf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-ql9rf",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-4010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73cc9c90-ba4f-4489-abe1-2a07ef65c82e",
      ResourceVersion: (string) (len=4) "7625",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "d0ac4099-544f-4aa6-ab2e-102065102ec6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  61 63 34 30 39 39 2d 35  |d\":\"d0ac4099-5|
              00000090  34 34 66 2d 34 61 61 36  2d 61 62 32 65 2d 31 30  |44f-4aa6-ab2e-10|
              000000a0  32 30 36 35 31 30 32 65  63 36 5c 22 7d 22 3a 7b  |2065102ec6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-754r9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-754r9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871150,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 10:25:50.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4010" for this suite. @ 06/13/24 10:25:50.215
• [2.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/13/24 10:25:50.222
  Jun 13 10:25:50.222: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename disruption @ 06/13/24 10:25:50.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:50.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:50.241
  STEP: Creating a kubernetes client @ 06/13/24 10:25:50.246
  Jun 13 10:25:50.246: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename disruption-2 @ 06/13/24 10:25:50.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:50.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:50.263
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:25:50.27
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:25:52.277
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:25:52.287
  STEP: listing a collection of PDBs across all namespaces @ 06/13/24 10:25:52.292
  STEP: listing a collection of PDBs in namespace disruption-7235 @ 06/13/24 10:25:52.296
  STEP: deleting a collection of PDBs @ 06/13/24 10:25:52.299
  STEP: Waiting for the PDB collection to be deleted @ 06/13/24 10:25:52.308
  Jun 13 10:25:52.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3233" for this suite. @ 06/13/24 10:25:52.315
  Jun 13 10:25:52.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7235" for this suite. @ 06/13/24 10:25:52.326
• [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/13/24 10:25:52.333
  Jun 13 10:25:52.333: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename prestop @ 06/13/24 10:25:52.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:25:52.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:25:52.349
  STEP: Creating server pod server in namespace prestop-6860 @ 06/13/24 10:25:52.353
  STEP: Waiting for pods to come up. @ 06/13/24 10:25:52.361
  STEP: Creating tester pod tester in namespace prestop-6860 @ 06/13/24 10:25:54.372
  STEP: Deleting pre-stop pod @ 06/13/24 10:25:56.382
  Jun 13 10:26:01.395: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/13/24 10:26:01.395
  Jun 13 10:26:01.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6860" for this suite. @ 06/13/24 10:26:01.414
• [9.095 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/13/24 10:26:01.427
  Jun 13 10:26:01.427: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 10:26:01.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:26:01.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:26:01.452
  Jun 13 10:26:01.456: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun 13 10:26:01.465: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 13 10:26:06.470: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 10:26:06.47
  Jun 13 10:26:06.470: INFO: Creating deployment "test-rolling-update-deployment"
  Jun 13 10:26:06.477: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun 13 10:26:06.484: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jun 13 10:26:08.490: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun 13 10:26:08.493: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun 13 10:26:08.500: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5480",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11da1f99-2752-444d-929f-dec0387e3c1c",
      ResourceVersion: (string) (len=4) "7811",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 10:26:08.504: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5480",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f398cc7-c05a-494c-b1df-807135060a70",
      ResourceVersion: (string) (len=4) "7801",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "11da1f99-2752-444d-929f-dec0387e3c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 31 64 61 31 66  39 39 2d 32 37 35 32 2d  |\"11da1f99-2752-|
              00000120  34 34 34 64 2d 39 32 39  66 2d 64 65 63 30 33 38  |444d-929f-dec038|
              00000130  37 65 33 63 31 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7e3c1c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 10:26:08.505: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun 13 10:26:08.505: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5480",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "236b9ba8-ebda-4320-83ca-2ac0c854958f",
      ResourceVersion: (string) (len=4) "7810",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871161,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "11da1f99-2752-444d-929f-dec0387e3c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 31 64 61 31 66 39  |"uid\":\"11da1f9|
              000000b0  39 2d 32 37 35 32 2d 34  34 34 64 2d 39 32 39 66  |9-2752-444d-929f|
              000000c0  2d 64 65 63 30 33 38 37  65 33 63 31 63 5c 22 7d  |-dec0387e3c1c\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 10:26:08.509: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-6xtwk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-6xtwk",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-5480",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b0068d9-53ae-445d-937b-069505d24f59",
      ResourceVersion: (string) (len=4) "7800",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "eb731e0bcba4c76e631530cb2c50b48ce6ebb66ba53e6e04473f2fc2b3666cd7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.23/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.23/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "2f398cc7-c05a-494c-b1df-807135060a70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  33 39 38 63 63 37 2d 63  |d\":\"2f398cc7-c|
              00000090  30 35 61 2d 34 39 34 63  2d 62 31 64 66 2d 38 30  |05a-494c-b1df-80|
              000000a0  37 31 33 35 30 36 30 61  37 30 5c 22 7d 22 3a 7b  |7135060a70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 33  5c 22 7d 22 3a 7b 22 2e  |.42.2.23\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k6d97",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k6d97",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853871166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=10) "10.42.2.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853871166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853871167,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://f75f393441dcd7b752ce684d0a21f78c639394635bc1719e4153ec7cdc6e2dec",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 10:26:08.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5480" for this suite. @ 06/13/24 10:26:08.515
• [7.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/13/24 10:26:08.52
  Jun 13 10:26:08.520: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:26:08.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:26:08.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:26:08.535
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 10:26:08.538
  STEP: Saw pod success @ 06/13/24 10:26:12.555
  Jun 13 10:26:12.558: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-24eecaf0-d159-495f-8967-c3998c166d44 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 10:26:12.565
  Jun 13 10:26:12.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7635" for this suite. @ 06/13/24 10:26:12.583
• [4.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/13/24 10:26:12.587
  Jun 13 10:26:12.588: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 10:26:12.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:26:12.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:26:12.605
  STEP: Creating simple DaemonSet "daemon-set" @ 06/13/24 10:26:12.626
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 10:26:12.632
  Jun 13 10:26:12.643: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:26:12.643: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:26:13.638: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:26:13.638: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:26:14.643: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 10:26:14.643: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/13/24 10:26:14.645
  Jun 13 10:26:14.648: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/13/24 10:26:14.648
  Jun 13 10:26:14.655: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/13/24 10:26:14.655
  Jun 13 10:26:14.657: INFO: Observed &DaemonSet event: ADDED
  Jun 13 10:26:14.657: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.659: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.659: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.659: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.659: INFO: Found daemon set daemon-set in namespace daemonsets-5806 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 10:26:14.659: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/13/24 10:26:14.659
  STEP: watching for the daemon set status to be patched @ 06/13/24 10:26:14.669
  Jun 13 10:26:14.672: INFO: Observed &DaemonSet event: ADDED
  Jun 13 10:26:14.673: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.673: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.673: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.673: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.673: INFO: Observed daemon set daemon-set in namespace daemonsets-5806 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 10:26:14.673: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 10:26:14.673: INFO: Found daemon set daemon-set in namespace daemonsets-5806 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun 13 10:26:14.673: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 10:26:14.675
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5806, will wait for the garbage collector to delete the pods @ 06/13/24 10:26:14.675
  Jun 13 10:26:14.735: INFO: Deleting DaemonSet.extensions daemon-set took: 5.608711ms
  Jun 13 10:26:14.835: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.135165ms
  Jun 13 10:26:17.640: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:26:17.640: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 10:26:17.642: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7934"},"items":null}

  Jun 13 10:26:17.645: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7935"},"items":null}

  Jun 13 10:26:17.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5806" for this suite. @ 06/13/24 10:26:17.663
• [5.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/13/24 10:26:17.67
  Jun 13 10:26:17.670: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 10:26:17.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:26:17.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:26:17.687
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/13/24 10:26:17.691
  Jun 13 10:26:17.692: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:26:19.170: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:26:24.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-603" for this suite. @ 06/13/24 10:26:24.591
• [6.927 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/13/24 10:26:24.597
  Jun 13 10:26:24.597: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 10:26:24.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:26:24.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:26:24.614
  STEP: Creating service test in namespace statefulset-2735 @ 06/13/24 10:26:24.618
  Jun 13 10:26:24.631: INFO: Found 0 stateful pods, waiting for 1
  Jun 13 10:26:34.635: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/13/24 10:26:34.64
  W0613 10:26:34.651585      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun 13 10:26:34.662: INFO: Found 1 stateful pods, waiting for 2
  Jun 13 10:26:44.663: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:26:44.663: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/13/24 10:26:44.668
  STEP: Delete all of the StatefulSets @ 06/13/24 10:26:44.67
  STEP: Verify that StatefulSets have been deleted @ 06/13/24 10:26:44.676
  Jun 13 10:26:44.678: INFO: Deleting all statefulset in ns statefulset-2735
  Jun 13 10:26:44.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2735" for this suite. @ 06/13/24 10:26:44.695
• [20.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/13/24 10:26:44.708
  Jun 13 10:26:44.708: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 10:26:44.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:26:44.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:26:44.784
  STEP: create the container @ 06/13/24 10:26:44.787
  W0613 10:26:44.795650      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/13/24 10:26:44.795
  STEP: get the container status @ 06/13/24 10:26:49.816
  STEP: the container should be terminated @ 06/13/24 10:26:49.819
  STEP: the termination message should be set @ 06/13/24 10:26:49.819
  Jun 13 10:26:49.819: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/13/24 10:26:49.819
  Jun 13 10:26:49.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2933" for this suite. @ 06/13/24 10:26:49.835
• [5.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/13/24 10:26:49.841
  Jun 13 10:26:49.841: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename subpath @ 06/13/24 10:26:49.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:26:49.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:26:49.857
  STEP: Setting up data @ 06/13/24 10:26:49.86
  STEP: Creating pod pod-subpath-test-configmap-dhqb @ 06/13/24 10:26:49.869
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 10:26:49.869
  STEP: Saw pod success @ 06/13/24 10:27:13.933
  Jun 13 10:27:13.936: INFO: Trying to get logs from node 18.117.132.30 pod pod-subpath-test-configmap-dhqb container test-container-subpath-configmap-dhqb: <nil>
  STEP: delete the pod @ 06/13/24 10:27:13.945
  STEP: Deleting pod pod-subpath-test-configmap-dhqb @ 06/13/24 10:27:13.957
  Jun 13 10:27:13.957: INFO: Deleting pod "pod-subpath-test-configmap-dhqb" in namespace "subpath-3002"
  Jun 13 10:27:13.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3002" for this suite. @ 06/13/24 10:27:13.963
• [24.127 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/13/24 10:27:13.968
  Jun 13 10:27:13.968: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 10:27:13.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:27:13.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:27:13.984
  STEP: Creating pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531 @ 06/13/24 10:27:13.987
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 10:27:16.001
  Jun 13 10:27:16.004: INFO: Initial restart count of pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 is 0
  Jun 13 10:27:16.007: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:18.011: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:20.015: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:22.019: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:24.023: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:26.027: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:28.041: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:30.045: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:32.048: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:34.052: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:36.057: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:38.060: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:40.066: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:42.070: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:44.074: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:46.078: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:48.083: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:50.087: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:52.091: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:54.095: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:56.099: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:27:58.103: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:00.107: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:02.111: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:04.114: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:06.119: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:08.123: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:10.127: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:12.130: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:14.134: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:16.139: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:18.144: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:20.151: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:22.155: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:24.160: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:26.163: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:28.168: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:30.171: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:32.174: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:34.178: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:36.183: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:38.188: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:40.192: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:42.196: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:44.199: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:46.203: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:48.208: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:50.212: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:52.216: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:54.220: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:56.226: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:28:58.230: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:00.233: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:02.237: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:04.241: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:06.246: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:08.249: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:10.254: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:12.257: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:14.262: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:16.267: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:18.271: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:20.275: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:22.278: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:24.281: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:26.286: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:28.291: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:30.294: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:32.298: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:34.303: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:36.307: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:38.312: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:40.316: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:42.321: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:44.324: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:46.328: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:48.332: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:50.335: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:52.339: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:54.343: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:56.347: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:29:58.351: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:00.355: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:02.359: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:04.363: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:06.367: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:08.371: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:10.375: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:12.378: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:14.382: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:16.387: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:18.391: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:20.396: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:22.399: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:24.403: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:26.408: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:28.413: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:30.417: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:32.421: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:34.425: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:36.430: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:38.434: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:40.438: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:42.442: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:44.445: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:46.449: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:48.453: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:50.457: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:52.461: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:54.465: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:56.470: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:30:58.474: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:00.478: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:02.483: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:04.487: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:06.492: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:08.496: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:10.499: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:12.502: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  Jun 13 10:31:14.506: INFO: Get pod test-grpc-a1b5fdf6-6996-499f-95fc-68f8acbe18e7 in namespace container-probe-2531
  STEP: deleting the pod @ 06/13/24 10:31:16.507
  Jun 13 10:31:16.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2531" for this suite. @ 06/13/24 10:31:16.525
• [242.567 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/13/24 10:31:16.535
  Jun 13 10:31:16.535: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 10:31:16.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:16.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:16.553
  Jun 13 10:31:16.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1553" for this suite. @ 06/13/24 10:31:16.595
• [0.066 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/13/24 10:31:16.601
  Jun 13 10:31:16.601: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:31:16.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:16.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:16.617
  STEP: Creating projection with secret that has name projected-secret-test-08123322-2ac5-443f-bac5-345462e12dc3 @ 06/13/24 10:31:16.62
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:31:16.624
  STEP: Saw pod success @ 06/13/24 10:31:20.642
  Jun 13 10:31:20.645: INFO: Trying to get logs from node 18.117.161.199 pod pod-projected-secrets-1e0b85ce-57e7-451b-8ca9-2c3857e32415 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 10:31:20.654
  Jun 13 10:31:20.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8463" for this suite. @ 06/13/24 10:31:20.675
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/13/24 10:31:20.679
  Jun 13 10:31:20.680: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename containers @ 06/13/24 10:31:20.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:20.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:20.694
  Jun 13 10:31:22.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9432" for this suite. @ 06/13/24 10:31:22.72
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/13/24 10:31:22.726
  Jun 13 10:31:22.726: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sysctl @ 06/13/24 10:31:22.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:22.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:22.738
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/13/24 10:31:22.742
  STEP: Watching for error events or started pod @ 06/13/24 10:31:22.748
  STEP: Waiting for pod completion @ 06/13/24 10:31:24.752
  STEP: Checking that the pod succeeded @ 06/13/24 10:31:26.761
  STEP: Getting logs from the pod @ 06/13/24 10:31:26.761
  STEP: Checking that the sysctl is actually updated @ 06/13/24 10:31:26.77
  Jun 13 10:31:26.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3013" for this suite. @ 06/13/24 10:31:26.773
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/13/24 10:31:26.781
  Jun 13 10:31:26.781: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename ingress @ 06/13/24 10:31:26.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:26.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:26.794
  STEP: getting /apis @ 06/13/24 10:31:26.797
  STEP: getting /apis/networking.k8s.io @ 06/13/24 10:31:26.801
  STEP: getting /apis/networking.k8s.iov1 @ 06/13/24 10:31:26.803
  STEP: creating @ 06/13/24 10:31:26.804
  STEP: getting @ 06/13/24 10:31:26.818
  STEP: listing @ 06/13/24 10:31:26.82
  STEP: watching @ 06/13/24 10:31:26.822
  Jun 13 10:31:26.822: INFO: starting watch
  STEP: cluster-wide listing @ 06/13/24 10:31:26.824
  STEP: cluster-wide watching @ 06/13/24 10:31:26.826
  Jun 13 10:31:26.826: INFO: starting watch
  STEP: patching @ 06/13/24 10:31:26.827
  STEP: updating @ 06/13/24 10:31:26.831
  Jun 13 10:31:26.837: INFO: waiting for watch events with expected annotations
  Jun 13 10:31:26.837: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/13/24 10:31:26.837
  STEP: updating /status @ 06/13/24 10:31:26.844
  STEP: get /status @ 06/13/24 10:31:26.85
  STEP: deleting @ 06/13/24 10:31:26.852
  STEP: deleting a collection @ 06/13/24 10:31:26.861
  Jun 13 10:31:26.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6123" for this suite. @ 06/13/24 10:31:26.873
• [0.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/13/24 10:31:26.88
  Jun 13 10:31:26.880: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 10:31:26.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:26.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:26.899
  STEP: reading a file in the container @ 06/13/24 10:31:28.919
  Jun 13 10:31:28.919: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9621 pod-service-account-b4adae49-122a-404e-a86e-80f3ace70e37 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/13/24 10:31:29.075
  Jun 13 10:31:29.076: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9621 pod-service-account-b4adae49-122a-404e-a86e-80f3ace70e37 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/13/24 10:31:29.231
  Jun 13 10:31:29.231: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9621 pod-service-account-b4adae49-122a-404e-a86e-80f3ace70e37 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun 13 10:31:29.382: INFO: Got root ca configmap in namespace "svcaccounts-9621"
  Jun 13 10:31:29.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9621" for this suite. @ 06/13/24 10:31:29.388
• [2.513 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/13/24 10:31:29.393
  Jun 13 10:31:29.393: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 10:31:29.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:29.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:29.408
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/13/24 10:31:29.419
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/13/24 10:31:49.497
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/13/24 10:31:49.499
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/13/24 10:31:49.504
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/13/24 10:31:49.504
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/13/24 10:31:49.523
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/13/24 10:31:52.545
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/13/24 10:31:53.55
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/13/24 10:31:53.555
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/13/24 10:31:53.555
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/13/24 10:31:53.571
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/13/24 10:31:54.577
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/13/24 10:31:56.588
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/13/24 10:31:56.593
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/13/24 10:31:56.593
  Jun 13 10:31:56.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2824" for this suite. @ 06/13/24 10:31:56.616
• [27.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/13/24 10:31:56.625
  Jun 13 10:31:56.625: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename disruption @ 06/13/24 10:31:56.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:31:56.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:31:56.647
  STEP: creating the pdb @ 06/13/24 10:31:56.65
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:31:56.654
  STEP: updating the pdb @ 06/13/24 10:31:58.659
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:31:58.665
  STEP: patching the pdb @ 06/13/24 10:32:00.67
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:32:00.677
  STEP: Waiting for the pdb to be deleted @ 06/13/24 10:32:02.687
  Jun 13 10:32:02.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4352" for this suite. @ 06/13/24 10:32:02.692
• [6.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/13/24 10:32:02.699
  Jun 13 10:32:02.699: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 10:32:02.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:32:02.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:32:02.713
  Jun 13 10:32:02.716: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/13/24 10:32:04.058
  Jun 13 10:32:04.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-506 --namespace=crd-publish-openapi-506 create -f -'
  Jun 13 10:32:04.181: INFO: stderr: ""
  Jun 13 10:32:04.181: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 13 10:32:04.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-506 --namespace=crd-publish-openapi-506 delete e2e-test-crd-publish-openapi-543-crds test-cr'
  Jun 13 10:32:04.250: INFO: stderr: ""
  Jun 13 10:32:04.250: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun 13 10:32:04.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-506 --namespace=crd-publish-openapi-506 apply -f -'
  Jun 13 10:32:04.325: INFO: stderr: ""
  Jun 13 10:32:04.325: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 13 10:32:04.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-506 --namespace=crd-publish-openapi-506 delete e2e-test-crd-publish-openapi-543-crds test-cr'
  Jun 13 10:32:04.400: INFO: stderr: ""
  Jun 13 10:32:04.400: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/13/24 10:32:04.4
  Jun 13 10:32:04.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-506 explain e2e-test-crd-publish-openapi-543-crds'
  Jun 13 10:32:04.467: INFO: stderr: ""
  Jun 13 10:32:04.467: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-543-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jun 13 10:32:05.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-506" for this suite. @ 06/13/24 10:32:05.847
• [3.155 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/13/24 10:32:05.854
  Jun 13 10:32:05.854: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename events @ 06/13/24 10:32:05.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:32:05.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:32:05.871
  STEP: Create set of events @ 06/13/24 10:32:05.874
  Jun 13 10:32:05.878: INFO: created test-event-1
  Jun 13 10:32:05.893: INFO: created test-event-2
  Jun 13 10:32:05.897: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/13/24 10:32:05.897
  STEP: delete collection of events @ 06/13/24 10:32:05.899
  Jun 13 10:32:05.899: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/13/24 10:32:05.912
  Jun 13 10:32:05.912: INFO: requesting list of events to confirm quantity
  Jun 13 10:32:05.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2803" for this suite. @ 06/13/24 10:32:05.918
• [0.068 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/13/24 10:32:05.922
  Jun 13 10:32:05.922: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 10:32:05.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:32:05.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:32:05.937
  STEP: Creating service test in namespace statefulset-4374 @ 06/13/24 10:32:05.94
  STEP: Creating a new StatefulSet @ 06/13/24 10:32:05.944
  Jun 13 10:32:05.956: INFO: Found 0 stateful pods, waiting for 3
  Jun 13 10:32:15.960: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:32:15.960: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:32:15.960: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 10:32:15.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-4374 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 10:32:16.125: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 10:32:16.125: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 10:32:16.125: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/13/24 10:32:26.135
  Jun 13 10:32:26.154: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/13/24 10:32:26.154
  STEP: Updating Pods in reverse ordinal order @ 06/13/24 10:32:36.162
  Jun 13 10:32:36.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-4374 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 10:32:36.322: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 10:32:36.322: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 10:32:36.322: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 10:32:56.334: INFO: Waiting for StatefulSet statefulset-4374/ss2 to complete update
  STEP: Rolling back to a previous revision @ 06/13/24 10:33:06.336
  Jun 13 10:33:06.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-4374 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 10:33:06.488: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 10:33:06.488: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 10:33:06.488: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 10:33:16.516: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 06/13/24 10:33:26.523
  Jun 13 10:33:26.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-4374 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 10:33:26.684: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 10:33:26.684: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 10:33:26.684: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 10:33:37.702: INFO: Deleting all statefulset in ns statefulset-4374
  Jun 13 10:33:37.704: INFO: Scaling statefulset ss2 to 0
  Jun 13 10:33:47.717: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 10:33:47.720: INFO: Deleting statefulset ss2
  Jun 13 10:33:47.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4374" for this suite. @ 06/13/24 10:33:47.733
• [101.833 seconds]
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/13/24 10:33:47.755
  Jun 13 10:33:47.755: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 10:33:47.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:33:47.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:33:47.785
  STEP: Creating secret with name secret-test-4d4cd897-978a-4c4d-80e9-88fd6a965f26 @ 06/13/24 10:33:47.788
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:33:47.792
  STEP: Saw pod success @ 06/13/24 10:33:51.809
  Jun 13 10:33:51.811: INFO: Trying to get logs from node 18.117.161.199 pod pod-secrets-d22081a3-dd77-4a85-bd4d-f52fe869752f container secret-env-test: <nil>
  STEP: delete the pod @ 06/13/24 10:33:51.818
  Jun 13 10:33:51.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2706" for this suite. @ 06/13/24 10:33:51.832
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/13/24 10:33:51.837
  Jun 13 10:33:51.837: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 10:33:51.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:33:51.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:33:51.854
  STEP: Creating configMap configmap-3301/configmap-test-5a6056a3-ae6a-44c0-b0c4-646c2898d86a @ 06/13/24 10:33:51.857
  STEP: Creating a pod to test consume configMaps @ 06/13/24 10:33:51.86
  STEP: Saw pod success @ 06/13/24 10:33:55.877
  Jun 13 10:33:55.880: INFO: Trying to get logs from node 18.117.132.30 pod pod-configmaps-bf934020-be0f-4d06-a83a-e35c6ccb88ae container env-test: <nil>
  STEP: delete the pod @ 06/13/24 10:33:55.887
  Jun 13 10:33:55.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3301" for this suite. @ 06/13/24 10:33:55.9
• [4.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/13/24 10:33:55.908
  Jun 13 10:33:55.908: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 10:33:55.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:33:55.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:33:55.921
  STEP: set up a multi version CRD @ 06/13/24 10:33:55.924
  Jun 13 10:33:55.925: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: rename a version @ 06/13/24 10:33:59.39
  STEP: check the new version name is served @ 06/13/24 10:33:59.404
  STEP: check the old version name is removed @ 06/13/24 10:34:00.246
  STEP: check the other version is not changed @ 06/13/24 10:34:00.948
  Jun 13 10:34:03.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4120" for this suite. @ 06/13/24 10:34:03.691
• [7.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/13/24 10:34:03.701
  Jun 13 10:34:03.701: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 10:34:03.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:34:03.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:34:03.716
  STEP: Creating a test headless service @ 06/13/24 10:34:03.72
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9459.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9459.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9459.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9459.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 125.133.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.133.125_udp@PTR;check="$$(dig +tcp +noall +answer +search 125.133.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.133.125_tcp@PTR;sleep 1; done
   @ 06/13/24 10:34:03.738
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9459.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9459.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9459.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9459.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9459.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 125.133.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.133.125_udp@PTR;check="$$(dig +tcp +noall +answer +search 125.133.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.133.125_tcp@PTR;sleep 1; done
   @ 06/13/24 10:34:03.738
  STEP: creating a pod to probe DNS @ 06/13/24 10:34:03.738
  STEP: submitting the pod to kubernetes @ 06/13/24 10:34:03.738
  STEP: retrieving the pod @ 06/13/24 10:34:05.753
  STEP: looking for the results for each expected name from probers @ 06/13/24 10:34:05.756
  Jun 13 10:34:05.759: INFO: Unable to read wheezy_udp@dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.761: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.764: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.766: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.779: INFO: Unable to read jessie_udp@dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.781: INFO: Unable to read jessie_tcp@dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.783: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.786: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local from pod dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67: the server could not find the requested resource (get pods dns-test-5af570f0-e736-4a18-8599-6611cf606e67)
  Jun 13 10:34:05.796: INFO: Lookups using dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67 failed for: [wheezy_udp@dns-test-service.dns-9459.svc.cluster.local wheezy_tcp@dns-test-service.dns-9459.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local jessie_udp@dns-test-service.dns-9459.svc.cluster.local jessie_tcp@dns-test-service.dns-9459.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9459.svc.cluster.local]

  Jun 13 10:34:05.804: INFO: Pod client logs for webserver: 
  Jun 13 10:34:05.809: INFO: Pod client logs for querier: 
  Jun 13 10:34:05.815: INFO: Pod client logs for jessie-querier: 
  Jun 13 10:34:10.797: INFO: DNS probes using dns-9459/dns-test-5af570f0-e736-4a18-8599-6611cf606e67 succeeded

  STEP: deleting the pod @ 06/13/24 10:34:10.797
  STEP: deleting the test service @ 06/13/24 10:34:10.813
  STEP: deleting the test headless service @ 06/13/24 10:34:10.85
  Jun 13 10:34:10.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9459" for this suite. @ 06/13/24 10:34:10.869
• [7.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/13/24 10:34:10.904
  Jun 13 10:34:10.904: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 10:34:10.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:34:10.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:34:10.921
  STEP: Creating configMap with name configmap-test-volume-0cdbccad-0954-4e77-acef-c0ee9aad39ff @ 06/13/24 10:34:10.924
  STEP: Creating a pod to test consume configMaps @ 06/13/24 10:34:10.928
  STEP: Saw pod success @ 06/13/24 10:34:14.95
  Jun 13 10:34:14.953: INFO: Trying to get logs from node 18.117.132.30 pod pod-configmaps-1c45c277-bd73-4149-ba3b-6b5749d80ffc container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 10:34:14.959
  Jun 13 10:34:14.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7332" for this suite. @ 06/13/24 10:34:14.975
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/13/24 10:34:14.983
  Jun 13 10:34:14.983: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 10:34:14.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:34:14.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:34:14.998
  Jun 13 10:34:15.001: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/13/24 10:34:16.366
  Jun 13 10:34:16.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-3753 --namespace=crd-publish-openapi-3753 create -f -'
  Jun 13 10:34:18.456: INFO: stderr: ""
  Jun 13 10:34:18.456: INFO: stdout: "e2e-test-crd-publish-openapi-603-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 13 10:34:18.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-3753 --namespace=crd-publish-openapi-3753 delete e2e-test-crd-publish-openapi-603-crds test-cr'
  Jun 13 10:34:18.570: INFO: stderr: ""
  Jun 13 10:34:18.570: INFO: stdout: "e2e-test-crd-publish-openapi-603-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun 13 10:34:18.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-3753 --namespace=crd-publish-openapi-3753 apply -f -'
  Jun 13 10:34:18.647: INFO: stderr: ""
  Jun 13 10:34:18.647: INFO: stdout: "e2e-test-crd-publish-openapi-603-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 13 10:34:18.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-3753 --namespace=crd-publish-openapi-3753 delete e2e-test-crd-publish-openapi-603-crds test-cr'
  Jun 13 10:34:18.717: INFO: stderr: ""
  Jun 13 10:34:18.717: INFO: stdout: "e2e-test-crd-publish-openapi-603-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/13/24 10:34:18.717
  Jun 13 10:34:18.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-3753 explain e2e-test-crd-publish-openapi-603-crds'
  Jun 13 10:34:18.785: INFO: stderr: ""
  Jun 13 10:34:18.785: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-603-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jun 13 10:34:20.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3753" for this suite. @ 06/13/24 10:34:20.113
• [5.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/13/24 10:34:20.119
  Jun 13 10:34:20.119: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 10:34:20.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:34:20.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:34:20.132
  STEP: creating the pod @ 06/13/24 10:34:20.135
  STEP: waiting for pod running @ 06/13/24 10:34:20.143
  STEP: creating a file in subpath @ 06/13/24 10:34:22.15
  Jun 13 10:34:22.152: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2875 PodName:var-expansion-b336a3b4-fc8b-4851-b078-f965969efa7c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:34:22.152: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:34:22.153: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:34:22.153: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-2875/pods/var-expansion-b336a3b4-fc8b-4851-b078-f965969efa7c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/13/24 10:34:22.239
  Jun 13 10:34:22.243: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2875 PodName:var-expansion-b336a3b4-fc8b-4851-b078-f965969efa7c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:34:22.243: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:34:22.243: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:34:22.244: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-2875/pods/var-expansion-b336a3b4-fc8b-4851-b078-f965969efa7c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/13/24 10:34:22.328
  Jun 13 10:34:22.840: INFO: Successfully updated pod "var-expansion-b336a3b4-fc8b-4851-b078-f965969efa7c"
  STEP: waiting for annotated pod running @ 06/13/24 10:34:22.84
  STEP: deleting the pod gracefully @ 06/13/24 10:34:22.843
  Jun 13 10:34:22.843: INFO: Deleting pod "var-expansion-b336a3b4-fc8b-4851-b078-f965969efa7c" in namespace "var-expansion-2875"
  Jun 13 10:34:22.851: INFO: Wait up to 5m0s for pod "var-expansion-b336a3b4-fc8b-4851-b078-f965969efa7c" to be fully deleted
  Jun 13 10:34:56.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2875" for this suite. @ 06/13/24 10:34:56.93
• [36.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/13/24 10:34:56.935
  Jun 13 10:34:56.935: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 10:34:56.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:34:56.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:34:56.956
  STEP: getting /apis @ 06/13/24 10:34:56.959
  STEP: getting /apis/node.k8s.io @ 06/13/24 10:34:56.964
  STEP: getting /apis/node.k8s.io/v1 @ 06/13/24 10:34:56.965
  STEP: creating @ 06/13/24 10:34:56.967
  STEP: watching @ 06/13/24 10:34:56.978
  Jun 13 10:34:56.978: INFO: starting watch
  STEP: getting @ 06/13/24 10:34:56.982
  STEP: listing @ 06/13/24 10:34:56.985
  STEP: patching @ 06/13/24 10:34:56.988
  STEP: updating @ 06/13/24 10:34:56.991
  Jun 13 10:34:56.997: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/13/24 10:34:56.997
  STEP: deleting a collection @ 06/13/24 10:34:57.006
  Jun 13 10:34:57.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9347" for this suite. @ 06/13/24 10:34:57.018
• [0.090 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/13/24 10:34:57.025
  Jun 13 10:34:57.025: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 10:34:57.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:34:57.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:34:57.039
  STEP: Creating service test in namespace statefulset-6909 @ 06/13/24 10:34:57.042
  STEP: Creating statefulset ss in namespace statefulset-6909 @ 06/13/24 10:34:57.046
  Jun 13 10:34:57.056: INFO: Found 0 stateful pods, waiting for 1
  Jun 13 10:35:07.059: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/13/24 10:35:07.064
  STEP: updating a scale subresource @ 06/13/24 10:35:07.066
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/13/24 10:35:07.076
  STEP: Patch a scale subresource @ 06/13/24 10:35:07.079
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/13/24 10:35:07.086
  Jun 13 10:35:07.088: INFO: Deleting all statefulset in ns statefulset-6909
  Jun 13 10:35:07.092: INFO: Scaling statefulset ss to 0
  Jun 13 10:35:17.106: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 10:35:17.108: INFO: Deleting statefulset ss
  Jun 13 10:35:17.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6909" for this suite. @ 06/13/24 10:35:17.122
• [20.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/13/24 10:35:17.127
  Jun 13 10:35:17.127: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 10:35:17.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:35:17.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:35:17.142
  STEP: Create a pod @ 06/13/24 10:35:17.145
  STEP: patching /status @ 06/13/24 10:35:19.157
  Jun 13 10:35:19.167: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun 13 10:35:19.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-286" for this suite. @ 06/13/24 10:35:19.171
• [2.049 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/13/24 10:35:19.176
  Jun 13 10:35:19.176: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 10:35:19.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:35:19.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:35:19.192
  Jun 13 10:35:19.195: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 10:35:19.200: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 10:35:19.203: INFO: 
  Logging pods the apiserver thinks is on node 18.117.132.30 before test
  Jun 13 10:35:19.207: INFO: calico-kube-controllers-8485458bd8-jnr6l from kube-system started at 2024-06-13 09:45:08 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.208: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: canal-rp4h4 from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:35:19.208: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: coredns-autoscaler-6ff6bf758-slrqs from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.208: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: pod-j6jrc from pods-286 started at 2024-06-13 10:35:17 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.208: INFO: 	Container agnhost ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: sonobuoy from sonobuoy started at 2024-06-13 10:15:49 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.208: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-bk62f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:35:19.208: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 10:35:19.208: INFO: 
  Logging pods the apiserver thinks is on node 18.117.161.199 before test
  Jun 13 10:35:19.213: INFO: canal-gzz2g from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:35:19.213: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:35:19.213: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:35:19.213: INFO: coredns-7b7785bd9-g7xjw from kube-system started at 2024-06-13 09:45:36 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.213: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 10:35:19.213: INFO: metrics-server-657c74b5d8-2zf6t from kube-system started at 2024-06-13 09:45:27 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.213: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 10:35:19.213: INFO: rke-coredns-addon-deploy-job-2bhwc from kube-system started at 2024-06-13 09:45:13 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.213: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 10:35:19.213: INFO: rke-metrics-addon-deploy-job-wkp4q from kube-system started at 2024-06-13 09:45:25 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.213: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 10:35:19.213: INFO: rke-network-plugin-deploy-job-rgkm9 from kube-system started at 2024-06-13 09:45:06 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.213: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 10:35:19.213: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-t4ql9 from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:35:19.213: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:35:19.213: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 10:35:19.213: INFO: 
  Logging pods the apiserver thinks is on node 18.216.152.151 before test
  Jun 13 10:35:19.217: INFO: canal-k9tgk from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:35:19.217: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:35:19.217: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:35:19.217: INFO: coredns-7b7785bd9-glrkb from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:35:19.217: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 10:35:19.217: INFO: sonobuoy-e2e-job-5d97470650654ddd from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:35:19.217: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 10:35:19.217: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:35:19.217: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-kwc7f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:35:19.217: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:35:19.217: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/13/24 10:35:19.218
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/13/24 10:35:21.233
  STEP: Trying to apply a random label on the found node. @ 06/13/24 10:35:21.247
  STEP: verifying the node has the label kubernetes.io/e2e-a69646ab-93b2-4d48-b5fb-424c3c11c2ca 95 @ 06/13/24 10:35:21.258
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/13/24 10:35:21.264
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.16.95 on the node which pod4 resides and expect not scheduled @ 06/13/24 10:35:23.275
  STEP: removing the label kubernetes.io/e2e-a69646ab-93b2-4d48-b5fb-424c3c11c2ca off the node 18.117.161.199 @ 06/13/24 10:40:23.281
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-a69646ab-93b2-4d48-b5fb-424c3c11c2ca @ 06/13/24 10:40:23.293
  Jun 13 10:40:23.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5674" for this suite. @ 06/13/24 10:40:23.299
• [304.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/13/24 10:40:23.305
  Jun 13 10:40:23.305: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 10:40:23.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:40:23.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:40:23.322
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/13/24 10:40:23.325
  STEP: Saw pod success @ 06/13/24 10:40:27.342
  Jun 13 10:40:27.344: INFO: Trying to get logs from node 18.117.132.30 pod pod-bdbdab8c-4fa1-4308-9099-ae7a39674026 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 10:40:27.354
  Jun 13 10:40:27.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8853" for this suite. @ 06/13/24 10:40:27.371
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/13/24 10:40:27.376
  Jun 13 10:40:27.376: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename watch @ 06/13/24 10:40:27.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:40:27.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:40:27.389
  STEP: creating a new configmap @ 06/13/24 10:40:27.393
  STEP: modifying the configmap once @ 06/13/24 10:40:27.396
  STEP: modifying the configmap a second time @ 06/13/24 10:40:27.404
  STEP: deleting the configmap @ 06/13/24 10:40:27.411
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/13/24 10:40:27.416
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/13/24 10:40:27.417
  Jun 13 10:40:27.417: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6968  1b67660d-abf3-46f0-b1e6-a3e83dd31af6 10601 0 2024-06-13 10:40:27 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-13 10:40:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 10:40:27.418: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6968  1b67660d-abf3-46f0-b1e6-a3e83dd31af6 10603 0 2024-06-13 10:40:27 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-13 10:40:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 10:40:27.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6968" for this suite. @ 06/13/24 10:40:27.421
• [0.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/13/24 10:40:27.427
  Jun 13 10:40:27.427: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename chunking @ 06/13/24 10:40:27.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:40:27.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:40:27.44
  STEP: creating a large number of resources @ 06/13/24 10:40:27.443
  STEP: retrieving the first page @ 06/13/24 10:40:45.148
  Jun 13 10:40:45.183: INFO: Retrieved 40/40 results with rv 11069 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/13/24 10:40:45.183
  Jun 13 10:41:05.189: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:41:25.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:41:45.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:42:05.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:42:25.190: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:42:45.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:43:05.192: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:43:25.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:43:45.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:44:05.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:44:25.189: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:44:45.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:45:05.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:45:25.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:45:45.192: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:46:05.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:46:25.189: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:46:45.190: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:47:05.189: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:47:25.188: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:47:45.193: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:48:05.191: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:48:25.189: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:48:45.191: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEwNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 13 10:49:05.187: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun 13 10:49:05.187: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/13/24 10:49:05.187
  STEP: retrieving all remaining pages @ 06/13/24 10:49:05.191
  Jun 13 10:49:05.194: INFO: Retrieved 40/40 results with rv 11824 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MjQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jun 13 10:49:05.198: INFO: Retrieved 40/40 results with rv 11824 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jun 13 10:49:05.201: INFO: Retrieved 40/40 results with rv 11824 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MjQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jun 13 10:49:05.204: INFO: Retrieved 40/40 results with rv 11824 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MjQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jun 13 10:49:05.207: INFO: Retrieved 40/40 results with rv 11824 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MjQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jun 13 10:49:05.211: INFO: Retrieved 40/40 results with rv 11824 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MjQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jun 13 10:49:05.214: INFO: Retrieved 40/40 results with rv 11824 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MjQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jun 13 10:49:05.218: INFO: Retrieved 40/40 results with rv 11824 and continue 
  Jun 13 10:49:05.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1462" for this suite. @ 06/13/24 10:49:05.221
• [517.800 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/13/24 10:49:05.227
  Jun 13 10:49:05.227: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 10:49:05.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:49:05.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:49:05.25
  STEP: fetching the /apis discovery document @ 06/13/24 10:49:05.253
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/13/24 10:49:05.255
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/13/24 10:49:05.255
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/13/24 10:49:05.255
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/13/24 10:49:05.256
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/13/24 10:49:05.256
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/13/24 10:49:05.258
  Jun 13 10:49:05.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2947" for this suite. @ 06/13/24 10:49:05.261
• [0.038 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/13/24 10:49:05.266
  Jun 13 10:49:05.266: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename job @ 06/13/24 10:49:05.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:49:05.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:49:05.279
  STEP: Creating a job @ 06/13/24 10:49:05.282
  STEP: Ensuring job reaches completions @ 06/13/24 10:49:05.286
  Jun 13 10:49:15.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5071" for this suite. @ 06/13/24 10:49:15.294
• [10.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/13/24 10:49:15.3
  Jun 13 10:49:15.300: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/13/24 10:49:15.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:49:15.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:49:15.317
  STEP: getting /apis @ 06/13/24 10:49:15.321
  STEP: getting /apis/storage.k8s.io @ 06/13/24 10:49:15.326
  STEP: getting /apis/storage.k8s.io/v1 @ 06/13/24 10:49:15.327
  STEP: creating @ 06/13/24 10:49:15.329
  STEP: watching @ 06/13/24 10:49:15.341
  Jun 13 10:49:15.341: INFO: starting watch
  STEP: getting @ 06/13/24 10:49:15.348
  STEP: listing in namespace @ 06/13/24 10:49:15.35
  STEP: listing across namespaces @ 06/13/24 10:49:15.352
  STEP: patching @ 06/13/24 10:49:15.355
  STEP: updating @ 06/13/24 10:49:15.359
  Jun 13 10:49:15.364: INFO: waiting for watch events with expected annotations in namespace
  Jun 13 10:49:15.364: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/13/24 10:49:15.364
  STEP: deleting a collection @ 06/13/24 10:49:15.373
  Jun 13 10:49:15.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5039" for this suite. @ 06/13/24 10:49:15.385
• [0.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/13/24 10:49:15.39
  Jun 13 10:49:15.390: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:49:15.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:49:15.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:49:15.406
  STEP: Creating projection with secret that has name projected-secret-test-map-af99ad4d-3360-4f32-a76c-7028741f585f @ 06/13/24 10:49:15.409
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:49:15.413
  STEP: Saw pod success @ 06/13/24 10:49:19.428
  Jun 13 10:49:19.431: INFO: Trying to get logs from node 18.117.132.30 pod pod-projected-secrets-df2349fd-6a53-401a-9a64-dda8873bb712 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 10:49:19.438
  Jun 13 10:49:19.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-284" for this suite. @ 06/13/24 10:49:19.455
• [4.070 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/13/24 10:49:19.46
  Jun 13 10:49:19.460: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 10:49:19.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:49:19.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:49:19.474
  STEP: Creating a ReplaceConcurrent cronjob @ 06/13/24 10:49:19.477
  STEP: Ensuring a job is scheduled @ 06/13/24 10:49:19.481
  STEP: Ensuring exactly one is scheduled @ 06/13/24 10:50:01.485
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/13/24 10:50:01.488
  STEP: Ensuring the job is replaced with a new one @ 06/13/24 10:50:01.491
  STEP: Removing cronjob @ 06/13/24 10:51:01.494
  Jun 13 10:51:01.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5997" for this suite. @ 06/13/24 10:51:01.502
• [102.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/13/24 10:51:01.515
  Jun 13 10:51:01.515: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 10:51:01.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:01.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:01.535
  STEP: Creating a ResourceQuota @ 06/13/24 10:51:01.538
  STEP: Getting a ResourceQuota @ 06/13/24 10:51:01.543
  STEP: Updating a ResourceQuota @ 06/13/24 10:51:01.546
  STEP: Verifying a ResourceQuota was modified @ 06/13/24 10:51:01.553
  STEP: Deleting a ResourceQuota @ 06/13/24 10:51:01.555
  STEP: Verifying the deleted ResourceQuota @ 06/13/24 10:51:01.56
  Jun 13 10:51:01.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1989" for this suite. @ 06/13/24 10:51:01.566
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/13/24 10:51:01.573
  Jun 13 10:51:01.573: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 10:51:01.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:01.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:01.588
  STEP: Creating service test in namespace statefulset-1872 @ 06/13/24 10:51:01.591
  STEP: Looking for a node to schedule stateful set and pod @ 06/13/24 10:51:01.6
  STEP: Creating pod with conflicting port in namespace statefulset-1872 @ 06/13/24 10:51:01.604
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1872 @ 06/13/24 10:51:01.61
  STEP: Creating statefulset with conflicting port in namespace statefulset-1872 @ 06/13/24 10:51:03.617
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1872 @ 06/13/24 10:51:03.621
  Jun 13 10:51:03.632: INFO: Observed stateful pod in namespace: statefulset-1872, name: ss-0, uid: 619cb7df-0eff-4f53-8b70-65b401113b2b, status phase: Pending. Waiting for statefulset controller to delete.
  Jun 13 10:51:03.647: INFO: Observed stateful pod in namespace: statefulset-1872, name: ss-0, uid: 619cb7df-0eff-4f53-8b70-65b401113b2b, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 13 10:51:03.652: INFO: Observed stateful pod in namespace: statefulset-1872, name: ss-0, uid: 619cb7df-0eff-4f53-8b70-65b401113b2b, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 13 10:51:03.658: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1872
  STEP: Removing pod with conflicting port in namespace statefulset-1872 @ 06/13/24 10:51:03.659
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1872 and will be in running state @ 06/13/24 10:51:03.672
  Jun 13 10:51:05.681: INFO: Deleting all statefulset in ns statefulset-1872
  Jun 13 10:51:05.684: INFO: Scaling statefulset ss to 0
  Jun 13 10:51:15.695: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 10:51:15.698: INFO: Deleting statefulset ss
  Jun 13 10:51:15.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1872" for this suite. @ 06/13/24 10:51:15.709
• [14.143 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/13/24 10:51:15.716
  Jun 13 10:51:15.717: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 10:51:15.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:15.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:15.731
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/13/24 10:51:15.734
  Jun 13 10:51:15.742: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4062  6eda6631-1d1b-49f4-88b1-1b429bb0a597 12744 0 2024-06-13 10:51:15 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-13 10:51:15 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-57npz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-57npz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/13/24 10:51:19.751
  Jun 13 10:51:19.751: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4062 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:51:19.751: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:51:19.752: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:51:19.752: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-4062/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/13/24 10:51:19.864
  Jun 13 10:51:19.864: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4062 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:51:19.864: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:51:19.865: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:51:19.865: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-4062/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 10:51:19.966: INFO: Deleting pod test-dns-nameservers...
  Jun 13 10:51:19.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4062" for this suite. @ 06/13/24 10:51:19.982
• [4.272 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/13/24 10:51:19.992
  Jun 13 10:51:19.992: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 10:51:19.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:20.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:20.007
  STEP: Creating a pod to test substitution in container's args @ 06/13/24 10:51:20.01
  STEP: Saw pod success @ 06/13/24 10:51:24.025
  Jun 13 10:51:24.028: INFO: Trying to get logs from node 18.117.161.199 pod var-expansion-a7c1a13c-9ef3-43fb-8067-8039d5e9b838 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 10:51:24.034
  Jun 13 10:51:24.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4423" for this suite. @ 06/13/24 10:51:24.051
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/13/24 10:51:24.058
  Jun 13 10:51:24.058: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 10:51:24.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:24.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:24.07
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 10:51:24.074
  Jun 13 10:51:24.074: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-3438 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun 13 10:51:24.153: INFO: stderr: ""
  Jun 13 10:51:24.153: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/13/24 10:51:24.153
  Jun 13 10:51:24.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-3438 delete pods e2e-test-httpd-pod'
  Jun 13 10:51:25.765: INFO: stderr: ""
  Jun 13 10:51:25.765: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 13 10:51:25.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3438" for this suite. @ 06/13/24 10:51:25.769
• [1.719 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/13/24 10:51:25.777
  Jun 13 10:51:25.777: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:51:25.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:25.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:25.789
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 10:51:25.794
  STEP: Saw pod success @ 06/13/24 10:51:29.814
  Jun 13 10:51:29.816: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-4b620fd8-0846-4e5d-896a-806d071dccdb container client-container: <nil>
  STEP: delete the pod @ 06/13/24 10:51:29.825
  Jun 13 10:51:29.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3847" for this suite. @ 06/13/24 10:51:29.84
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/13/24 10:51:29.844
  Jun 13 10:51:29.844: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:51:29.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:29.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:29.859
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 10:51:29.863
  STEP: Saw pod success @ 06/13/24 10:51:33.88
  Jun 13 10:51:33.883: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-23e10d74-3eb8-4352-990b-78aaf8289dcd container client-container: <nil>
  STEP: delete the pod @ 06/13/24 10:51:33.892
  Jun 13 10:51:33.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2958" for this suite. @ 06/13/24 10:51:33.909
• [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/13/24 10:51:33.916
  Jun 13 10:51:33.916: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 10:51:33.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:33.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:33.93
  STEP: creating a Deployment @ 06/13/24 10:51:33.936
  STEP: waiting for Deployment to be created @ 06/13/24 10:51:33.942
  STEP: waiting for all Replicas to be Ready @ 06/13/24 10:51:33.943
  Jun 13 10:51:33.945: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:33.945: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:33.960: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:33.960: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:33.970: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:33.970: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:34.002: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:34.002: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 10:51:34.858: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 13 10:51:34.858: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 13 10:51:35.199: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/13/24 10:51:35.199
  Jun 13 10:51:35.213: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/13/24 10:51:35.213
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 0
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.215: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.216: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.216: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.224: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.224: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.242: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.242: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:35.251: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:35.251: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:35.262: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:35.262: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:38.477: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:38.477: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:38.499: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  STEP: listing Deployments @ 06/13/24 10:51:38.499
  Jun 13 10:51:38.503: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/13/24 10:51:38.503
  Jun 13 10:51:38.517: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/13/24 10:51:38.517
  Jun 13 10:51:38.523: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:38.524: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:38.543: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:38.559: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:38.568: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:39.919: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:39.934: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:39.944: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:39.950: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:39.956: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 10:51:41.295: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/13/24 10:51:41.314
  STEP: fetching the DeploymentStatus @ 06/13/24 10:51:41.324
  Jun 13 10:51:41.332: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:41.332: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:41.332: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:41.332: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:41.332: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 1
  Jun 13 10:51:41.332: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:41.333: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:41.333: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:41.333: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:41.333: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 2
  Jun 13 10:51:41.333: INFO: observed Deployment test-deployment in namespace deployment-1445 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/13/24 10:51:41.333
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.340: INFO: observed event type MODIFIED
  Jun 13 10:51:41.341: INFO: observed event type MODIFIED
  Jun 13 10:51:41.341: INFO: observed event type MODIFIED
  Jun 13 10:51:41.341: INFO: observed event type MODIFIED
  Jun 13 10:51:41.341: INFO: observed event type MODIFIED
  Jun 13 10:51:41.341: INFO: observed event type MODIFIED
  Jun 13 10:51:41.343: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun 13 10:51:41.347: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3f59f74-4cfb-4261-a531-72f88dbfde19",
      ResourceVersion: (string) (len=5) "13075",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "eddf8882-1b51-456f-ab41-5d98ce84a3b3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 64 64 66  38 38 38 32 2d 31 62 35  |":\"eddf8882-1b5|
              00000130  31 2d 34 35 36 66 2d 61  62 34 31 2d 35 64 39 38  |1-456f-ab41-5d98|
              00000140  63 65 38 34 61 33 62 33  5c 22 7d 22 3a 7b 7d 7d  |ce84a3b3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 13 10:51:41.354: INFO: pod: "test-deployment-64fd565c98-l8prz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-l8prz",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7651657d-477a-4892-a77f-473043ca2670",
      ResourceVersion: (string) (len=5) "13069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "60fa1d6b67544b5d990a79a939f2e384cadd58f7828023df20603aba61ebcc9c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "e3f59f74-4cfb-4261-a531-72f88dbfde19",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 33 66 35 39 66 37 34  |uid\":\"e3f59f74|
              000000a0  2d 34 63 66 62 2d 34 32  36 31 2d 61 35 33 31 2d  |-4cfb-4261-a531-|
              000000b0  37 32 66 38 38 64 62 66  64 65 31 39 5c 22 7d 22  |72f88dbfde19\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 35  5c 22 7d 22 3a 7b 22 2e  |.42.1.15\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g99ns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g99ns",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.216.152.151",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872695,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.66"
        }
      },
      PodIP: (string) (len=10) "10.42.1.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872695,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853872697,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=111) "docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=73) "docker://c76d5af8cd91f1f3fddd7c373ce2cf484ee955e01a8c4397f29183e4be51105b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 13 10:51:41.357: INFO: pod: "test-deployment-64fd565c98-v4qb4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-v4qb4",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e22be2f3-c9e7-4d63-8cc7-8d1d349cb1fd",
      ResourceVersion: (string) (len=5) "13059",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872701,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.42/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.42/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0867ddc13ad90ddf222ce6aac006b7c309d46661315236dd6296f7063b84a090"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "e3f59f74-4cfb-4261-a531-72f88dbfde19",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 33 66 35 39 66 37 34  |uid\":\"e3f59f74|
              000000a0  2d 34 63 66 62 2d 34 32  36 31 2d 61 35 33 31 2d  |-4cfb-4261-a531-|
              000000b0  37 32 66 38 38 64 62 66  64 65 31 39 5c 22 7d 22  |72f88dbfde19\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 34 32  5c 22 7d 22 3a 7b 22 2e  |.42.0.42\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vmzsh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vmzsh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=10) "10.42.0.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853872699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=111) "docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=73) "docker://7a966639d84fb8b21accb08f956506f735f4d87b2167a0fb41da56f1ca869328",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 13 10:51:41.359: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f66355b-8603-4ad7-9fae-d66d32020861",
      ResourceVersion: (string) (len=5) "13067",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "eddf8882-1b51-456f-ab41-5d98ce84a3b3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 64 64 66  38 38 38 32 2d 31 62 35  |":\"eddf8882-1b5|
              00000130  31 2d 34 35 36 66 2d 61  62 34 31 2d 35 64 39 38  |1-456f-ab41-5d98|
              00000140  63 65 38 34 61 33 62 33  5c 22 7d 22 3a 7b 7d 7d  |ce84a3b3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 13 10:51:41.368: INFO: pod: "test-deployment-79ff746c4-7rrwx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-7rrwx",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfc685a8-2c29-4460-8c2f-fce28e7e0b8c",
      ResourceVersion: (string) (len=5) "13084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9686a58f0cde293ec10e704dd1de845cfbd35dbda59f3e16b9f2ca8db4aa372c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "4f66355b-8603-4ad7-9fae-d66d32020861",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 66 36 36 33 35 35 62  |uid\":\"4f66355b|
              000000a0  2d 38 36 30 33 2d 34 61  64 37 2d 39 66 61 65 2d  |-8603-4ad7-9fae-|
              000000b0  64 36 36 64 33 32 30 32  30 38 36 31 5c 22 7d 22  |d66d32020861\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 34 36  5c 22 7d 22 3a 7b 22 2e  |.42.2.46\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f2pb4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f2pb4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=10) "10.42.2.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853872699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://4be3db4fdeaa30487c06be4cfb88563e47ba911756a8d59541ed21f9504b02e7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 13 10:51:41.372: INFO: pod: "test-deployment-79ff746c4-h7g76":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-h7g76",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c61d6ffc-9a57-474f-b875-02fdd1c4bf3b",
      ResourceVersion: (string) (len=5) "13066",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.43/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "88504efee900ea32b14980beeac6c77cb34fc77e72e88a165f8b04407c71d9d4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "4f66355b-8603-4ad7-9fae-d66d32020861",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 66 36 36 33 35 35 62  |uid\":\"4f66355b|
              000000a0  2d 38 36 30 33 2d 34 61  64 37 2d 39 66 61 65 2d  |-8603-4ad7-9fae-|
              000000b0  64 36 36 64 33 32 30 32  30 38 36 31 5c 22 7d 22  |d66d32020861\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 34 33  5c 22 7d 22 3a 7b 22 2e  |.42.0.43\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w5fsx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w5fsx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=10) "10.42.0.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853872700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://bf62b1a85a2609245f5c3cba5694ccea68b632f9ff7ac6eba58487f77c3c0093",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 13 10:51:41.379: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1445",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fe79866-524e-455a-b09b-1e820aded3a1",
      ResourceVersion: (string) (len=5) "12988",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "eddf8882-1b51-456f-ab41-5d98ce84a3b3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 64 64 66  38 38 38 32 2d 31 62 35  |":\"eddf8882-1b5|
              00000130  31 2d 34 35 36 66 2d 61  62 34 31 2d 35 64 39 38  |1-456f-ab41-5d98|
              00000140  63 65 38 34 61 33 62 33  5c 22 7d 22 3a 7b 7d 7d  |ce84a3b3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 13 10:51:41.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1445" for this suite. @ 06/13/24 10:51:41.391
• [7.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/13/24 10:51:41.401
  Jun 13 10:51:41.402: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 10:51:41.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:41.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:41.431
  STEP: Creating configMap with name cm-test-opt-del-2c0c44c8-65e3-46a6-b5a6-4e1f61788bf5 @ 06/13/24 10:51:41.446
  STEP: Creating configMap with name cm-test-opt-upd-e1b38e81-f600-4097-b069-6338832a1f75 @ 06/13/24 10:51:41.453
  STEP: Creating the pod @ 06/13/24 10:51:41.478
  STEP: Deleting configmap cm-test-opt-del-2c0c44c8-65e3-46a6-b5a6-4e1f61788bf5 @ 06/13/24 10:51:43.565
  STEP: Updating configmap cm-test-opt-upd-e1b38e81-f600-4097-b069-6338832a1f75 @ 06/13/24 10:51:43.569
  STEP: Creating configMap with name cm-test-opt-create-7fc8601d-3611-474b-8f14-8f81e1ed6bd4 @ 06/13/24 10:51:43.573
  STEP: waiting to observe update in volume @ 06/13/24 10:51:43.579
  Jun 13 10:51:45.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9608" for this suite. @ 06/13/24 10:51:45.608
• [4.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/13/24 10:51:45.614
  Jun 13 10:51:45.614: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 10:51:45.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:45.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:45.63
  STEP: apply creating a deployment @ 06/13/24 10:51:45.633
  Jun 13 10:51:45.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2015" for this suite. @ 06/13/24 10:51:45.647
• [0.038 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/13/24 10:51:45.653
  Jun 13 10:51:45.653: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename disruption @ 06/13/24 10:51:45.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:45.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:45.672
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:51:45.679
  STEP: Updating PodDisruptionBudget status @ 06/13/24 10:51:47.683
  STEP: Waiting for all pods to be running @ 06/13/24 10:51:47.689
  Jun 13 10:51:47.692: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 06/13/24 10:51:49.695
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:51:49.704
  STEP: Patching PodDisruptionBudget status @ 06/13/24 10:51:49.709
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:51:49.716
  Jun 13 10:51:49.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-615" for this suite. @ 06/13/24 10:51:49.722
• [4.074 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/13/24 10:51:49.727
  Jun 13 10:51:49.727: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 10:51:49.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:49.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:49.74
  STEP: creating the pod @ 06/13/24 10:51:49.745
  STEP: submitting the pod to kubernetes @ 06/13/24 10:51:49.745
  STEP: verifying QOS class is set on the pod @ 06/13/24 10:51:49.752
  Jun 13 10:51:49.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8061" for this suite. @ 06/13/24 10:51:49.759
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/13/24 10:51:49.765
  Jun 13 10:51:49.765: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 10:51:49.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:49.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:49.78
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/13/24 10:51:49.783
  STEP: Saw pod success @ 06/13/24 10:51:53.801
  Jun 13 10:51:53.804: INFO: Trying to get logs from node 18.117.161.199 pod pod-a35045b2-7fbc-40e0-8a78-b86a4656c811 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 10:51:53.811
  Jun 13 10:51:53.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3313" for this suite. @ 06/13/24 10:51:53.824
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/13/24 10:51:53.83
  Jun 13 10:51:53.830: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 10:51:53.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:51:53.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:51:53.846
  STEP: Counting existing ResourceQuota @ 06/13/24 10:51:53.849
  STEP: Creating a ResourceQuota @ 06/13/24 10:51:58.853
  STEP: Ensuring resource quota status is calculated @ 06/13/24 10:51:58.86
  STEP: Creating a Service @ 06/13/24 10:52:00.864
  STEP: Creating a NodePort Service @ 06/13/24 10:52:00.879
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/13/24 10:52:00.897
  STEP: Ensuring resource quota status captures service creation @ 06/13/24 10:52:00.914
  STEP: Deleting Services @ 06/13/24 10:52:02.918
  STEP: Ensuring resource quota status released usage @ 06/13/24 10:52:02.944
  Jun 13 10:52:04.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1448" for this suite. @ 06/13/24 10:52:04.951
• [11.127 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/13/24 10:52:04.958
  Jun 13 10:52:04.958: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/13/24 10:52:04.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:52:04.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:52:04.972
  STEP: Setting up the test @ 06/13/24 10:52:04.975
  STEP: Creating hostNetwork=false pod @ 06/13/24 10:52:04.975
  STEP: Creating hostNetwork=true pod @ 06/13/24 10:52:06.992
  STEP: Running the test @ 06/13/24 10:52:09.008
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/13/24 10:52:09.008
  Jun 13 10:52:09.008: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.008: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.009: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.009: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 13 10:52:09.098: INFO: Exec stderr: ""
  Jun 13 10:52:09.098: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.098: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.099: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.099: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 13 10:52:09.186: INFO: Exec stderr: ""
  Jun 13 10:52:09.186: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.186: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.188: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.188: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 10:52:09.270: INFO: Exec stderr: ""
  Jun 13 10:52:09.270: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.270: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.270: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.271: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 10:52:09.358: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/13/24 10:52:09.359
  Jun 13 10:52:09.359: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.359: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.360: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.360: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 13 10:52:09.446: INFO: Exec stderr: ""
  Jun 13 10:52:09.446: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.446: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.447: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.447: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 13 10:52:09.534: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/13/24 10:52:09.534
  Jun 13 10:52:09.534: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.534: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.534: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.535: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 13 10:52:09.621: INFO: Exec stderr: ""
  Jun 13 10:52:09.622: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.622: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.622: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.622: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 13 10:52:09.710: INFO: Exec stderr: ""
  Jun 13 10:52:09.710: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.710: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.710: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.710: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 10:52:09.797: INFO: Exec stderr: ""
  Jun 13 10:52:09.797: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3480 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 10:52:09.797: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 10:52:09.798: INFO: ExecWithOptions: Clientset creation
  Jun 13 10:52:09.798: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3480/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 10:52:09.881: INFO: Exec stderr: ""
  Jun 13 10:52:09.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3480" for this suite. @ 06/13/24 10:52:09.885
• [4.933 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/13/24 10:52:09.891
  Jun 13 10:52:09.891: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename job @ 06/13/24 10:52:09.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:52:09.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:52:09.904
  STEP: Creating Indexed job @ 06/13/24 10:52:09.907
  STEP: Ensuring job reaches completions @ 06/13/24 10:52:09.913
  STEP: Ensuring pods with index for job exist @ 06/13/24 10:52:19.917
  Jun 13 10:52:19.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1586" for this suite. @ 06/13/24 10:52:19.923
• [10.036 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/13/24 10:52:19.928
  Jun 13 10:52:19.928: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:52:19.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:52:19.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:52:19.943
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-95424fba-b851-4d28-8f59-a8db702505ea @ 06/13/24 10:52:19.949
  STEP: Creating the pod @ 06/13/24 10:52:19.953
  STEP: Updating configmap projected-configmap-test-upd-95424fba-b851-4d28-8f59-a8db702505ea @ 06/13/24 10:52:21.975
  STEP: waiting to observe update in volume @ 06/13/24 10:52:21.979
  Jun 13 10:52:23.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4139" for this suite. @ 06/13/24 10:52:23.997
• [4.074 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/13/24 10:52:24.002
  Jun 13 10:52:24.002: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 10:52:24.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:52:24.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:52:24.016
  STEP: Setting up server cert @ 06/13/24 10:52:24.034
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 10:52:24.796
  STEP: Deploying the webhook pod @ 06/13/24 10:52:24.806
  STEP: Wait for the deployment to be ready @ 06/13/24 10:52:24.818
  Jun 13 10:52:24.823: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 10:52:26.832
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 10:52:26.84
  Jun 13 10:52:27.841: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/13/24 10:52:27.846
  STEP: create a pod that should be updated by the webhook @ 06/13/24 10:52:27.861
  Jun 13 10:52:27.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1911" for this suite. @ 06/13/24 10:52:27.919
  STEP: Destroying namespace "webhook-markers-5184" for this suite. @ 06/13/24 10:52:27.923
• [3.925 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/13/24 10:52:27.928
  Jun 13 10:52:27.928: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename proxy @ 06/13/24 10:52:27.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:52:27.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:52:27.942
  STEP: starting an echo server on multiple ports @ 06/13/24 10:52:27.952
  STEP: creating replication controller proxy-service-xh79b in namespace proxy-8631 @ 06/13/24 10:52:27.953
  I0613 10:52:27.960483      23 runners.go:197] Created replication controller with name: proxy-service-xh79b, namespace: proxy-8631, replica count: 1
  I0613 10:52:29.012553      23 runners.go:197] proxy-service-xh79b Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 10:52:30.013115      23 runners.go:197] proxy-service-xh79b Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 10:52:30.016: INFO: setup took 2.071238411s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/13/24 10:52:30.016
  Jun 13 10:52:30.021: INFO: (0) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 5.017551ms)
  Jun 13 10:52:30.022: INFO: (0) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.813353ms)
  Jun 13 10:52:30.023: INFO: (0) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 6.403148ms)
  Jun 13 10:52:30.023: INFO: (0) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.523009ms)
  Jun 13 10:52:30.023: INFO: (0) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 6.654238ms)
  Jun 13 10:52:30.023: INFO: (0) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 6.763764ms)
  Jun 13 10:52:30.023: INFO: (0) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 7.215144ms)
  Jun 13 10:52:30.024: INFO: (0) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 7.036492ms)
  Jun 13 10:52:30.024: INFO: (0) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 7.220353ms)
  Jun 13 10:52:30.026: INFO: (0) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 10.011154ms)
  Jun 13 10:52:30.026: INFO: (0) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 10.271495ms)
  Jun 13 10:52:30.027: INFO: (0) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 10.32572ms)
  Jun 13 10:52:30.027: INFO: (0) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 10.273877ms)
  Jun 13 10:52:30.027: INFO: (0) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 10.383866ms)
  Jun 13 10:52:30.029: INFO: (0) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 13.002941ms)
  Jun 13 10:52:30.029: INFO: (0) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 13.084083ms)
  Jun 13 10:52:30.033: INFO: (1) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 3.384089ms)
  Jun 13 10:52:30.035: INFO: (1) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 5.849291ms)
  Jun 13 10:52:30.036: INFO: (1) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 5.983921ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 6.759097ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.762104ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 7.022342ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 6.819901ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 6.807933ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 7.10961ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 7.490484ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 7.253752ms)
  Jun 13 10:52:30.037: INFO: (1) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 7.1776ms)
  Jun 13 10:52:30.038: INFO: (1) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 8.111531ms)
  Jun 13 10:52:30.039: INFO: (1) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 9.263576ms)
  Jun 13 10:52:30.039: INFO: (1) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 9.417945ms)
  Jun 13 10:52:30.039: INFO: (1) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 9.407939ms)
  Jun 13 10:52:30.042: INFO: (2) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 2.90956ms)
  Jun 13 10:52:30.043: INFO: (2) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 2.990008ms)
  Jun 13 10:52:30.044: INFO: (2) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 4.28239ms)
  Jun 13 10:52:30.044: INFO: (2) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 4.577642ms)
  Jun 13 10:52:30.045: INFO: (2) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 4.915976ms)
  Jun 13 10:52:30.045: INFO: (2) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 5.185163ms)
  Jun 13 10:52:30.045: INFO: (2) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 5.163398ms)
  Jun 13 10:52:30.045: INFO: (2) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.611072ms)
  Jun 13 10:52:30.046: INFO: (2) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 5.995587ms)
  Jun 13 10:52:30.046: INFO: (2) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 6.302484ms)
  Jun 13 10:52:30.046: INFO: (2) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 6.419643ms)
  Jun 13 10:52:30.047: INFO: (2) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 7.227887ms)
  Jun 13 10:52:30.047: INFO: (2) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 7.125121ms)
  Jun 13 10:52:30.047: INFO: (2) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 6.919869ms)
  Jun 13 10:52:30.047: INFO: (2) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 6.972304ms)
  Jun 13 10:52:30.047: INFO: (2) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 7.686874ms)
  Jun 13 10:52:30.051: INFO: (3) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 3.127353ms)
  Jun 13 10:52:30.052: INFO: (3) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 3.90115ms)
  Jun 13 10:52:30.052: INFO: (3) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 4.20379ms)
  Jun 13 10:52:30.052: INFO: (3) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 4.191666ms)
  Jun 13 10:52:30.052: INFO: (3) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 4.209806ms)
  Jun 13 10:52:30.054: INFO: (3) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 6.702679ms)
  Jun 13 10:52:30.055: INFO: (3) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 6.851079ms)
  Jun 13 10:52:30.055: INFO: (3) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.127867ms)
  Jun 13 10:52:30.055: INFO: (3) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 7.451016ms)
  Jun 13 10:52:30.056: INFO: (3) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 7.606911ms)
  Jun 13 10:52:30.056: INFO: (3) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 8.016002ms)
  Jun 13 10:52:30.056: INFO: (3) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 8.22576ms)
  Jun 13 10:52:30.056: INFO: (3) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 8.333477ms)
  Jun 13 10:52:30.056: INFO: (3) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 8.453175ms)
  Jun 13 10:52:30.056: INFO: (3) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 8.375304ms)
  Jun 13 10:52:30.056: INFO: (3) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 8.427812ms)
  Jun 13 10:52:30.059: INFO: (4) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 2.918803ms)
  Jun 13 10:52:30.060: INFO: (4) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 3.404545ms)
  Jun 13 10:52:30.060: INFO: (4) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 3.764938ms)
  Jun 13 10:52:30.061: INFO: (4) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 4.177089ms)
  Jun 13 10:52:30.061: INFO: (4) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 5.11463ms)
  Jun 13 10:52:30.062: INFO: (4) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 5.037267ms)
  Jun 13 10:52:30.062: INFO: (4) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.184024ms)
  Jun 13 10:52:30.062: INFO: (4) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.072495ms)
  Jun 13 10:52:30.062: INFO: (4) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 5.01928ms)
  Jun 13 10:52:30.062: INFO: (4) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 5.064002ms)
  Jun 13 10:52:30.062: INFO: (4) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 6.180222ms)
  Jun 13 10:52:30.064: INFO: (4) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 7.515606ms)
  Jun 13 10:52:30.064: INFO: (4) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 7.242663ms)
  Jun 13 10:52:30.064: INFO: (4) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.129681ms)
  Jun 13 10:52:30.064: INFO: (4) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 7.323785ms)
  Jun 13 10:52:30.065: INFO: (4) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 7.486559ms)
  Jun 13 10:52:30.068: INFO: (5) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 3.29139ms)
  Jun 13 10:52:30.068: INFO: (5) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 3.231671ms)
  Jun 13 10:52:30.070: INFO: (5) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 4.998647ms)
  Jun 13 10:52:30.071: INFO: (5) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 4.867874ms)
  Jun 13 10:52:30.071: INFO: (5) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 5.667999ms)
  Jun 13 10:52:30.071: INFO: (5) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.193646ms)
  Jun 13 10:52:30.072: INFO: (5) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 5.784861ms)
  Jun 13 10:52:30.072: INFO: (5) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 6.482017ms)
  Jun 13 10:52:30.073: INFO: (5) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 7.510784ms)
  Jun 13 10:52:30.073: INFO: (5) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 6.970277ms)
  Jun 13 10:52:30.073: INFO: (5) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 7.785528ms)
  Jun 13 10:52:30.073: INFO: (5) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 7.470767ms)
  Jun 13 10:52:30.073: INFO: (5) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 7.059107ms)
  Jun 13 10:52:30.073: INFO: (5) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 7.443675ms)
  Jun 13 10:52:30.073: INFO: (5) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 8.016458ms)
  Jun 13 10:52:30.074: INFO: (5) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.993799ms)
  Jun 13 10:52:30.079: INFO: (6) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 4.675048ms)
  Jun 13 10:52:30.079: INFO: (6) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 5.165885ms)
  Jun 13 10:52:30.079: INFO: (6) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 4.853461ms)
  Jun 13 10:52:30.079: INFO: (6) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 5.467948ms)
  Jun 13 10:52:30.079: INFO: (6) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 4.922903ms)
  Jun 13 10:52:30.079: INFO: (6) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.507427ms)
  Jun 13 10:52:30.080: INFO: (6) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 5.413402ms)
  Jun 13 10:52:30.080: INFO: (6) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.914788ms)
  Jun 13 10:52:30.080: INFO: (6) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 6.409577ms)
  Jun 13 10:52:30.080: INFO: (6) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 5.85563ms)
  Jun 13 10:52:30.080: INFO: (6) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 5.648585ms)
  Jun 13 10:52:30.080: INFO: (6) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 5.769787ms)
  Jun 13 10:52:30.081: INFO: (6) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.353626ms)
  Jun 13 10:52:30.081: INFO: (6) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 6.295791ms)
  Jun 13 10:52:30.081: INFO: (6) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 6.657498ms)
  Jun 13 10:52:30.081: INFO: (6) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 6.584828ms)
  Jun 13 10:52:30.085: INFO: (7) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 3.18226ms)
  Jun 13 10:52:30.086: INFO: (7) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 4.37591ms)
  Jun 13 10:52:30.086: INFO: (7) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 4.301679ms)
  Jun 13 10:52:30.086: INFO: (7) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 4.864667ms)
  Jun 13 10:52:30.086: INFO: (7) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 5.053203ms)
  Jun 13 10:52:30.088: INFO: (7) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 5.542104ms)
  Jun 13 10:52:30.088: INFO: (7) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.853373ms)
  Jun 13 10:52:30.088: INFO: (7) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 5.946986ms)
  Jun 13 10:52:30.088: INFO: (7) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.035523ms)
  Jun 13 10:52:30.088: INFO: (7) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 5.814876ms)
  Jun 13 10:52:30.088: INFO: (7) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 5.888242ms)
  Jun 13 10:52:30.088: INFO: (7) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 6.381661ms)
  Jun 13 10:52:30.089: INFO: (7) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 6.370835ms)
  Jun 13 10:52:30.089: INFO: (7) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 6.420419ms)
  Jun 13 10:52:30.089: INFO: (7) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 7.134544ms)
  Jun 13 10:52:30.089: INFO: (7) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 6.580568ms)
  Jun 13 10:52:30.092: INFO: (8) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 3.170592ms)
  Jun 13 10:52:30.093: INFO: (8) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 3.5918ms)
  Jun 13 10:52:30.093: INFO: (8) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 3.574542ms)
  Jun 13 10:52:30.097: INFO: (8) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.533435ms)
  Jun 13 10:52:30.097: INFO: (8) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 7.828553ms)
  Jun 13 10:52:30.097: INFO: (8) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 7.984946ms)
  Jun 13 10:52:30.097: INFO: (8) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 7.663975ms)
  Jun 13 10:52:30.097: INFO: (8) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 7.378202ms)
  Jun 13 10:52:30.098: INFO: (8) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 7.800014ms)
  Jun 13 10:52:30.098: INFO: (8) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 8.046501ms)
  Jun 13 10:52:30.098: INFO: (8) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 8.139287ms)
  Jun 13 10:52:30.098: INFO: (8) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 8.35016ms)
  Jun 13 10:52:30.100: INFO: (8) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 10.318867ms)
  Jun 13 10:52:30.100: INFO: (8) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 10.622758ms)
  Jun 13 10:52:30.101: INFO: (8) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 11.086498ms)
  Jun 13 10:52:30.101: INFO: (8) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 10.908544ms)
  Jun 13 10:52:30.105: INFO: (9) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 3.378556ms)
  Jun 13 10:52:30.105: INFO: (9) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 3.657611ms)
  Jun 13 10:52:30.105: INFO: (9) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 3.619026ms)
  Jun 13 10:52:30.106: INFO: (9) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 4.313639ms)
  Jun 13 10:52:30.106: INFO: (9) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 3.967843ms)
  Jun 13 10:52:30.107: INFO: (9) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 5.1783ms)
  Jun 13 10:52:30.107: INFO: (9) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.152322ms)
  Jun 13 10:52:30.107: INFO: (9) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 6.280462ms)
  Jun 13 10:52:30.107: INFO: (9) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.260461ms)
  Jun 13 10:52:30.107: INFO: (9) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.798679ms)
  Jun 13 10:52:30.108: INFO: (9) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 6.284778ms)
  Jun 13 10:52:30.108: INFO: (9) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 6.887209ms)
  Jun 13 10:52:30.108: INFO: (9) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 7.207612ms)
  Jun 13 10:52:30.108: INFO: (9) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 6.725583ms)
  Jun 13 10:52:30.109: INFO: (9) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 7.078742ms)
  Jun 13 10:52:30.109: INFO: (9) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 6.863544ms)
  Jun 13 10:52:30.113: INFO: (10) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 3.873358ms)
  Jun 13 10:52:30.114: INFO: (10) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 4.932841ms)
  Jun 13 10:52:30.114: INFO: (10) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 5.153649ms)
  Jun 13 10:52:30.114: INFO: (10) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 4.960426ms)
  Jun 13 10:52:30.114: INFO: (10) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.28047ms)
  Jun 13 10:52:30.114: INFO: (10) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.581739ms)
  Jun 13 10:52:30.115: INFO: (10) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 4.762436ms)
  Jun 13 10:52:30.115: INFO: (10) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 6.470505ms)
  Jun 13 10:52:30.115: INFO: (10) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 5.764054ms)
  Jun 13 10:52:30.116: INFO: (10) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 6.363084ms)
  Jun 13 10:52:30.116: INFO: (10) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 5.948588ms)
  Jun 13 10:52:30.120: INFO: (10) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 11.072391ms)
  Jun 13 10:52:30.121: INFO: (10) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 11.070671ms)
  Jun 13 10:52:30.121: INFO: (10) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 11.191579ms)
  Jun 13 10:52:30.121: INFO: (10) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 11.274538ms)
  Jun 13 10:52:30.121: INFO: (10) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 11.666923ms)
  Jun 13 10:52:30.125: INFO: (11) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 3.594265ms)
  Jun 13 10:52:30.125: INFO: (11) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 3.87506ms)
  Jun 13 10:52:30.127: INFO: (11) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.386886ms)
  Jun 13 10:52:30.128: INFO: (11) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 6.255569ms)
  Jun 13 10:52:30.128: INFO: (11) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 6.377451ms)
  Jun 13 10:52:30.128: INFO: (11) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.808099ms)
  Jun 13 10:52:30.128: INFO: (11) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.770094ms)
  Jun 13 10:52:30.128: INFO: (11) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.617215ms)
  Jun 13 10:52:30.129: INFO: (11) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 6.405614ms)
  Jun 13 10:52:30.129: INFO: (11) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 7.066166ms)
  Jun 13 10:52:30.130: INFO: (11) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 8.540885ms)
  Jun 13 10:52:30.130: INFO: (11) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 8.377425ms)
  Jun 13 10:52:30.130: INFO: (11) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 8.067425ms)
  Jun 13 10:52:30.130: INFO: (11) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 8.596657ms)
  Jun 13 10:52:30.130: INFO: (11) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 8.623812ms)
  Jun 13 10:52:30.130: INFO: (11) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 8.799469ms)
  Jun 13 10:52:30.135: INFO: (12) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 3.92317ms)
  Jun 13 10:52:30.135: INFO: (12) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 3.571523ms)
  Jun 13 10:52:30.135: INFO: (12) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 3.556302ms)
  Jun 13 10:52:30.135: INFO: (12) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 4.236929ms)
  Jun 13 10:52:30.136: INFO: (12) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 4.551804ms)
  Jun 13 10:52:30.136: INFO: (12) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.046398ms)
  Jun 13 10:52:30.137: INFO: (12) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 5.860995ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 5.913529ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 6.500386ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 5.868206ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 6.832467ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 6.113571ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 6.050958ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 6.777813ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 6.613769ms)
  Jun 13 10:52:30.138: INFO: (12) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.339745ms)
  Jun 13 10:52:30.142: INFO: (13) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 3.306809ms)
  Jun 13 10:52:30.144: INFO: (13) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 5.6732ms)
  Jun 13 10:52:30.144: INFO: (13) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 5.542973ms)
  Jun 13 10:52:30.145: INFO: (13) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.737739ms)
  Jun 13 10:52:30.145: INFO: (13) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 6.428178ms)
  Jun 13 10:52:30.145: INFO: (13) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 6.704434ms)
  Jun 13 10:52:30.145: INFO: (13) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 6.106545ms)
  Jun 13 10:52:30.145: INFO: (13) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 6.339057ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 6.620762ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 6.99084ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 7.324472ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.939782ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 7.162474ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.855009ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 7.824235ms)
  Jun 13 10:52:30.146: INFO: (13) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.812423ms)
  Jun 13 10:52:30.152: INFO: (14) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.244177ms)
  Jun 13 10:52:30.152: INFO: (14) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 4.905275ms)
  Jun 13 10:52:30.152: INFO: (14) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 5.131447ms)
  Jun 13 10:52:30.152: INFO: (14) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 5.986957ms)
  Jun 13 10:52:30.152: INFO: (14) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 4.782555ms)
  Jun 13 10:52:30.152: INFO: (14) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 5.944311ms)
  Jun 13 10:52:30.153: INFO: (14) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 5.649819ms)
  Jun 13 10:52:30.153: INFO: (14) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 4.914608ms)
  Jun 13 10:52:30.153: INFO: (14) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 6.199643ms)
  Jun 13 10:52:30.154: INFO: (14) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 6.563142ms)
  Jun 13 10:52:30.154: INFO: (14) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 6.702928ms)
  Jun 13 10:52:30.154: INFO: (14) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 7.636454ms)
  Jun 13 10:52:30.155: INFO: (14) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 7.307492ms)
  Jun 13 10:52:30.155: INFO: (14) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 7.222986ms)
  Jun 13 10:52:30.155: INFO: (14) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 8.070991ms)
  Jun 13 10:52:30.155: INFO: (14) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 7.831468ms)
  Jun 13 10:52:30.164: INFO: (15) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 8.144834ms)
  Jun 13 10:52:30.164: INFO: (15) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 8.70117ms)
  Jun 13 10:52:30.164: INFO: (15) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 9.181701ms)
  Jun 13 10:52:30.164: INFO: (15) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 8.177928ms)
  Jun 13 10:52:30.164: INFO: (15) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 9.08181ms)
  Jun 13 10:52:30.164: INFO: (15) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 8.527244ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 8.624965ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 9.351808ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 8.919211ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 8.66904ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 9.18383ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 9.377607ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 9.644315ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 9.262883ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 10.186662ms)
  Jun 13 10:52:30.165: INFO: (15) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 9.323407ms)
  Jun 13 10:52:30.170: INFO: (16) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 3.441812ms)
  Jun 13 10:52:30.170: INFO: (16) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 3.8147ms)
  Jun 13 10:52:30.170: INFO: (16) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 4.128352ms)
  Jun 13 10:52:30.172: INFO: (16) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 4.919388ms)
  Jun 13 10:52:30.172: INFO: (16) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.720247ms)
  Jun 13 10:52:30.173: INFO: (16) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 6.149933ms)
  Jun 13 10:52:30.173: INFO: (16) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 6.372765ms)
  Jun 13 10:52:30.173: INFO: (16) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 6.314787ms)
  Jun 13 10:52:30.174: INFO: (16) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 6.588776ms)
  Jun 13 10:52:30.174: INFO: (16) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.607468ms)
  Jun 13 10:52:30.174: INFO: (16) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 7.368477ms)
  Jun 13 10:52:30.174: INFO: (16) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 6.739375ms)
  Jun 13 10:52:30.174: INFO: (16) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 7.99309ms)
  Jun 13 10:52:30.174: INFO: (16) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 8.515424ms)
  Jun 13 10:52:30.174: INFO: (16) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 7.449305ms)
  Jun 13 10:52:30.175: INFO: (16) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 7.852618ms)
  Jun 13 10:52:30.181: INFO: (17) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 6.72434ms)
  Jun 13 10:52:30.182: INFO: (17) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.953093ms)
  Jun 13 10:52:30.182: INFO: (17) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 7.001144ms)
  Jun 13 10:52:30.182: INFO: (17) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 7.516589ms)
  Jun 13 10:52:30.183: INFO: (17) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 7.555674ms)
  Jun 13 10:52:30.183: INFO: (17) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 7.527777ms)
  Jun 13 10:52:30.183: INFO: (17) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 7.428954ms)
  Jun 13 10:52:30.183: INFO: (17) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 7.87608ms)
  Jun 13 10:52:30.183: INFO: (17) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 7.625169ms)
  Jun 13 10:52:30.183: INFO: (17) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 7.987946ms)
  Jun 13 10:52:30.183: INFO: (17) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 7.639932ms)
  Jun 13 10:52:30.184: INFO: (17) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 8.655483ms)
  Jun 13 10:52:30.185: INFO: (17) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 9.354553ms)
  Jun 13 10:52:30.185: INFO: (17) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 9.163155ms)
  Jun 13 10:52:30.185: INFO: (17) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 9.409532ms)
  Jun 13 10:52:30.186: INFO: (17) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 10.053075ms)
  Jun 13 10:52:30.191: INFO: (18) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.190676ms)
  Jun 13 10:52:30.191: INFO: (18) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 5.195634ms)
  Jun 13 10:52:30.191: INFO: (18) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 4.841751ms)
  Jun 13 10:52:30.191: INFO: (18) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 4.508751ms)
  Jun 13 10:52:30.191: INFO: (18) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 4.831667ms)
  Jun 13 10:52:30.191: INFO: (18) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 5.566708ms)
  Jun 13 10:52:30.192: INFO: (18) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 5.117509ms)
  Jun 13 10:52:30.192: INFO: (18) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 5.631208ms)
  Jun 13 10:52:30.192: INFO: (18) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 5.635606ms)
  Jun 13 10:52:30.192: INFO: (18) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 5.90062ms)
  Jun 13 10:52:30.193: INFO: (18) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 7.134989ms)
  Jun 13 10:52:30.193: INFO: (18) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.019455ms)
  Jun 13 10:52:30.193: INFO: (18) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 6.656703ms)
  Jun 13 10:52:30.194: INFO: (18) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 6.959937ms)
  Jun 13 10:52:30.193: INFO: (18) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 7.377105ms)
  Jun 13 10:52:30.193: INFO: (18) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 6.836983ms)
  Jun 13 10:52:30.200: INFO: (19) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:462/proxy/: tls qux (200; 6.575454ms)
  Jun 13 10:52:30.201: INFO: (19) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 6.636102ms)
  Jun 13 10:52:30.201: INFO: (19) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 6.714449ms)
  Jun 13 10:52:30.201: INFO: (19) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">test<... (200; 7.451279ms)
  Jun 13 10:52:30.201: INFO: (19) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:162/proxy/: bar (200; 7.549414ms)
  Jun 13 10:52:30.201: INFO: (19) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:443/proxy/tlsrewritem... (200; 7.072713ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/http:proxy-service-xh79b-dvg8w:1080/proxy/rewriteme">... (200; 7.762804ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname1/proxy/: tls baz (200; 7.909115ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w:160/proxy/: foo (200; 7.650775ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname1/proxy/: foo (200; 7.801359ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/services/https:proxy-service-xh79b:tlsportname2/proxy/: tls qux (200; 8.063422ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/services/proxy-service-xh79b:portname2/proxy/: bar (200; 7.997311ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/: <a href="/api/v1/namespaces/proxy-8631/pods/proxy-service-xh79b-dvg8w/proxy/rewriteme">test</a> (200; 8.124209ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname1/proxy/: foo (200; 8.046068ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/services/http:proxy-service-xh79b:portname2/proxy/: bar (200; 7.955402ms)
  Jun 13 10:52:30.202: INFO: (19) /api/v1/namespaces/proxy-8631/pods/https:proxy-service-xh79b-dvg8w:460/proxy/: tls baz (200; 8.252174ms)
  STEP: deleting ReplicationController proxy-service-xh79b in namespace proxy-8631, will wait for the garbage collector to delete the pods @ 06/13/24 10:52:30.202
  Jun 13 10:52:30.259: INFO: Deleting ReplicationController proxy-service-xh79b took: 4.580771ms
  Jun 13 10:52:30.360: INFO: Terminating ReplicationController proxy-service-xh79b pods took: 100.691736ms
  Jun 13 10:52:32.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8631" for this suite. @ 06/13/24 10:52:32.965
• [5.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/13/24 10:52:32.973
  Jun 13 10:52:32.973: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 10:52:32.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:52:32.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:52:32.994
  STEP: creating service multiprotocol-test in namespace services-1131 @ 06/13/24 10:52:32.999
  STEP: creating pod pod1 in namespace services-1131 @ 06/13/24 10:52:33.01
  STEP: Creating pod pod1 in namespace services-1131 @ 06/13/24 10:52:33.01
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1131 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/13/24 10:52:35.033
  Jun 13 10:52:35.041: INFO: successfully validated that service multiprotocol-test in namespace services-1131 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/13/24 10:52:35.041
  Jun 13 10:52:35.041: INFO: Creating new exec pod
  Jun 13 10:52:37.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80'
  Jun 13 10:52:37.205: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.96.48 80\nConnection to 10.43.96.48 80 port [tcp/http] succeeded!\n"
  Jun 13 10:52:37.205: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 10:52:37.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.96.48 80'
  Jun 13 10:52:41.354: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.96.48 80\nConnection to 10.43.96.48 80 port [udp/*] succeeded!\n"
  Jun 13 10:52:41.354: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/13/24 10:52:41.354
  Jun 13 10:52:41.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80'
  Jun 13 10:52:41.516: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.96.48 80\nConnection to 10.43.96.48 80 port [tcp/http] succeeded!\n"
  Jun 13 10:52:41.516: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 10:52:41.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.96.48 80'
  Jun 13 10:52:45.661: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.96.48 80\nConnection to 10.43.96.48 80 port [udp/*] succeeded!\n"
  Jun 13 10:52:45.661: INFO: stdout: ""
  Jun 13 10:52:45.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.96.48 80'
  Jun 13 10:52:49.813: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.96.48 80\nConnection to 10.43.96.48 80 port [udp/*] succeeded!\n"
  Jun 13 10:52:49.813: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/13/24 10:52:49.814
  Jun 13 10:52:49.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.96.48 80'
  Jun 13 10:52:53.988: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.96.48 80\nConnection to 10.43.96.48 80 port [udp/*] succeeded!\n"
  Jun 13 10:52:53.988: INFO: stdout: "pod1"
  Jun 13 10:52:53.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80'
  Jun 13 10:52:56.134: INFO: rc: 1
  Jun 13 10:52:56.134: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.96.48 80
  nc: connect to 10.43.96.48 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 10:52:56.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80'
  Jun 13 10:52:58.286: INFO: rc: 1
  Jun 13 10:52:58.286: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.96.48 80
  nc: connect to 10.43.96.48 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 10:52:58.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80'
  Jun 13 10:53:00.430: INFO: rc: 1
  Jun 13 10:53:00.430: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1131 exec execpodtjxrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.96.48 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.96.48 80
  nc: connect to 10.43.96.48 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 10:53:00.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1131" for this suite. @ 06/13/24 10:53:00.434
• [27.465 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/13/24 10:53:00.439
  Jun 13 10:53:00.439: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 10:53:00.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:00.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:00.454
  STEP: Creating simple DaemonSet "daemon-set" @ 06/13/24 10:53:00.472
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 10:53:00.478
  Jun 13 10:53:00.483: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:53:00.483: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:53:01.487: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:53:01.487: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:53:02.486: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 10:53:02.486: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/13/24 10:53:02.488
  STEP: DeleteCollection of the DaemonSets @ 06/13/24 10:53:02.491
  STEP: Verify that ReplicaSets have been deleted @ 06/13/24 10:53:02.498
  Jun 13 10:53:02.509: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13841"},"items":null}

  Jun 13 10:53:02.513: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13841"},"items":[{"metadata":{"name":"daemon-set-9c8pv","generateName":"daemon-set-","namespace":"daemonsets-4031","uid":"1aac2c1f-a192-4775-aaeb-118089691f84","resourceVersion":"13840","creationTimestamp":"2024-06-13T10:53:00Z","deletionTimestamp":"2024-06-13T10:53:32Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"aac4b7f06b04825e5c91fcd6abcedd334ed405377c3ec54b7ae7250e2fa4342b","cni.projectcalico.org/podIP":"10.42.0.48/32","cni.projectcalico.org/podIPs":"10.42.0.48/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0a1b8f9a-33b6-4735-88cd-76dedc269fe0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0a1b8f9a-33b6-4735-88cd-76dedc269fe0\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.48\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-62sdr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-62sdr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"18.117.161.199","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["18.117.161.199"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:00Z"}],"hostIP":"172.31.16.95","hostIPs":[{"ip":"172.31.16.95"}],"podIP":"10.42.0.48","podIPs":[{"ip":"10.42.0.48"}],"startTime":"2024-06-13T10:53:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-13T10:53:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://c5f85c67d907b3b7a92877c75698ddb49458c99f838a7ab9bb757e9fec4cf530","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-l6ln4","generateName":"daemon-set-","namespace":"daemonsets-4031","uid":"3c43aa4d-7c6d-494c-bc52-d410bbab2e40","resourceVersion":"13841","creationTimestamp":"2024-06-13T10:53:00Z","deletionTimestamp":"2024-06-13T10:53:32Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"3cee3cfb57c4103a956fdcc6946a1762e2214196ae748035dffaf8b692e15ba7","cni.projectcalico.org/podIP":"10.42.1.20/32","cni.projectcalico.org/podIPs":"10.42.1.20/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0a1b8f9a-33b6-4735-88cd-76dedc269fe0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0a1b8f9a-33b6-4735-88cd-76dedc269fe0\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.20\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hph5p","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hph5p","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"18.216.152.151","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["18.216.152.151"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:00Z"}],"hostIP":"172.31.29.66","hostIPs":[{"ip":"172.31.29.66"}],"podIP":"10.42.1.20","podIPs":[{"ip":"10.42.1.20"}],"startTime":"2024-06-13T10:53:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-13T10:53:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://e5cf22b71177d98584de250454a2c8b6a912a7a13fd5d5a67153dc8484d2cf04","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-trrpg","generateName":"daemon-set-","namespace":"daemonsets-4031","uid":"ad045aa4-7ba4-4b46-a9f9-55979b6d80ed","resourceVersion":"13839","creationTimestamp":"2024-06-13T10:53:00Z","deletionTimestamp":"2024-06-13T10:53:32Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"da92c69078ec10e7a77d84254b3f8ea8e0978558bb6acf2da7dd6bd19d5ebc1b","cni.projectcalico.org/podIP":"10.42.2.52/32","cni.projectcalico.org/podIPs":"10.42.2.52/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0a1b8f9a-33b6-4735-88cd-76dedc269fe0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0a1b8f9a-33b6-4735-88cd-76dedc269fe0\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-13T10:53:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.52\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2b65r","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2b65r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"18.117.132.30","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["18.117.132.30"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T10:53:00Z"}],"hostIP":"172.31.26.102","hostIPs":[{"ip":"172.31.26.102"}],"podIP":"10.42.2.52","podIPs":[{"ip":"10.42.2.52"}],"startTime":"2024-06-13T10:53:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-13T10:53:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://4dc86a4126e1023a6cd94749bbf01cedd8e46eff0da1a8002f710e87b656d2fd","started":true}],"qosClass":"BestEffort"}}]}

  Jun 13 10:53:02.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4031" for this suite. @ 06/13/24 10:53:02.531
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/13/24 10:53:02.537
  Jun 13 10:53:02.537: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename limitrange @ 06/13/24 10:53:02.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:02.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:02.558
  STEP: Creating LimitRange "e2e-limitrange-czmtz" in namespace "limitrange-8450" @ 06/13/24 10:53:02.561
  STEP: Creating another limitRange in another namespace @ 06/13/24 10:53:02.565
  Jun 13 10:53:02.576: INFO: Namespace "e2e-limitrange-czmtz-919" created
  Jun 13 10:53:02.576: INFO: Creating LimitRange "e2e-limitrange-czmtz" in namespace "e2e-limitrange-czmtz-919"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-czmtz" @ 06/13/24 10:53:02.58
  Jun 13 10:53:02.583: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-czmtz" in "limitrange-8450" namespace @ 06/13/24 10:53:02.583
  Jun 13 10:53:02.589: INFO: LimitRange "e2e-limitrange-czmtz" has been patched
  STEP: Delete LimitRange "e2e-limitrange-czmtz" by Collection with labelSelector: "e2e-limitrange-czmtz=patched" @ 06/13/24 10:53:02.589
  STEP: Confirm that the limitRange "e2e-limitrange-czmtz" has been deleted @ 06/13/24 10:53:02.594
  Jun 13 10:53:02.594: INFO: Requesting list of LimitRange to confirm quantity
  Jun 13 10:53:02.596: INFO: Found 0 LimitRange with label "e2e-limitrange-czmtz=patched"
  Jun 13 10:53:02.596: INFO: LimitRange "e2e-limitrange-czmtz" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-czmtz" @ 06/13/24 10:53:02.596
  Jun 13 10:53:02.599: INFO: Found 1 limitRange
  Jun 13 10:53:02.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8450" for this suite. @ 06/13/24 10:53:02.602
  STEP: Destroying namespace "e2e-limitrange-czmtz-919" for this suite. @ 06/13/24 10:53:02.608
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/13/24 10:53:02.613
  Jun 13 10:53:02.613: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 10:53:02.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:02.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:02.63
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/13/24 10:53:02.647
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 10:53:02.678
  Jun 13 10:53:02.684: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:53:02.684: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:53:03.686: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:53:03.686: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:53:04.686: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 10:53:04.686: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/13/24 10:53:04.692
  Jun 13 10:53:04.712: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 10:53:04.712: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:53:05.711: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 10:53:05.711: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  Jun 13 10:53:06.710: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 10:53:06.710: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/13/24 10:53:06.71
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 10:53:06.714
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3239, will wait for the garbage collector to delete the pods @ 06/13/24 10:53:06.714
  Jun 13 10:53:06.772: INFO: Deleting DaemonSet.extensions daemon-set took: 4.839408ms
  Jun 13 10:53:06.872: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.102126ms
  Jun 13 10:53:09.475: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:53:09.476: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 10:53:09.478: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14014"},"items":null}

  Jun 13 10:53:09.480: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14014"},"items":null}

  Jun 13 10:53:09.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3239" for this suite. @ 06/13/24 10:53:09.494
• [6.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/13/24 10:53:09.499
  Jun 13 10:53:09.499: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename job @ 06/13/24 10:53:09.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:09.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:09.514
  STEP: Creating a job @ 06/13/24 10:53:09.517
  STEP: Ensuring active pods == parallelism @ 06/13/24 10:53:09.524
  STEP: Orphaning one of the Job's Pods @ 06/13/24 10:53:11.528
  Jun 13 10:53:12.043: INFO: Successfully updated pod "adopt-release-fpmfs"
  STEP: Checking that the Job readopts the Pod @ 06/13/24 10:53:12.043
  STEP: Removing the labels from the Job's Pod @ 06/13/24 10:53:14.052
  Jun 13 10:53:14.563: INFO: Successfully updated pod "adopt-release-fpmfs"
  STEP: Checking that the Job releases the Pod @ 06/13/24 10:53:14.563
  Jun 13 10:53:16.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6452" for this suite. @ 06/13/24 10:53:16.573
• [7.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/13/24 10:53:16.583
  Jun 13 10:53:16.583: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 10:53:16.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:16.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:16.599
  STEP: Read namespace status @ 06/13/24 10:53:16.602
  Jun 13 10:53:16.605: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/13/24 10:53:16.605
  Jun 13 10:53:16.609: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/13/24 10:53:16.609
  Jun 13 10:53:16.618: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun 13 10:53:16.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4310" for this suite. @ 06/13/24 10:53:16.621
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/13/24 10:53:16.63
  Jun 13 10:53:16.630: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 10:53:16.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:16.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:16.643
  STEP: creating service multi-endpoint-test in namespace services-732 @ 06/13/24 10:53:16.646
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-732 to expose endpoints map[] @ 06/13/24 10:53:16.658
  Jun 13 10:53:16.666: INFO: successfully validated that service multi-endpoint-test in namespace services-732 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-732 @ 06/13/24 10:53:16.666
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-732 to expose endpoints map[pod1:[100]] @ 06/13/24 10:53:18.684
  Jun 13 10:53:18.692: INFO: successfully validated that service multi-endpoint-test in namespace services-732 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-732 @ 06/13/24 10:53:18.692
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-732 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/13/24 10:53:20.706
  Jun 13 10:53:20.717: INFO: successfully validated that service multi-endpoint-test in namespace services-732 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/13/24 10:53:20.717
  Jun 13 10:53:20.717: INFO: Creating new exec pod
  Jun 13 10:53:23.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-732 exec execpod7z76x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun 13 10:53:23.882: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun 13 10:53:23.882: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 10:53:23.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-732 exec execpod7z76x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.178.33 80'
  Jun 13 10:53:24.026: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.178.33 80\nConnection to 10.43.178.33 80 port [tcp/http] succeeded!\n"
  Jun 13 10:53:24.026: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 10:53:24.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-732 exec execpod7z76x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun 13 10:53:24.178: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun 13 10:53:24.178: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 10:53:24.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-732 exec execpod7z76x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.178.33 81'
  Jun 13 10:53:24.330: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.178.33 81\nConnection to 10.43.178.33 81 port [tcp/*] succeeded!\n"
  Jun 13 10:53:24.330: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-732 @ 06/13/24 10:53:24.33
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-732 to expose endpoints map[pod2:[101]] @ 06/13/24 10:53:24.349
  Jun 13 10:53:24.370: INFO: successfully validated that service multi-endpoint-test in namespace services-732 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-732 @ 06/13/24 10:53:24.37
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-732 to expose endpoints map[] @ 06/13/24 10:53:24.382
  Jun 13 10:53:24.400: INFO: successfully validated that service multi-endpoint-test in namespace services-732 exposes endpoints map[]
  Jun 13 10:53:24.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-732" for this suite. @ 06/13/24 10:53:24.424
• [7.799 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/13/24 10:53:24.429
  Jun 13 10:53:24.429: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 10:53:24.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:24.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:24.449
  STEP: Creating ServiceAccount "e2e-sa-4zv42"  @ 06/13/24 10:53:24.452
  Jun 13 10:53:24.455: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-4zv42"  @ 06/13/24 10:53:24.455
  Jun 13 10:53:24.462: INFO: AutomountServiceAccountToken: true
  Jun 13 10:53:24.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5708" for this suite. @ 06/13/24 10:53:24.465
• [0.040 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/13/24 10:53:24.47
  Jun 13 10:53:24.470: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 10:53:24.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:24.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:24.485
  STEP: Creating a pod to test substitution in container's command @ 06/13/24 10:53:24.488
  STEP: Saw pod success @ 06/13/24 10:53:28.509
  Jun 13 10:53:28.511: INFO: Trying to get logs from node 18.117.132.30 pod var-expansion-d6836dcf-3539-42ad-80f6-bc85ddf9921d container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 10:53:28.518
  Jun 13 10:53:28.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5654" for this suite. @ 06/13/24 10:53:28.532
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/13/24 10:53:28.538
  Jun 13 10:53:28.538: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:53:28.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:28.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:28.551
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 10:53:28.554
  STEP: Saw pod success @ 06/13/24 10:53:32.574
  Jun 13 10:53:32.577: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-e551267c-601a-428a-9fa8-16de179bb5ce container client-container: <nil>
  STEP: delete the pod @ 06/13/24 10:53:32.584
  Jun 13 10:53:32.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3933" for this suite. @ 06/13/24 10:53:32.602
• [4.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/13/24 10:53:32.607
  Jun 13 10:53:32.607: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 10:53:32.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:32.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:32.619
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 10:53:32.623
  STEP: Saw pod success @ 06/13/24 10:53:36.643
  Jun 13 10:53:36.646: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-5a7c6b72-6d45-4c40-8cdd-06062eeb0603 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 10:53:36.652
  Jun 13 10:53:36.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9464" for this suite. @ 06/13/24 10:53:36.667
• [4.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/13/24 10:53:36.674
  Jun 13 10:53:36.674: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 10:53:36.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:36.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:36.69
  STEP: Creating a cronjob @ 06/13/24 10:53:36.694
  STEP: creating @ 06/13/24 10:53:36.694
  STEP: getting @ 06/13/24 10:53:36.698
  STEP: listing @ 06/13/24 10:53:36.7
  STEP: watching @ 06/13/24 10:53:36.703
  Jun 13 10:53:36.703: INFO: starting watch
  STEP: cluster-wide listing @ 06/13/24 10:53:36.704
  STEP: cluster-wide watching @ 06/13/24 10:53:36.707
  Jun 13 10:53:36.707: INFO: starting watch
  STEP: patching @ 06/13/24 10:53:36.708
  STEP: updating @ 06/13/24 10:53:36.713
  Jun 13 10:53:36.721: INFO: waiting for watch events with expected annotations
  Jun 13 10:53:36.722: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/13/24 10:53:36.722
  STEP: updating /status @ 06/13/24 10:53:36.726
  STEP: get /status @ 06/13/24 10:53:36.732
  STEP: deleting @ 06/13/24 10:53:36.734
  STEP: deleting a collection @ 06/13/24 10:53:36.746
  Jun 13 10:53:36.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5378" for this suite. @ 06/13/24 10:53:36.756
• [0.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/13/24 10:53:36.762
  Jun 13 10:53:36.762: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 10:53:36.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:36.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:36.774
  STEP: creating a Namespace @ 06/13/24 10:53:36.778
  STEP: patching the Namespace @ 06/13/24 10:53:36.789
  STEP: get the Namespace and ensuring it has the label @ 06/13/24 10:53:36.792
  Jun 13 10:53:36.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7760" for this suite. @ 06/13/24 10:53:36.797
  STEP: Destroying namespace "nspatchtest-2b74699d-5f3f-46df-ba75-c588671176de-5924" for this suite. @ 06/13/24 10:53:36.804
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/13/24 10:53:36.813
  Jun 13 10:53:36.813: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 10:53:36.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:36.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:36.827
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/13/24 10:53:36.83
  STEP: Saw pod success @ 06/13/24 10:53:40.846
  Jun 13 10:53:40.848: INFO: Trying to get logs from node 18.117.132.30 pod pod-933da877-9a88-4770-b562-01af06d3b363 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 10:53:40.855
  Jun 13 10:53:40.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2123" for this suite. @ 06/13/24 10:53:40.869
• [4.061 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/13/24 10:53:40.874
  Jun 13 10:53:40.874: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 10:53:40.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:40.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:40.888
  STEP: Setting up server cert @ 06/13/24 10:53:40.908
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 10:53:41.45
  STEP: Deploying the webhook pod @ 06/13/24 10:53:41.457
  STEP: Wait for the deployment to be ready @ 06/13/24 10:53:41.466
  Jun 13 10:53:41.473: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 10:53:43.482
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 10:53:43.489
  Jun 13 10:53:44.489: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/13/24 10:53:44.495
  STEP: create a namespace for the webhook @ 06/13/24 10:53:44.509
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/13/24 10:53:44.518
  Jun 13 10:53:44.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1361" for this suite. @ 06/13/24 10:53:44.584
  STEP: Destroying namespace "webhook-markers-4401" for this suite. @ 06/13/24 10:53:44.589
  STEP: Destroying namespace "fail-closed-namespace-5634" for this suite. @ 06/13/24 10:53:44.597
• [3.727 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/13/24 10:53:44.602
  Jun 13 10:53:44.602: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:53:44.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:44.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:44.618
  STEP: Creating projection with secret that has name projected-secret-test-map-20ca54d2-7261-421d-a370-53389b3bb28a @ 06/13/24 10:53:44.621
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:53:44.625
  STEP: Saw pod success @ 06/13/24 10:53:48.647
  Jun 13 10:53:48.649: INFO: Trying to get logs from node 18.117.161.199 pod pod-projected-secrets-d2eada04-3588-4499-a758-c0c6e2e4693b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 10:53:48.656
  Jun 13 10:53:48.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3699" for this suite. @ 06/13/24 10:53:48.672
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/13/24 10:53:48.677
  Jun 13 10:53:48.677: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 10:53:48.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:48.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:48.691
  STEP: Starting the proxy @ 06/13/24 10:53:48.693
  Jun 13 10:53:48.694: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-5425 proxy --unix-socket=/tmp/kubectl-proxy-unix513195450/test'
  STEP: retrieving proxy /api/ output @ 06/13/24 10:53:48.75
  Jun 13 10:53:48.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5425" for this suite. @ 06/13/24 10:53:48.754
• [0.081 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/13/24 10:53:48.758
  Jun 13 10:53:48.758: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 10:53:48.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:48.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:48.818
  STEP: Setting up server cert @ 06/13/24 10:53:48.838
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 10:53:49.244
  STEP: Deploying the webhook pod @ 06/13/24 10:53:49.248
  STEP: Wait for the deployment to be ready @ 06/13/24 10:53:49.26
  Jun 13 10:53:49.265: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 10:53:51.274
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 10:53:51.285
  Jun 13 10:53:52.286: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/13/24 10:53:52.291
  STEP: create a configmap that should be updated by the webhook @ 06/13/24 10:53:52.306
  Jun 13 10:53:52.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1805" for this suite. @ 06/13/24 10:53:52.354
  STEP: Destroying namespace "webhook-markers-4828" for this suite. @ 06/13/24 10:53:52.36
• [3.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/13/24 10:53:52.367
  Jun 13 10:53:52.367: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename subpath @ 06/13/24 10:53:52.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:53:52.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:53:52.38
  STEP: Setting up data @ 06/13/24 10:53:52.384
  STEP: Creating pod pod-subpath-test-downwardapi-8r45 @ 06/13/24 10:53:52.392
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 10:53:52.392
  STEP: Saw pod success @ 06/13/24 10:54:16.449
  Jun 13 10:54:16.451: INFO: Trying to get logs from node 18.117.132.30 pod pod-subpath-test-downwardapi-8r45 container test-container-subpath-downwardapi-8r45: <nil>
  STEP: delete the pod @ 06/13/24 10:54:16.459
  STEP: Deleting pod pod-subpath-test-downwardapi-8r45 @ 06/13/24 10:54:16.471
  Jun 13 10:54:16.471: INFO: Deleting pod "pod-subpath-test-downwardapi-8r45" in namespace "subpath-5804"
  Jun 13 10:54:16.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5804" for this suite. @ 06/13/24 10:54:16.476
• [24.116 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/13/24 10:54:16.484
  Jun 13 10:54:16.484: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 10:54:16.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:54:16.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:54:16.498
  STEP: referencing a single matching pod @ 06/13/24 10:54:21.559
  STEP: referencing matching pods with named port @ 06/13/24 10:54:26.565
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/13/24 10:54:31.573
  STEP: recreating EndpointSlices after they've been deleted @ 06/13/24 10:54:36.579
  Jun 13 10:54:36.594: INFO: EndpointSlice for Service endpointslice-9340/example-named-port not found
  Jun 13 10:54:46.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9340" for this suite. @ 06/13/24 10:54:46.604
• [30.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/13/24 10:54:46.611
  Jun 13 10:54:46.611: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 10:54:46.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:54:46.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:54:46.625
  STEP: creating secret secrets-18/secret-test-84536df9-fa54-45c2-943a-ca94821135a8 @ 06/13/24 10:54:46.628
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:54:46.632
  STEP: Saw pod success @ 06/13/24 10:54:50.65
  Jun 13 10:54:50.652: INFO: Trying to get logs from node 18.216.152.151 pod pod-configmaps-8891be8e-2527-406b-aa34-39ebcbd58786 container env-test: <nil>
  STEP: delete the pod @ 06/13/24 10:54:50.661
  Jun 13 10:54:50.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-18" for this suite. @ 06/13/24 10:54:50.675
• [4.069 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/13/24 10:54:50.68
  Jun 13 10:54:50.680: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 10:54:50.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:54:50.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:54:50.695
  Jun 13 10:54:50.698: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 10:54:50.703: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 10:54:50.706: INFO: 
  Logging pods the apiserver thinks is on node 18.117.132.30 before test
  Jun 13 10:54:50.710: INFO: pod2 from endpointslice-9340 started at 2024-06-13 10:54:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.710: INFO: 	Container container1 ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: calico-kube-controllers-8485458bd8-jnr6l from kube-system started at 2024-06-13 09:45:08 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.710: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: canal-rp4h4 from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:54:50.710: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: coredns-autoscaler-6ff6bf758-slrqs from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.710: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: sonobuoy from sonobuoy started at 2024-06-13 10:15:49 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.710: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-bk62f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:54:50.710: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 10:54:50.710: INFO: 
  Logging pods the apiserver thinks is on node 18.117.161.199 before test
  Jun 13 10:54:50.718: INFO: pod1 from endpointslice-9340 started at 2024-06-13 10:54:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container container1 ready: true, restart count 0
  Jun 13 10:54:50.718: INFO: canal-gzz2g from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:54:50.718: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:54:50.718: INFO: coredns-7b7785bd9-g7xjw from kube-system started at 2024-06-13 09:45:36 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 10:54:50.718: INFO: metrics-server-657c74b5d8-2zf6t from kube-system started at 2024-06-13 09:45:27 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 10:54:50.718: INFO: rke-coredns-addon-deploy-job-2bhwc from kube-system started at 2024-06-13 09:45:13 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 10:54:50.718: INFO: rke-metrics-addon-deploy-job-wkp4q from kube-system started at 2024-06-13 09:45:25 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 10:54:50.718: INFO: rke-network-plugin-deploy-job-rgkm9 from kube-system started at 2024-06-13 09:45:06 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 10:54:50.718: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-t4ql9 from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:54:50.718: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:54:50.718: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 10:54:50.718: INFO: 
  Logging pods the apiserver thinks is on node 18.216.152.151 before test
  Jun 13 10:54:50.725: INFO: canal-k9tgk from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:54:50.725: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:54:50.725: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:54:50.725: INFO: coredns-7b7785bd9-glrkb from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:54:50.725: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 10:54:50.725: INFO: sonobuoy-e2e-job-5d97470650654ddd from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:54:50.725: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 10:54:50.725: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:54:50.725: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-kwc7f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:54:50.725: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:54:50.725: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/13/24 10:54:50.725
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d88b00316ce36a], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 06/13/24 10:54:50.744
  Jun 13 10:54:51.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7068" for this suite. @ 06/13/24 10:54:51.748
• [1.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/13/24 10:54:51.754
  Jun 13 10:54:51.754: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 10:54:51.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:54:51.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:54:51.771
  Jun 13 10:54:55.807: INFO: Got logs for pod "busybox-privileged-false-0dfd1a6d-c463-4f1a-85c2-efeaaeb44930": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun 13 10:54:55.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6119" for this suite. @ 06/13/24 10:54:55.81
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/13/24 10:54:55.815
  Jun 13 10:54:55.815: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 10:54:55.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:54:55.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:54:55.83
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/13/24 10:54:55.834
  STEP: Saw pod success @ 06/13/24 10:54:59.853
  Jun 13 10:54:59.856: INFO: Trying to get logs from node 18.117.161.199 pod pod-eae71cb9-10b3-4d61-82c5-eff247a3eb2a container test-container: <nil>
  STEP: delete the pod @ 06/13/24 10:54:59.862
  Jun 13 10:54:59.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9398" for this suite. @ 06/13/24 10:54:59.877
• [4.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/13/24 10:54:59.881
  Jun 13 10:54:59.885: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 10:54:59.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:54:59.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:54:59.901
  STEP: Counting existing ResourceQuota @ 06/13/24 10:54:59.904
  STEP: Creating a ResourceQuota @ 06/13/24 10:55:04.909
  STEP: Ensuring resource quota status is calculated @ 06/13/24 10:55:04.913
  STEP: Creating a ReplicationController @ 06/13/24 10:55:06.917
  STEP: Ensuring resource quota status captures replication controller creation @ 06/13/24 10:55:06.927
  STEP: Deleting a ReplicationController @ 06/13/24 10:55:08.932
  STEP: Ensuring resource quota status released usage @ 06/13/24 10:55:08.937
  Jun 13 10:55:10.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1023" for this suite. @ 06/13/24 10:55:10.944
• [11.071 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/13/24 10:55:10.953
  Jun 13 10:55:10.953: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 10:55:10.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:55:10.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:55:10.967
  STEP: Creating a test headless service @ 06/13/24 10:55:10.97
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1296.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1296.svc.cluster.local;sleep 1; done
   @ 06/13/24 10:55:10.974
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1296.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1296.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1296.svc.cluster.local;sleep 1; done
   @ 06/13/24 10:55:10.974
  STEP: creating a pod to probe DNS @ 06/13/24 10:55:10.974
  STEP: submitting the pod to kubernetes @ 06/13/24 10:55:10.975
  STEP: retrieving the pod @ 06/13/24 10:55:12.998
  STEP: looking for the results for each expected name from probers @ 06/13/24 10:55:13
  Jun 13 10:55:13.004: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.007: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.010: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.013: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.016: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.018: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.021: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.024: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1296.svc.cluster.local from pod dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe: the server could not find the requested resource (get pods dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe)
  Jun 13 10:55:13.024: INFO: Lookups using dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1296.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1296.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1296.svc.cluster.local jessie_udp@dns-test-service-2.dns-1296.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1296.svc.cluster.local]

  Jun 13 10:55:13.031: INFO: Pod client logs for webserver: 
  Jun 13 10:55:13.037: INFO: Pod client logs for querier: 
  Jun 13 10:55:13.043: INFO: Pod client logs for jessie-querier: 
  Jun 13 10:55:18.026: INFO: DNS probes using dns-1296/dns-test-92b2f246-8df1-45ca-9cb7-bd51d00de3fe succeeded

  STEP: deleting the pod @ 06/13/24 10:55:18.026
  STEP: deleting the test headless service @ 06/13/24 10:55:18.038
  Jun 13 10:55:18.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1296" for this suite. @ 06/13/24 10:55:18.053
• [7.107 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/13/24 10:55:18.06
  Jun 13 10:55:18.060: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 10:55:18.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:55:18.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:55:18.074
  Jun 13 10:55:18.093: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/13/24 10:55:18.096
  Jun 13 10:55:18.100: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:18.100: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/13/24 10:55:18.1
  Jun 13 10:55:18.118: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:18.118: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  Jun 13 10:55:19.120: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:19.120: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  Jun 13 10:55:20.117: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 13 10:55:20.117: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/13/24 10:55:20.12
  Jun 13 10:55:20.133: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 13 10:55:20.133: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jun 13 10:55:21.135: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:21.135: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/13/24 10:55:21.135
  Jun 13 10:55:21.143: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:21.143: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  Jun 13 10:55:22.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:22.144: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  Jun 13 10:55:23.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:23.144: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  Jun 13 10:55:24.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 13 10:55:24.144: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 10:55:24.149
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3236, will wait for the garbage collector to delete the pods @ 06/13/24 10:55:24.149
  Jun 13 10:55:24.208: INFO: Deleting DaemonSet.extensions daemon-set took: 6.271561ms
  Jun 13 10:55:24.309: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.678908ms
  Jun 13 10:55:26.512: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 10:55:26.512: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 10:55:26.515: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15081"},"items":null}

  Jun 13 10:55:26.517: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15081"},"items":null}

  Jun 13 10:55:26.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3236" for this suite. @ 06/13/24 10:55:26.539
• [8.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/13/24 10:55:26.545
  Jun 13 10:55:26.545: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:55:26.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:55:26.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:55:26.56
  STEP: Creating projection with secret that has name projected-secret-test-26da4ad9-6154-442b-884d-3a25a809bc77 @ 06/13/24 10:55:26.563
  STEP: Creating a pod to test consume secrets @ 06/13/24 10:55:26.567
  STEP: Saw pod success @ 06/13/24 10:55:30.584
  Jun 13 10:55:30.587: INFO: Trying to get logs from node 18.117.161.199 pod pod-projected-secrets-9e9f7d1a-50da-4edc-8ab5-d63b1130e069 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 10:55:30.594
  Jun 13 10:55:30.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8364" for this suite. @ 06/13/24 10:55:30.609
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/13/24 10:55:30.618
  Jun 13 10:55:30.618: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename subpath @ 06/13/24 10:55:30.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:55:30.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:55:30.631
  STEP: Setting up data @ 06/13/24 10:55:30.634
  STEP: Creating pod pod-subpath-test-projected-9nqd @ 06/13/24 10:55:30.642
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 10:55:30.642
  STEP: Saw pod success @ 06/13/24 10:55:54.707
  Jun 13 10:55:54.709: INFO: Trying to get logs from node 18.117.161.199 pod pod-subpath-test-projected-9nqd container test-container-subpath-projected-9nqd: <nil>
  STEP: delete the pod @ 06/13/24 10:55:54.717
  STEP: Deleting pod pod-subpath-test-projected-9nqd @ 06/13/24 10:55:54.728
  Jun 13 10:55:54.728: INFO: Deleting pod "pod-subpath-test-projected-9nqd" in namespace "subpath-9938"
  Jun 13 10:55:54.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9938" for this suite. @ 06/13/24 10:55:54.734
• [24.120 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/13/24 10:55:54.738
  Jun 13 10:55:54.738: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 10:55:54.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:55:54.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:55:54.756
  STEP: creating pod @ 06/13/24 10:55:54.759
  Jun 13 10:55:56.776: INFO: Pod pod-hostip-0c17b386-3fcd-4c52-9285-980fedaeb2a1 has hostIP: 172.31.16.95
  Jun 13 10:55:56.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5297" for this suite. @ 06/13/24 10:55:56.779
• [2.046 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/13/24 10:55:56.784
  Jun 13 10:55:56.784: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 10:55:56.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:55:56.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:55:56.797
  STEP: creating all guestbook components @ 06/13/24 10:55:56.8
  Jun 13 10:55:56.800: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun 13 10:55:56.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 create -f -'
  Jun 13 10:55:56.946: INFO: stderr: ""
  Jun 13 10:55:56.946: INFO: stdout: "service/agnhost-replica created\n"
  Jun 13 10:55:56.946: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun 13 10:55:56.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 create -f -'
  Jun 13 10:55:57.078: INFO: stderr: ""
  Jun 13 10:55:57.078: INFO: stdout: "service/agnhost-primary created\n"
  Jun 13 10:55:57.078: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun 13 10:55:57.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 create -f -'
  Jun 13 10:55:57.209: INFO: stderr: ""
  Jun 13 10:55:57.210: INFO: stdout: "service/frontend created\n"
  Jun 13 10:55:57.210: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun 13 10:55:57.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 create -f -'
  Jun 13 10:55:57.315: INFO: stderr: ""
  Jun 13 10:55:57.315: INFO: stdout: "deployment.apps/frontend created\n"
  Jun 13 10:55:57.315: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 13 10:55:57.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 create -f -'
  Jun 13 10:55:57.415: INFO: stderr: ""
  Jun 13 10:55:57.415: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun 13 10:55:57.415: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 13 10:55:57.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 create -f -'
  Jun 13 10:55:57.512: INFO: stderr: ""
  Jun 13 10:55:57.512: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/13/24 10:55:57.512
  Jun 13 10:55:57.512: INFO: Waiting for all frontend pods to be Running.
  Jun 13 10:56:02.562: INFO: Waiting for frontend to serve content.
  Jun 13 10:56:02.573: INFO: Trying to add a new entry to the guestbook.
  Jun 13 10:56:02.585: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/13/24 10:56:02.593
  Jun 13 10:56:02.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 delete --grace-period=0 --force -f -'
  Jun 13 10:56:02.668: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 10:56:02.668: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 10:56:02.668
  Jun 13 10:56:02.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 delete --grace-period=0 --force -f -'
  Jun 13 10:56:02.747: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 10:56:02.747: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 10:56:02.747
  Jun 13 10:56:02.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 delete --grace-period=0 --force -f -'
  Jun 13 10:56:02.828: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 10:56:02.828: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 10:56:02.828
  Jun 13 10:56:02.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 delete --grace-period=0 --force -f -'
  Jun 13 10:56:02.897: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 10:56:02.897: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 10:56:02.897
  Jun 13 10:56:02.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 delete --grace-period=0 --force -f -'
  Jun 13 10:56:02.971: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 10:56:02.971: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 10:56:02.971
  Jun 13 10:56:02.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4589 delete --grace-period=0 --force -f -'
  Jun 13 10:56:03.048: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 10:56:03.048: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun 13 10:56:03.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4589" for this suite. @ 06/13/24 10:56:03.062
• [6.286 seconds]
------------------------------
S
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/13/24 10:56:03.07
  Jun 13 10:56:03.070: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename subjectreview @ 06/13/24 10:56:03.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:03.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:03.092
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2432" @ 06/13/24 10:56:03.096
  Jun 13 10:56:03.104: INFO: saUsername: "system:serviceaccount:subjectreview-2432:e2e"
  Jun 13 10:56:03.104: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2432"}
  Jun 13 10:56:03.104: INFO: saUID: "bbf6a3c7-bcae-4091-93a6-a21417dee46b"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2432:e2e" @ 06/13/24 10:56:03.104
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2432:e2e" @ 06/13/24 10:56:03.104
  Jun 13 10:56:03.107: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2432:e2e" api 'list' configmaps in "subjectreview-2432" namespace @ 06/13/24 10:56:03.107
  Jun 13 10:56:03.108: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2432:e2e" @ 06/13/24 10:56:03.108
  Jun 13 10:56:03.112: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun 13 10:56:03.112: INFO: LocalSubjectAccessReview has been verified
  Jun 13 10:56:03.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2432" for this suite. @ 06/13/24 10:56:03.116
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/13/24 10:56:03.126
  Jun 13 10:56:03.126: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename containers @ 06/13/24 10:56:03.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:03.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:03.153
  STEP: Creating a pod to test override command @ 06/13/24 10:56:03.156
  STEP: Saw pod success @ 06/13/24 10:56:07.179
  Jun 13 10:56:07.181: INFO: Trying to get logs from node 18.117.132.30 pod client-containers-6db71d5d-b187-446e-b857-e521ce9e33c5 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 10:56:07.188
  Jun 13 10:56:07.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7386" for this suite. @ 06/13/24 10:56:07.207
• [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/13/24 10:56:07.212
  Jun 13 10:56:07.212: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 10:56:07.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:07.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:07.227
  STEP: Creating configMap with name projected-configmap-test-volume-map-579b6424-beb9-4965-a06a-d75da8b81ed8 @ 06/13/24 10:56:07.23
  STEP: Creating a pod to test consume configMaps @ 06/13/24 10:56:07.234
  STEP: Saw pod success @ 06/13/24 10:56:11.25
  Jun 13 10:56:11.252: INFO: Trying to get logs from node 18.117.161.199 pod pod-projected-configmaps-492cd250-1872-49a7-b6d6-598dbad37fff container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 10:56:11.259
  Jun 13 10:56:11.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9431" for this suite. @ 06/13/24 10:56:11.274
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/13/24 10:56:11.282
  Jun 13 10:56:11.282: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 10:56:11.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:11.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:11.296
  STEP: Setting up server cert @ 06/13/24 10:56:11.315
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 10:56:12.083
  STEP: Deploying the webhook pod @ 06/13/24 10:56:12.09
  STEP: Wait for the deployment to be ready @ 06/13/24 10:56:12.102
  Jun 13 10:56:12.108: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 10:56:14.118
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 10:56:14.129
  Jun 13 10:56:15.129: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 10:56:15.136: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7429-crds.webhook.example.com via the AdmissionRegistration API @ 06/13/24 10:56:15.646
  STEP: Creating a custom resource while v1 is storage version @ 06/13/24 10:56:15.664
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/13/24 10:56:17.702
  STEP: Patching the custom resource while v2 is storage version @ 06/13/24 10:56:17.721
  Jun 13 10:56:18.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3854" for this suite. @ 06/13/24 10:56:18.358
  STEP: Destroying namespace "webhook-markers-5824" for this suite. @ 06/13/24 10:56:18.363
• [7.087 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/13/24 10:56:18.369
  Jun 13 10:56:18.369: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename podtemplate @ 06/13/24 10:56:18.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:18.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:18.382
  STEP: Create set of pod templates @ 06/13/24 10:56:18.385
  Jun 13 10:56:18.392: INFO: created test-podtemplate-1
  Jun 13 10:56:18.396: INFO: created test-podtemplate-2
  Jun 13 10:56:18.400: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/13/24 10:56:18.4
  STEP: delete collection of pod templates @ 06/13/24 10:56:18.402
  Jun 13 10:56:18.402: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/13/24 10:56:18.412
  Jun 13 10:56:18.412: INFO: requesting list of pod templates to confirm quantity
  Jun 13 10:56:18.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6218" for this suite. @ 06/13/24 10:56:18.417
• [0.055 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/13/24 10:56:18.424
  Jun 13 10:56:18.424: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 10:56:18.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:18.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:18.437
  STEP: creating a Deployment @ 06/13/24 10:56:18.442
  Jun 13 10:56:18.442: INFO: Creating simple deployment test-deployment-dzv9z
  Jun 13 10:56:18.453: INFO: deployment "test-deployment-dzv9z" doesn't have the required revision set
  STEP: Getting /status @ 06/13/24 10:56:20.464
  Jun 13 10:56:20.467: INFO: Deployment test-deployment-dzv9z has Conditions: [{Available True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dzv9z-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/13/24 10:56:20.467
  Jun 13 10:56:20.476: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 10, 56, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 10, 56, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 10, 56, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 10, 56, 18, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-dzv9z-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/13/24 10:56:20.476
  Jun 13 10:56:20.478: INFO: Observed &Deployment event: ADDED
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dzv9z-5d576bd769"}
  Jun 13 10:56:20.478: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dzv9z-5d576bd769"}
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 10:56:20.478: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dzv9z-5d576bd769" is progressing.}
  Jun 13 10:56:20.478: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dzv9z-5d576bd769" has successfully progressed.}
  Jun 13 10:56:20.478: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 10:56:20.478: INFO: Observed Deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dzv9z-5d576bd769" has successfully progressed.}
  Jun 13 10:56:20.478: INFO: Found Deployment test-deployment-dzv9z in namespace deployment-4542 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 10:56:20.478: INFO: Deployment test-deployment-dzv9z has an updated status
  STEP: patching the Statefulset Status @ 06/13/24 10:56:20.478
  Jun 13 10:56:20.479: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 13 10:56:20.484: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/13/24 10:56:20.484
  Jun 13 10:56:20.488: INFO: Observed &Deployment event: ADDED
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dzv9z-5d576bd769"}
  Jun 13 10:56:20.488: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-dzv9z-5d576bd769"}
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 10:56:20.488: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:18 +0000 UTC 2024-06-13 10:56:18 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-dzv9z-5d576bd769" is progressing.}
  Jun 13 10:56:20.488: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dzv9z-5d576bd769" has successfully progressed.}
  Jun 13 10:56:20.488: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 10:56:19 +0000 UTC 2024-06-13 10:56:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-dzv9z-5d576bd769" has successfully progressed.}
  Jun 13 10:56:20.488: INFO: Observed deployment test-deployment-dzv9z in namespace deployment-4542 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 10:56:20.489: INFO: Observed &Deployment event: MODIFIED
  Jun 13 10:56:20.489: INFO: Found deployment test-deployment-dzv9z in namespace deployment-4542 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun 13 10:56:20.489: INFO: Deployment test-deployment-dzv9z has a patched status
  Jun 13 10:56:20.492: INFO: Deployment "test-deployment-dzv9z":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-dzv9z",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7f44650-6ae0-4583-8d7a-08b0a1540890",
      ResourceVersion: (string) (len=5) "15650",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-dzv9z-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 10:56:20.496: INFO: New ReplicaSet "test-deployment-dzv9z-5d576bd769" of Deployment "test-deployment-dzv9z":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-dzv9z-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eabb2358-89ea-44a5-a0de-64a6e671c807",
      ResourceVersion: (string) (len=5) "15645",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-dzv9z",
          UID: (types.UID) (len=36) "e7f44650-6ae0-4583-8d7a-08b0a1540890",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 37 66  |k:{\"uid\":\"e7f|
              00000120  34 34 36 35 30 2d 36 61  65 30 2d 34 35 38 33 2d  |44650-6ae0-4583-|
              00000130  38 64 37 61 2d 30 38 62  30 61 31 35 34 30 38 39  |8d7a-08b0a154089|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 10:56:20.501: INFO: Pod "test-deployment-dzv9z-5d576bd769-m4dwp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-dzv9z-5d576bd769-m4dwp",
      GenerateName: (string) (len=33) "test-deployment-dzv9z-5d576bd769-",
      Namespace: (string) (len=15) "deployment-4542",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36561daf-0af3-4722-8482-69e6a96cf006",
      ResourceVersion: (string) (len=5) "15644",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "96560cfed4f95a7584c6cddb019dc196038c884b5530f1738b84245610a9a7e5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.64/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.64/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-dzv9z-5d576bd769",
          UID: (types.UID) (len=36) "eabb2358-89ea-44a5-a0de-64a6e671c807",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 61 62 62 32 33 35  38 2d 38 39 65 61 2d 34  |"eabb2358-89ea-4|
              000000a0  34 61 35 2d 61 30 64 65  2d 36 34 61 36 65 36 37  |4a5-a0de-64a6e67|
              000000b0  31 63 38 30 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |1c807\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 36 34  5c 22 7d 22 3a 7b 22 2e  |.42.0.64\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jwtm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jwtm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872979,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853872978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=10) "10.42.0.64",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.64"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853872978,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853872979,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://c02f9be02770ef45e9617784658f65c5a1063b8a9bfb6eb515cc4352a89a9e71",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 10:56:20.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4542" for this suite. @ 06/13/24 10:56:20.508
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/13/24 10:56:20.515
  Jun 13 10:56:20.515: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename disruption @ 06/13/24 10:56:20.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:20.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:20.531
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/13/24 10:56:20.534
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:56:20.538
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/13/24 10:56:22.545
  STEP: Waiting for all pods to be running @ 06/13/24 10:56:22.545
  Jun 13 10:56:22.548: INFO: pods: 0 < 3
  STEP: locating a running pod @ 06/13/24 10:56:24.549
  STEP: Updating the pdb to allow a pod to be evicted @ 06/13/24 10:56:24.557
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:56:24.563
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/13/24 10:56:26.567
  STEP: Waiting for all pods to be running @ 06/13/24 10:56:26.567
  STEP: Waiting for the pdb to observed all healthy pods @ 06/13/24 10:56:26.57
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/13/24 10:56:26.598
  STEP: Waiting for the pdb to be processed @ 06/13/24 10:56:26.615
  STEP: Waiting for all pods to be running @ 06/13/24 10:56:28.618
  STEP: locating a running pod @ 06/13/24 10:56:28.621
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/13/24 10:56:28.628
  STEP: Waiting for the pdb to be deleted @ 06/13/24 10:56:28.633
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/13/24 10:56:28.635
  STEP: Waiting for all pods to be running @ 06/13/24 10:56:28.635
  Jun 13 10:56:28.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3363" for this suite. @ 06/13/24 10:56:28.658
• [8.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/13/24 10:56:28.673
  Jun 13 10:56:28.673: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename gc @ 06/13/24 10:56:28.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:28.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:28.69
  STEP: create the rc @ 06/13/24 10:56:28.697
  W0613 10:56:28.701425      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/13/24 10:56:34.723
  STEP: wait for the rc to be deleted @ 06/13/24 10:56:34.815
  Jun 13 10:56:35.885: INFO: 80 pods remaining
  Jun 13 10:56:35.885: INFO: 80 pods has nil DeletionTimestamp
  Jun 13 10:56:35.885: INFO: 
  Jun 13 10:56:36.898: INFO: 72 pods remaining
  Jun 13 10:56:36.898: INFO: 71 pods has nil DeletionTimestamp
  Jun 13 10:56:36.898: INFO: 
  Jun 13 10:56:37.830: INFO: 59 pods remaining
  Jun 13 10:56:37.830: INFO: 59 pods has nil DeletionTimestamp
  Jun 13 10:56:37.830: INFO: 
  Jun 13 10:56:38.830: INFO: 40 pods remaining
  Jun 13 10:56:38.830: INFO: 40 pods has nil DeletionTimestamp
  Jun 13 10:56:38.830: INFO: 
  Jun 13 10:56:39.823: INFO: 32 pods remaining
  Jun 13 10:56:39.823: INFO: 32 pods has nil DeletionTimestamp
  Jun 13 10:56:39.823: INFO: 
  Jun 13 10:56:40.837: INFO: 19 pods remaining
  Jun 13 10:56:40.837: INFO: 19 pods has nil DeletionTimestamp
  Jun 13 10:56:40.837: INFO: 
  STEP: Gathering metrics @ 06/13/24 10:56:41.832
  W0613 10:56:41.838831      23 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 10:56:41.838: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 10:56:41.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4678" for this suite. @ 06/13/24 10:56:41.844
• [13.183 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/13/24 10:56:41.856
  Jun 13 10:56:41.856: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/13/24 10:56:41.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:41.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:41.903
  STEP: creating @ 06/13/24 10:56:41.914
  STEP: getting @ 06/13/24 10:56:41.959
  STEP: listing in namespace @ 06/13/24 10:56:41.967
  STEP: patching @ 06/13/24 10:56:41.99
  STEP: deleting @ 06/13/24 10:56:42.032
  Jun 13 10:56:42.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8945" for this suite. @ 06/13/24 10:56:42.065
• [0.223 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/13/24 10:56:42.079
  Jun 13 10:56:42.079: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 10:56:42.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:42.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:42.131
  STEP: creating the pod @ 06/13/24 10:56:42.14
  STEP: setting up watch @ 06/13/24 10:56:42.14
  STEP: submitting the pod to kubernetes @ 06/13/24 10:56:42.246
  STEP: verifying the pod is in kubernetes @ 06/13/24 10:56:42.264
  STEP: verifying pod creation was observed @ 06/13/24 10:56:42.273
  STEP: deleting the pod gracefully @ 06/13/24 10:56:44.284
  STEP: verifying pod deletion was observed @ 06/13/24 10:56:44.291
  Jun 13 10:56:46.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6358" for this suite. @ 06/13/24 10:56:46.73
• [4.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/13/24 10:56:46.735
  Jun 13 10:56:46.735: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 10:56:46.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:46.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:46.75
  STEP: Setting up server cert @ 06/13/24 10:56:46.773
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 10:56:46.959
  STEP: Deploying the webhook pod @ 06/13/24 10:56:46.968
  STEP: Wait for the deployment to be ready @ 06/13/24 10:56:46.982
  Jun 13 10:56:46.989: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 10:56:48.996
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 10:56:49.006
  Jun 13 10:56:50.007: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/13/24 10:56:50.012
  STEP: create a pod @ 06/13/24 10:56:50.03
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/13/24 10:56:52.048
  Jun 13 10:56:52.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=webhook-6875 attach --namespace=webhook-6875 to-be-attached-pod -i -c=container1'
  Jun 13 10:56:52.121: INFO: rc: 1
  Jun 13 10:56:52.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6875" for this suite. @ 06/13/24 10:56:52.161
  STEP: Destroying namespace "webhook-markers-8112" for this suite. @ 06/13/24 10:56:52.171
• [5.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/13/24 10:56:52.177
  Jun 13 10:56:52.178: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 10:56:52.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:52.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:52.198
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/13/24 10:56:52.201
  STEP: When a replicaset with a matching selector is created @ 06/13/24 10:56:54.214
  STEP: Then the orphan pod is adopted @ 06/13/24 10:56:54.22
  STEP: When the matched label of one of its pods change @ 06/13/24 10:56:55.226
  Jun 13 10:56:55.229: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/13/24 10:56:55.239
  Jun 13 10:56:56.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3174" for this suite. @ 06/13/24 10:56:56.251
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/13/24 10:56:56.261
  Jun 13 10:56:56.261: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 10:56:56.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:56.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:56.276
  Jun 13 10:56:56.279: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: creating the pod @ 06/13/24 10:56:56.279
  STEP: submitting the pod to kubernetes @ 06/13/24 10:56:56.279
  Jun 13 10:56:58.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7811" for this suite. @ 06/13/24 10:56:58.403
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/13/24 10:56:58.409
  Jun 13 10:56:58.409: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 10:56:58.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:56:58.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:56:58.426
  STEP: creating Agnhost RC @ 06/13/24 10:56:58.43
  Jun 13 10:56:58.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-2629 create -f -'
  Jun 13 10:56:58.558: INFO: stderr: ""
  Jun 13 10:56:58.558: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/13/24 10:56:58.558
  Jun 13 10:56:59.561: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 10:56:59.561: INFO: Found 0 / 1
  Jun 13 10:57:00.562: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 10:57:00.562: INFO: Found 1 / 1
  Jun 13 10:57:00.562: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/13/24 10:57:00.562
  Jun 13 10:57:00.565: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 10:57:00.565: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 10:57:00.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-2629 patch pod agnhost-primary-sswxb -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun 13 10:57:00.638: INFO: stderr: ""
  Jun 13 10:57:00.638: INFO: stdout: "pod/agnhost-primary-sswxb patched\n"
  STEP: checking annotations @ 06/13/24 10:57:00.638
  Jun 13 10:57:00.642: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 10:57:00.642: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 10:57:00.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2629" for this suite. @ 06/13/24 10:57:00.649
• [2.244 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/13/24 10:57:00.654
  Jun 13 10:57:00.654: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 10:57:00.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:00.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:00.668
  STEP: Creating secret with name s-test-opt-del-060569bd-ac64-4dc3-9f38-314ee771f408 @ 06/13/24 10:57:00.674
  STEP: Creating secret with name s-test-opt-upd-2dc1ccef-08ee-4dc8-a2ad-1ece9326c525 @ 06/13/24 10:57:00.68
  STEP: Creating the pod @ 06/13/24 10:57:00.683
  STEP: Deleting secret s-test-opt-del-060569bd-ac64-4dc3-9f38-314ee771f408 @ 06/13/24 10:57:02.723
  STEP: Updating secret s-test-opt-upd-2dc1ccef-08ee-4dc8-a2ad-1ece9326c525 @ 06/13/24 10:57:02.728
  STEP: Creating secret with name s-test-opt-create-0ed3c0c6-d7d9-4c11-9db2-be7ec0b7e67c @ 06/13/24 10:57:02.732
  STEP: waiting to observe update in volume @ 06/13/24 10:57:02.736
  Jun 13 10:57:04.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8203" for this suite. @ 06/13/24 10:57:04.769
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/13/24 10:57:04.774
  Jun 13 10:57:04.774: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 10:57:04.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:04.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:04.79
  STEP: Creating service test in namespace statefulset-5770 @ 06/13/24 10:57:04.793
  STEP: Creating statefulset ss in namespace statefulset-5770 @ 06/13/24 10:57:04.799
  Jun 13 10:57:04.807: INFO: Found 0 stateful pods, waiting for 1
  Jun 13 10:57:14.810: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/13/24 10:57:14.815
  STEP: Getting /status @ 06/13/24 10:57:14.822
  Jun 13 10:57:14.825: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/13/24 10:57:14.825
  Jun 13 10:57:14.832: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/13/24 10:57:14.832
  Jun 13 10:57:14.833: INFO: Observed &StatefulSet event: ADDED
  Jun 13 10:57:14.833: INFO: Found Statefulset ss in namespace statefulset-5770 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 10:57:14.833: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/13/24 10:57:14.833
  Jun 13 10:57:14.833: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 13 10:57:14.841: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/13/24 10:57:14.841
  Jun 13 10:57:14.843: INFO: Observed &StatefulSet event: ADDED
  Jun 13 10:57:14.843: INFO: Deleting all statefulset in ns statefulset-5770
  Jun 13 10:57:14.845: INFO: Scaling statefulset ss to 0
  Jun 13 10:57:24.857: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 10:57:24.860: INFO: Deleting statefulset ss
  Jun 13 10:57:24.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5770" for this suite. @ 06/13/24 10:57:24.873
• [20.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/13/24 10:57:24.879
  Jun 13 10:57:24.879: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 10:57:24.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:24.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:24.896
  Jun 13 10:57:24.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5875" for this suite. @ 06/13/24 10:57:24.933
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/13/24 10:57:24.939
  Jun 13 10:57:24.939: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/13/24 10:57:24.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:24.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:24.952
  STEP: Creating two CSIDrivers @ 06/13/24 10:57:24.955
  STEP: Getting "inline-driver-e91de5b3-efff-4dca-82cb-9d80f6c7be89" & "inline-driver-2ee7449e-d344-4958-b15f-ef0ee0c14e98" @ 06/13/24 10:57:24.967
  STEP: Patching the CSIDriver "inline-driver-2ee7449e-d344-4958-b15f-ef0ee0c14e98" @ 06/13/24 10:57:24.971
  STEP: Updating the CSIDriver "inline-driver-2ee7449e-d344-4958-b15f-ef0ee0c14e98" @ 06/13/24 10:57:24.976
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2180" @ 06/13/24 10:57:24.984
  STEP: Deleting CSIDriver "inline-driver-e91de5b3-efff-4dca-82cb-9d80f6c7be89" @ 06/13/24 10:57:24.986
  STEP: Confirm deletion of CSIDriver "inline-driver-e91de5b3-efff-4dca-82cb-9d80f6c7be89" @ 06/13/24 10:57:24.99
  STEP: Deleting CSIDriver "inline-driver-2ee7449e-d344-4958-b15f-ef0ee0c14e98" via DeleteCollection @ 06/13/24 10:57:24.992
  STEP: Confirm deletion of CSIDriver "inline-driver-2ee7449e-d344-4958-b15f-ef0ee0c14e98" @ 06/13/24 10:57:24.997
  Jun 13 10:57:24.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2180" for this suite. @ 06/13/24 10:57:25.002
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/13/24 10:57:25.008
  Jun 13 10:57:25.008: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 10:57:25.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:25.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:25.021
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 10:57:25.027
  STEP: create the pod with lifecycle hook @ 06/13/24 10:57:27.047
  STEP: check poststart hook @ 06/13/24 10:57:29.06
  STEP: delete the pod with lifecycle hook @ 06/13/24 10:57:29.067
  Jun 13 10:57:33.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9665" for this suite. @ 06/13/24 10:57:33.086
• [8.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/13/24 10:57:33.091
  Jun 13 10:57:33.091: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 10:57:33.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:33.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:33.106
  STEP: Setting up server cert @ 06/13/24 10:57:33.124
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 10:57:33.952
  STEP: Deploying the webhook pod @ 06/13/24 10:57:33.959
  STEP: Wait for the deployment to be ready @ 06/13/24 10:57:33.969
  Jun 13 10:57:33.976: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 10:57:35.984
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 10:57:35.992
  Jun 13 10:57:36.993: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 10:57:37.002: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/13/24 10:57:37.51
  STEP: Creating a custom resource that should be denied by the webhook @ 06/13/24 10:57:37.526
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/13/24 10:57:39.549
  STEP: Updating the custom resource with disallowed data should be denied @ 06/13/24 10:57:39.555
  STEP: Deleting the custom resource should be denied @ 06/13/24 10:57:39.563
  STEP: Remove the offending key and value from the custom resource data @ 06/13/24 10:57:39.568
  STEP: Deleting the updated custom resource should be successful @ 06/13/24 10:57:39.575
  Jun 13 10:57:40.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-399" for this suite. @ 06/13/24 10:57:40.137
  STEP: Destroying namespace "webhook-markers-9953" for this suite. @ 06/13/24 10:57:40.142
• [7.056 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/13/24 10:57:40.147
  Jun 13 10:57:40.147: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 10:57:40.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:40.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:40.163
  Jun 13 10:57:40.166: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 10:57:40.172: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 10:57:40.174: INFO: 
  Logging pods the apiserver thinks is on node 18.117.132.30 before test
  Jun 13 10:57:40.179: INFO: calico-kube-controllers-8485458bd8-jnr6l from kube-system started at 2024-06-13 09:45:08 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.179: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 10:57:40.179: INFO: canal-rp4h4 from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:57:40.179: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:57:40.179: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:57:40.179: INFO: coredns-autoscaler-6ff6bf758-slrqs from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.179: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 10:57:40.179: INFO: sonobuoy from sonobuoy started at 2024-06-13 10:15:49 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.179: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 10:57:40.179: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-bk62f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:57:40.179: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:57:40.179: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 10:57:40.179: INFO: 
  Logging pods the apiserver thinks is on node 18.117.161.199 before test
  Jun 13 10:57:40.184: INFO: canal-gzz2g from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:57:40.184: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:57:40.184: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:57:40.184: INFO: coredns-7b7785bd9-g7xjw from kube-system started at 2024-06-13 09:45:36 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.184: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 10:57:40.184: INFO: metrics-server-657c74b5d8-2zf6t from kube-system started at 2024-06-13 09:45:27 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.184: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 10:57:40.184: INFO: rke-coredns-addon-deploy-job-2bhwc from kube-system started at 2024-06-13 09:45:13 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.184: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 10:57:40.184: INFO: rke-metrics-addon-deploy-job-wkp4q from kube-system started at 2024-06-13 09:45:25 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.184: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 10:57:40.184: INFO: rke-network-plugin-deploy-job-rgkm9 from kube-system started at 2024-06-13 09:45:06 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.185: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 10:57:40.185: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-t4ql9 from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:57:40.185: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:57:40.185: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 10:57:40.185: INFO: 
  Logging pods the apiserver thinks is on node 18.216.152.151 before test
  Jun 13 10:57:40.190: INFO: canal-k9tgk from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 10:57:40.190: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 10:57:40.190: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 10:57:40.190: INFO: coredns-7b7785bd9-glrkb from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 10:57:40.190: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 10:57:40.190: INFO: sonobuoy-e2e-job-5d97470650654ddd from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:57:40.190: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 10:57:40.190: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:57:40.190: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-kwc7f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 10:57:40.190: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 10:57:40.190: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node 18.117.132.30 @ 06/13/24 10:57:40.204
  STEP: verifying the node has the label node 18.117.161.199 @ 06/13/24 10:57:40.216
  STEP: verifying the node has the label node 18.216.152.151 @ 06/13/24 10:57:40.227
  Jun 13 10:57:40.235: INFO: Pod calico-kube-controllers-8485458bd8-jnr6l requesting resource cpu=0m on Node 18.117.132.30
  Jun 13 10:57:40.235: INFO: Pod canal-gzz2g requesting resource cpu=250m on Node 18.117.161.199
  Jun 13 10:57:40.235: INFO: Pod canal-k9tgk requesting resource cpu=250m on Node 18.216.152.151
  Jun 13 10:57:40.235: INFO: Pod canal-rp4h4 requesting resource cpu=250m on Node 18.117.132.30
  Jun 13 10:57:40.235: INFO: Pod coredns-7b7785bd9-g7xjw requesting resource cpu=100m on Node 18.117.161.199
  Jun 13 10:57:40.235: INFO: Pod coredns-7b7785bd9-glrkb requesting resource cpu=100m on Node 18.216.152.151
  Jun 13 10:57:40.235: INFO: Pod coredns-autoscaler-6ff6bf758-slrqs requesting resource cpu=20m on Node 18.117.132.30
  Jun 13 10:57:40.235: INFO: Pod metrics-server-657c74b5d8-2zf6t requesting resource cpu=100m on Node 18.117.161.199
  Jun 13 10:57:40.235: INFO: Pod sonobuoy requesting resource cpu=0m on Node 18.117.132.30
  Jun 13 10:57:40.235: INFO: Pod sonobuoy-e2e-job-5d97470650654ddd requesting resource cpu=0m on Node 18.216.152.151
  Jun 13 10:57:40.235: INFO: Pod sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-bk62f requesting resource cpu=0m on Node 18.117.132.30
  Jun 13 10:57:40.235: INFO: Pod sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-kwc7f requesting resource cpu=0m on Node 18.216.152.151
  Jun 13 10:57:40.235: INFO: Pod sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-t4ql9 requesting resource cpu=0m on Node 18.117.161.199
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/13/24 10:57:40.235
  Jun 13 10:57:40.235: INFO: Creating a pod which consumes cpu=2555m on Node 18.216.152.151
  Jun 13 10:57:40.242: INFO: Creating a pod which consumes cpu=2611m on Node 18.117.132.30
  Jun 13 10:57:40.249: INFO: Creating a pod which consumes cpu=2485m on Node 18.117.161.199
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/13/24 10:57:42.27
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17f25d79-bf58-4ad5-9620-32db80311589.17d88b27a9130c7a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5948/filler-pod-17f25d79-bf58-4ad5-9620-32db80311589 to 18.216.152.151] @ 06/13/24 10:57:42.273
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17f25d79-bf58-4ad5-9620-32db80311589.17d88b27cf685159], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/13/24 10:57:42.273
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17f25d79-bf58-4ad5-9620-32db80311589.17d88b27d2148ab0], Reason = [Created], Message = [Created container filler-pod-17f25d79-bf58-4ad5-9620-32db80311589] @ 06/13/24 10:57:42.273
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17f25d79-bf58-4ad5-9620-32db80311589.17d88b27d8a82271], Reason = [Started], Message = [Started container filler-pod-17f25d79-bf58-4ad5-9620-32db80311589] @ 06/13/24 10:57:42.273
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bf9fa5d-64da-4dd7-b8cf-ec3a35371e11.17d88b27a9ef5ac1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5948/filler-pod-5bf9fa5d-64da-4dd7-b8cf-ec3a35371e11 to 18.117.161.199] @ 06/13/24 10:57:42.273
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bf9fa5d-64da-4dd7-b8cf-ec3a35371e11.17d88b27d456324f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/13/24 10:57:42.274
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bf9fa5d-64da-4dd7-b8cf-ec3a35371e11.17d88b27d71ba548], Reason = [Created], Message = [Created container filler-pod-5bf9fa5d-64da-4dd7-b8cf-ec3a35371e11] @ 06/13/24 10:57:42.274
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bf9fa5d-64da-4dd7-b8cf-ec3a35371e11.17d88b27de40ff03], Reason = [Started], Message = [Started container filler-pod-5bf9fa5d-64da-4dd7-b8cf-ec3a35371e11] @ 06/13/24 10:57:42.274
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a4999c6f-9765-453f-a046-bd79fe006054.17d88b27a980acaa], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5948/filler-pod-a4999c6f-9765-453f-a046-bd79fe006054 to 18.117.132.30] @ 06/13/24 10:57:42.274
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a4999c6f-9765-453f-a046-bd79fe006054.17d88b27d268a2f8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/13/24 10:57:42.274
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a4999c6f-9765-453f-a046-bd79fe006054.17d88b27d4c75adb], Reason = [Created], Message = [Created container filler-pod-a4999c6f-9765-453f-a046-bd79fe006054] @ 06/13/24 10:57:42.274
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a4999c6f-9765-453f-a046-bd79fe006054.17d88b27daefda45], Reason = [Started], Message = [Started container filler-pod-a4999c6f-9765-453f-a046-bd79fe006054] @ 06/13/24 10:57:42.274
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d88b2821fe5094], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 06/13/24 10:57:42.283
  STEP: removing the label node off the node 18.117.132.30 @ 06/13/24 10:57:43.283
  STEP: verifying the node doesn't have the label node @ 06/13/24 10:57:43.295
  STEP: removing the label node off the node 18.117.161.199 @ 06/13/24 10:57:43.298
  STEP: verifying the node doesn't have the label node @ 06/13/24 10:57:43.308
  STEP: removing the label node off the node 18.216.152.151 @ 06/13/24 10:57:43.311
  STEP: verifying the node doesn't have the label node @ 06/13/24 10:57:43.324
  Jun 13 10:57:43.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5948" for this suite. @ 06/13/24 10:57:43.331
• [3.190 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/13/24 10:57:43.338
  Jun 13 10:57:43.338: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 10:57:43.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 10:57:43.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 10:57:43.353
  STEP: Creating pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330 @ 06/13/24 10:57:43.356
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 10:57:45.37
  Jun 13 10:57:45.373: INFO: Initial restart count of pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 is 0
  Jun 13 10:57:45.375: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:57:47.380: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:57:49.383: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:57:51.387: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:57:53.391: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:57:55.396: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:57:57.401: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:57:59.405: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:01.409: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:03.414: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:05.417: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:07.421: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:09.426: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:11.429: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:13.434: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:15.437: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:17.441: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:19.446: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:21.449: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:23.454: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:25.459: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:27.463: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:29.467: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:31.472: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:33.476: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:35.480: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:37.484: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:39.488: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:41.491: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:43.496: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:45.500: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:47.504: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:49.507: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:51.511: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:53.515: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:55.519: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:57.523: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:58:59.527: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:01.531: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:03.536: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:05.540: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:07.544: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:09.548: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:11.551: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:13.555: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:15.559: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:17.563: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:19.568: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:21.572: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:23.577: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:25.581: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:27.585: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:29.589: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:31.592: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:33.596: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:35.601: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:37.605: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:39.609: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:41.613: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:43.618: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:45.622: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:47.626: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:49.630: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:51.634: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:53.639: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:55.643: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:57.647: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 10:59:59.651: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:01.654: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:03.659: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:05.663: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:07.668: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:09.672: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:11.676: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:13.680: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:15.684: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:17.689: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:19.693: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:21.696: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:23.701: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:25.705: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:27.709: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:29.712: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:31.716: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:33.721: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:35.725: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:37.730: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:39.734: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:41.738: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:43.743: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:45.747: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:47.751: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:49.755: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:51.759: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:53.763: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:55.768: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:57.771: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:00:59.775: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:01.779: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:03.784: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:05.787: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:07.790: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:09.795: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:11.798: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:13.803: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:15.807: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:17.810: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:19.815: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:21.818: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:23.823: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:25.828: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:27.831: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:29.836: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:31.839: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:33.844: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:35.850: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:37.854: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:39.858: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:41.863: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  Jun 13 11:01:43.867: INFO: Get pod liveness-6e2a1032-1fe9-4378-bb84-886df03f6e40 in namespace container-probe-1330
  STEP: deleting the pod @ 06/13/24 11:01:45.868
  Jun 13 11:01:45.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1330" for this suite. @ 06/13/24 11:01:45.886
• [242.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/13/24 11:01:45.893
  Jun 13 11:01:45.893: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 11:01:45.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:01:45.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:01:45.91
  STEP: creating a Pod with a static label @ 06/13/24 11:01:45.917
  STEP: watching for Pod to be ready @ 06/13/24 11:01:45.925
  Jun 13 11:01:45.990: INFO: observed Pod pod-test in namespace pods-9522 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun 13 11:01:45.996: INFO: observed Pod pod-test in namespace pods-9522 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  }]
  Jun 13 11:01:46.011: INFO: observed Pod pod-test in namespace pods-9522 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  }]
  Jun 13 11:01:46.676: INFO: observed Pod pod-test in namespace pods-9522 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  }]
  Jun 13 11:01:47.640: INFO: Found Pod pod-test in namespace pods-9522 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:47 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:47 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:01:46 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/13/24 11:01:47.642
  STEP: getting the Pod and ensuring that it's patched @ 06/13/24 11:01:47.652
  STEP: replacing the Pod's status Ready condition to False @ 06/13/24 11:01:47.654
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/13/24 11:01:47.666
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/13/24 11:01:47.666
  STEP: watching for the Pod to be deleted @ 06/13/24 11:01:47.673
  Jun 13 11:01:47.674: INFO: observed event type MODIFIED
  Jun 13 11:01:49.652: INFO: observed event type MODIFIED
  Jun 13 11:01:49.774: INFO: observed event type MODIFIED
  Jun 13 11:01:49.916: INFO: observed event type MODIFIED
  Jun 13 11:01:50.665: INFO: observed event type MODIFIED
  Jun 13 11:01:50.670: INFO: observed event type MODIFIED
  Jun 13 11:01:50.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9522" for this suite. @ 06/13/24 11:01:50.68
• [4.794 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/13/24 11:01:50.687
  Jun 13 11:01:50.687: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 11:01:50.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:01:50.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:01:50.701
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/13/24 11:01:50.704
  Jun 13 11:01:50.704: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:01:52.058: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:01:57.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4079" for this suite. @ 06/13/24 11:01:57.47
• [6.791 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/13/24 11:01:57.478
  Jun 13 11:01:57.478: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 11:01:57.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:01:57.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:01:57.492
  STEP: Creating pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155 @ 06/13/24 11:01:57.495
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 11:01:59.568
  Jun 13 11:01:59.570: INFO: Initial restart count of pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 is 0
  Jun 13 11:01:59.573: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:01.577: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:03.580: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:05.585: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:07.590: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:09.593: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:11.597: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:13.602: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:15.606: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:17.610: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:19.614: INFO: Get pod liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 in namespace container-probe-4155
  Jun 13 11:02:19.614: INFO: Restart count of pod container-probe-4155/liveness-5b0268dc-5d71-4f8b-ba91-5f910f7d4217 is now 1 (20.044123751s elapsed)
  STEP: deleting the pod @ 06/13/24 11:02:19.614
  Jun 13 11:02:19.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4155" for this suite. @ 06/13/24 11:02:19.63
• [22.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/13/24 11:02:19.636
  Jun 13 11:02:19.636: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-watch @ 06/13/24 11:02:19.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:02:19.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:02:19.651
  Jun 13 11:02:19.655: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Creating first CR  @ 06/13/24 11:02:22.19
  Jun 13 11:02:22.194: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T11:02:22Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T11:02:22Z]] name:name1 resourceVersion:18945 uid:aaa4cb1b-37f0-47e8-a8dd-f742545c7764] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 06/13/24 11:02:32.194
  Jun 13 11:02:32.201: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T11:02:32Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T11:02:32Z]] name:name2 resourceVersion:18971 uid:744b2a03-e6ba-4da2-a826-98ff5009d056] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 06/13/24 11:02:42.202
  Jun 13 11:02:42.207: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T11:02:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T11:02:42Z]] name:name1 resourceVersion:18987 uid:aaa4cb1b-37f0-47e8-a8dd-f742545c7764] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 06/13/24 11:02:52.208
  Jun 13 11:02:52.213: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T11:02:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T11:02:52Z]] name:name2 resourceVersion:19003 uid:744b2a03-e6ba-4da2-a826-98ff5009d056] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 06/13/24 11:03:02.214
  Jun 13 11:03:02.220: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T11:02:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T11:02:42Z]] name:name1 resourceVersion:19019 uid:aaa4cb1b-37f0-47e8-a8dd-f742545c7764] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 06/13/24 11:03:12.221
  Jun 13 11:03:12.227: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T11:02:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T11:02:52Z]] name:name2 resourceVersion:19035 uid:744b2a03-e6ba-4da2-a826-98ff5009d056] num:map[num1:9223372036854775807 num2:1000000]]}
  Jun 13 11:03:22.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9879" for this suite. @ 06/13/24 11:03:22.743
• [63.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/13/24 11:03:22.748
  Jun 13 11:03:22.748: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:03:22.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:22.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:22.764
  STEP: Creating configMap with name configmap-test-volume-map-9e24be8c-e940-423e-a1a1-e733d9524ff6 @ 06/13/24 11:03:22.767
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:03:22.77
  STEP: Saw pod success @ 06/13/24 11:03:26.788
  Jun 13 11:03:26.791: INFO: Trying to get logs from node 18.117.132.30 pod pod-configmaps-48b575ec-583a-42a7-9021-08fc02359564 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:03:26.808
  Jun 13 11:03:26.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2800" for this suite. @ 06/13/24 11:03:26.821
• [4.079 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/13/24 11:03:26.828
  Jun 13 11:03:26.828: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:03:26.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:26.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:26.841
  STEP: Creating secret with name s-test-opt-del-9c13bfd9-3d52-4208-98f5-4844da9b48db @ 06/13/24 11:03:26.847
  STEP: Creating secret with name s-test-opt-upd-441e8cc5-b9df-4803-b783-d201885a1373 @ 06/13/24 11:03:26.851
  STEP: Creating the pod @ 06/13/24 11:03:26.856
  STEP: Deleting secret s-test-opt-del-9c13bfd9-3d52-4208-98f5-4844da9b48db @ 06/13/24 11:03:28.892
  STEP: Updating secret s-test-opt-upd-441e8cc5-b9df-4803-b783-d201885a1373 @ 06/13/24 11:03:28.897
  STEP: Creating secret with name s-test-opt-create-84c05a51-67d2-444e-b2b1-eb8b309566e4 @ 06/13/24 11:03:28.901
  STEP: waiting to observe update in volume @ 06/13/24 11:03:28.904
  Jun 13 11:03:30.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9075" for this suite. @ 06/13/24 11:03:30.934
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/13/24 11:03:30.942
  Jun 13 11:03:30.942: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 11:03:30.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:30.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:30.955
  Jun 13 11:03:30.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-16" for this suite. @ 06/13/24 11:03:30.996
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/13/24 11:03:31.002
  Jun 13 11:03:31.002: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename containers @ 06/13/24 11:03:31.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:31.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:31.015
  STEP: Creating a pod to test override all @ 06/13/24 11:03:31.018
  STEP: Saw pod success @ 06/13/24 11:03:35.036
  Jun 13 11:03:35.038: INFO: Trying to get logs from node 18.117.161.199 pod client-containers-4f68f10d-9cd6-4c4d-82d1-aea47f042a4b container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:03:35.054
  Jun 13 11:03:35.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4219" for this suite. @ 06/13/24 11:03:35.069
• [4.073 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/13/24 11:03:35.076
  Jun 13 11:03:35.076: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 11:03:35.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:35.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:35.09
  STEP: creating the pod @ 06/13/24 11:03:35.093
  STEP: submitting the pod to kubernetes @ 06/13/24 11:03:35.093
  W0613 11:03:35.102626      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 06/13/24 11:03:37.111
  STEP: updating the pod @ 06/13/24 11:03:37.113
  Jun 13 11:03:37.627: INFO: Successfully updated pod "pod-update-activedeadlineseconds-1877ad59-8661-4926-b9ed-04710bc1071d"
  Jun 13 11:03:41.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8237" for this suite. @ 06/13/24 11:03:41.64
• [6.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/13/24 11:03:41.646
  Jun 13 11:03:41.646: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:03:41.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:41.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:41.661
  STEP: Setting up server cert @ 06/13/24 11:03:41.682
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:03:42.451
  STEP: Deploying the webhook pod @ 06/13/24 11:03:42.457
  STEP: Wait for the deployment to be ready @ 06/13/24 11:03:42.469
  Jun 13 11:03:42.474: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/13/24 11:03:44.483
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:03:44.494
  Jun 13 11:03:45.494: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/13/24 11:03:45.5
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 11:03:45.514
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/13/24 11:03:45.521
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 11:03:45.529
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/13/24 11:03:45.537
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 11:03:45.55
  Jun 13 11:03:45.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3670" for this suite. @ 06/13/24 11:03:45.598
  STEP: Destroying namespace "webhook-markers-7866" for this suite. @ 06/13/24 11:03:45.606
• [3.965 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/13/24 11:03:45.61
  Jun 13 11:03:45.610: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:03:45.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:45.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:45.625
  STEP: fetching services @ 06/13/24 11:03:45.628
  Jun 13 11:03:45.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1082" for this suite. @ 06/13/24 11:03:45.634
• [0.028 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/13/24 11:03:45.639
  Jun 13 11:03:45.639: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 11:03:45.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:45.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:45.656
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/13/24 11:03:45.659
  STEP: When a replication controller with a matching selector is created @ 06/13/24 11:03:47.673
  STEP: Then the orphan pod is adopted @ 06/13/24 11:03:47.677
  Jun 13 11:03:48.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-516" for this suite. @ 06/13/24 11:03:48.687
• [3.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/13/24 11:03:48.692
  Jun 13 11:03:48.692: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 11:03:48.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:03:48.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:03:48.706
  STEP: Creating pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610 @ 06/13/24 11:03:48.709
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 11:03:50.72
  Jun 13 11:03:50.723: INFO: Initial restart count of pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 is 0
  Jun 13 11:03:50.726: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:03:52.730: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:03:54.734: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:03:56.739: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:03:58.743: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:00.747: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:02.752: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:04.758: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:06.761: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:08.765: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:10.769: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:12.772: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:14.776: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:16.781: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:18.784: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:20.788: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:22.793: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:24.797: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:26.801: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:28.805: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:30.809: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:32.813: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:34.817: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:36.821: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:38.826: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:40.829: INFO: Get pod busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 in namespace container-probe-9610
  Jun 13 11:04:40.829: INFO: Restart count of pod container-probe-9610/busybox-b9e119a1-9484-4eea-a684-60e4d2dcbf48 is now 1 (50.106443324s elapsed)
  STEP: deleting the pod @ 06/13/24 11:04:40.829
  Jun 13 11:04:40.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9610" for this suite. @ 06/13/24 11:04:40.854
• [52.166 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/13/24 11:04:40.859
  Jun 13 11:04:40.859: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:04:40.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:04:40.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:04:40.876
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/13/24 11:04:40.879
  STEP: Saw pod success @ 06/13/24 11:04:44.895
  Jun 13 11:04:44.897: INFO: Trying to get logs from node 18.117.161.199 pod pod-f6323fb5-9bad-4533-9f79-beb182713e9b container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:04:44.904
  Jun 13 11:04:44.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6123" for this suite. @ 06/13/24 11:04:44.919
• [4.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/13/24 11:04:44.923
  Jun 13 11:04:44.923: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename watch @ 06/13/24 11:04:44.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:04:44.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:04:44.938
  STEP: getting a starting resourceVersion @ 06/13/24 11:04:44.941
  STEP: starting a background goroutine to produce watch events @ 06/13/24 11:04:44.944
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/13/24 11:04:44.944
  Jun 13 11:04:47.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1551" for this suite. @ 06/13/24 11:04:47.778
• [2.907 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/13/24 11:04:47.83
  Jun 13 11:04:47.830: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/13/24 11:04:47.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:04:47.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:04:47.846
  STEP: mirroring a new custom Endpoint @ 06/13/24 11:04:47.858
  Jun 13 11:04:47.864: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 06/13/24 11:04:49.868
  Jun 13 11:04:49.877: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 06/13/24 11:04:51.881
  Jun 13 11:04:51.888: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Jun 13 11:04:53.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8210" for this suite. @ 06/13/24 11:04:53.895
• [6.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/13/24 11:04:53.901
  Jun 13 11:04:53.901: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/13/24 11:04:53.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:04:53.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:04:53.916
  Jun 13 11:04:53.919: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 13 11:05:53.920: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 11:05:53.923: INFO: Starting informer...
  STEP: Starting pods... @ 06/13/24 11:05:53.923
  Jun 13 11:05:54.138: INFO: Pod1 is running on 18.117.132.30. Tainting Node
  Jun 13 11:05:56.358: INFO: Pod2 is running on 18.117.132.30. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/13/24 11:05:56.358
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 11:05:56.372
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/13/24 11:05:56.375
  Jun 13 11:06:02.683: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jun 13 11:06:21.819: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 11:06:21.83
  Jun 13 11:06:21.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-207" for this suite. @ 06/13/24 11:06:21.836
• [87.939 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/13/24 11:06:21.841
  Jun 13 11:06:21.841: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:06:21.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:06:21.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:06:21.856
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:06:21.859
  STEP: Saw pod success @ 06/13/24 11:06:25.875
  Jun 13 11:06:25.877: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-bd33c711-589b-4c41-8603-9182c07bed36 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:06:25.892
  Jun 13 11:06:25.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8927" for this suite. @ 06/13/24 11:06:25.914
• [4.078 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/13/24 11:06:25.919
  Jun 13 11:06:25.919: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pv @ 06/13/24 11:06:25.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:06:25.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:06:25.934
  STEP: Creating initial PV and PVC @ 06/13/24 11:06:25.937
  Jun 13 11:06:25.937: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-719" @ 06/13/24 11:06:25.947
  STEP: Listing PVCs in namespace "pv-719" @ 06/13/24 11:06:25.949
  STEP: Patching the PV "pv-719-hv27h" @ 06/13/24 11:06:25.953
  STEP: Patching the PVC "pvc-5cpbf" @ 06/13/24 11:06:25.966
  STEP: Getting PV "pv-719-hv27h" @ 06/13/24 11:06:25.973
  STEP: Getting PVC "pvc-5cpbf" @ 06/13/24 11:06:25.976
  STEP: Deleting PVC "pvc-5cpbf" @ 06/13/24 11:06:25.978
  STEP: Confirm deletion of PVC "pvc-5cpbf" @ 06/13/24 11:06:25.985
  STEP: Deleting PV "pv-719-hv27h" @ 06/13/24 11:06:27.991
  STEP: Confirm deletion of PV "pv-719-hv27h" @ 06/13/24 11:06:27.996
  STEP: Recreating another PV & PVC @ 06/13/24 11:06:30.001
  Jun 13 11:06:30.001: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-719-hjvct" @ 06/13/24 11:06:30.01
  STEP: Updating the PVC "pvc-f5mdd" @ 06/13/24 11:06:30.036
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-f5mdd=updated" @ 06/13/24 11:06:30.045
  STEP: Deleting PVC "pvc-f5mdd" via DeleteCollection @ 06/13/24 11:06:30.047
  STEP: Confirm deletion of PVC "pvc-f5mdd" @ 06/13/24 11:06:30.052
  STEP: Deleting PV "pv-719-hjvct" via DeleteCollection @ 06/13/24 11:06:32.058
  STEP: Confirm deletion of PV "pv-719-hjvct" @ 06/13/24 11:06:32.063
  Jun 13 11:06:34.069: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 13 11:06:34.069: INFO: Deleting PersistentVolumeClaim "pvc-f5mdd"
  Jun 13 11:06:34.071: INFO: Deleting PersistentVolume "pv-719-hjvct"
  Jun 13 11:06:34.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-719" for this suite. @ 06/13/24 11:06:34.077
• [8.163 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/13/24 11:06:34.082
  Jun 13 11:06:34.082: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:06:34.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:06:34.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:06:34.099
  STEP: Creating a pod to test downward api env vars @ 06/13/24 11:06:34.102
  STEP: Saw pod success @ 06/13/24 11:06:38.122
  Jun 13 11:06:38.124: INFO: Trying to get logs from node 18.117.132.30 pod downward-api-c3ea5147-2c6f-49a2-ae6b-b58f65d61558 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 11:06:38.132
  Jun 13 11:06:38.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-37" for this suite. @ 06/13/24 11:06:38.147
• [4.072 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/13/24 11:06:38.154
  Jun 13 11:06:38.154: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:06:38.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:06:38.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:06:38.168
  STEP: Creating configMap with name configmap-test-volume-116b3979-12af-486d-b53b-62c03ca4476d @ 06/13/24 11:06:38.171
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:06:38.186
  STEP: Saw pod success @ 06/13/24 11:06:42.202
  Jun 13 11:06:42.205: INFO: Trying to get logs from node 18.117.161.199 pod pod-configmaps-b0984453-19bb-49e7-807e-6b454f9f13fd container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:06:42.218
  Jun 13 11:06:42.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6482" for this suite. @ 06/13/24 11:06:42.233
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/13/24 11:06:42.238
  Jun 13 11:06:42.238: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename taint-single-pod @ 06/13/24 11:06:42.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:06:42.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:06:42.254
  Jun 13 11:06:42.257: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 13 11:07:42.258: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 11:07:42.261: INFO: Starting informer...
  STEP: Starting pod... @ 06/13/24 11:07:42.261
  Jun 13 11:07:42.474: INFO: Pod is running on 18.117.132.30. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/13/24 11:07:42.474
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 11:07:42.484
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/13/24 11:07:42.487
  Jun 13 11:07:42.487: INFO: Pod wasn't evicted. Proceeding
  Jun 13 11:07:42.487: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 11:07:42.498
  STEP: Waiting some time to make sure that toleration time passed. @ 06/13/24 11:07:42.5
  Jun 13 11:08:57.501: INFO: Pod wasn't evicted. Test successful
  Jun 13 11:08:57.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-750" for this suite. @ 06/13/24 11:08:57.505
• [135.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/13/24 11:08:57.51
  Jun 13 11:08:57.510: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:08:57.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:08:57.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:08:57.525
  STEP: Setting up server cert @ 06/13/24 11:08:57.555
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:08:58.093
  STEP: Deploying the webhook pod @ 06/13/24 11:08:58.1
  STEP: Wait for the deployment to be ready @ 06/13/24 11:08:58.111
  Jun 13 11:08:58.117: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jun 13 11:09:00.126: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 8, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 8, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 8, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 8, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/13/24 11:09:02.13
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:09:02.14
  Jun 13 11:09:03.141: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/13/24 11:09:03.146
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/13/24 11:09:03.162
  STEP: Creating a configMap that should not be mutated @ 06/13/24 11:09:03.169
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/13/24 11:09:03.178
  STEP: Creating a configMap that should be mutated @ 06/13/24 11:09:03.185
  Jun 13 11:09:03.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7344" for this suite. @ 06/13/24 11:09:03.248
  STEP: Destroying namespace "webhook-markers-8634" for this suite. @ 06/13/24 11:09:03.252
• [5.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/13/24 11:09:03.267
  Jun 13 11:09:03.267: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 11:09:03.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:03.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:03.293
  Jun 13 11:09:03.305: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Jun 13 11:09:08.309: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 11:09:08.309
  Jun 13 11:09:08.309: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/13/24 11:09:08.318
  Jun 13 11:09:08.329: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fdd5d7d-4d6e-43af-9894-b3a12c04c188",
      ResourceVersion: (string) (len=5) "20312",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873748,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 11:09:08.338: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a581bff-97f1-48c8-a1a0-f2148d7f27f2",
      ResourceVersion: (string) (len=5) "20314",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873748,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9fdd5d7d-4d6e-43af-9894-b3a12c04c188",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 66 64 64 35 64  37 64 2d 34 64 36 65 2d  |\"9fdd5d7d-4d6e-|
              00000120  34 33 61 66 2d 39 38 39  34 2d 62 33 61 31 32 63  |43af-9894-b3a12c|
              00000130  30 34 63 31 38 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |04c188\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:09:08.339: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun 13 11:09:08.339: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "170ca73b-e65f-42b0-9649-576fe9dcbcf3",
      ResourceVersion: (string) (len=5) "20313",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9fdd5d7d-4d6e-43af-9894-b3a12c04c188",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 66 64 64 35 64 37  |"uid\":\"9fdd5d7|
              00000040  64 2d 34 64 36 65 2d 34  33 61 66 2d 39 38 39 34  |d-4d6e-43af-9894|
              00000050  2d 62 33 61 31 32 63 30  34 63 31 38 38 5c 22 7d  |-b3a12c04c188\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:09:08.345: INFO: Pod "test-cleanup-controller-v4zjc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-v4zjc",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "438aafa2-6685-4e4a-be3a-6c44b3a53286",
      ResourceVersion: (string) (len=5) "20302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c7f8109573f26f9ff240edf79b45149633ca280b0ce7928c0a2c9514c2c271ae",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.114/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.114/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "170ca73b-e65f-42b0-9649-576fe9dcbcf3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  31 37 30 63 61 37 33 62  |uid\":\"170ca73b|
              00000080  2d 65 36 35 66 2d 34 32  62 30 2d 39 36 34 39 2d  |-e65f-42b0-9649-|
              00000090  35 37 36 66 65 39 64 63  62 63 66 33 5c 22 7d 22  |576fe9dcbcf3\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 31  34 5c 22 7d 22 3a 7b 22  |.42.0.114\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qw6x6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qw6x6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=11) "10.42.0.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873744,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://a33baf314b75396a511b7d11598600ffa535f8d6db19aacb8e3d09a9ad1e748e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:09:08.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6641" for this suite. @ 06/13/24 11:09:08.358
• [5.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/13/24 11:09:08.369
  Jun 13 11:09:08.369: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:09:08.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:08.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:08.394
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 11:09:08.397
  Jun 13 11:09:08.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8118 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 13 11:09:08.473: INFO: stderr: ""
  Jun 13 11:09:08.473: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/13/24 11:09:08.473
  Jun 13 11:09:08.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8118 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun 13 11:09:08.541: INFO: stderr: ""
  Jun 13 11:09:08.541: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 11:09:08.541
  Jun 13 11:09:08.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8118 delete pods e2e-test-httpd-pod'
  Jun 13 11:09:10.029: INFO: stderr: ""
  Jun 13 11:09:10.029: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 13 11:09:10.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8118" for this suite. @ 06/13/24 11:09:10.033
• [1.668 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/13/24 11:09:10.037
  Jun 13 11:09:10.037: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename containers @ 06/13/24 11:09:10.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:10.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:10.053
  STEP: Creating a pod to test override arguments @ 06/13/24 11:09:10.056
  STEP: Saw pod success @ 06/13/24 11:09:14.072
  Jun 13 11:09:14.074: INFO: Trying to get logs from node 18.216.152.151 pod client-containers-3a7b82d4-8266-407f-933c-801f70633585 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:09:14.091
  Jun 13 11:09:14.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3602" for this suite. @ 06/13/24 11:09:14.106
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/13/24 11:09:14.112
  Jun 13 11:09:14.112: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 11:09:14.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:14.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:14.126
  STEP: Performing setup for networking test in namespace pod-network-test-2800 @ 06/13/24 11:09:14.129
  STEP: creating a selector @ 06/13/24 11:09:14.129
  STEP: Creating the service pods in kubernetes @ 06/13/24 11:09:14.129
  Jun 13 11:09:14.129: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/13/24 11:09:36.217
  Jun 13 11:09:38.253: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 11:09:38.253: INFO: Going to poll 10.42.2.119 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 11:09:38.255: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2800 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:09:38.255: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:09:38.256: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:09:38.256: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2800/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 11:09:39.346: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 13 11:09:39.346: INFO: Going to poll 10.42.0.115 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 11:09:39.349: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.115 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2800 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:09:39.349: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:09:39.350: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:09:39.350: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2800/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.115+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 11:09:40.434: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 13 11:09:40.434: INFO: Going to poll 10.42.1.65 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 11:09:40.437: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.65 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2800 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:09:40.437: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:09:40.438: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:09:40.438: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2800/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.65+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 11:09:41.522: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 13 11:09:41.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2800" for this suite. @ 06/13/24 11:09:41.526
• [27.420 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/13/24 11:09:41.532
  Jun 13 11:09:41.532: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 11:09:41.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:41.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:41.548
  STEP: creating a ReplicationController @ 06/13/24 11:09:41.553
  STEP: waiting for RC to be added @ 06/13/24 11:09:41.557
  STEP: waiting for available Replicas @ 06/13/24 11:09:41.557
  STEP: patching ReplicationController @ 06/13/24 11:09:43.328
  STEP: waiting for RC to be modified @ 06/13/24 11:09:43.336
  STEP: patching ReplicationController status @ 06/13/24 11:09:43.336
  STEP: waiting for RC to be modified @ 06/13/24 11:09:43.341
  STEP: waiting for available Replicas @ 06/13/24 11:09:43.341
  STEP: fetching ReplicationController status @ 06/13/24 11:09:43.347
  STEP: patching ReplicationController scale @ 06/13/24 11:09:43.35
  STEP: waiting for RC to be modified @ 06/13/24 11:09:43.354
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/13/24 11:09:43.354
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/13/24 11:09:45.006
  STEP: updating ReplicationController status @ 06/13/24 11:09:45.009
  STEP: waiting for RC to be modified @ 06/13/24 11:09:45.014
  STEP: listing all ReplicationControllers @ 06/13/24 11:09:45.014
  STEP: checking that ReplicationController has expected values @ 06/13/24 11:09:45.016
  STEP: deleting ReplicationControllers by collection @ 06/13/24 11:09:45.017
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/13/24 11:09:45.023
  Jun 13 11:09:45.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 11:09:45.073616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4064" for this suite. @ 06/13/24 11:09:45.076
• [3.548 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/13/24 11:09:45.081
  Jun 13 11:09:45.081: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename disruption @ 06/13/24 11:09:45.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:45.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:45.097
  STEP: Waiting for the pdb to be processed @ 06/13/24 11:09:45.104
  E0613 11:09:46.073880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:47.074344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/13/24 11:09:47.131
  Jun 13 11:09:47.135: INFO: running pods: 0 < 3
  E0613 11:09:48.074949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:49.075353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:09:49.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5952" for this suite. @ 06/13/24 11:09:49.14
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/13/24 11:09:49.145
  Jun 13 11:09:49.145: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:09:49.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:49.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:49.163
  STEP: Creating configMap with name projected-configmap-test-volume-84a7fdef-174a-449c-8156-30035a5f4385 @ 06/13/24 11:09:49.166
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:09:49.173
  E0613 11:09:50.076363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:51.076869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:52.077236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:53.077419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:09:53.195
  Jun 13 11:09:53.197: INFO: Trying to get logs from node 18.117.132.30 pod pod-projected-configmaps-3f68b014-07e1-4218-bfac-370135e649f8 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:09:53.214
  Jun 13 11:09:53.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-596" for this suite. @ 06/13/24 11:09:53.232
• [4.093 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/13/24 11:09:53.238
  Jun 13 11:09:53.238: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 11:09:53.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:53.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:53.253
  Jun 13 11:09:53.257: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:09:54.077634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:55.077811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0613 11:09:55.796967      23 warnings.go:70] unknown field "alpha"
  W0613 11:09:55.797000      23 warnings.go:70] unknown field "beta"
  W0613 11:09:55.797008      23 warnings.go:70] unknown field "delta"
  W0613 11:09:55.797014      23 warnings.go:70] unknown field "epsilon"
  W0613 11:09:55.797020      23 warnings.go:70] unknown field "gamma"
  E0613 11:09:56.077864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:09:56.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4918" for this suite. @ 06/13/24 11:09:56.333
• [3.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/13/24 11:09:56.339
  Jun 13 11:09:56.339: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:09:56.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:09:56.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:09:56.353
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:09:56.356
  E0613 11:09:57.078312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:58.078517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:09:59.079299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:00.079438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:10:00.371
  Jun 13 11:10:00.373: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-6d6b762a-4888-4ede-be31-c6d98cf31421 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:10:00.38
  Jun 13 11:10:00.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5730" for this suite. @ 06/13/24 11:10:00.397
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/13/24 11:10:00.401
  Jun 13 11:10:00.401: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename gc @ 06/13/24 11:10:00.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:10:00.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:10:00.417
  STEP: create the rc @ 06/13/24 11:10:00.423
  W0613 11:10:00.429123      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0613 11:10:01.088801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:02.092178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:03.093948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:04.094476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:05.097587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:06.101847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/13/24 11:10:06.482
  STEP: wait for the rc to be deleted @ 06/13/24 11:10:06.516
  E0613 11:10:07.102126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:08.102238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:09.102373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:10.103077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:11.103971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/13/24 11:10:11.519
  E0613 11:10:12.104758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:13.105202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:14.105432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:15.105680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:16.105912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:17.106673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:18.106773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:19.107061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:20.107319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:21.107479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:22.107644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:23.107784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:24.108047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:25.109191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:26.109443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:27.110054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:28.110411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:29.110654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:30.110896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:31.111442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:32.112059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:33.113158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:34.113387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:35.113637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:36.113886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:37.114379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:38.114600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:39.114833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:40.115058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:41.115514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 11:10:41.532
  W0613 11:10:41.537502      23 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 11:10:41.537: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 11:10:41.537: INFO: Deleting pod "simpletest.rc-2gz6n" in namespace "gc-2450"
  Jun 13 11:10:41.550: INFO: Deleting pod "simpletest.rc-2jbzq" in namespace "gc-2450"
  Jun 13 11:10:41.565: INFO: Deleting pod "simpletest.rc-2kdmh" in namespace "gc-2450"
  Jun 13 11:10:41.581: INFO: Deleting pod "simpletest.rc-2tb5f" in namespace "gc-2450"
  Jun 13 11:10:41.604: INFO: Deleting pod "simpletest.rc-2v47b" in namespace "gc-2450"
  Jun 13 11:10:41.610: INFO: Deleting pod "simpletest.rc-2z4rb" in namespace "gc-2450"
  Jun 13 11:10:41.634: INFO: Deleting pod "simpletest.rc-4bmkm" in namespace "gc-2450"
  Jun 13 11:10:41.646: INFO: Deleting pod "simpletest.rc-4m5jk" in namespace "gc-2450"
  Jun 13 11:10:41.671: INFO: Deleting pod "simpletest.rc-4njdq" in namespace "gc-2450"
  Jun 13 11:10:41.719: INFO: Deleting pod "simpletest.rc-4v2qv" in namespace "gc-2450"
  Jun 13 11:10:41.737: INFO: Deleting pod "simpletest.rc-4xclw" in namespace "gc-2450"
  Jun 13 11:10:41.753: INFO: Deleting pod "simpletest.rc-5lv8b" in namespace "gc-2450"
  Jun 13 11:10:41.810: INFO: Deleting pod "simpletest.rc-68bp9" in namespace "gc-2450"
  Jun 13 11:10:41.831: INFO: Deleting pod "simpletest.rc-74cgn" in namespace "gc-2450"
  Jun 13 11:10:41.862: INFO: Deleting pod "simpletest.rc-77x8s" in namespace "gc-2450"
  Jun 13 11:10:41.875: INFO: Deleting pod "simpletest.rc-7svz6" in namespace "gc-2450"
  Jun 13 11:10:41.895: INFO: Deleting pod "simpletest.rc-7xwvc" in namespace "gc-2450"
  Jun 13 11:10:41.910: INFO: Deleting pod "simpletest.rc-8bsqw" in namespace "gc-2450"
  Jun 13 11:10:41.926: INFO: Deleting pod "simpletest.rc-8dqbt" in namespace "gc-2450"
  Jun 13 11:10:41.943: INFO: Deleting pod "simpletest.rc-8j7bt" in namespace "gc-2450"
  Jun 13 11:10:41.967: INFO: Deleting pod "simpletest.rc-8ljdz" in namespace "gc-2450"
  Jun 13 11:10:41.994: INFO: Deleting pod "simpletest.rc-9f5v4" in namespace "gc-2450"
  Jun 13 11:10:42.022: INFO: Deleting pod "simpletest.rc-9jvzq" in namespace "gc-2450"
  Jun 13 11:10:42.064: INFO: Deleting pod "simpletest.rc-9nw8m" in namespace "gc-2450"
  Jun 13 11:10:42.111: INFO: Deleting pod "simpletest.rc-9rhz2" in namespace "gc-2450"
  E0613 11:10:42.115978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:42.137: INFO: Deleting pod "simpletest.rc-9xc2l" in namespace "gc-2450"
  Jun 13 11:10:42.167: INFO: Deleting pod "simpletest.rc-b7zc2" in namespace "gc-2450"
  Jun 13 11:10:42.213: INFO: Deleting pod "simpletest.rc-c9g2p" in namespace "gc-2450"
  Jun 13 11:10:42.229: INFO: Deleting pod "simpletest.rc-cg2jw" in namespace "gc-2450"
  Jun 13 11:10:42.252: INFO: Deleting pod "simpletest.rc-cvgsl" in namespace "gc-2450"
  Jun 13 11:10:42.269: INFO: Deleting pod "simpletest.rc-d6xtw" in namespace "gc-2450"
  Jun 13 11:10:42.305: INFO: Deleting pod "simpletest.rc-d8xng" in namespace "gc-2450"
  Jun 13 11:10:42.341: INFO: Deleting pod "simpletest.rc-drktc" in namespace "gc-2450"
  Jun 13 11:10:42.380: INFO: Deleting pod "simpletest.rc-dtp9z" in namespace "gc-2450"
  Jun 13 11:10:42.397: INFO: Deleting pod "simpletest.rc-dwpr9" in namespace "gc-2450"
  Jun 13 11:10:42.416: INFO: Deleting pod "simpletest.rc-fdthd" in namespace "gc-2450"
  Jun 13 11:10:42.431: INFO: Deleting pod "simpletest.rc-fmqqd" in namespace "gc-2450"
  Jun 13 11:10:42.458: INFO: Deleting pod "simpletest.rc-fql8f" in namespace "gc-2450"
  Jun 13 11:10:42.489: INFO: Deleting pod "simpletest.rc-gb4ck" in namespace "gc-2450"
  Jun 13 11:10:42.543: INFO: Deleting pod "simpletest.rc-gq2jf" in namespace "gc-2450"
  Jun 13 11:10:42.585: INFO: Deleting pod "simpletest.rc-h5b5w" in namespace "gc-2450"
  Jun 13 11:10:42.612: INFO: Deleting pod "simpletest.rc-hcqpg" in namespace "gc-2450"
  Jun 13 11:10:42.636: INFO: Deleting pod "simpletest.rc-jhm9l" in namespace "gc-2450"
  Jun 13 11:10:42.658: INFO: Deleting pod "simpletest.rc-jr8pd" in namespace "gc-2450"
  Jun 13 11:10:42.687: INFO: Deleting pod "simpletest.rc-k6xks" in namespace "gc-2450"
  Jun 13 11:10:42.741: INFO: Deleting pod "simpletest.rc-kcvhg" in namespace "gc-2450"
  Jun 13 11:10:42.774: INFO: Deleting pod "simpletest.rc-kd4d7" in namespace "gc-2450"
  Jun 13 11:10:42.812: INFO: Deleting pod "simpletest.rc-ktg2j" in namespace "gc-2450"
  Jun 13 11:10:42.836: INFO: Deleting pod "simpletest.rc-kxn9f" in namespace "gc-2450"
  Jun 13 11:10:42.851: INFO: Deleting pod "simpletest.rc-l2vjg" in namespace "gc-2450"
  Jun 13 11:10:42.906: INFO: Deleting pod "simpletest.rc-l5dsz" in namespace "gc-2450"
  Jun 13 11:10:42.934: INFO: Deleting pod "simpletest.rc-l9ffv" in namespace "gc-2450"
  Jun 13 11:10:42.962: INFO: Deleting pod "simpletest.rc-lbxkc" in namespace "gc-2450"
  Jun 13 11:10:43.037: INFO: Deleting pod "simpletest.rc-lhj4g" in namespace "gc-2450"
  Jun 13 11:10:43.086: INFO: Deleting pod "simpletest.rc-ljqmp" in namespace "gc-2450"
  Jun 13 11:10:43.113: INFO: Deleting pod "simpletest.rc-lkccl" in namespace "gc-2450"
  E0613 11:10:43.116835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:43.142: INFO: Deleting pod "simpletest.rc-lmnbt" in namespace "gc-2450"
  Jun 13 11:10:43.160: INFO: Deleting pod "simpletest.rc-mb2dx" in namespace "gc-2450"
  Jun 13 11:10:43.182: INFO: Deleting pod "simpletest.rc-mhgzq" in namespace "gc-2450"
  Jun 13 11:10:43.203: INFO: Deleting pod "simpletest.rc-mlqv6" in namespace "gc-2450"
  Jun 13 11:10:43.234: INFO: Deleting pod "simpletest.rc-n5qzc" in namespace "gc-2450"
  Jun 13 11:10:43.261: INFO: Deleting pod "simpletest.rc-n9pf6" in namespace "gc-2450"
  Jun 13 11:10:43.312: INFO: Deleting pod "simpletest.rc-nfr8z" in namespace "gc-2450"
  Jun 13 11:10:43.374: INFO: Deleting pod "simpletest.rc-njlpd" in namespace "gc-2450"
  Jun 13 11:10:43.449: INFO: Deleting pod "simpletest.rc-nkcql" in namespace "gc-2450"
  Jun 13 11:10:43.494: INFO: Deleting pod "simpletest.rc-nl2gg" in namespace "gc-2450"
  Jun 13 11:10:43.550: INFO: Deleting pod "simpletest.rc-np9pc" in namespace "gc-2450"
  Jun 13 11:10:43.641: INFO: Deleting pod "simpletest.rc-pcm7h" in namespace "gc-2450"
  Jun 13 11:10:43.693: INFO: Deleting pod "simpletest.rc-plzbs" in namespace "gc-2450"
  Jun 13 11:10:43.726: INFO: Deleting pod "simpletest.rc-ppl4z" in namespace "gc-2450"
  Jun 13 11:10:43.754: INFO: Deleting pod "simpletest.rc-pzb86" in namespace "gc-2450"
  Jun 13 11:10:43.799: INFO: Deleting pod "simpletest.rc-qlknf" in namespace "gc-2450"
  Jun 13 11:10:43.820: INFO: Deleting pod "simpletest.rc-rlp6t" in namespace "gc-2450"
  Jun 13 11:10:43.867: INFO: Deleting pod "simpletest.rc-rvkr4" in namespace "gc-2450"
  Jun 13 11:10:43.897: INFO: Deleting pod "simpletest.rc-s54hn" in namespace "gc-2450"
  Jun 13 11:10:43.926: INFO: Deleting pod "simpletest.rc-s6ps2" in namespace "gc-2450"
  Jun 13 11:10:43.984: INFO: Deleting pod "simpletest.rc-srnt4" in namespace "gc-2450"
  Jun 13 11:10:44.031: INFO: Deleting pod "simpletest.rc-tlb4p" in namespace "gc-2450"
  Jun 13 11:10:44.067: INFO: Deleting pod "simpletest.rc-tvn54" in namespace "gc-2450"
  Jun 13 11:10:44.096: INFO: Deleting pod "simpletest.rc-v22rt" in namespace "gc-2450"
  E0613 11:10:44.117398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:44.125: INFO: Deleting pod "simpletest.rc-v9nbb" in namespace "gc-2450"
  Jun 13 11:10:44.216: INFO: Deleting pod "simpletest.rc-vbxvj" in namespace "gc-2450"
  Jun 13 11:10:44.252: INFO: Deleting pod "simpletest.rc-vmsgv" in namespace "gc-2450"
  Jun 13 11:10:44.303: INFO: Deleting pod "simpletest.rc-vzlwt" in namespace "gc-2450"
  Jun 13 11:10:44.347: INFO: Deleting pod "simpletest.rc-w5llx" in namespace "gc-2450"
  Jun 13 11:10:44.383: INFO: Deleting pod "simpletest.rc-w5wjg" in namespace "gc-2450"
  Jun 13 11:10:44.423: INFO: Deleting pod "simpletest.rc-wchx5" in namespace "gc-2450"
  Jun 13 11:10:44.488: INFO: Deleting pod "simpletest.rc-whbjw" in namespace "gc-2450"
  Jun 13 11:10:44.511: INFO: Deleting pod "simpletest.rc-wzr2z" in namespace "gc-2450"
  Jun 13 11:10:44.553: INFO: Deleting pod "simpletest.rc-x2m7q" in namespace "gc-2450"
  Jun 13 11:10:44.576: INFO: Deleting pod "simpletest.rc-x4pl8" in namespace "gc-2450"
  Jun 13 11:10:44.596: INFO: Deleting pod "simpletest.rc-xd477" in namespace "gc-2450"
  Jun 13 11:10:44.616: INFO: Deleting pod "simpletest.rc-xrn7w" in namespace "gc-2450"
  Jun 13 11:10:44.643: INFO: Deleting pod "simpletest.rc-xrvgd" in namespace "gc-2450"
  Jun 13 11:10:44.670: INFO: Deleting pod "simpletest.rc-xs9s2" in namespace "gc-2450"
  Jun 13 11:10:44.688: INFO: Deleting pod "simpletest.rc-xztsb" in namespace "gc-2450"
  Jun 13 11:10:44.708: INFO: Deleting pod "simpletest.rc-zl8kq" in namespace "gc-2450"
  Jun 13 11:10:44.744: INFO: Deleting pod "simpletest.rc-znx6r" in namespace "gc-2450"
  Jun 13 11:10:44.771: INFO: Deleting pod "simpletest.rc-zsc84" in namespace "gc-2450"
  Jun 13 11:10:44.812: INFO: Deleting pod "simpletest.rc-zxbng" in namespace "gc-2450"
  Jun 13 11:10:44.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2450" for this suite. @ 06/13/24 11:10:44.844
• [44.463 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/13/24 11:10:44.866
  Jun 13 11:10:44.867: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename apf @ 06/13/24 11:10:44.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:10:44.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:10:44.936
  STEP: getting /apis @ 06/13/24 11:10:44.948
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/13/24 11:10:44.953
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/13/24 11:10:44.955
  STEP: creating @ 06/13/24 11:10:44.956
  STEP: getting @ 06/13/24 11:10:44.988
  STEP: listing @ 06/13/24 11:10:44.998
  STEP: watching @ 06/13/24 11:10:45.008
  Jun 13 11:10:45.008: INFO: starting watch
  STEP: patching @ 06/13/24 11:10:45.009
  STEP: updating @ 06/13/24 11:10:45.016
  Jun 13 11:10:45.026: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/13/24 11:10:45.026
  STEP: patching /status @ 06/13/24 11:10:45.035
  STEP: updating /status @ 06/13/24 11:10:45.049
  STEP: deleting @ 06/13/24 11:10:45.068
  STEP: deleting a collection @ 06/13/24 11:10:45.1
  E0613 11:10:45.117478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:45.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8143" for this suite. @ 06/13/24 11:10:45.165
• [0.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/13/24 11:10:45.185
  Jun 13 11:10:45.185: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl-logs @ 06/13/24 11:10:45.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:10:45.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:10:45.211
  STEP: creating an pod @ 06/13/24 11:10:45.22
  Jun 13 11:10:45.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jun 13 11:10:45.354: INFO: stderr: ""
  Jun 13 11:10:45.354: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/13/24 11:10:45.354
  Jun 13 11:10:45.354: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0613 11:10:46.118326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:47.118624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:47.362: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/13/24 11:10:47.362
  Jun 13 11:10:47.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 logs logs-generator logs-generator'
  Jun 13 11:10:47.434: INFO: stderr: ""
  Jun 13 11:10:47.434: INFO: stdout: "I0613 11:10:46.249776       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/btwj 227\nI0613 11:10:46.450253       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/wc8 518\nI0613 11:10:46.650699       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/mpt 454\nI0613 11:10:46.849849       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/m65t 321\nI0613 11:10:47.050293       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/dsvf 395\nI0613 11:10:47.250707       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/jkz 435\nI0613 11:10:47.450060       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/lsxw 474\n"
  STEP: limiting log lines @ 06/13/24 11:10:47.434
  Jun 13 11:10:47.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 logs logs-generator logs-generator --tail=1'
  Jun 13 11:10:47.504: INFO: stderr: ""
  Jun 13 11:10:47.504: INFO: stdout: "I0613 11:10:47.450060       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/lsxw 474\n"
  Jun 13 11:10:47.504: INFO: got output "I0613 11:10:47.450060       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/lsxw 474\n"
  STEP: limiting log bytes @ 06/13/24 11:10:47.504
  Jun 13 11:10:47.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 logs logs-generator logs-generator --limit-bytes=1'
  Jun 13 11:10:47.574: INFO: stderr: ""
  Jun 13 11:10:47.574: INFO: stdout: "I"
  Jun 13 11:10:47.574: INFO: got output "I"
  STEP: exposing timestamps @ 06/13/24 11:10:47.574
  Jun 13 11:10:47.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun 13 11:10:47.644: INFO: stderr: ""
  Jun 13 11:10:47.644: INFO: stdout: "2024-06-13T11:10:47.650498116Z I0613 11:10:47.650328       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/k54 466\n"
  Jun 13 11:10:47.644: INFO: got output "2024-06-13T11:10:47.650498116Z I0613 11:10:47.650328       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/k54 466\n"
  STEP: restricting to a time range @ 06/13/24 11:10:47.644
  E0613 11:10:48.118991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:49.119179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:50.119352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:50.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 logs logs-generator logs-generator --since=1s'
  Jun 13 11:10:50.214: INFO: stderr: ""
  Jun 13 11:10:50.214: INFO: stdout: "I0613 11:10:49.250341       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/lrrd 213\nI0613 11:10:49.450762       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/52gf 223\nI0613 11:10:49.650223       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/8mfm 428\nI0613 11:10:49.850591       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/7qkt 421\nI0613 11:10:50.049905       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/8kqb 327\n"
  Jun 13 11:10:50.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 logs logs-generator logs-generator --since=24h'
  Jun 13 11:10:50.284: INFO: stderr: ""
  Jun 13 11:10:50.284: INFO: stdout: "I0613 11:10:46.249776       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/btwj 227\nI0613 11:10:46.450253       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/wc8 518\nI0613 11:10:46.650699       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/mpt 454\nI0613 11:10:46.849849       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/m65t 321\nI0613 11:10:47.050293       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/dsvf 395\nI0613 11:10:47.250707       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/jkz 435\nI0613 11:10:47.450060       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/lsxw 474\nI0613 11:10:47.650328       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/k54 466\nI0613 11:10:47.850693       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/2m9d 232\nI0613 11:10:48.050030       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/n72w 387\nI0613 11:10:48.250425       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/8pjj 324\nI0613 11:10:48.450825       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/64n 391\nI0613 11:10:48.650247       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/4mn 212\nI0613 11:10:48.850490       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/8x5h 489\nI0613 11:10:49.050905       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/jc9l 224\nI0613 11:10:49.250341       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/lrrd 213\nI0613 11:10:49.450762       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/52gf 223\nI0613 11:10:49.650223       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/8mfm 428\nI0613 11:10:49.850591       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/7qkt 421\nI0613 11:10:50.049905       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/8kqb 327\nI0613 11:10:50.250155       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/bg5 292\n"
  Jun 13 11:10:50.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-logs-529 delete pod logs-generator'
  E0613 11:10:51.119709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:51.637: INFO: stderr: ""
  Jun 13 11:10:51.637: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun 13 11:10:51.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-529" for this suite. @ 06/13/24 11:10:51.64
• [6.463 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/13/24 11:10:51.647
  Jun 13 11:10:51.648: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 11:10:51.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:10:51.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:10:51.664
  STEP: Given a ReplicationController is created @ 06/13/24 11:10:51.667
  STEP: When the matched label of one of its pods change @ 06/13/24 11:10:51.672
  Jun 13 11:10:51.674: INFO: Pod name pod-release: Found 0 pods out of 1
  E0613 11:10:52.119937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:53.120345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:54.120504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:55.121004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:56.121539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:56.678: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/13/24 11:10:56.689
  E0613 11:10:57.122504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:10:57.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2948" for this suite. @ 06/13/24 11:10:57.71
• [6.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/13/24 11:10:57.719
  Jun 13 11:10:57.719: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename security-context @ 06/13/24 11:10:57.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:10:57.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:10:57.733
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/13/24 11:10:57.736
  E0613 11:10:58.123037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:10:59.123329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:00.123622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:01.124020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:11:01.755
  Jun 13 11:11:01.758: INFO: Trying to get logs from node 18.117.161.199 pod security-context-d7aca5cc-bfe1-46da-9931-4b736d674b05 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:11:01.773
  Jun 13 11:11:01.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6949" for this suite. @ 06/13/24 11:11:01.789
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/13/24 11:11:01.794
  Jun 13 11:11:01.794: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 11:11:01.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:01.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:01.809
  Jun 13 11:11:01.813: INFO: Creating deployment "webserver-deployment"
  Jun 13 11:11:01.818: INFO: Waiting for observed generation 1
  E0613 11:11:02.124636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:03.124867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:03.825: INFO: Waiting for all required pods to come up
  Jun 13 11:11:03.830: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/13/24 11:11:03.83
  Jun 13 11:11:03.830: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun 13 11:11:03.832: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:10, UpdatedReplicas:10, ReadyReplicas:9, AvailableReplicas:9, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 11, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 11, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 11, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 11, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"webserver-deployment-557759b7c7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:11:04.125046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:05.125282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:05.838: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun 13 11:11:05.846: INFO: Updating deployment webserver-deployment
  Jun 13 11:11:05.846: INFO: Waiting for observed generation 2
  E0613 11:11:06.125539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:07.126009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:07.851: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun 13 11:11:07.853: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun 13 11:11:07.855: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 13 11:11:07.862: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun 13 11:11:07.862: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun 13 11:11:07.864: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 13 11:11:07.869: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun 13 11:11:07.869: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun 13 11:11:07.878: INFO: Updating deployment webserver-deployment
  Jun 13 11:11:07.878: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun 13 11:11:07.885: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun 13 11:11:07.889: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jun 13 11:11:07.902: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09a9d9fa-7d44-4a3c-8d57-8572bce60295",
      ResourceVersion: (string) (len=5) "23135",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 11:11:07.916: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
      ResourceVersion: (string) (len=5) "23142",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "09a9d9fa-7d44-4a3c-8d57-8572bce60295",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 39 61 39 64 39  66 61 2d 37 64 34 34 2d  |\"09a9d9fa-7d44-|
              00000120  34 61 33 63 2d 38 64 35  37 2d 38 35 37 32 62 63  |4a3c-8d57-8572bc|
              00000130  65 36 30 32 39 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e60295\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:11:07.917: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun 13 11:11:07.917: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
      ResourceVersion: (string) (len=5) "23138",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "09a9d9fa-7d44-4a3c-8d57-8572bce60295",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 39 61 39 64 39  66 61 2d 37 64 34 34 2d  |\"09a9d9fa-7d44-|
              00000120  34 61 33 63 2d 38 64 35  37 2d 38 35 37 32 62 63  |4a3c-8d57-8572bc|
              00000130  65 36 30 32 39 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e60295\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:11:07.928: INFO: Pod "webserver-deployment-557759b7c7-4q8s2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4q8s2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4572ae8b-a377-48b2-bffd-72869a0ab7e7",
      ResourceVersion: (string) (len=5) "23153",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gp6hh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gp6hh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.929: INFO: Pod "webserver-deployment-557759b7c7-66f2g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-66f2g",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2496810b-7cfb-4a0b-a8f0-bcbcf8f63236",
      ResourceVersion: (string) (len=5) "23160",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xnpb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xnpb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.931: INFO: Pod "webserver-deployment-557759b7c7-8w4vm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8w4vm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdf06662-619c-4abc-b85d-39b75f0fae94",
      ResourceVersion: (string) (len=5) "23159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5n6wq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5n6wq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.932: INFO: Pod "webserver-deployment-557759b7c7-b7f55" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-b7f55",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6668afdc-3c55-40d9-9f79-4ae05c520966",
      ResourceVersion: (string) (len=5) "23144",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66xh2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66xh2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.933: INFO: Pod "webserver-deployment-557759b7c7-c4rbl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c4rbl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d5c44e6-414c-4531-951e-84cc88e19699",
      ResourceVersion: (string) (len=5) "23024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3d725a47b70ac473ce15c8c7ef17dd6cc6197c37da80e9be0342dae4c663ea8d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.164/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.164/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 36  34 5c 22 7d 22 3a 7b 22  |.42.2.164\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gv75p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gv75p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=11) "10.42.2.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://dfd11fa96ce312e082a05cd09dd4213e98e12293ab160f2776579626e9b361ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.935: INFO: Pod "webserver-deployment-557759b7c7-cvmqn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cvmqn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19be56f6-0ec0-4d2e-9118-ecb4691bde9c",
      ResourceVersion: (string) (len=5) "23006",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "18e740ec2207459f4bb07394f86d368285a40601caacbd5a938cc5848a70fdb2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 35  33 5c 22 7d 22 3a 7b 22  |.42.0.153\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99vl5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99vl5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=11) "10.42.0.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://b7289656ca174d81873d0cad92f483ed3ad207eb5ddfb742e9ffbcde53e977e6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.938: INFO: Pod "webserver-deployment-557759b7c7-j7jk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j7jk7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7bae157-1d87-480e-be34-929cb7585d5b",
      ResourceVersion: (string) (len=5) "23151",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qd9n4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qd9n4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.216.152.151",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.939: INFO: Pod "webserver-deployment-557759b7c7-jmqsg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jmqsg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b924955-1f3a-4c5c-a03b-b9450e29f8da",
      ResourceVersion: (string) (len=5) "23033",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "07dac812eadcccaf7507a7aeb45432897a26cab6c7099d21f6dae002e6d4c9ac",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.162/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 36  32 5c 22 7d 22 3a 7b 22  |.42.2.162\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fx4mb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fx4mb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=11) "10.42.2.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://41d9d597a11b3446bb90bfc098e55fdb1c593f947b8a25418f9fbb481160eda4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.941: INFO: Pod "webserver-deployment-557759b7c7-msm8n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-msm8n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa29b460-ec31-40b1-b7fa-a1a70a5f1d70",
      ResourceVersion: (string) (len=5) "23156",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9kfq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9kfq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.942: INFO: Pod "webserver-deployment-557759b7c7-n8rfx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n8rfx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfb9278c-922d-4a90-9d37-799ff342a887",
      ResourceVersion: (string) (len=5) "23027",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "787de4cf2d80115d5cdcb7bcf2e24ffe57fba2f0209298d8e91bdafbbe40dafc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.163/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.163/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 36  33 5c 22 7d 22 3a 7b 22  |.42.2.163\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sqr8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sqr8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=11) "10.42.2.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://41e843df427ad26a66c7aa49a98b0263538ffd66b9ceaaa57589b8e912ca0458",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.944: INFO: Pod "webserver-deployment-557759b7c7-nk4zj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nk4zj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2458d31e-0a4a-4502-96fb-51ada85dde95",
      ResourceVersion: (string) (len=5) "23008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "534f767c31cfbec722c4a5570111449d39df3f8e1189633cccdbb19ed1f83beb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.155/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.155/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 35  35 5c 22 7d 22 3a 7b 22  |.42.0.155\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqkjv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqkjv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=11) "10.42.0.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://84ce374db9017b9b839d5cbe89dba2f6a540e6160879e15167312a75efef8772",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.946: INFO: Pod "webserver-deployment-557759b7c7-sfhnh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sfhnh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f46a024-f5de-42e3-9340-1abec35a79d8",
      ResourceVersion: (string) (len=5) "23161",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xxg4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xxg4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.947: INFO: Pod "webserver-deployment-557759b7c7-txtjd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-txtjd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "685356e2-a8f6-40d4-af23-b1d9e4528d2c",
      ResourceVersion: (string) (len=5) "23015",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "906ad73733c391d2d67291a2fcbd560a968e5bf8539bc5ba82aa70f15e03d910",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.100/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.100/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 30  30 5c 22 7d 22 3a 7b 22  |.42.1.100\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kk85w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kk85w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.216.152.151",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.66"
        }
      },
      PodIP: (string) (len=11) "10.42.1.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://91f29eeb624a692b0b48737ae32d700aceb416455fdc02f1342cca55bf1d6ec2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.949: INFO: Pod "webserver-deployment-557759b7c7-wrjc9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wrjc9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67dd1908-dc1e-4910-90f9-8963b98d5cdb",
      ResourceVersion: (string) (len=5) "23021",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "16b43bd4cb38042dc84ae2a8630bc9e73e8c3a569638fd258a4fdc7b4c823df7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.102/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.102/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 30  32 5c 22 7d 22 3a 7b 22  |.42.1.102\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rnlvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rnlvs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.216.152.151",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.66"
        }
      },
      PodIP: (string) (len=11) "10.42.1.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://51f6f0dec3a440221f25a69bd1d5c0dad30b253dd5092d086782dddf51109db9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.951: INFO: Pod "webserver-deployment-557759b7c7-zmkzg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zmkzg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f613aae5-6039-4613-bfb3-91585f7ac8bb",
      ResourceVersion: (string) (len=5) "23017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.101/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.101/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "badcf90f1cfcddc86b71010b51537aec0be79bdd347cefa680689a887b17c2ff"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "30513a74-b2f8-4447-89fe-eca13dadcaec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  35 31 33 61 37 34 2d 62  |d\":\"30513a74-b|
              00000090  32 66 38 2d 34 34 34 37  2d 38 39 66 65 2d 65 63  |2f8-4447-89fe-ec|
              000000a0  61 31 33 64 61 64 63 61  65 63 5c 22 7d 22 3a 7b  |a13dadcaec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 30  31 5c 22 7d 22 3a 7b 22  |.42.1.101\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-svjx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-svjx9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.216.152.151",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.66"
        }
      },
      PodIP: (string) (len=11) "10.42.1.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://d3a83e9eb09f0099078783eb952603d5a84140b8093276e3d31d0a1293a56209",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.955: INFO: Pod "webserver-deployment-9b4f5bf69-cjzxn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cjzxn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2f0a328-2bdd-46c8-acce-1e26be36235f",
      ResourceVersion: (string) (len=5) "23103",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e420ab2a7fd7b1ca763862c6396435fba5db030be92a88cee77736c8bd0f8753",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.166/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.166/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zc86v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zc86v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.959: INFO: Pod "webserver-deployment-9b4f5bf69-nkczb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nkczb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b784b318-64c6-484b-b6f5-04f7424b68e7",
      ResourceVersion: (string) (len=5) "23137",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.165/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.165/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3e72b99a10831fc5cea1d70c95cfddc2b11cd319339c8b0b25530f96f29905bc"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 31 36 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |.2.165\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c8mqd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c8mqd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=11) "10.42.2.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=38) "Back-off pulling image \"webserver:404\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.961: INFO: Pod "webserver-deployment-9b4f5bf69-rcg6p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rcg6p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ea26b2b-503c-4810-bc9c-1059369efeb1",
      ResourceVersion: (string) (len=5) "23158",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6qf2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6qf2x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.962: INFO: Pod "webserver-deployment-9b4f5bf69-rkzbw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rkzbw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4feaf03f-f875-4888-9ef9-dd299ddf0f05",
      ResourceVersion: (string) (len=5) "23157",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-prjxs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-prjxs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.963: INFO: Pod "webserver-deployment-9b4f5bf69-t2pzz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t2pzz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ffba960-7614-496d-8d03-270409f7dc28",
      ResourceVersion: (string) (len=5) "23130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d7e553c615f2b04325e1e593ec42cda74b53c648d8e1cbd07734f7493abf0bb7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.157/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.157/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 35 37 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.157\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jwvgq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jwvgq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=11) "10.42.0.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.965: INFO: Pod "webserver-deployment-9b4f5bf69-vfpn7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vfpn7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3ca1a74-fc71-4525-baeb-c2f56238babb",
      ResourceVersion: (string) (len=5) "23133",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d82b2e170110656817fa1ee6b697b93ccc5887a4d7c85672b0bd4b44c4477fc5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.103/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.103/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 30 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.103\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8f547",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8f547",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.216.152.151",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.29.66"
        }
      },
      PodIP: (string) (len=11) "10.42.1.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.967: INFO: Pod "webserver-deployment-9b4f5bf69-xf6rj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xf6rj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c83ab09-4f9d-4bdc-9795-418553a26d42",
      ResourceVersion: (string) (len=5) "23154",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jtdw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jtdw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.216.152.151",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.969: INFO: Pod "webserver-deployment-9b4f5bf69-zjdzj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zjdzj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edaa980b-e5ff-4e65-a319-2c21f0fb74c5",
      ResourceVersion: (string) (len=5) "23127",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "195b281af7cc3c2a4715ed7935214a9166db68be01bc0ccf5a86a8e3769eea68",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.156/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.156/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b80bbe7d-e920-4d0b-bf49-666a784e9204",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  30 62 62 65 37 64 2d 65  |d\":\"b80bbe7d-e|
              00000090  39 32 30 2d 34 64 30 62  2d 62 66 34 39 2d 36 36  |920-4d0b-bf49-66|
              000000a0  36 61 37 38 34 65 39 32  30 34 5c 22 7d 22 3a 7b  |6a784e9204\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 35 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.156\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pxxph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pxxph",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) (len=11) "10.42.0.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:11:07.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2341" for this suite. @ 06/13/24 11:11:07.989
• [6.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/13/24 11:11:08.006
  Jun 13 11:11:08.006: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:11:08.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:08.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:08.036
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-721 @ 06/13/24 11:11:08.039
  STEP: changing the ExternalName service to type=ClusterIP @ 06/13/24 11:11:08.047
  STEP: creating replication controller externalname-service in namespace services-721 @ 06/13/24 11:11:08.075
  I0613 11:11:08.090332      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-721, replica count: 2
  E0613 11:11:08.126921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:09.128055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:10.128883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:11.129420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:11:11.141721      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 11:11:11.141: INFO: Creating new exec pod
  E0613 11:11:12.130082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:13.130319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:14.131176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:14.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-721 exec execpodxszrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 13 11:11:14.310: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 13 11:11:14.310: INFO: stdout: ""
  E0613 11:11:15.132289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:15.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-721 exec execpodxszrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 13 11:11:15.310: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 13 11:11:15.310: INFO: stdout: "externalname-service-jfvjw"
  Jun 13 11:11:15.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-721 exec execpodxszrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.246.27 80'
  Jun 13 11:11:15.465: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.246.27 80\nConnection to 10.43.246.27 80 port [tcp/http] succeeded!\n"
  Jun 13 11:11:15.465: INFO: stdout: "externalname-service-lc4x2"
  Jun 13 11:11:15.465: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun 13 11:11:15.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-721" for this suite. @ 06/13/24 11:11:15.482
• [7.482 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/13/24 11:11:15.488
  Jun 13 11:11:15.488: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename discovery @ 06/13/24 11:11:15.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:15.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:15.501
  STEP: Setting up server cert @ 06/13/24 11:11:15.505
  STEP: Requesting APIResourceList from "/api/v1" @ 06/13/24 11:11:16.086
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/13/24 11:11:16.089
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/13/24 11:11:16.09
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/13/24 11:11:16.092
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/13/24 11:11:16.093
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/13/24 11:11:16.094
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/13/24 11:11:16.096
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/13/24 11:11:16.097
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/13/24 11:11:16.098
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/13/24 11:11:16.099
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/13/24 11:11:16.101
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/13/24 11:11:16.102
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/13/24 11:11:16.103
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/13/24 11:11:16.104
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/13/24 11:11:16.106
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/13/24 11:11:16.107
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/13/24 11:11:16.108
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/13/24 11:11:16.109
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/13/24 11:11:16.111
  Jun 13 11:11:16.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5781" for this suite. @ 06/13/24 11:11:16.116
• [0.633 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/13/24 11:11:16.121
  Jun 13 11:11:16.121: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 11:11:16.122
  E0613 11:11:16.132313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:16.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:16.137
  STEP: Creating simple DaemonSet "daemon-set" @ 06/13/24 11:11:16.154
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 11:11:16.16
  Jun 13 11:11:16.165: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 11:11:16.165: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  E0613 11:11:17.133251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:17.168: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 13 11:11:17.168: INFO: Node 18.117.161.199 is running 0 daemon pod, expected 1
  E0613 11:11:18.133377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:18.168: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 11:11:18.168: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/13/24 11:11:18.17
  Jun 13 11:11:18.185: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 11:11:18.185: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  E0613 11:11:19.133543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:19.187: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 11:11:19.187: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  E0613 11:11:20.134541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:20.187: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 11:11:20.187: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  E0613 11:11:21.135432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:21.187: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 11:11:21.187: INFO: Node 18.216.152.151 is running 0 daemon pod, expected 1
  E0613 11:11:22.136507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:22.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 11:11:22.186: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 11:11:22.189
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5803, will wait for the garbage collector to delete the pods @ 06/13/24 11:11:22.189
  Jun 13 11:11:22.245: INFO: Deleting DaemonSet.extensions daemon-set took: 4.215035ms
  Jun 13 11:11:22.346: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.78274ms
  E0613 11:11:23.137176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:24.137298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:25.138043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:25.249: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 11:11:25.249: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 11:11:25.252: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23639"},"items":null}

  Jun 13 11:11:25.254: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23639"},"items":null}

  Jun 13 11:11:25.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5803" for this suite. @ 06/13/24 11:11:25.267
• [9.150 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/13/24 11:11:25.272
  Jun 13 11:11:25.272: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:11:25.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:25.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:25.301
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/13/24 11:11:25.304
  E0613 11:11:26.139178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:27.139618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:28.139957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:29.140094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:11:29.32
  Jun 13 11:11:29.323: INFO: Trying to get logs from node 18.117.132.30 pod pod-b6584cc3-7627-438c-92ff-1a1cdcab41e3 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:11:29.331
  Jun 13 11:11:29.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4441" for this suite. @ 06/13/24 11:11:29.347
• [4.080 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/13/24 11:11:29.352
  Jun 13 11:11:29.352: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:11:29.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:29.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:29.369
  STEP: creating a replication controller @ 06/13/24 11:11:29.373
  Jun 13 11:11:29.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 create -f -'
  Jun 13 11:11:29.499: INFO: stderr: ""
  Jun 13 11:11:29.500: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 11:11:29.5
  Jun 13 11:11:29.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 11:11:29.567: INFO: stderr: ""
  Jun 13 11:11:29.567: INFO: stdout: "update-demo-nautilus-59t6g update-demo-nautilus-9mh75 "
  Jun 13 11:11:29.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods update-demo-nautilus-59t6g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:11:29.630: INFO: stderr: ""
  Jun 13 11:11:29.630: INFO: stdout: ""
  Jun 13 11:11:29.630: INFO: update-demo-nautilus-59t6g is created but not running
  E0613 11:11:30.140951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:31.141548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:32.142113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:33.142442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:34.143280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:34.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 11:11:34.696: INFO: stderr: ""
  Jun 13 11:11:34.696: INFO: stdout: "update-demo-nautilus-59t6g update-demo-nautilus-9mh75 "
  Jun 13 11:11:34.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods update-demo-nautilus-59t6g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:11:34.761: INFO: stderr: ""
  Jun 13 11:11:34.761: INFO: stdout: ""
  Jun 13 11:11:34.761: INFO: update-demo-nautilus-59t6g is created but not running
  E0613 11:11:35.143374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:36.143520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:37.144073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:38.144324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:39.144477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:39.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 11:11:39.830: INFO: stderr: ""
  Jun 13 11:11:39.830: INFO: stdout: "update-demo-nautilus-59t6g update-demo-nautilus-9mh75 "
  Jun 13 11:11:39.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods update-demo-nautilus-59t6g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:11:39.897: INFO: stderr: ""
  Jun 13 11:11:39.897: INFO: stdout: "true"
  Jun 13 11:11:39.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods update-demo-nautilus-59t6g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 11:11:39.960: INFO: stderr: ""
  Jun 13 11:11:39.960: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 11:11:39.960: INFO: validating pod update-demo-nautilus-59t6g
  Jun 13 11:11:39.964: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 11:11:39.964: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 11:11:39.964: INFO: update-demo-nautilus-59t6g is verified up and running
  Jun 13 11:11:39.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods update-demo-nautilus-9mh75 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:11:40.027: INFO: stderr: ""
  Jun 13 11:11:40.027: INFO: stdout: "true"
  Jun 13 11:11:40.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods update-demo-nautilus-9mh75 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 11:11:40.090: INFO: stderr: ""
  Jun 13 11:11:40.090: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 11:11:40.090: INFO: validating pod update-demo-nautilus-9mh75
  Jun 13 11:11:40.094: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 11:11:40.094: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 11:11:40.094: INFO: update-demo-nautilus-9mh75 is verified up and running
  STEP: using delete to clean up resources @ 06/13/24 11:11:40.094
  Jun 13 11:11:40.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 delete --grace-period=0 --force -f -'
  E0613 11:11:40.145542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:40.159: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 11:11:40.159: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 13 11:11:40.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get rc,svc -l name=update-demo --no-headers'
  Jun 13 11:11:40.231: INFO: stderr: "No resources found in kubectl-4858 namespace.\n"
  Jun 13 11:11:40.231: INFO: stdout: ""
  Jun 13 11:11:40.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-4858 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 13 11:11:40.298: INFO: stderr: ""
  Jun 13 11:11:40.298: INFO: stdout: ""
  Jun 13 11:11:40.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4858" for this suite. @ 06/13/24 11:11:40.303
• [10.960 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/13/24 11:11:40.315
  Jun 13 11:11:40.315: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 11:11:40.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:40.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:40.341
  STEP: Create a Replicaset @ 06/13/24 11:11:40.347
  STEP: Verify that the required pods have come up. @ 06/13/24 11:11:40.353
  Jun 13 11:11:40.357: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0613 11:11:41.145684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:42.146344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:43.146581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:44.146860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:45.147133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:45.361: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 11:11:45.362
  STEP: Getting /status @ 06/13/24 11:11:45.362
  Jun 13 11:11:45.365: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/13/24 11:11:45.365
  Jun 13 11:11:45.374: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/13/24 11:11:45.374
  Jun 13 11:11:45.376: INFO: Observed &ReplicaSet event: ADDED
  Jun 13 11:11:45.376: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 11:11:45.376: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 11:11:45.376: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 11:11:45.376: INFO: Found replicaset test-rs in namespace replicaset-5967 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 11:11:45.376: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/13/24 11:11:45.376
  Jun 13 11:11:45.376: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 13 11:11:45.382: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/13/24 11:11:45.382
  Jun 13 11:11:45.385: INFO: Observed &ReplicaSet event: ADDED
  Jun 13 11:11:45.385: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 11:11:45.385: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 11:11:45.385: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 11:11:45.385: INFO: Observed replicaset test-rs in namespace replicaset-5967 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 11:11:45.385: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 11:11:45.385: INFO: Found replicaset test-rs in namespace replicaset-5967 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun 13 11:11:45.385: INFO: Replicaset test-rs has a patched status
  Jun 13 11:11:45.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5967" for this suite. @ 06/13/24 11:11:45.388
• [5.078 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/13/24 11:11:45.394
  Jun 13 11:11:45.394: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:11:45.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:45.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:45.409
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-300 @ 06/13/24 11:11:45.412
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/13/24 11:11:45.426
  STEP: creating service externalsvc in namespace services-300 @ 06/13/24 11:11:45.426
  STEP: creating replication controller externalsvc in namespace services-300 @ 06/13/24 11:11:45.441
  I0613 11:11:45.447589      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-300, replica count: 2
  E0613 11:11:46.147757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:47.147802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:48.148060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:11:48.498762      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/13/24 11:11:48.501
  Jun 13 11:11:48.515: INFO: Creating new exec pod
  E0613 11:11:49.148163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:50.149292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:50.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-300 exec execpoddr5tq -- /bin/sh -x -c nslookup nodeport-service.services-300.svc.cluster.local'
  Jun 13 11:11:50.708: INFO: stderr: "+ nslookup nodeport-service.services-300.svc.cluster.local\n"
  Jun 13 11:11:50.708: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-300.svc.cluster.local\tcanonical name = externalsvc.services-300.svc.cluster.local.\nName:\texternalsvc.services-300.svc.cluster.local\nAddress: 10.43.24.250\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-300, will wait for the garbage collector to delete the pods @ 06/13/24 11:11:50.708
  Jun 13 11:11:50.766: INFO: Deleting ReplicationController externalsvc took: 4.730704ms
  Jun 13 11:11:50.867: INFO: Terminating ReplicationController externalsvc pods took: 101.107972ms
  E0613 11:11:51.150134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:52.150759      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:53.151122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:53.780: INFO: Cleaning up the NodePort to ExternalName test service
  Jun 13 11:11:53.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-300" for this suite. @ 06/13/24 11:11:53.792
• [8.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/13/24 11:11:53.797
  Jun 13 11:11:53.797: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 11:11:53.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:11:53.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:11:53.812
  Jun 13 11:11:53.823: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0613 11:11:54.151972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:55.152109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:56.152383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:57.152570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:11:58.152725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:11:58.827: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 11:11:58.827
  Jun 13 11:11:58.827: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0613 11:11:59.153208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:00.153517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:00.831: INFO: Creating deployment "test-rollover-deployment"
  Jun 13 11:12:00.841: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0613 11:12:01.154647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:02.155178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:02.847: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun 13 11:12:02.852: INFO: Ensure that both replica sets have 1 created replica
  Jun 13 11:12:02.856: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun 13 11:12:02.866: INFO: Updating deployment test-rollover-deployment
  Jun 13 11:12:02.866: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0613 11:12:03.156045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:04.156338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:04.872: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun 13 11:12:04.877: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun 13 11:12:04.882: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 11:12:04.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:12:05.156836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:06.156954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:06.888: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 11:12:06.888: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:12:07.157730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:08.157878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:08.888: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 11:12:08.888: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:12:09.158682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:10.158927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:10.889: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 11:12:10.889: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:12:11.160050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:12.160102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:12.888: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 11:12:12.889: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 12, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 12, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:12:13.161183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:14.161634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:12:14.889: INFO: 
  Jun 13 11:12:14.889: INFO: Ensure that both old replica sets have no replicas
  Jun 13 11:12:14.896: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6510",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8662db5-f2c2-40b7-9528-0cff045164ca",
      ResourceVersion: (string) (len=5) "24051",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873920,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 11:12:14.900: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6510",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "240844aa-eeff-43c0-b4b0-ee8c12b747b3",
      ResourceVersion: (string) (len=5) "24040",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f8662db5-f2c2-40b7-9528-0cff045164ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 36 36 32 64  62 35 2d 66 32 63 32 2d  |\"f8662db5-f2c2-|
              00000120  34 30 62 37 2d 39 35 32  38 2d 30 63 66 66 30 34  |40b7-9528-0cff04|
              00000130  35 31 36 34 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5164ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:12:14.901: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun 13 11:12:14.901: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6510",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2de6137-9737-4bdb-b436-77d80d214a53",
      ResourceVersion: (string) (len=5) "24050",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873913,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f8662db5-f2c2-40b7-9528-0cff045164ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 38 36 36 32 64 62 35  2d 66 32 63 32 2d 34 30  |f8662db5-f2c2-40|
              000000c0  62 37 2d 39 35 32 38 2d  30 63 66 66 30 34 35 31  |b7-9528-0cff0451|
              000000d0  36 34 63 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |64ca\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:12:14.902: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6510",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "141f0e41-671f-4e2e-a595-9116c153a00f",
      ResourceVersion: (string) (len=5) "24005",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873920,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f8662db5-f2c2-40b7-9528-0cff045164ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 36 36 32 64  62 35 2d 66 32 63 32 2d  |\"f8662db5-f2c2-|
              00000120  34 30 62 37 2d 39 35 32  38 2d 30 63 66 66 30 34  |40b7-9528-0cff04|
              00000130  35 31 36 34 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5164ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:12:14.915: INFO: Pod "test-rollover-deployment-68774655d5-8tjml" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-8tjml",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-6510",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94fda454-18fc-4aba-a808-c2698a4232e1",
      ResourceVersion: (string) (len=5) "24021",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.174/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d5ae0a957bdd6657a10d811f2604b53b8765ce436fcf77c3c02bda8ec613e83b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.174/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "240844aa-eeff-43c0-b4b0-ee8c12b747b3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 34  30 38 34 34 61 61 2d 65  |d\":\"240844aa-e|
              00000090  65 66 66 2d 34 33 63 30  2d 62 34 62 30 2d 65 65  |eff-43c0-b4b0-ee|
              000000a0  38 63 31 32 62 37 34 37  62 33 5c 22 7d 22 3a 7b  |8c12b747b3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 37  34 5c 22 7d 22 3a 7b 22  |.42.2.174\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n4prd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n4prd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853873922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=11) "10.42.2.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853873922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853873923,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://d521b38eaaa0328eefcc5383a97d865b83b0648ff4beaaaeebdb6c39759bfc5b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:12:14.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6510" for this suite. @ 06/13/24 11:12:14.921
• [21.129 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/13/24 11:12:14.926
  Jun 13 11:12:14.926: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 11:12:14.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:12:14.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:12:14.941
  STEP: Creating a pod to test env composition @ 06/13/24 11:12:14.944
  E0613 11:12:15.162087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:16.162241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:17.162599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:18.162876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:12:18.959
  Jun 13 11:12:18.961: INFO: Trying to get logs from node 18.117.161.199 pod var-expansion-917e7962-528c-4a24-b129-74cc9f0dfd25 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 11:12:18.968
  Jun 13 11:12:18.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7857" for this suite. @ 06/13/24 11:12:18.982
• [4.061 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/13/24 11:12:18.987
  Jun 13 11:12:18.987: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 11:12:18.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:12:19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:12:19.003
  Jun 13 11:12:19.017: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 11:12:19.163993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:20.164094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:21.164996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:22.165678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:23.165760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:24.166019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:25.166091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:26.166325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:27.167032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:28.167335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:29.168410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:30.168729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:31.169748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:32.170387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:33.171437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:34.171706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:35.172522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:36.173226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:37.173436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:38.173579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:39.173811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:40.174069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:41.174904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:42.175395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:43.175968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:44.176114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:45.176303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:46.176448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:47.177432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:48.177640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:49.178497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:50.178619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:51.179546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:52.179694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:53.180385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:54.180557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:55.181151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:56.181455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:57.182314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:58.182558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:12:59.183180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:00.184218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:01.184615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:02.185348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:03.186146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:04.186407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:05.187127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:06.187377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:07.188386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:08.188535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:09.189328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:10.189560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:11.190511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:12.191096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:13.191740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:14.191882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:15.192949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:16.193211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:17.194079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:18.194335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:13:19.022: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/13/24 11:13:19.024
  Jun 13 11:13:19.024: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/13/24 11:13:19.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:13:19.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:13:19.041
  Jun 13 11:13:19.056: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun 13 11:13:19.058: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun 13 11:13:19.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6287" for this suite. @ 06/13/24 11:13:19.114
  Jun 13 11:13:19.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7649" for this suite. @ 06/13/24 11:13:19.121
• [60.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/13/24 11:13:19.128
  Jun 13 11:13:19.128: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:13:19.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:13:19.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:13:19.142
  STEP: creating service nodeport-test with type=NodePort in namespace services-914 @ 06/13/24 11:13:19.145
  STEP: creating replication controller nodeport-test in namespace services-914 @ 06/13/24 11:13:19.156
  I0613 11:13:19.162132      23 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-914, replica count: 2
  E0613 11:13:19.194576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:20.195407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:21.196036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:22.196513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:13:22.212712      23 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 11:13:22.212: INFO: Creating new exec pod
  E0613 11:13:23.196993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:24.197374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:25.197530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:13:25.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-914 exec execpodckfgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun 13 11:13:25.390: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun 13 11:13:25.390: INFO: stdout: "nodeport-test-twj92"
  Jun 13 11:13:25.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-914 exec execpodckfgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.149.221 80'
  Jun 13 11:13:25.540: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.149.221 80\nConnection to 10.43.149.221 80 port [tcp/http] succeeded!\n"
  Jun 13 11:13:25.540: INFO: stdout: "nodeport-test-twj92"
  Jun 13 11:13:25.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-914 exec execpodckfgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.95 32219'
  Jun 13 11:13:25.688: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.95 32219\nConnection to 172.31.16.95 32219 port [tcp/*] succeeded!\n"
  Jun 13 11:13:25.688: INFO: stdout: ""
  E0613 11:13:26.197687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:13:26.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-914 exec execpodckfgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.95 32219'
  Jun 13 11:13:26.696: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.95 32219\nConnection to 172.31.16.95 32219 port [tcp/*] succeeded!\n"
  Jun 13 11:13:26.696: INFO: stdout: "nodeport-test-ctkg5"
  Jun 13 11:13:26.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-914 exec execpodckfgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.66 32219'
  Jun 13 11:13:26.844: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.66 32219\nConnection to 172.31.29.66 32219 port [tcp/*] succeeded!\n"
  Jun 13 11:13:26.844: INFO: stdout: "nodeport-test-twj92"
  Jun 13 11:13:26.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-914" for this suite. @ 06/13/24 11:13:26.848
• [7.724 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/13/24 11:13:26.852
  Jun 13 11:13:26.852: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:13:26.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:13:26.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:13:26.867
  STEP: Creating configMap with name projected-configmap-test-volume-b8c62b3e-4274-4f33-b1e1-ca532e78fbb6 @ 06/13/24 11:13:26.87
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:13:26.873
  E0613 11:13:27.198394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:28.199139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:29.199726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:30.199993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:13:30.892
  Jun 13 11:13:30.894: INFO: Trying to get logs from node 18.117.161.199 pod pod-projected-configmaps-cc07798b-7152-4cc2-8b2d-de38019829e2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:13:30.901
  Jun 13 11:13:30.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8579" for this suite. @ 06/13/24 11:13:30.919
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/13/24 11:13:30.925
  Jun 13 11:13:30.925: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 11:13:30.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:13:30.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:13:30.942
  E0613 11:13:31.200563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:32.201112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:33.201220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:34.201668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:35.202751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:36.203695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:37.203811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:38.204322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:39.204927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:40.205535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:41.206296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:42.207270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:43.207916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:44.208241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:45.209130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:46.209584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:47.209656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:48.210808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:49.211335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:50.211444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:51.211675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:52.212216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:53.212602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:54.213210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:55.213420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:56.214020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:57.214917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:58.215249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:13:59.215374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:00.216158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:01.217140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:02.218044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:03.218870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:04.219590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:05.220290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:06.220862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:07.221120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:08.221460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:09.222089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:10.222858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:11.223845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:12.224489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:13.224885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:14.225833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:15.226567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:16.227600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:17.227723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:18.227942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:19.228846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:20.229445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:21.230305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:22.231414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:23.231862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:24.232469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:25.233307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:26.234265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:27.235276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:28.235319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:29.235989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:30.236637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:14:30.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3192" for this suite. @ 06/13/24 11:14:30.961
• [60.043 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/13/24 11:14:30.968
  Jun 13 11:14:30.968: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 11:14:30.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:14:30.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:14:30.984
  STEP: Creating a pod to test substitution in volume subpath @ 06/13/24 11:14:30.987
  E0613 11:14:31.237284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:32.237520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:33.238211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:34.238424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:14:35.008
  Jun 13 11:14:35.014: INFO: Trying to get logs from node 18.117.161.199 pod var-expansion-ab8f4c8d-c816-438f-888b-66bba2bdbc67 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 11:14:35.021
  Jun 13 11:14:35.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3777" for this suite. @ 06/13/24 11:14:35.04
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/13/24 11:14:35.046
  Jun 13 11:14:35.046: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 11:14:35.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:14:35.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:14:35.064
  STEP: create the container @ 06/13/24 11:14:35.067
  W0613 11:14:35.073426      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/13/24 11:14:35.073
  E0613 11:14:35.238762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:36.238993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:37.240068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/13/24 11:14:38.088
  STEP: the container should be terminated @ 06/13/24 11:14:38.09
  STEP: the termination message should be set @ 06/13/24 11:14:38.09
  Jun 13 11:14:38.090: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/13/24 11:14:38.091
  Jun 13 11:14:38.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1993" for this suite. @ 06/13/24 11:14:38.109
• [3.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/13/24 11:14:38.116
  Jun 13 11:14:38.116: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 11:14:38.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:14:38.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:14:38.13
  Jun 13 11:14:38.133: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:14:38.240894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:39.241066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:40.241212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0613 11:14:40.675618      23 warnings.go:70] unknown field "alpha"
  W0613 11:14:40.675650      23 warnings.go:70] unknown field "beta"
  W0613 11:14:40.675657      23 warnings.go:70] unknown field "delta"
  W0613 11:14:40.675663      23 warnings.go:70] unknown field "epsilon"
  W0613 11:14:40.675669      23 warnings.go:70] unknown field "gamma"
  Jun 13 11:14:41.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2668" for this suite. @ 06/13/24 11:14:41.222
• [3.113 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/13/24 11:14:41.23
  Jun 13 11:14:41.230: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 11:14:41.23
  E0613 11:14:41.242240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:14:41.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:14:41.248
  Jun 13 11:14:41.263: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 11:14:42.242431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:43.242883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:44.243152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:45.243422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:46.243483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:47.243730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:48.244515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:49.245055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:50.245533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:51.246238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:52.246922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:53.247135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:54.247423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:55.248375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:56.249206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:57.249648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:58.249801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:14:59.250057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:00.250898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:01.251810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:02.252110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:03.253204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:04.254010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:05.254244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:06.254518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:07.254718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:08.254856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:09.255170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:10.255656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:11.256596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:12.257091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:13.257885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:14.258408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:15.258654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:16.259746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:17.260007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:18.260834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:19.261924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:20.262087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:21.262933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:22.263385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:23.263646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:24.264176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:25.264535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:26.265190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:27.265318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:28.265871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:29.266111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:30.266229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:31.266450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:32.267443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:33.267510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:34.267934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:35.268726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:36.269769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:37.270659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:38.270929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:39.271108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:40.271363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:15:41.267: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/13/24 11:15:41.27
  E0613 11:15:41.271489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:15:41.288: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 13 11:15:41.295: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 13 11:15:41.314: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 13 11:15:41.320: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 13 11:15:41.338: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 13 11:15:41.345: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/13/24 11:15:41.345
  E0613 11:15:42.272324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:43.272976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/13/24 11:15:43.364
  E0613 11:15:44.273474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:45.273745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:46.274621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:47.274879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:48.275475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:49.275712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:15:49.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-882" for this suite. @ 06/13/24 11:15:49.432
• [68.210 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/13/24 11:15:49.44
  Jun 13 11:15:49.440: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 11:15:49.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:15:49.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:15:49.454
  Jun 13 11:15:49.456: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:15:50.275792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:15:50.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6541" for this suite. @ 06/13/24 11:15:50.482
• [1.048 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/13/24 11:15:50.488
  Jun 13 11:15:50.488: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 11:15:50.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:15:50.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:15:50.502
  STEP: Creating ReplicationController "e2e-rc-6clfp" @ 06/13/24 11:15:50.505
  Jun 13 11:15:50.512: INFO: Get Replication Controller "e2e-rc-6clfp" to confirm replicas
  E0613 11:15:51.276603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:15:51.512: INFO: Get Replication Controller "e2e-rc-6clfp" to confirm replicas
  Jun 13 11:15:51.515: INFO: Found 1 replicas for "e2e-rc-6clfp" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-6clfp" @ 06/13/24 11:15:51.515
  STEP: Updating a scale subresource @ 06/13/24 11:15:51.518
  STEP: Verifying replicas where modified for replication controller "e2e-rc-6clfp" @ 06/13/24 11:15:51.524
  Jun 13 11:15:51.524: INFO: Get Replication Controller "e2e-rc-6clfp" to confirm replicas
  E0613 11:15:52.276682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:15:52.525: INFO: Get Replication Controller "e2e-rc-6clfp" to confirm replicas
  Jun 13 11:15:52.528: INFO: Found 2 replicas for "e2e-rc-6clfp" replication controller
  Jun 13 11:15:52.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7345" for this suite. @ 06/13/24 11:15:52.531
• [2.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/13/24 11:15:52.539
  Jun 13 11:15:52.539: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:15:52.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:15:52.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:15:52.553
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/13/24 11:15:52.556
  E0613 11:15:53.277761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:54.278214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:55.278291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:15:56.278825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:15:56.581
  Jun 13 11:15:56.584: INFO: Trying to get logs from node 18.117.132.30 pod pod-66bd1c84-1c59-4a25-b2c9-aeb7dd1dfb94 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:15:56.594
  Jun 13 11:15:56.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1932" for this suite. @ 06/13/24 11:15:56.609
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/13/24 11:15:56.616
  Jun 13 11:15:56.616: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 11:15:56.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:15:56.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:15:56.63
  Jun 13 11:15:56.633: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:15:57.279184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/13/24 11:15:57.97
  Jun 13 11:15:57.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 create -f -'
  Jun 13 11:15:58.053: INFO: stderr: ""
  Jun 13 11:15:58.054: INFO: stdout: "e2e-test-crd-publish-openapi-6808-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 13 11:15:58.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 delete e2e-test-crd-publish-openapi-6808-crds test-foo'
  Jun 13 11:15:58.120: INFO: stderr: ""
  Jun 13 11:15:58.120: INFO: stdout: "e2e-test-crd-publish-openapi-6808-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun 13 11:15:58.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 apply -f -'
  Jun 13 11:15:58.192: INFO: stderr: ""
  Jun 13 11:15:58.192: INFO: stdout: "e2e-test-crd-publish-openapi-6808-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 13 11:15:58.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 delete e2e-test-crd-publish-openapi-6808-crds test-foo'
  Jun 13 11:15:58.263: INFO: stderr: ""
  Jun 13 11:15:58.263: INFO: stdout: "e2e-test-crd-publish-openapi-6808-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/13/24 11:15:58.263
  Jun 13 11:15:58.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 create -f -'
  E0613 11:15:58.280280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:15:58.329: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/13/24 11:15:58.329
  Jun 13 11:15:58.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 create -f -'
  Jun 13 11:15:58.394: INFO: rc: 1
  Jun 13 11:15:58.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 apply -f -'
  Jun 13 11:15:58.469: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/13/24 11:15:58.469
  Jun 13 11:15:58.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 create -f -'
  Jun 13 11:15:58.535: INFO: rc: 1
  Jun 13 11:15:58.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 --namespace=crd-publish-openapi-2079 apply -f -'
  Jun 13 11:15:58.607: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/13/24 11:15:58.607
  Jun 13 11:15:58.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 explain e2e-test-crd-publish-openapi-6808-crds'
  Jun 13 11:15:58.670: INFO: stderr: ""
  Jun 13 11:15:58.670: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6808-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/13/24 11:15:58.67
  Jun 13 11:15:58.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 explain e2e-test-crd-publish-openapi-6808-crds.metadata'
  Jun 13 11:15:58.742: INFO: stderr: ""
  Jun 13 11:15:58.743: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6808-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun 13 11:15:58.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 explain e2e-test-crd-publish-openapi-6808-crds.spec'
  Jun 13 11:15:58.826: INFO: stderr: ""
  Jun 13 11:15:58.826: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6808-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun 13 11:15:58.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 explain e2e-test-crd-publish-openapi-6808-crds.spec.bars'
  Jun 13 11:15:58.902: INFO: stderr: ""
  Jun 13 11:15:58.902: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6808-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/13/24 11:15:58.903
  Jun 13 11:15:58.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-2079 explain e2e-test-crd-publish-openapi-6808-crds.spec.bars2'
  Jun 13 11:15:58.965: INFO: rc: 1
  E0613 11:15:59.281006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:00.281101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:16:00.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2079" for this suite. @ 06/13/24 11:16:00.301
• [3.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/13/24 11:16:00.305
  Jun 13 11:16:00.305: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename watch @ 06/13/24 11:16:00.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:00.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:00.32
  STEP: creating a watch on configmaps with label A @ 06/13/24 11:16:00.323
  STEP: creating a watch on configmaps with label B @ 06/13/24 11:16:00.324
  STEP: creating a watch on configmaps with label A or B @ 06/13/24 11:16:00.325
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/13/24 11:16:00.327
  Jun 13 11:16:00.332: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24973 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:16:00.333: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24973 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/13/24 11:16:00.333
  Jun 13 11:16:00.339: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24974 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:16:00.339: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24974 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/13/24 11:16:00.339
  Jun 13 11:16:00.345: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24975 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:16:00.345: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24975 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/13/24 11:16:00.345
  Jun 13 11:16:00.349: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24976 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:16:00.349: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1607  7e474331-4a73-48a0-b5a0-70d5357364b6 24976 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/13/24 11:16:00.349
  Jun 13 11:16:00.353: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1607  72183e64-74cc-4d22-89d6-6f912b17580f 24977 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:16:00.353: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1607  72183e64-74cc-4d22-89d6-6f912b17580f 24977 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0613 11:16:01.281917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:02.282162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:03.282353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:04.282645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:05.283357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:06.283869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:07.284078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:08.284364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:09.284640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:10.284888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/13/24 11:16:10.354
  Jun 13 11:16:10.359: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1607  72183e64-74cc-4d22-89d6-6f912b17580f 25004 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:16:10.359: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1607  72183e64-74cc-4d22-89d6-6f912b17580f 25004 0 2024-06-13 11:16:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 11:16:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0613 11:16:11.285989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:12.286235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:13.286488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:14.286741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:15.287019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:16.287522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:17.287766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:18.287980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:19.288053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:20.288166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:16:20.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1607" for this suite. @ 06/13/24 11:16:20.364
• [20.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/13/24 11:16:20.369
  Jun 13 11:16:20.369: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 11:16:20.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:20.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:20.384
  STEP: creating a ServiceAccount @ 06/13/24 11:16:20.387
  STEP: watching for the ServiceAccount to be added @ 06/13/24 11:16:20.393
  STEP: patching the ServiceAccount @ 06/13/24 11:16:20.395
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/13/24 11:16:20.4
  STEP: deleting the ServiceAccount @ 06/13/24 11:16:20.403
  Jun 13 11:16:20.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4987" for this suite. @ 06/13/24 11:16:20.419
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/13/24 11:16:20.424
  Jun 13 11:16:20.424: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 11:16:20.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:20.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:20.438
  STEP: Creating secret with name secret-test-da31200e-f492-43de-85db-21c24f83377c @ 06/13/24 11:16:20.456
  STEP: Creating a pod to test consume secrets @ 06/13/24 11:16:20.46
  E0613 11:16:21.289274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:22.289689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:23.290373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:24.291161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:16:24.478
  Jun 13 11:16:24.480: INFO: Trying to get logs from node 18.117.161.199 pod pod-secrets-8e0beb58-1139-49bf-961a-aabfb304beba container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:16:24.489
  Jun 13 11:16:24.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7752" for this suite. @ 06/13/24 11:16:24.506
  STEP: Destroying namespace "secret-namespace-6910" for this suite. @ 06/13/24 11:16:24.511
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/13/24 11:16:24.516
  Jun 13 11:16:24.516: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:16:24.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:24.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:24.529
  STEP: Creating configMap with name projected-configmap-test-volume-map-241dd0bb-cdc5-40e8-9e92-10cbfa06f6b8 @ 06/13/24 11:16:24.532
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:16:24.536
  E0613 11:16:25.291589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:26.292080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:27.293143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:28.293952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:16:28.554
  Jun 13 11:16:28.556: INFO: Trying to get logs from node 18.117.132.30 pod pod-projected-configmaps-eac901bf-4e2d-4ff5-8190-769c5add8472 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:16:28.564
  Jun 13 11:16:28.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-887" for this suite. @ 06/13/24 11:16:28.58
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/13/24 11:16:28.586
  Jun 13 11:16:28.586: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 11:16:28.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:28.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:28.601
  Jun 13 11:16:28.604: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:16:29.294947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:30.295637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:31.296226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:16:31.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6378" for this suite. @ 06/13/24 11:16:31.682
• [3.102 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/13/24 11:16:31.688
  Jun 13 11:16:31.688: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:16:31.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:31.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:31.707
  STEP: creating an Endpoint @ 06/13/24 11:16:31.712
  STEP: waiting for available Endpoint @ 06/13/24 11:16:31.716
  STEP: listing all Endpoints @ 06/13/24 11:16:31.718
  STEP: updating the Endpoint @ 06/13/24 11:16:31.72
  STEP: fetching the Endpoint @ 06/13/24 11:16:31.725
  STEP: patching the Endpoint @ 06/13/24 11:16:31.727
  STEP: fetching the Endpoint @ 06/13/24 11:16:31.736
  STEP: deleting the Endpoint by Collection @ 06/13/24 11:16:31.738
  STEP: waiting for Endpoint deletion @ 06/13/24 11:16:31.743
  STEP: fetching the Endpoint @ 06/13/24 11:16:31.744
  Jun 13 11:16:31.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2039" for this suite. @ 06/13/24 11:16:31.75
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/13/24 11:16:31.754
  Jun 13 11:16:31.754: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename server-version @ 06/13/24 11:16:31.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:31.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:31.772
  STEP: Request ServerVersion @ 06/13/24 11:16:31.775
  STEP: Confirm major version @ 06/13/24 11:16:31.777
  Jun 13 11:16:31.777: INFO: Major version: 1
  STEP: Confirm minor version @ 06/13/24 11:16:31.777
  Jun 13 11:16:31.777: INFO: cleanMinorVersion: 29
  Jun 13 11:16:31.777: INFO: Minor version: 29
  Jun 13 11:16:31.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6216" for this suite. @ 06/13/24 11:16:31.78
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/13/24 11:16:31.784
  Jun 13 11:16:31.784: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:16:31.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:31.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:31.801
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:16:31.804
  E0613 11:16:32.297071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:33.297807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:34.298555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:35.298741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:16:35.822
  Jun 13 11:16:35.824: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-f88e1f7b-9b78-405e-b344-b14015f0b307 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:16:35.832
  Jun 13 11:16:35.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8601" for this suite. @ 06/13/24 11:16:35.851
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/13/24 11:16:35.856
  Jun 13 11:16:35.856: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 11:16:35.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:35.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:35.872
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 11:16:35.878
  E0613 11:16:36.298844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:37.298978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/13/24 11:16:37.893
  E0613 11:16:38.299551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:39.299685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/13/24 11:16:39.908
  STEP: delete the pod with lifecycle hook @ 06/13/24 11:16:39.919
  E0613 11:16:40.300429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:41.301202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:42.301774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:43.302003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:16:43.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7692" for this suite. @ 06/13/24 11:16:43.938
• [8.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/13/24 11:16:43.943
  Jun 13 11:16:43.943: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 11:16:43.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:16:43.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:16:43.96
  STEP: Creating a ResourceQuota with terminating scope @ 06/13/24 11:16:43.963
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 11:16:43.968
  E0613 11:16:44.302676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:45.302952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 06/13/24 11:16:45.971
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 11:16:45.977
  E0613 11:16:46.303424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:47.303635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 06/13/24 11:16:47.982
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/13/24 11:16:47.994
  E0613 11:16:48.304655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:49.304791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/13/24 11:16:49.997
  E0613 11:16:50.305236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:51.305614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 11:16:52.001
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 11:16:52.011
  E0613 11:16:52.305914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:53.306062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 06/13/24 11:16:54.014
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/13/24 11:16:54.023
  E0613 11:16:54.306727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:55.307111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/13/24 11:16:56.026
  E0613 11:16:56.307187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:57.307449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 11:16:58.03
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 11:16:58.041
  E0613 11:16:58.308581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:16:59.308685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:00.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6949" for this suite. @ 06/13/24 11:17:00.049
• [16.114 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/13/24 11:17:00.058
  Jun 13 11:17:00.058: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 11:17:00.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:00.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:00.071
  STEP: Creating secret with name secret-test-0f071f65-0ff6-41e6-9b92-214b0b62c5a5 @ 06/13/24 11:17:00.074
  STEP: Creating a pod to test consume secrets @ 06/13/24 11:17:00.077
  E0613 11:17:00.309173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:01.310216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:02.310491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:03.310749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:17:04.094
  Jun 13 11:17:04.097: INFO: Trying to get logs from node 18.117.161.199 pod pod-secrets-da80faf4-755c-4b87-b7cc-82bb26a9f272 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:17:04.104
  Jun 13 11:17:04.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5226" for this suite. @ 06/13/24 11:17:04.119
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/13/24 11:17:04.126
  Jun 13 11:17:04.126: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 11:17:04.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:04.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:04.141
  Jun 13 11:17:04.144: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: creating the pod @ 06/13/24 11:17:04.145
  STEP: submitting the pod to kubernetes @ 06/13/24 11:17:04.145
  E0613 11:17:04.311823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:05.312111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:06.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6847" for this suite. @ 06/13/24 11:17:06.175
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/13/24 11:17:06.182
  Jun 13 11:17:06.182: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename watch @ 06/13/24 11:17:06.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:06.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:06.196
  STEP: creating a watch on configmaps with a certain label @ 06/13/24 11:17:06.199
  STEP: creating a new configmap @ 06/13/24 11:17:06.2
  STEP: modifying the configmap once @ 06/13/24 11:17:06.206
  STEP: changing the label value of the configmap @ 06/13/24 11:17:06.212
  STEP: Expecting to observe a delete notification for the watched object @ 06/13/24 11:17:06.217
  Jun 13 11:17:06.217: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6676  fd19d0d2-dffd-4654-8f7f-ba42ee8405fc 25364 0 2024-06-13 11:17:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 11:17:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:17:06.217: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6676  fd19d0d2-dffd-4654-8f7f-ba42ee8405fc 25365 0 2024-06-13 11:17:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 11:17:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:17:06.218: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6676  fd19d0d2-dffd-4654-8f7f-ba42ee8405fc 25366 0 2024-06-13 11:17:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 11:17:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/13/24 11:17:06.218
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/13/24 11:17:06.223
  E0613 11:17:06.313191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:07.313461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:08.313790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:09.313891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:10.314135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:11.314683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:12.314830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:13.315141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:14.315371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:15.316436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 06/13/24 11:17:16.224
  STEP: modifying the configmap a third time @ 06/13/24 11:17:16.232
  STEP: deleting the configmap @ 06/13/24 11:17:16.237
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/13/24 11:17:16.241
  Jun 13 11:17:16.242: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6676  fd19d0d2-dffd-4654-8f7f-ba42ee8405fc 25402 0 2024-06-13 11:17:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 11:17:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:17:16.242: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6676  fd19d0d2-dffd-4654-8f7f-ba42ee8405fc 25403 0 2024-06-13 11:17:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 11:17:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:17:16.242: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6676  fd19d0d2-dffd-4654-8f7f-ba42ee8405fc 25404 0 2024-06-13 11:17:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 11:17:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:17:16.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6676" for this suite. @ 06/13/24 11:17:16.245
• [10.069 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/13/24 11:17:16.251
  Jun 13 11:17:16.251: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sysctl @ 06/13/24 11:17:16.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:16.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:16.265
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/13/24 11:17:16.268
  Jun 13 11:17:16.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-259" for this suite. @ 06/13/24 11:17:16.275
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/13/24 11:17:16.282
  Jun 13 11:17:16.282: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:17:16.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:16.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:16.296
  STEP: Creating configMap with name configmap-projected-all-test-volume-32588150-2ae1-4420-809b-a5988a648ba1 @ 06/13/24 11:17:16.299
  STEP: Creating secret with name secret-projected-all-test-volume-179564bb-0b9a-4047-b433-1a203bf7598b @ 06/13/24 11:17:16.304
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/13/24 11:17:16.308
  E0613 11:17:16.316917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:17.317502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:18.317682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:19.317839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:20.317997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:17:20.328
  Jun 13 11:17:20.330: INFO: Trying to get logs from node 18.117.161.199 pod projected-volume-30411da8-af2f-442f-9cd8-c5d6f445a820 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:17:20.337
  Jun 13 11:17:20.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7468" for this suite. @ 06/13/24 11:17:20.352
• [4.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/13/24 11:17:20.357
  Jun 13 11:17:20.357: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 11:17:20.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:20.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:20.372
  E0613 11:17:21.318764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:22.318931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:23.319093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:24.319196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:24.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3897" for this suite. @ 06/13/24 11:17:24.397
• [4.045 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/13/24 11:17:24.401
  Jun 13 11:17:24.401: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 11:17:24.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:24.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:24.418
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/13/24 11:17:24.421
  Jun 13 11:17:24.421: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:17:25.320187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:26.320940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:27.322059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:28.322918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:29.323282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/13/24 11:17:29.916
  Jun 13 11:17:29.916: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:17:30.324033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:31.255: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:17:31.324100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:32.324438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:33.325377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:34.326108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:35.327054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:36.327702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:36.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5308" for this suite. @ 06/13/24 11:17:36.667
• [12.271 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/13/24 11:17:36.673
  Jun 13 11:17:36.673: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:17:36.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:36.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:36.688
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:17:36.691
  E0613 11:17:37.327790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:38.328348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:39.328538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:40.328835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:17:40.709
  Jun 13 11:17:40.712: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-594581df-b322-494a-8356-8808daf2be54 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:17:40.719
  Jun 13 11:17:40.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2295" for this suite. @ 06/13/24 11:17:40.742
• [4.075 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/13/24 11:17:40.747
  Jun 13 11:17:40.747: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename init-container @ 06/13/24 11:17:40.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:40.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:40.764
  STEP: creating the pod @ 06/13/24 11:17:40.767
  Jun 13 11:17:40.767: INFO: PodSpec: initContainers in spec.initContainers
  E0613 11:17:41.329786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:42.330820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:43.330908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:43.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5941" for this suite. @ 06/13/24 11:17:43.852
• [3.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/13/24 11:17:43.859
  Jun 13 11:17:43.859: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:17:43.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:43.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:43.874
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6164 @ 06/13/24 11:17:43.878
  STEP: changing the ExternalName service to type=NodePort @ 06/13/24 11:17:43.883
  STEP: creating replication controller externalname-service in namespace services-6164 @ 06/13/24 11:17:43.897
  I0613 11:17:43.904989      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6164, replica count: 2
  E0613 11:17:44.331309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:45.332329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:46.332441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:17:46.956282      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 11:17:46.956: INFO: Creating new exec pod
  E0613 11:17:47.332766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:48.333208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:49.334290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:49.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-6164 exec execpodq2mpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 13 11:17:50.132: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 13 11:17:50.132: INFO: stdout: "externalname-service-7gm55"
  Jun 13 11:17:50.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-6164 exec execpodq2mpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.67.101 80'
  Jun 13 11:17:50.284: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.67.101 80\nConnection to 10.43.67.101 80 port [tcp/http] succeeded!\n"
  Jun 13 11:17:50.284: INFO: stdout: "externalname-service-fbnt5"
  Jun 13 11:17:50.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-6164 exec execpodq2mpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.66 32316'
  E0613 11:17:50.334572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:50.435: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.66 32316\nConnection to 172.31.29.66 32316 port [tcp/*] succeeded!\n"
  Jun 13 11:17:50.435: INFO: stdout: ""
  Jun 13 11:17:51.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-6164 exec execpodq2mpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.66 32316'
  E0613 11:17:51.335524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:51.435: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.66 32316\nConnection to 172.31.29.66 32316 port [tcp/*] succeeded!\n"
  Jun 13 11:17:51.435: INFO: stdout: "externalname-service-fbnt5"
  Jun 13 11:17:51.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-6164 exec execpodq2mpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.95 32316'
  Jun 13 11:17:51.584: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.95 32316\nConnection to 172.31.16.95 32316 port [tcp/*] succeeded!\n"
  Jun 13 11:17:51.584: INFO: stdout: ""
  E0613 11:17:52.336086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:52.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-6164 exec execpodq2mpv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.95 32316'
  Jun 13 11:17:52.583: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.95 32316\nConnection to 172.31.16.95 32316 port [tcp/*] succeeded!\n"
  Jun 13 11:17:52.583: INFO: stdout: "externalname-service-fbnt5"
  Jun 13 11:17:52.584: INFO: Cleaning up the ExternalName to NodePort test service
  Jun 13 11:17:52.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6164" for this suite. @ 06/13/24 11:17:52.604
• [8.751 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/13/24 11:17:52.61
  Jun 13 11:17:52.610: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:17:52.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:52.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:52.626
  STEP: Setting up server cert @ 06/13/24 11:17:52.646
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:17:53.118
  STEP: Deploying the webhook pod @ 06/13/24 11:17:53.125
  STEP: Wait for the deployment to be ready @ 06/13/24 11:17:53.137
  Jun 13 11:17:53.143: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 11:17:53.337212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:54.337638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:17:55.153
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:17:55.165
  E0613 11:17:55.337781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:17:56.165: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/13/24 11:17:56.232
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 11:17:56.262
  STEP: Deleting the collection of validation webhooks @ 06/13/24 11:17:56.306
  E0613 11:17:56.338024      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 11:17:56.338
  Jun 13 11:17:56.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9055" for this suite. @ 06/13/24 11:17:56.378
  STEP: Destroying namespace "webhook-markers-3948" for this suite. @ 06/13/24 11:17:56.384
• [3.780 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/13/24 11:17:56.39
  Jun 13 11:17:56.390: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:17:56.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:17:56.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:17:56.411
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:17:56.414
  E0613 11:17:57.338088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:58.338177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:17:59.338810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:00.339722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:18:00.432
  Jun 13 11:18:00.435: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-3006a8ab-5978-4d15-87af-ba5240569780 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:18:00.441
  Jun 13 11:18:00.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1982" for this suite. @ 06/13/24 11:18:00.458
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/13/24 11:18:00.463
  Jun 13 11:18:00.463: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:18:00.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:18:00.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:18:00.476
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/13/24 11:18:00.479
  E0613 11:18:01.340675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:02.341056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:03.341914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:04.341958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:18:04.5
  Jun 13 11:18:04.503: INFO: Trying to get logs from node 18.117.161.199 pod pod-b64e0615-174c-4a18-98c7-dedc385a9aa4 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:18:04.509
  Jun 13 11:18:04.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9287" for this suite. @ 06/13/24 11:18:04.529
• [4.070 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/13/24 11:18:04.534
  Jun 13 11:18:04.534: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename proxy @ 06/13/24 11:18:04.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:18:04.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:18:04.55
  Jun 13 11:18:04.553: INFO: Creating pod...
  E0613 11:18:05.342731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:06.343522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:18:06.566: INFO: Creating service...
  Jun 13 11:18:06.578: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/pods/agnhost/proxy?method=DELETE
  Jun 13 11:18:06.582: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 11:18:06.582: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/pods/agnhost/proxy?method=OPTIONS
  Jun 13 11:18:06.585: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 11:18:06.585: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/pods/agnhost/proxy?method=PATCH
  Jun 13 11:18:06.588: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 11:18:06.588: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/pods/agnhost/proxy?method=POST
  Jun 13 11:18:06.590: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 11:18:06.590: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/pods/agnhost/proxy?method=PUT
  Jun 13 11:18:06.593: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 11:18:06.593: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun 13 11:18:06.597: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 11:18:06.597: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun 13 11:18:06.600: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 11:18:06.600: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun 13 11:18:06.603: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 11:18:06.603: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/services/e2e-proxy-test-service/proxy?method=POST
  Jun 13 11:18:06.607: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 11:18:06.607: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/services/e2e-proxy-test-service/proxy?method=PUT
  Jun 13 11:18:06.610: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 11:18:06.610: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/pods/agnhost/proxy?method=GET
  Jun 13 11:18:06.612: INFO: http.Client request:GET StatusCode:301
  Jun 13 11:18:06.612: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/services/e2e-proxy-test-service/proxy?method=GET
  Jun 13 11:18:06.614: INFO: http.Client request:GET StatusCode:301
  Jun 13 11:18:06.615: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/pods/agnhost/proxy?method=HEAD
  Jun 13 11:18:06.616: INFO: http.Client request:HEAD StatusCode:301
  Jun 13 11:18:06.616: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-294/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun 13 11:18:06.619: INFO: http.Client request:HEAD StatusCode:301
  Jun 13 11:18:06.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-294" for this suite. @ 06/13/24 11:18:06.623
• [2.094 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/13/24 11:18:06.63
  Jun 13 11:18:06.630: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:18:06.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:18:06.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:18:06.646
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 11:18:06.649
  Jun 13 11:18:06.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-6987 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 13 11:18:06.717: INFO: stderr: ""
  Jun 13 11:18:06.717: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/13/24 11:18:06.717
  E0613 11:18:07.344470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:08.344990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:09.345599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:10.345826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:11.346673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/13/24 11:18:11.769
  Jun 13 11:18:11.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-6987 get pod e2e-test-httpd-pod -o json'
  Jun 13 11:18:11.833: INFO: stderr: ""
  Jun 13 11:18:11.833: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"913939e57e2841b0e9737ae8bbd623af9ec09b083d5afa0fd714bd28727902e9\",\n            \"cni.projectcalico.org/podIP\": \"10.42.0.181/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.0.181/32\"\n        },\n        \"creationTimestamp\": \"2024-06-13T11:18:06Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6987\",\n        \"resourceVersion\": \"25900\",\n        \"uid\": \"524d3a10-9217-4b34-998b-85ac41e0dd06\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gdx5v\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"18.117.161.199\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-gdx5v\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T11:18:08Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T11:18:06Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T11:18:08Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T11:18:08Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T11:18:06Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://a1fb3782b7198d90f5c5a92dd4fa4506038c9de7e4f6d890158bf8830679007c\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-13T11:18:07Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.16.95\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.16.95\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.0.181\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.0.181\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-13T11:18:06Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/13/24 11:18:11.833
  Jun 13 11:18:11.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-6987 replace -f -'
  Jun 13 11:18:11.959: INFO: stderr: ""
  Jun 13 11:18:11.959: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/13/24 11:18:11.959
  Jun 13 11:18:11.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-6987 delete pods e2e-test-httpd-pod'
  E0613 11:18:12.346817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:13.347268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:18:13.480: INFO: stderr: ""
  Jun 13 11:18:13.480: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 13 11:18:13.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6987" for this suite. @ 06/13/24 11:18:13.485
• [6.862 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/13/24 11:18:13.493
  Jun 13 11:18:13.493: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:18:13.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:18:13.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:18:13.508
  STEP: Creating configMap with name cm-test-opt-del-92073c1d-0aa8-44e4-b5bd-2c2d2f876502 @ 06/13/24 11:18:13.514
  STEP: Creating configMap with name cm-test-opt-upd-688508ca-a531-46e4-9f70-ec54fe73ba51 @ 06/13/24 11:18:13.519
  STEP: Creating the pod @ 06/13/24 11:18:13.525
  E0613 11:18:14.348303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:15.348745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-92073c1d-0aa8-44e4-b5bd-2c2d2f876502 @ 06/13/24 11:18:15.566
  STEP: Updating configmap cm-test-opt-upd-688508ca-a531-46e4-9f70-ec54fe73ba51 @ 06/13/24 11:18:15.576
  STEP: Creating configMap with name cm-test-opt-create-8e0b43be-d317-4009-a855-0a9be2de50d5 @ 06/13/24 11:18:15.583
  STEP: waiting to observe update in volume @ 06/13/24 11:18:15.587
  E0613 11:18:16.349818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:17.350064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:18:17.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3943" for this suite. @ 06/13/24 11:18:17.618
• [4.130 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/13/24 11:18:17.623
  Jun 13 11:18:17.623: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 11:18:17.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:18:17.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:18:17.639
  STEP: creating the pod with failed condition @ 06/13/24 11:18:17.643
  E0613 11:18:18.351166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:19.351410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:20.352048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:21.352562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:22.353519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:23.353809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:24.354161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:25.354396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:26.355093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:27.355404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:28.356481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:29.356745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:30.357157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:31.357863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:32.358046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:33.358361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:34.359130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:35.359443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:36.360347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:37.361192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:38.362247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:39.362473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:40.363248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:41.364050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:42.364137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:43.365188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:44.366119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:45.366306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:46.367423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:47.367756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:48.368747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:49.368989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:50.369152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:51.370001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:52.370135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:53.370380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:54.370867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:55.371131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:56.371373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:57.371850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:58.372824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:18:59.373215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:00.373386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:01.373555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:02.374360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:03.374555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:04.375242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:05.375559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:06.376511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:07.376673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:08.377701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:09.378491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:10.378971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:11.379851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:12.380112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:13.381183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:14.381314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:15.381556      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:16.382509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:17.382773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:18.382889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:19.383171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:20.384002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:21.384740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:22.385240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:23.385495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:24.386417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:25.386562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:26.387644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:27.387926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:28.388982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:29.389107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:30.389817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:31.390548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:32.391145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:33.391418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:34.392522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:35.392652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:36.393151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:37.393661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:38.394071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:39.394330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:40.395323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:41.395675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:42.396211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:43.396459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:44.396900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:45.397155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:46.397296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:47.397544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:48.398729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:49.399129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:50.399266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:51.400039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:52.400667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:53.400828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:54.401204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:55.401417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:56.401805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:57.402035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:58.402409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:19:59.403421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:00.403592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:01.404261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:02.405102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:03.405322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:04.406057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:05.406311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:06.407313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:07.407444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:08.407611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:09.407777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:10.408059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:11.408586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:12.408837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:13.408964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:14.409474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:15.409723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:16.410736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:17.410955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 06/13/24 11:20:17.65
  Jun 13 11:20:18.162: INFO: Successfully updated pod "var-expansion-8eb79975-533d-4179-af13-224e57207f03"
  STEP: waiting for pod running @ 06/13/24 11:20:18.162
  E0613 11:20:18.411769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:19.412044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/13/24 11:20:20.169
  Jun 13 11:20:20.169: INFO: Deleting pod "var-expansion-8eb79975-533d-4179-af13-224e57207f03" in namespace "var-expansion-6498"
  Jun 13 11:20:20.176: INFO: Wait up to 5m0s for pod "var-expansion-8eb79975-533d-4179-af13-224e57207f03" to be fully deleted
  E0613 11:20:20.412606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:21.413184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:22.414231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:23.414364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:24.414947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:25.415974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:26.416674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:27.417188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:28.417708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:29.417841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:30.418292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:31.418867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:32.418990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:33.419390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:34.419706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:35.419952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:36.420384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:37.420687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:38.420738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:39.420836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:40.420952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:41.421752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:42.422209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:43.422314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:44.423040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:45.423279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:46.424113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:47.424242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:48.425050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:49.425272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:50.426019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:51.426859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:20:52.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6498" for this suite. @ 06/13/24 11:20:52.243
• [154.625 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/13/24 11:20:52.248
  Jun 13 11:20:52.248: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 11:20:52.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:20:52.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:20:52.263
  STEP: Creating projection with secret that has name secret-emptykey-test-b628b701-51cd-4e25-a735-eb8af34e9ec9 @ 06/13/24 11:20:52.265
  Jun 13 11:20:52.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7491" for this suite. @ 06/13/24 11:20:52.27
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/13/24 11:20:52.275
  Jun 13 11:20:52.275: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:20:52.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:20:52.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:20:52.288
  STEP: Creating configMap that has name configmap-test-emptyKey-8b1dfa5b-f820-41ff-98fa-fc5942d807bf @ 06/13/24 11:20:52.291
  Jun 13 11:20:52.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5995" for this suite. @ 06/13/24 11:20:52.296
• [0.025 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/13/24 11:20:52.3
  Jun 13 11:20:52.300: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 11:20:52.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:20:52.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:20:52.315
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 11:20:52.32
  E0613 11:20:52.427327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:53.428042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/13/24 11:20:54.334
  E0613 11:20:54.428781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:55.429143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/13/24 11:20:56.352
  E0613 11:20:56.429472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:57.429733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:58.430567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:20:59.430790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/13/24 11:21:00.369
  Jun 13 11:21:00.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2627" for this suite. @ 06/13/24 11:21:00.389
• [8.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/13/24 11:21:00.394
  Jun 13 11:21:00.395: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:21:00.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:00.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:00.41
  STEP: validating cluster-info @ 06/13/24 11:21:00.413
  Jun 13 11:21:00.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-7121 cluster-info'
  E0613 11:21:00.430847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:00.477: INFO: stderr: ""
  Jun 13 11:21:00.477: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun 13 11:21:00.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7121" for this suite. @ 06/13/24 11:21:00.48
• [0.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/13/24 11:21:00.485
  Jun 13 11:21:00.485: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:21:00.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:00.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:00.5
  STEP: Creating a pod to test downward api env vars @ 06/13/24 11:21:00.503
  E0613 11:21:01.431719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:02.431939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:03.432105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:04.432350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:21:04.52
  Jun 13 11:21:04.522: INFO: Trying to get logs from node 18.117.161.199 pod downward-api-e8d11ab0-78f7-4277-9ed0-3d0338ec826d container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 11:21:04.537
  Jun 13 11:21:04.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1888" for this suite. @ 06/13/24 11:21:04.555
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/13/24 11:21:04.562
  Jun 13 11:21:04.562: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:21:04.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:04.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:04.576
  STEP: Setting up server cert @ 06/13/24 11:21:04.597
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:21:05.198
  STEP: Deploying the webhook pod @ 06/13/24 11:21:05.205
  STEP: Wait for the deployment to be ready @ 06/13/24 11:21:05.215
  Jun 13 11:21:05.223: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 11:21:05.433201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:06.433679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:21:07.232
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:21:07.238
  E0613 11:21:07.433812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:08.239: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 11:21:08.245: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:21:08.434581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3199-crds.webhook.example.com via the AdmissionRegistration API @ 06/13/24 11:21:08.756
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/13/24 11:21:08.828
  E0613 11:21:09.435574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:10.436194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:11.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6511" for this suite. @ 06/13/24 11:21:11.429
  STEP: Destroying namespace "webhook-markers-6886" for this suite. @ 06/13/24 11:21:11.434
  E0613 11:21:11.437054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
• [6.877 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/13/24 11:21:11.439
  Jun 13 11:21:11.439: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 11:21:11.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:11.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:11.457
  STEP: Creating a test namespace @ 06/13/24 11:21:11.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:11.471
  STEP: Creating a service in the namespace @ 06/13/24 11:21:11.474
  STEP: Deleting the namespace @ 06/13/24 11:21:11.483
  STEP: Waiting for the namespace to be removed. @ 06/13/24 11:21:11.488
  E0613 11:21:12.437591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:13.437736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:14.438148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:15.438368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:16.438964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:17.439724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/13/24 11:21:17.492
  STEP: Verifying there is no service in the namespace @ 06/13/24 11:21:17.504
  Jun 13 11:21:17.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7439" for this suite. @ 06/13/24 11:21:17.509
  STEP: Destroying namespace "nsdeletetest-4331" for this suite. @ 06/13/24 11:21:17.513
  Jun 13 11:21:17.515: INFO: Namespace nsdeletetest-4331 was already deleted
  STEP: Destroying namespace "nsdeletetest-8158" for this suite. @ 06/13/24 11:21:17.515
• [6.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/13/24 11:21:17.52
  Jun 13 11:21:17.520: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename watch @ 06/13/24 11:21:17.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:17.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:17.537
  STEP: creating a watch on configmaps @ 06/13/24 11:21:17.54
  STEP: creating a new configmap @ 06/13/24 11:21:17.541
  STEP: modifying the configmap once @ 06/13/24 11:21:17.544
  STEP: closing the watch once it receives two notifications @ 06/13/24 11:21:17.55
  Jun 13 11:21:17.550: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6907  342ae00e-c23b-49af-acb4-45fd3e3d78bb 26537 0 2024-06-13 11:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 11:21:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:21:17.550: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6907  342ae00e-c23b-49af-acb4-45fd3e3d78bb 26538 0 2024-06-13 11:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 11:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/13/24 11:21:17.55
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/13/24 11:21:17.556
  STEP: deleting the configmap @ 06/13/24 11:21:17.557
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/13/24 11:21:17.563
  Jun 13 11:21:17.563: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6907  342ae00e-c23b-49af-acb4-45fd3e3d78bb 26539 0 2024-06-13 11:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 11:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:21:17.563: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6907  342ae00e-c23b-49af-acb4-45fd3e3d78bb 26540 0 2024-06-13 11:21:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 11:21:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 11:21:17.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6907" for this suite. @ 06/13/24 11:21:17.566
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/13/24 11:21:17.571
  Jun 13 11:21:17.571: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 11:21:17.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:17.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:17.59
  STEP: Counting existing ResourceQuota @ 06/13/24 11:21:17.593
  E0613 11:21:18.440290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:19.440437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:20.441388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:21.441769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:22.442166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 11:21:22.596
  STEP: Ensuring resource quota status is calculated @ 06/13/24 11:21:22.603
  E0613 11:21:23.442506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:24.443484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/13/24 11:21:24.607
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/13/24 11:21:24.621
  E0613 11:21:25.444045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:26.444645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/13/24 11:21:26.625
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/13/24 11:21:26.628
  STEP: Ensuring a pod cannot update its resource requirements @ 06/13/24 11:21:26.63
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/13/24 11:21:26.633
  E0613 11:21:27.444947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:28.445255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 11:21:28.638
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 11:21:28.648
  E0613 11:21:29.445736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:30.446250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:30.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1214" for this suite. @ 06/13/24 11:21:30.656
• [13.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/13/24 11:21:30.662
  Jun 13 11:21:30.662: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:21:30.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:30.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:30.689
  Jun 13 11:21:30.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4661" for this suite. @ 06/13/24 11:21:30.697
• [0.040 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/13/24 11:21:30.702
  Jun 13 11:21:30.702: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 11:21:30.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:21:30.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:21:30.715
  STEP: Creating pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708 @ 06/13/24 11:21:30.718
  E0613 11:21:31.446975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:32.447278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 11:21:32.731
  Jun 13 11:21:32.733: INFO: Initial restart count of pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 is 0
  Jun 13 11:21:32.737: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:33.447529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:34.448082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:34.741: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:35.448206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:36.448830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:36.745: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:37.449369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:38.449348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:38.748: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:39.449411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:40.449910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:40.753: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:41.450068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:42.450328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:42.757: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:43.451048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:44.451299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:44.760: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:45.451525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:46.452092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:46.764: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:47.452217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:48.453248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:48.769: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:49.453770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:50.454368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:50.773: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:51.454559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:52.454732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:52.777: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:53.455460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:54.455706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:54.781: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:55.456053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:56.456699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:56.785: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:57.457045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:21:58.457333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:21:58.789: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:21:59.457678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:00.458350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:00.793: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:01.458791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:02.459422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:02.797: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:03.459987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:04.460540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:04.801: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:05.461530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:06.462081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:06.805: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:07.462241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:08.462398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:08.809: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:09.462841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:10.463367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:10.813: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:11.463959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:12.464073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:12.817: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:13.464585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:14.464807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:14.821: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:15.465299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:16.465863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:16.826: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:17.466902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:18.467829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:18.830: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:19.467988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:20.468605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:20.835: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:21.469078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:22.469213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:22.839: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:23.470047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:24.470190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:24.842: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:25.470763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:26.471291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:26.847: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:27.472045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:28.472210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:28.850: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:29.473129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:30.473656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:30.854: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:31.474682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:32.475149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:32.859: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:33.475809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:34.476062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:34.863: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:35.476977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:36.477505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:36.867: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:37.478294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:38.478440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:38.871: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:39.478953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:40.479431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:40.875: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:41.479961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:42.480072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:42.880: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:43.480888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:44.481178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:44.884: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:45.481748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:46.482259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:46.888: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:47.483125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:48.483377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:48.892: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:49.483814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:50.484424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:50.896: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:51.484654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:52.484898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:52.900: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:53.485502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:54.485745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:54.904: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:55.486105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:56.486840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:56.908: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:57.487011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:22:58.487182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:22:58.912: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:22:59.488024      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:00.488569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:00.916: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:01.489352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:02.489500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:02.920: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:03.489893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:04.490152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:04.924: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:05.490782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:06.491320      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:06.928: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:07.492174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:08.492431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:08.932: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:09.493165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:10.493405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:10.936: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:11.493545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:12.493697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:12.940: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:13.494422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:14.494919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:14.944: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:15.495077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:16.495620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:16.948: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:17.496034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:18.496256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:18.952: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:19.496415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:20.497428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:20.956: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:21.497543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:22.497798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:22.960: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:23.498648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:24.498797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:24.964: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:25.499378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:26.499871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:26.969: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:27.500945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:28.501173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:28.973: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:29.501328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:30.501400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:30.977: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:31.501439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:32.501738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:32.981: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:33.501898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:34.502169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:34.986: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:35.503135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:36.503742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:36.990: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:37.504172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:38.504400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:38.995: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:39.504441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:40.504946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:40.999: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:41.505152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:42.505376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:43.003: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:43.505550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:44.505814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:45.006: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:45.506677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:46.506739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:47.011: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:47.506787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:48.507033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:49.014: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:49.507620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:50.508057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:51.019: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:51.508601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:52.509582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:53.023: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:53.509733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:54.509881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:55.026: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:55.510182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:56.510834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:57.030: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:57.511448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:23:58.511719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:23:59.034: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:23:59.512046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:00.512542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:01.039: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:01.513057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:02.513340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:03.043: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:03.513866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:04.514089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:05.046: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:05.514167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:06.514729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:07.050: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:07.515503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:08.515789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:09.054: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:09.516080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:10.516526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:11.058: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:11.517238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:12.517433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:13.062: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:13.517939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:14.518090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:15.065: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:15.518421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:16.518963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:17.070: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:17.519645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:18.519845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:19.073: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:19.520483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:20.521440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:21.077: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:21.521586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:22.521858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:23.081: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:23.521982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:24.522204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:25.084: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:25.522363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:26.522876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:27.088: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:27.523304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:28.523535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:29.092: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:29.523706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:30.524623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:31.096: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:31.525654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:32.525903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:33.100: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:33.526559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:34.526692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:35.104: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:35.526975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:36.527521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:37.107: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:37.528460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:38.529165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:39.112: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:39.529910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:40.530446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:41.116: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:41.531466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:42.531594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:43.120: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:43.531771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:44.532077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:45.123: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:45.532246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:46.532819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:47.127: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:47.532946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:48.533205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:49.131: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:49.533588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:50.534408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:51.135: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:51.534581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:52.534842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:53.138: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:53.535305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:54.535531      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:55.142: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:55.536165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:56.536738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:57.146: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:57.536854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:24:58.537090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:24:59.150: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:24:59.537494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:00.538021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:01.154: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:01.539041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:02.539266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:03.158: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:03.539959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:04.540119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:05.162: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:05.540805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:06.540841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:07.165: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:07.541197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:08.541378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:09.169: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:09.541733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:10.541936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:11.173: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:11.542037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:12.542178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:13.176: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:13.542367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:14.542616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:15.180: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:15.542828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:16.543946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:17.183: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:17.544068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:18.544316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:19.187: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:19.544645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:20.545291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:21.191: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:21.546161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:22.546389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:23.195: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:23.546714      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:24.546946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:25.198: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:25.547306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:26.547450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:27.202: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:27.547654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:28.547925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:29.206: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:29.548797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:30.549352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:31.210: INFO: Get pod test-webserver-10bbbea3-b826-47ae-8997-01c5d36d9d24 in namespace container-probe-1708
  E0613 11:25:31.549611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:32.549831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/13/24 11:25:33.211
  Jun 13 11:25:33.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1708" for this suite. @ 06/13/24 11:25:33.228
• [242.530 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/13/24 11:25:33.238
  Jun 13 11:25:33.238: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 11:25:33.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:25:33.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:25:33.262
  Jun 13 11:25:33.271: INFO: Endpoints addresses: [172.31.16.95] , ports: [6443]
  Jun 13 11:25:33.271: INFO: EndpointSlices addresses: [172.31.16.95] , ports: [6443]
  Jun 13 11:25:33.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2686" for this suite. @ 06/13/24 11:25:33.274
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/13/24 11:25:33.278
  Jun 13 11:25:33.278: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:25:33.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:25:33.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:25:33.294
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/13/24 11:25:33.297
  E0613 11:25:33.550462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:34.550688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:35.551287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:36.551864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:25:37.316
  Jun 13 11:25:37.318: INFO: Trying to get logs from node 18.117.161.199 pod pod-62789350-6f28-4280-8192-c212b46f0b7f container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:25:37.333
  Jun 13 11:25:37.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7575" for this suite. @ 06/13/24 11:25:37.352
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/13/24 11:25:37.359
  Jun 13 11:25:37.359: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 11:25:37.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:25:37.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:25:37.373
  STEP: Discovering how many secrets are in namespace by default @ 06/13/24 11:25:37.376
  E0613 11:25:37.552262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:38.552794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:39.553794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:40.554005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:41.554947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/13/24 11:25:42.38
  E0613 11:25:42.555758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:43.556268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:44.557250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:45.557854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:46.558651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 11:25:47.384
  STEP: Ensuring resource quota status is calculated @ 06/13/24 11:25:47.388
  E0613 11:25:47.558886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:48.559460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 06/13/24 11:25:49.393
  STEP: Ensuring resource quota status captures secret creation @ 06/13/24 11:25:49.467
  E0613 11:25:49.559619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:50.560096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 06/13/24 11:25:51.472
  STEP: Ensuring resource quota status released usage @ 06/13/24 11:25:51.476
  E0613 11:25:51.561105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:52.561543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:53.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4840" for this suite. @ 06/13/24 11:25:53.483
• [16.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/13/24 11:25:53.489
  Jun 13 11:25:53.489: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 11:25:53.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:25:53.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:25:53.507
  STEP: Creating pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868 @ 06/13/24 11:25:53.51
  E0613 11:25:53.561984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:54.562455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 11:25:55.525
  Jun 13 11:25:55.527: INFO: Initial restart count of pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 is 0
  Jun 13 11:25:55.530: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:25:55.563164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:56.563800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:57.534: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:25:57.564294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:25:58.564530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:25:59.537: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:25:59.565123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:00.565734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:01.541: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:01.566167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:02.566435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:03.545: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:03.566890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:04.567130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:05.549: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:05.567604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:06.568032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:07.553: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:07.568686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:08.569198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:09.557: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:09.570101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:10.570627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:11.562: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:11.571045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:12.571315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:13.566: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:13.571564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:14.571715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:15.569: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  Jun 13 11:26:15.569: INFO: Restart count of pod container-probe-5868/liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 is now 1 (20.042033047s elapsed)
  E0613 11:26:15.572065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:16.572803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:17.573516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:17.573: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:18.573775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:19.574093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:19.577: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:20.574535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:21.575089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:21.582: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:22.576100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:23.576370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:23.585: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:24.576863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:25.576992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:25.589: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:26.577779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:27.577905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:27.593: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:28.578566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:29.579045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:29.597: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:30.579431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:31.579881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:31.601: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:32.580058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:33.580092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:33.605: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:34.580255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:35.580436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:35.609: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  Jun 13 11:26:35.609: INFO: Restart count of pod container-probe-5868/liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 is now 2 (40.081980437s elapsed)
  E0613 11:26:36.581116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:37.581512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:37.614: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:38.581990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:39.582277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:39.618: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:40.582466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:41.582926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:41.621: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:42.583938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:43.584100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:43.626: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:44.585031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:45.585316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:45.629: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:46.585905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:47.586062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:47.633: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:48.586814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:49.587069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:49.637: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:50.588069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:51.588579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:51.642: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:52.589297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:53.589549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:53.647: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:54.589696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:55.589843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:55.651: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  Jun 13 11:26:55.651: INFO: Restart count of pod container-probe-5868/liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 is now 3 (1m0.123664616s elapsed)
  E0613 11:26:56.590867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:57.591137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:57.655: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:26:58.591255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:26:59.591493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:26:59.659: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:00.592504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:01.593074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:01.663: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:02.593983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:03.594225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:03.667: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:04.595130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:05.595377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:05.671: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:06.595548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:07.595819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:07.675: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:08.596056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:09.597204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:09.679: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:10.597295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:11.597436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:11.684: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:12.597488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:13.597752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:13.688: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:14.597871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:15.598136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:15.691: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  Jun 13 11:27:15.691: INFO: Restart count of pod container-probe-5868/liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 is now 4 (1m20.163653291s elapsed)
  E0613 11:27:16.598785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:17.599032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:17.695: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:18.599591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:19.599841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:19.699: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:20.600688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:21.601082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:21.704: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:22.601232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:23.601385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:23.708: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:24.602086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:25.602325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:25.712: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:26.603226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:27.603465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:27.716: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:28.604055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:29.605171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:29.719: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:30.606090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:31.606472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:31.724: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:32.606750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:33.607017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:33.729: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:34.607147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:35.607419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:35.733: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:36.607667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:37.608062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:37.736: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:38.607855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:39.608125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:39.740: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:40.608509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:41.608676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:41.745: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:42.609163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:43.609289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:43.750: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:44.610123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:45.610293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:45.753: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:46.610997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:47.611274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:47.757: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:48.611436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:49.611668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:49.761: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:50.612470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:51.612871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:51.765: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:52.613590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:53.614686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:53.769: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:54.615195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:55.615358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:55.772: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:56.615820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:57.616076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:57.776: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:27:58.616571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:27:59.617173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:27:59.780: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:00.617317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:01.617946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:01.785: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:02.618133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:03.618266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:03.789: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:04.618361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:05.619310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:05.792: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:06.620052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:07.620273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:07.796: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:08.621163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:09.621433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:09.801: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:10.622485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:11.622940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:11.806: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:12.623223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:13.623469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:13.810: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:14.623653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:15.624547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:15.814: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:16.625460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:17.625707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:17.818: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:18.626465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:19.626734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:19.821: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:20.626889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:21.627319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:21.826: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:22.627508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:23.627686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:23.830: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:24.628188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:25.628421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:25.833: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  E0613 11:28:26.629394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:27.629820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:27.837: INFO: Get pod liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 in namespace container-probe-5868
  Jun 13 11:28:27.837: INFO: Restart count of pod container-probe-5868/liveness-f996c5bb-f9e5-4238-b4c9-b741fdce7845 is now 5 (2m32.30973106s elapsed)
  STEP: deleting the pod @ 06/13/24 11:28:27.837
  Jun 13 11:28:27.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5868" for this suite. @ 06/13/24 11:28:27.851
• [154.369 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/13/24 11:28:27.858
  Jun 13 11:28:27.858: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 11:28:27.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:28:27.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:28:27.873
  STEP: Performing setup for networking test in namespace pod-network-test-7119 @ 06/13/24 11:28:27.876
  STEP: creating a selector @ 06/13/24 11:28:27.876
  STEP: Creating the service pods in kubernetes @ 06/13/24 11:28:27.876
  Jun 13 11:28:27.876: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0613 11:28:28.630373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:29.630989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:30.631645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:31.632036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:32.632080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:33.632254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:34.632966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:35.633194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:36.633400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:37.633772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:38.634402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:39.634656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/13/24 11:28:39.941
  E0613 11:28:40.635393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:41.635854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:41.954: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 11:28:41.954: INFO: Breadth first check of 10.42.2.193 on host 172.31.26.102...
  Jun 13 11:28:41.956: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.194:9080/dial?request=hostname&protocol=http&host=10.42.2.193&port=8083&tries=1'] Namespace:pod-network-test-7119 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:28:41.956: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:28:41.957: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:28:41.957: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7119/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.193%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 11:28:42.051: INFO: Waiting for responses: map[]
  Jun 13 11:28:42.051: INFO: reached 10.42.2.193 after 0/1 tries
  Jun 13 11:28:42.051: INFO: Breadth first check of 10.42.0.186 on host 172.31.16.95...
  Jun 13 11:28:42.055: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.194:9080/dial?request=hostname&protocol=http&host=10.42.0.186&port=8083&tries=1'] Namespace:pod-network-test-7119 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:28:42.055: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:28:42.055: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:28:42.055: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7119/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.186%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 11:28:42.136: INFO: Waiting for responses: map[]
  Jun 13 11:28:42.136: INFO: reached 10.42.0.186 after 0/1 tries
  Jun 13 11:28:42.136: INFO: Breadth first check of 10.42.1.113 on host 172.31.29.66...
  Jun 13 11:28:42.139: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.194:9080/dial?request=hostname&protocol=http&host=10.42.1.113&port=8083&tries=1'] Namespace:pod-network-test-7119 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:28:42.139: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:28:42.139: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:28:42.139: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7119/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.113%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 11:28:42.226: INFO: Waiting for responses: map[]
  Jun 13 11:28:42.226: INFO: reached 10.42.1.113 after 0/1 tries
  Jun 13 11:28:42.226: INFO: Going to retry 0 out of 3 pods....
  Jun 13 11:28:42.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7119" for this suite. @ 06/13/24 11:28:42.23
• [14.377 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/13/24 11:28:42.235
  Jun 13 11:28:42.235: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename events @ 06/13/24 11:28:42.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:28:42.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:28:42.252
  STEP: creating a test event @ 06/13/24 11:28:42.255
  STEP: listing events in all namespaces @ 06/13/24 11:28:42.259
  STEP: listing events in test namespace @ 06/13/24 11:28:42.262
  STEP: listing events with field selection filtering on source @ 06/13/24 11:28:42.264
  STEP: listing events with field selection filtering on reportingController @ 06/13/24 11:28:42.266
  STEP: getting the test event @ 06/13/24 11:28:42.269
  STEP: patching the test event @ 06/13/24 11:28:42.271
  STEP: getting the test event @ 06/13/24 11:28:42.276
  STEP: updating the test event @ 06/13/24 11:28:42.278
  STEP: getting the test event @ 06/13/24 11:28:42.285
  STEP: deleting the test event @ 06/13/24 11:28:42.287
  STEP: listing events in all namespaces @ 06/13/24 11:28:42.292
  STEP: listing events in test namespace @ 06/13/24 11:28:42.295
  Jun 13 11:28:42.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8962" for this suite. @ 06/13/24 11:28:42.3
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/13/24 11:28:42.305
  Jun 13 11:28:42.305: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 11:28:42.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:28:42.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:28:42.32
  Jun 13 11:28:42.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6248" for this suite. @ 06/13/24 11:28:42.347
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/13/24 11:28:42.354
  Jun 13 11:28:42.354: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 11:28:42.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:28:42.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:28:42.367
  STEP: Creating namespace "e2e-ns-hvz8p" @ 06/13/24 11:28:42.37
  Jun 13 11:28:42.382: INFO: Namespace "e2e-ns-hvz8p-8914" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-hvz8p-8914" @ 06/13/24 11:28:42.382
  Jun 13 11:28:42.387: INFO: Namespace "e2e-ns-hvz8p-8914" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-hvz8p-8914" @ 06/13/24 11:28:42.387
  Jun 13 11:28:42.395: INFO: Namespace "e2e-ns-hvz8p-8914" has []v1.FinalizerName{"kubernetes"}
  Jun 13 11:28:42.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3103" for this suite. @ 06/13/24 11:28:42.398
  STEP: Destroying namespace "e2e-ns-hvz8p-8914" for this suite. @ 06/13/24 11:28:42.403
• [0.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/13/24 11:28:42.407
  Jun 13 11:28:42.407: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 11:28:42.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:28:42.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:28:42.419
  STEP: Creating service test in namespace statefulset-5884 @ 06/13/24 11:28:42.422
  STEP: Creating stateful set ss in namespace statefulset-5884 @ 06/13/24 11:28:42.428
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5884 @ 06/13/24 11:28:42.432
  Jun 13 11:28:42.437: INFO: Found 0 stateful pods, waiting for 1
  E0613 11:28:42.636318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:43.637196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:44.638004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:45.638570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:46.638684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:47.639119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:48.639361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:49.639480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:50.640101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:51.640752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:28:52.436: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/13/24 11:28:52.436
  Jun 13 11:28:52.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-5884 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 11:28:52.589: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 11:28:52.589: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 11:28:52.589: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 11:28:52.592: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0613 11:28:52.641448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:53.641682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:54.641822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:55.642080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:56.642783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:57.643036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:58.643266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:28:59.643521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:00.644605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:01.644971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:02.594: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 11:29:02.594: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 11:29:02.606: INFO: POD   NODE           PHASE    GRACE  CONDITIONS
  Jun 13 11:29:02.606: INFO: ss-0  18.117.132.30  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:42 +0000 UTC  }]
  Jun 13 11:29:02.606: INFO: 
  Jun 13 11:29:02.606: INFO: StatefulSet ss has not reached scale 3, at 1
  E0613 11:29:02.645204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:03.610: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997412078s
  E0613 11:29:03.646054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:04.613: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993478071s
  E0613 11:29:04.646784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:05.617: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.989806172s
  E0613 11:29:05.647382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:06.621: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.985871045s
  E0613 11:29:06.647448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:07.625: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.982088999s
  E0613 11:29:07.648171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:08.629: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.977359971s
  E0613 11:29:08.648440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:09.633: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.974071098s
  E0613 11:29:09.649485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:10.637: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.969898302s
  E0613 11:29:10.650179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:11.641: INFO: Verifying statefulset ss doesn't scale past 3 for another 965.939881ms
  E0613 11:29:11.650350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5884 @ 06/13/24 11:29:12.641
  Jun 13 11:29:12.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-5884 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0613 11:29:12.651099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:12.798: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 11:29:12.798: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 11:29:12.798: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 11:29:12.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-5884 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 11:29:12.956: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 13 11:29:12.956: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 11:29:12.956: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 11:29:12.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-5884 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 11:29:13.105: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 13 11:29:13.105: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 11:29:13.105: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 11:29:13.108: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0613 11:29:13.651314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:14.651584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:15.651856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:16.652680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:17.652789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:18.653160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:19.653407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:20.654500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:21.654952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:22.655887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:23.109: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 11:29:23.109: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 11:29:23.109: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/13/24 11:29:23.109
  Jun 13 11:29:23.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-5884 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 11:29:23.262: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 11:29:23.262: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 11:29:23.262: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 11:29:23.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-5884 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 11:29:23.415: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 11:29:23.415: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 11:29:23.415: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 11:29:23.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=statefulset-5884 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 11:29:23.566: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 11:29:23.566: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 11:29:23.566: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 11:29:23.566: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 11:29:23.568: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0613 11:29:23.656209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:24.656476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:25.656740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:26.657130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:27.657305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:28.657542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:29.657821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:30.658477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:31.658561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:32.658843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:33.573: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 11:29:33.573: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 11:29:33.573: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 11:29:33.585: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Jun 13 11:29:33.585: INFO: ss-0  18.117.132.30   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:28:42 +0000 UTC  }]
  Jun 13 11:29:33.585: INFO: ss-1  18.216.152.151  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:04 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:02 +0000 UTC  }]
  Jun 13 11:29:33.585: INFO: ss-2  18.117.161.199  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:02 +0000 UTC  }]
  Jun 13 11:29:33.585: INFO: 
  Jun 13 11:29:33.585: INFO: StatefulSet ss has not reached scale 0, at 3
  E0613 11:29:33.659046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:34.589: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Jun 13 11:29:34.589: INFO: ss-2  18.117.161.199  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:02 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:24 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:24 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 11:29:02 +0000 UTC  }]
  Jun 13 11:29:34.589: INFO: 
  Jun 13 11:29:34.589: INFO: StatefulSet ss has not reached scale 0, at 1
  E0613 11:29:34.659775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:35.592: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.993129673s
  E0613 11:29:35.660024      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:36.596: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.9899113s
  E0613 11:29:36.660350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:37.600: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.985878418s
  E0613 11:29:37.660737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:38.603: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.982731097s
  E0613 11:29:38.660880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:39.607: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.979000431s
  E0613 11:29:39.661342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:40.610: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.975315007s
  E0613 11:29:40.662274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:41.614: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.97120874s
  E0613 11:29:41.663095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:42.618: INFO: Verifying statefulset ss doesn't scale past 0 for another 967.801012ms
  E0613 11:29:42.663526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5884 @ 06/13/24 11:29:43.618
  Jun 13 11:29:43.622: INFO: Scaling statefulset ss to 0
  Jun 13 11:29:43.630: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 11:29:43.633: INFO: Deleting all statefulset in ns statefulset-5884
  Jun 13 11:29:43.635: INFO: Scaling statefulset ss to 0
  Jun 13 11:29:43.643: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 11:29:43.645: INFO: Deleting statefulset ss
  E0613 11:29:43.663621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:43.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5884" for this suite. @ 06/13/24 11:29:43.668
• [61.266 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/13/24 11:29:43.673
  Jun 13 11:29:43.673: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename proxy @ 06/13/24 11:29:43.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:29:43.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:29:43.688
  Jun 13 11:29:43.691: INFO: Creating pod...
  E0613 11:29:44.664536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:45.664959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:45.703: INFO: Creating service...
  Jun 13 11:29:45.712: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/pods/agnhost/proxy/some/path/with/DELETE
  Jun 13 11:29:45.715: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 11:29:45.715: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/pods/agnhost/proxy/some/path/with/GET
  Jun 13 11:29:45.721: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 13 11:29:45.721: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/pods/agnhost/proxy/some/path/with/HEAD
  Jun 13 11:29:45.723: INFO: http.Client request:HEAD | StatusCode:200
  Jun 13 11:29:45.723: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun 13 11:29:45.726: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 11:29:45.726: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/pods/agnhost/proxy/some/path/with/PATCH
  Jun 13 11:29:45.728: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 11:29:45.728: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/pods/agnhost/proxy/some/path/with/POST
  Jun 13 11:29:45.731: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 11:29:45.731: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/pods/agnhost/proxy/some/path/with/PUT
  Jun 13 11:29:45.733: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 11:29:45.733: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/services/test-service/proxy/some/path/with/DELETE
  Jun 13 11:29:45.736: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 11:29:45.736: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/services/test-service/proxy/some/path/with/GET
  Jun 13 11:29:45.739: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 13 11:29:45.739: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/services/test-service/proxy/some/path/with/HEAD
  Jun 13 11:29:45.742: INFO: http.Client request:HEAD | StatusCode:200
  Jun 13 11:29:45.742: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/services/test-service/proxy/some/path/with/OPTIONS
  Jun 13 11:29:45.745: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 11:29:45.745: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/services/test-service/proxy/some/path/with/PATCH
  Jun 13 11:29:45.748: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 11:29:45.748: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/services/test-service/proxy/some/path/with/POST
  Jun 13 11:29:45.752: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 11:29:45.752: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5110/services/test-service/proxy/some/path/with/PUT
  Jun 13 11:29:45.755: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 11:29:45.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5110" for this suite. @ 06/13/24 11:29:45.759
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/13/24 11:29:45.764
  Jun 13 11:29:45.764: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 11:29:45.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:29:45.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:29:45.781
  STEP: Performing setup for networking test in namespace pod-network-test-9805 @ 06/13/24 11:29:45.784
  STEP: creating a selector @ 06/13/24 11:29:45.784
  STEP: Creating the service pods in kubernetes @ 06/13/24 11:29:45.784
  Jun 13 11:29:45.784: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0613 11:29:46.666020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:47.666646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:48.667397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:49.667651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:50.668520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:51.668675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:52.669489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:53.669769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:54.670019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:55.670270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:56.670996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:57.671249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/13/24 11:29:57.853
  E0613 11:29:58.671747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:29:59.672013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:29:59.867: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 11:29:59.867: INFO: Breadth first check of 10.42.2.196 on host 172.31.26.102...
  Jun 13 11:29:59.869: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.197:9080/dial?request=hostname&protocol=udp&host=10.42.2.196&port=8081&tries=1'] Namespace:pod-network-test-9805 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:29:59.869: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:29:59.870: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:29:59.870: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9805/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.197%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.196%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 11:29:59.965: INFO: Waiting for responses: map[]
  Jun 13 11:29:59.965: INFO: reached 10.42.2.196 after 0/1 tries
  Jun 13 11:29:59.965: INFO: Breadth first check of 10.42.0.189 on host 172.31.16.95...
  Jun 13 11:29:59.968: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.197:9080/dial?request=hostname&protocol=udp&host=10.42.0.189&port=8081&tries=1'] Namespace:pod-network-test-9805 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:29:59.968: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:29:59.969: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:29:59.969: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9805/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.197%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.189%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 11:30:00.058: INFO: Waiting for responses: map[]
  Jun 13 11:30:00.058: INFO: reached 10.42.0.189 after 0/1 tries
  Jun 13 11:30:00.058: INFO: Breadth first check of 10.42.1.115 on host 172.31.29.66...
  Jun 13 11:30:00.061: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.197:9080/dial?request=hostname&protocol=udp&host=10.42.1.115&port=8081&tries=1'] Namespace:pod-network-test-9805 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:30:00.061: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:30:00.062: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:30:00.062: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9805/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.197%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.115%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 11:30:00.155: INFO: Waiting for responses: map[]
  Jun 13 11:30:00.155: INFO: reached 10.42.1.115 after 0/1 tries
  Jun 13 11:30:00.155: INFO: Going to retry 0 out of 3 pods....
  Jun 13 11:30:00.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9805" for this suite. @ 06/13/24 11:30:00.159
• [14.400 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/13/24 11:30:00.164
  Jun 13 11:30:00.164: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:30:00.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:00.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:00.18
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:30:00.183
  E0613 11:30:00.673077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:01.673311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:02.674139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:03.674409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:30:04.208
  Jun 13 11:30:04.210: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-97d6b63e-3bc5-4e58-968e-cab2504bbe9c container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:30:04.224
  Jun 13 11:30:04.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2441" for this suite. @ 06/13/24 11:30:04.242
• [4.083 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/13/24 11:30:04.248
  Jun 13 11:30:04.248: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 11:30:04.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:04.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:04.264
  Jun 13 11:30:04.267: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:30:04.675490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:05.676134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:06.676849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:07.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5762" for this suite. @ 06/13/24 11:30:07.351
• [3.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/13/24 11:30:07.358
  Jun 13 11:30:07.358: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename gc @ 06/13/24 11:30:07.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:07.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:07.371
  STEP: create the rc @ 06/13/24 11:30:07.374
  W0613 11:30:07.381123      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0613 11:30:07.677637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:08.678216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:09.678491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:10.678990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:11.679864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/13/24 11:30:12.384
  STEP: wait for all pods to be garbage collected @ 06/13/24 11:30:12.388
  E0613 11:30:12.680345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:13.680505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:14.680702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:15.680958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:16.681004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 11:30:17.394
  W0613 11:30:17.399853      23 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 11:30:17.399: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 11:30:17.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4339" for this suite. @ 06/13/24 11:30:17.403
• [10.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/13/24 11:30:17.408
  Jun 13 11:30:17.408: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 11:30:17.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:17.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:17.424
  Jun 13 11:30:17.429: INFO: Got root ca configmap in namespace "svcaccounts-2131"
  Jun 13 11:30:17.433: INFO: Deleted root ca configmap in namespace "svcaccounts-2131"
  E0613 11:30:17.681644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 06/13/24 11:30:17.934
  Jun 13 11:30:17.937: INFO: Recreated root ca configmap in namespace "svcaccounts-2131"
  Jun 13 11:30:17.941: INFO: Updated root ca configmap in namespace "svcaccounts-2131"
  STEP: waiting for the root ca configmap reconciled @ 06/13/24 11:30:18.442
  Jun 13 11:30:18.445: INFO: Reconciled root ca configmap in namespace "svcaccounts-2131"
  Jun 13 11:30:18.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2131" for this suite. @ 06/13/24 11:30:18.448
• [1.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/13/24 11:30:18.456
  Jun 13 11:30:18.456: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/13/24 11:30:18.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:18.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:18.471
  STEP: creating a target pod @ 06/13/24 11:30:18.474
  E0613 11:30:18.681739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:19.681878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/13/24 11:30:20.489
  E0613 11:30:20.682019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:21.682819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:22.683731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:23.684028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/13/24 11:30:24.513
  Jun 13 11:30:24.513: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2035 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:30:24.513: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:30:24.513: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:30:24.514: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-2035/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 13 11:30:24.596: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/13/24 11:30:24.603
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/13/24 11:30:24.606
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/13/24 11:30:24.616
  Jun 13 11:30:24.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2035" for this suite. @ 06/13/24 11:30:24.631
• [6.181 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/13/24 11:30:24.638
  Jun 13 11:30:24.638: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename deployment @ 06/13/24 11:30:24.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:24.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:24.677
  Jun 13 11:30:24.681: INFO: Creating simple deployment test-new-deployment
  E0613 11:30:24.684393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:24.696: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0613 11:30:25.685395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:26.685829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 06/13/24 11:30:26.706
  STEP: updating a scale subresource @ 06/13/24 11:30:26.708
  STEP: verifying the deployment Spec.Replicas was modified @ 06/13/24 11:30:26.713
  STEP: Patch a scale subresource @ 06/13/24 11:30:26.715
  Jun 13 11:30:26.729: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e347e5c6-6267-4e0c-9d8a-bb2899668f0a",
      ResourceVersion: (string) (len=5) "28152",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853875024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 11:30:26.736: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "864b2d55-60fc-43dc-8316-027442367668",
      ResourceVersion: (string) (len=5) "28157",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853875024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "e347e5c6-6267-4e0c-9d8a-bb2899668f0a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 33 34 37 65 35  63 36 2d 36 32 36 37 2d  |\"e347e5c6-6267-|
              00000120  34 65 30 63 2d 39 64 38  61 2d 62 62 32 38 39 39  |4e0c-9d8a-bb2899|
              00000130  36 36 38 66 30 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |668f0a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 11:30:26.746: INFO: Pod "test-new-deployment-557759b7c7-79s27" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-79s27",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f86cc665-19cc-44ab-b0b1-ea74d05b3318",
      ResourceVersion: (string) (len=5) "28147",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853875024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5fff8b603fa9f379f59c6a213a6eae0c948c33d4d1ec453df4c55fbcdf573533",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.199/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.199/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "864b2d55-60fc-43dc-8316-027442367668",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  34 62 32 64 35 35 2d 36  |d\":\"864b2d55-6|
              00000090  30 66 63 2d 34 33 64 63  2d 38 33 31 36 2d 30 32  |0fc-43dc-8316-02|
              000000a0  37 34 34 32 33 36 37 36  36 38 5c 22 7d 22 3a 7b  |7442367668\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 39  39 5c 22 7d 22 3a 7b 22  |.42.2.199\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v6x6r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v6x6r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "18.117.132.30",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.102"
        }
      },
      PodIP: (string) (len=11) "10.42.2.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853875024,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853875025,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://32f9191d1d36550ac5df04dd05f4c4c29d2eae0b7c1d48dfccbc7bd7ffbab240",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:30:26.748: INFO: Pod "test-new-deployment-557759b7c7-xj7vs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-xj7vs",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c434b5a7-f277-4613-907e-66e1487b25eb",
      ResourceVersion: (string) (len=5) "28159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853875026,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "864b2d55-60fc-43dc-8316-027442367668",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  34 62 32 64 35 35 2d 36  |d\":\"864b2d55-6|
              00000090  30 66 63 2d 34 33 64 63  2d 38 33 31 36 2d 30 32  |0fc-43dc-8316-02|
              000000a0  37 34 34 32 33 36 37 36  36 38 5c 22 7d 22 3a 7b  |7442367668\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s4hhj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s4hhj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "18.117.161.199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853875026,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.95",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.95"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853875026,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 11:30:26.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-509" for this suite. @ 06/13/24 11:30:26.753
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/13/24 11:30:26.769
  Jun 13 11:30:26.769: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 11:30:26.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:26.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:26.791
  E0613 11:30:27.686118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:28.686368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:28.809: INFO: Deleting pod "var-expansion-6df2aecb-2e5e-4d8c-a40d-d574e8a484b8" in namespace "var-expansion-8694"
  Jun 13 11:30:28.817: INFO: Wait up to 5m0s for pod "var-expansion-6df2aecb-2e5e-4d8c-a40d-d574e8a484b8" to be fully deleted
  E0613 11:30:29.687037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:30.687341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:31.688210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:32.689182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:32.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8694" for this suite. @ 06/13/24 11:30:32.831
• [6.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/13/24 11:30:32.836
  Jun 13 11:30:32.836: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 11:30:32.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:30:32.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:30:32.853
  STEP: Creating pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825 @ 06/13/24 11:30:32.856
  E0613 11:30:33.690126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:34.690273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 11:30:34.868
  Jun 13 11:30:34.870: INFO: Initial restart count of pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 is 0
  Jun 13 11:30:34.872: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:35.690555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:36.690948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:36.876: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:37.691658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:38.692003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:38.881: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:39.692058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:40.692568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:40.885: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:41.693191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:42.693495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:42.889: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:43.694081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:44.694321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:44.892: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:45.694454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:46.694971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:46.896: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:47.695568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:48.695824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:48.900: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:49.696020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:50.696553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:50.904: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:51.696735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:52.697063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:52.908: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:53.697355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:54.698025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:54.912: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:55.698388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:56.698872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:56.917: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:57.698913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:30:58.699146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:30:58.921: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:30:59.700118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:00.700582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:00.925: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:01.701241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:02.701507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:02.929: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:03.702108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:04.702402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:04.933: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:05.703135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:06.703564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:06.937: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:07.703739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:08.703915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:08.942: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:09.704044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:10.704609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:10.946: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:11.705194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:12.705446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:12.950: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:13.706233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:14.706484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:14.954: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:15.706986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:16.707387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:16.958: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:17.707974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:18.708592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:18.963: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:19.708883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:20.709736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:20.966: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:21.710701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:22.710903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:22.970: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:23.711858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:24.712070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:24.974: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:25.713209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:26.713689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:26.978: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:27.714360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:28.714623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:28.983: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:29.714838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:30.715513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:30.987: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:31.715678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:32.716004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:32.991: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:33.716082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:34.717197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:34.995: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:35.718163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:36.718732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:36.999: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:37.719170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:38.719120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:39.004: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:39.719134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:40.719534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:41.008: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:41.720628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:42.720751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:43.012: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:43.721131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:44.721390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:45.016: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:45.721536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:46.722205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:47.020: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:47.722931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:48.723180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:49.024: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:49.723306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:50.723691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:51.028: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:51.724602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:52.725193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:53.032: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:53.725357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:54.725631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:55.036: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:55.726331      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:56.726821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:57.040: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:57.726994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:31:58.727248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:31:59.045: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:31:59.728302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:00.728655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:01.049: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:01.729303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:02.729562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:03.053: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:03.730121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:04.730289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:05.057: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:05.730436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:06.730942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:07.061: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:07.731941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:08.732226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:09.065: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:09.733197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:10.733722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:11.069: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:11.734608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:12.734847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:13.073: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:13.734992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:14.735142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:15.077: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:15.735745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:16.736120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:17.081: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:17.736183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:18.736428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:19.085: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:19.736611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:20.737575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:21.089: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:21.738256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:22.738535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:23.093: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:23.739214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:24.739441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:25.097: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:25.739707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:26.740132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:27.100: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:27.741220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:28.741440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:29.106: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:29.741861      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:30.742507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:31.110: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:31.743396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:32.743625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:33.114: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:33.743772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:34.744033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:35.117: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:35.744601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:36.745015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:37.121: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:37.745989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:38.746215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:39.125: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:39.747308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:40.747831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:41.129: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:41.748710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:42.749161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:43.134: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:43.750072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:44.750201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:45.138: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:45.751237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:46.751747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:47.142: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:47.752069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:48.753221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:49.146: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:49.754189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:50.754625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:51.150: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:51.755507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:52.755731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:53.154: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:53.756445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:54.756697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:55.158: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:55.757526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:56.758074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:57.163: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:57.758621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:32:58.759006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:32:59.167: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:32:59.760072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:00.760597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:01.171: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:01.761164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:02.761379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:03.175: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:03.762451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:04.762782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:05.179: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:05.763603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:06.764006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:07.184: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:07.764154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:08.765186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:09.188: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:09.765271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:10.765643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:11.192: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:11.766125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:12.766389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:13.196: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:13.767183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:14.767379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:15.200: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:15.767800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:16.768091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:17.204: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:17.768644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:18.769717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:19.208: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:19.770762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:20.771143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:21.212: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:21.771190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:22.771440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:23.216: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:23.772059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:24.772092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:25.219: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:25.773193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:26.773620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:27.224: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:27.773895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:28.774042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:29.228: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:29.775035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:30.775648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:31.232: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:31.775850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:32.776113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:33.235: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:33.776357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:34.776582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:35.239: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:35.777118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:36.777346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:37.242: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:37.777738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:38.778422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:39.246: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:39.778527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:40.778610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:41.250: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:41.779218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:42.779500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:43.254: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:43.779820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:44.780089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:45.258: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:45.781186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:46.781729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:47.262: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:47.781889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:48.782306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:49.266: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:49.782393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:50.782811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:51.271: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:51.783694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:52.783961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:53.275: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:53.784824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:54.785080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:55.278: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:55.785251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:56.785738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:57.282: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:57.786568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:33:58.786796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:33:59.286: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:33:59.787521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:00.787603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:01.292: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:01.788643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:02.788906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:03.295: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:03.789026      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:04.789175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:05.299: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:05.789848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:06.790006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:07.302: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:07.790395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:08.790627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:09.306: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:09.791426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:10.792071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:11.310: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:11.793195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:12.793435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:13.314: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:13.793597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:14.793911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:15.317: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:15.794567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:16.794962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:17.322: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:17.795004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:18.795146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:19.326: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:19.795243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:20.795690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:21.330: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:21.796493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:22.796654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:23.334: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:23.796758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:24.796925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:25.338: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:25.797167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:26.797648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:27.341: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:27.797813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:28.797924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:29.345: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:29.798057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:30.798676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:31.348: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:31.798978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:32.799326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:34:33.352: INFO: Get pod busybox-367180e2-8aab-4cce-832c-7190ecef48d7 in namespace container-probe-2825
  E0613 11:34:33.800195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:34.801174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/13/24 11:34:35.353
  Jun 13 11:34:35.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2825" for this suite. @ 06/13/24 11:34:35.368
• [242.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/13/24 11:34:35.375
  Jun 13 11:34:35.375: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename subpath @ 06/13/24 11:34:35.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:34:35.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:34:35.389
  STEP: Setting up data @ 06/13/24 11:34:35.392
  STEP: Creating pod pod-subpath-test-configmap-mtpd @ 06/13/24 11:34:35.399
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 11:34:35.399
  E0613 11:34:35.801384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:36.802165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:37.802750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:38.802971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:39.803689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:40.804094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:41.804967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:42.805230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:43.805889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:44.806131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:45.806748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:46.806906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:47.807610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:48.808424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:49.808521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:50.809463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:51.810344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:52.810610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:53.811050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:54.811301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:55.811362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:56.811530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:57.811707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:34:58.812508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:34:59.456
  Jun 13 11:34:59.459: INFO: Trying to get logs from node 18.117.161.199 pod pod-subpath-test-configmap-mtpd container test-container-subpath-configmap-mtpd: <nil>
  STEP: delete the pod @ 06/13/24 11:34:59.475
  STEP: Deleting pod pod-subpath-test-configmap-mtpd @ 06/13/24 11:34:59.489
  Jun 13 11:34:59.489: INFO: Deleting pod "pod-subpath-test-configmap-mtpd" in namespace "subpath-4490"
  Jun 13 11:34:59.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4490" for this suite. @ 06/13/24 11:34:59.495
• [24.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/13/24 11:34:59.503
  Jun 13 11:34:59.503: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 11:34:59.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:34:59.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:34:59.516
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3038.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-3038.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/13/24 11:34:59.519
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3038.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3038.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/13/24 11:34:59.519
  STEP: creating a pod to probe /etc/hosts @ 06/13/24 11:34:59.519
  STEP: submitting the pod to kubernetes @ 06/13/24 11:34:59.519
  E0613 11:34:59.812622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:00.813193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 11:35:01.533
  STEP: looking for the results for each expected name from probers @ 06/13/24 11:35:01.536
  Jun 13 11:35:01.549: INFO: DNS probes using dns-3038/dns-test-ecb049da-b0e2-4e18-90f3-21a44ad1e33d succeeded

  STEP: deleting the pod @ 06/13/24 11:35:01.549
  Jun 13 11:35:01.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3038" for this suite. @ 06/13/24 11:35:01.563
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/13/24 11:35:01.57
  Jun 13 11:35:01.570: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/13/24 11:35:01.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:01.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:01.584
  STEP: creating a target pod @ 06/13/24 11:35:01.588
  E0613 11:35:01.813782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:02.814036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/13/24 11:35:03.604
  E0613 11:35:03.814419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:04.814679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/13/24 11:35:05.619
  Jun 13 11:35:05.620: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3399 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:35:05.620: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:35:05.620: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:35:05.620: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-3399/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 13 11:35:05.706: INFO: Exec stderr: ""
  Jun 13 11:35:05.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3399" for this suite. @ 06/13/24 11:35:05.715
• [4.150 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/13/24 11:35:05.72
  Jun 13 11:35:05.720: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename limitrange @ 06/13/24 11:35:05.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:05.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:05.736
  STEP: Creating a LimitRange @ 06/13/24 11:35:05.739
  STEP: Setting up watch @ 06/13/24 11:35:05.739
  E0613 11:35:05.815426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Submitting a LimitRange @ 06/13/24 11:35:05.841
  STEP: Verifying LimitRange creation was observed @ 06/13/24 11:35:05.846
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/13/24 11:35:05.846
  Jun 13 11:35:05.848: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 13 11:35:05.848: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/13/24 11:35:05.848
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/13/24 11:35:05.852
  Jun 13 11:35:05.855: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 13 11:35:05.855: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/13/24 11:35:05.855
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/13/24 11:35:05.861
  Jun 13 11:35:05.863: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun 13 11:35:05.863: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/13/24 11:35:05.863
  STEP: Failing to create a Pod with more than max resources @ 06/13/24 11:35:05.866
  STEP: Updating a LimitRange @ 06/13/24 11:35:05.869
  STEP: Verifying LimitRange updating is effective @ 06/13/24 11:35:05.873
  E0613 11:35:06.815729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:07.816001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 06/13/24 11:35:07.876
  STEP: Failing to create a Pod with more than max resources @ 06/13/24 11:35:07.883
  STEP: Deleting a LimitRange @ 06/13/24 11:35:07.885
  STEP: Verifying the LimitRange was deleted @ 06/13/24 11:35:07.89
  E0613 11:35:08.816119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:09.817190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:10.817606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:11.818022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:12.818184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:12.894: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/13/24 11:35:12.894
  Jun 13 11:35:12.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7133" for this suite. @ 06/13/24 11:35:12.906
• [7.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/13/24 11:35:12.911
  Jun 13 11:35:12.911: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 11:35:12.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:12.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:12.925
  STEP: Creating a test headless service @ 06/13/24 11:35:12.928
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-893;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-893;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +notcp +noall +answer +search 178.240.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.240.178_udp@PTR;check="$$(dig +tcp +noall +answer +search 178.240.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.240.178_tcp@PTR;sleep 1; done
   @ 06/13/24 11:35:12.944
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-893;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-893;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +notcp +noall +answer +search 178.240.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.240.178_udp@PTR;check="$$(dig +tcp +noall +answer +search 178.240.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.240.178_tcp@PTR;sleep 1; done
   @ 06/13/24 11:35:12.944
  STEP: creating a pod to probe DNS @ 06/13/24 11:35:12.944
  STEP: submitting the pod to kubernetes @ 06/13/24 11:35:12.944
  E0613 11:35:13.818285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:14.819137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 11:35:14.959
  STEP: looking for the results for each expected name from probers @ 06/13/24 11:35:14.961
  Jun 13 11:35:14.965: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:14.968: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:14.971: INFO: Unable to read wheezy_udp@dns-test-service.dns-893 from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:14.974: INFO: Unable to read wheezy_tcp@dns-test-service.dns-893 from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:14.977: INFO: Unable to read wheezy_udp@dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:14.980: INFO: Unable to read wheezy_tcp@dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:14.983: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:14.986: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.000: INFO: Unable to read jessie_udp@dns-test-service from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.003: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.006: INFO: Unable to read jessie_udp@dns-test-service.dns-893 from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.008: INFO: Unable to read jessie_tcp@dns-test-service.dns-893 from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.011: INFO: Unable to read jessie_udp@dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.014: INFO: Unable to read jessie_tcp@dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.017: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.020: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:15.031: INFO: Lookups using dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-893 wheezy_tcp@dns-test-service.dns-893 wheezy_udp@dns-test-service.dns-893.svc wheezy_tcp@dns-test-service.dns-893.svc wheezy_udp@_http._tcp.dns-test-service.dns-893.svc wheezy_tcp@_http._tcp.dns-test-service.dns-893.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-893 jessie_tcp@dns-test-service.dns-893 jessie_udp@dns-test-service.dns-893.svc jessie_tcp@dns-test-service.dns-893.svc jessie_udp@_http._tcp.dns-test-service.dns-893.svc jessie_tcp@_http._tcp.dns-test-service.dns-893.svc]

  Jun 13 11:35:15.047: INFO: Pod client logs for webserver: 
  Jun 13 11:35:15.055: INFO: Pod client logs for querier: 
  Jun 13 11:35:15.061: INFO: Pod client logs for jessie-querier: 
  E0613 11:35:15.819527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:16.820050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:17.820317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:18.820444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:19.821152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:19.984: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7: the server could not find the requested resource (get pods dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7)
  Jun 13 11:35:20.032: INFO: Lookups using dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-893.svc]

  Jun 13 11:35:20.038: INFO: Pod client logs for webserver: 
  Jun 13 11:35:20.045: INFO: Pod client logs for querier: 
  Jun 13 11:35:20.051: INFO: Pod client logs for jessie-querier: 
  E0613 11:35:20.821470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:21.821948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:22.822194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:23.822434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:24.822579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:25.032: INFO: DNS probes using dns-893/dns-test-e448a1a4-7525-4e40-bb0c-f961517757f7 succeeded

  STEP: deleting the pod @ 06/13/24 11:35:25.032
  STEP: deleting the test service @ 06/13/24 11:35:25.043
  STEP: deleting the test headless service @ 06/13/24 11:35:25.062
  Jun 13 11:35:25.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-893" for this suite. @ 06/13/24 11:35:25.076
• [12.169 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/13/24 11:35:25.081
  Jun 13 11:35:25.081: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 11:35:25.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:25.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:25.094
  STEP: Create a ReplicaSet @ 06/13/24 11:35:25.096
  STEP: Verify that the required pods have come up @ 06/13/24 11:35:25.101
  Jun 13 11:35:25.103: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0613 11:35:25.823063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:26.823700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:27.824007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:28.824608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:29.825165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:30.106: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/13/24 11:35:30.106
  Jun 13 11:35:30.108: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/13/24 11:35:30.108
  STEP: DeleteCollection of the ReplicaSets @ 06/13/24 11:35:30.111
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/13/24 11:35:30.117
  Jun 13 11:35:30.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2109" for this suite. @ 06/13/24 11:35:30.124
• [5.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/13/24 11:35:30.136
  Jun 13 11:35:30.136: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 11:35:30.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:30.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:30.162
  E0613 11:35:30.825236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:31.825710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:32.826587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:33.826706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:34.827378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:35.827433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:35:36.212
  Jun 13 11:35:36.215: INFO: Trying to get logs from node 18.216.152.151 pod client-envvars-84a3fd86-fc4d-4b45-b056-d24b06aab2ec container env3cont: <nil>
  STEP: delete the pod @ 06/13/24 11:35:36.231
  Jun 13 11:35:36.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1503" for this suite. @ 06/13/24 11:35:36.246
• [6.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/13/24 11:35:36.252
  Jun 13 11:35:36.252: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/13/24 11:35:36.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:36.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:36.267
  STEP: Creating 50 configmaps @ 06/13/24 11:35:36.27
  STEP: Creating RC which spawns configmap-volume pods @ 06/13/24 11:35:36.506
  Jun 13 11:35:36.628: INFO: Pod name wrapped-volume-race-956ca5d0-d09f-4f78-96cd-e85f5ffb35ac: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/13/24 11:35:36.628
  E0613 11:35:36.827817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:37.827980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/13/24 11:35:38.71
  Jun 13 11:35:38.722: INFO: Pod name wrapped-volume-race-83a32a07-593f-45c8-95e7-e4f84500a554: Found 0 pods out of 5
  E0613 11:35:38.828537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:39.829201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:40.829555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:41.829755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:42.830083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:43.737: INFO: Pod name wrapped-volume-race-83a32a07-593f-45c8-95e7-e4f84500a554: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/13/24 11:35:43.737
  STEP: Creating RC which spawns configmap-volume pods @ 06/13/24 11:35:43.754
  Jun 13 11:35:43.771: INFO: Pod name wrapped-volume-race-472fa490-a37c-44a3-af8b-78c9fa193f22: Found 0 pods out of 5
  E0613 11:35:43.830803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:44.830974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:45.831386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:46.831805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:47.831991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:48.780: INFO: Pod name wrapped-volume-race-472fa490-a37c-44a3-af8b-78c9fa193f22: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/13/24 11:35:48.78
  STEP: deleting ReplicationController wrapped-volume-race-472fa490-a37c-44a3-af8b-78c9fa193f22 in namespace emptydir-wrapper-9295, will wait for the garbage collector to delete the pods @ 06/13/24 11:35:48.794
  E0613 11:35:48.832770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:48.852: INFO: Deleting ReplicationController wrapped-volume-race-472fa490-a37c-44a3-af8b-78c9fa193f22 took: 5.675734ms
  Jun 13 11:35:48.952: INFO: Terminating ReplicationController wrapped-volume-race-472fa490-a37c-44a3-af8b-78c9fa193f22 pods took: 100.301802ms
  E0613 11:35:49.833413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-83a32a07-593f-45c8-95e7-e4f84500a554 in namespace emptydir-wrapper-9295, will wait for the garbage collector to delete the pods @ 06/13/24 11:35:50.053
  Jun 13 11:35:50.112: INFO: Deleting ReplicationController wrapped-volume-race-83a32a07-593f-45c8-95e7-e4f84500a554 took: 4.855285ms
  Jun 13 11:35:50.213: INFO: Terminating ReplicationController wrapped-volume-race-83a32a07-593f-45c8-95e7-e4f84500a554 pods took: 100.748086ms
  E0613 11:35:50.833634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-956ca5d0-d09f-4f78-96cd-e85f5ffb35ac in namespace emptydir-wrapper-9295, will wait for the garbage collector to delete the pods @ 06/13/24 11:35:51.214
  Jun 13 11:35:51.273: INFO: Deleting ReplicationController wrapped-volume-race-956ca5d0-d09f-4f78-96cd-e85f5ffb35ac took: 4.887352ms
  Jun 13 11:35:51.373: INFO: Terminating ReplicationController wrapped-volume-race-956ca5d0-d09f-4f78-96cd-e85f5ffb35ac pods took: 100.462301ms
  E0613 11:35:51.834422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/13/24 11:35:52.374
  Jun 13 11:35:52.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9295" for this suite. @ 06/13/24 11:35:52.598
• [16.350 seconds]
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/13/24 11:35:52.602
  Jun 13 11:35:52.602: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 11:35:52.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:52.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:52.619
  Jun 13 11:35:52.633: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0613 11:35:52.834860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:53.835317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:54.835583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:55.835740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:56.835888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:57.636: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 11:35:57.636
  STEP: Scaling up "test-rs" replicaset @ 06/13/24 11:35:57.636
  Jun 13 11:35:57.645: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/13/24 11:35:57.645
  Jun 13 11:35:57.656: INFO: observed ReplicaSet test-rs in namespace replicaset-7705 with ReadyReplicas 1, AvailableReplicas 1
  Jun 13 11:35:57.668: INFO: observed ReplicaSet test-rs in namespace replicaset-7705 with ReadyReplicas 1, AvailableReplicas 1
  Jun 13 11:35:57.681: INFO: observed ReplicaSet test-rs in namespace replicaset-7705 with ReadyReplicas 1, AvailableReplicas 1
  Jun 13 11:35:57.690: INFO: observed ReplicaSet test-rs in namespace replicaset-7705 with ReadyReplicas 1, AvailableReplicas 1
  E0613 11:35:57.837000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:35:58.837489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:35:59.008: INFO: observed ReplicaSet test-rs in namespace replicaset-7705 with ReadyReplicas 2, AvailableReplicas 2
  Jun 13 11:35:59.345: INFO: observed Replicaset test-rs in namespace replicaset-7705 with ReadyReplicas 3 found true
  Jun 13 11:35:59.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7705" for this suite. @ 06/13/24 11:35:59.349
• [6.752 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/13/24 11:35:59.355
  Jun 13 11:35:59.355: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:35:59.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:35:59.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:35:59.368
  STEP: Creating configMap with name configmap-test-volume-56d1ee74-c325-4850-9879-b9b05109d738 @ 06/13/24 11:35:59.371
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:35:59.375
  E0613 11:35:59.838192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:00.838905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:01.839622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:02.839794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:36:03.394
  Jun 13 11:36:03.397: INFO: Trying to get logs from node 18.117.132.30 pod pod-configmaps-6227e3e8-bd4a-4cf6-9b50-2a8ab35469e3 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:36:03.404
  Jun 13 11:36:03.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3145" for this suite. @ 06/13/24 11:36:03.42
• [4.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/13/24 11:36:03.426
  Jun 13 11:36:03.426: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:36:03.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:36:03.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:36:03.441
  STEP: creating service in namespace services-2278 @ 06/13/24 11:36:03.444
  STEP: creating service affinity-nodeport-transition in namespace services-2278 @ 06/13/24 11:36:03.444
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2278 @ 06/13/24 11:36:03.456
  I0613 11:36:03.466669      23 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-2278, replica count: 3
  E0613 11:36:03.840443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:04.841114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:05.841440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:36:06.517544      23 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 11:36:06.526: INFO: Creating new exec pod
  E0613 11:36:06.842045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:07.842276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:08.842341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:09.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-2278 exec execpod-affinityr8bj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jun 13 11:36:09.698: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun 13 11:36:09.698: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:36:09.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-2278 exec execpod-affinityr8bj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.28.135 80'
  E0613 11:36:09.842425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:09.845: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.28.135 80\nConnection to 10.43.28.135 80 port [tcp/http] succeeded!\n"
  Jun 13 11:36:09.845: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:36:09.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-2278 exec execpod-affinityr8bj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.102 30901'
  Jun 13 11:36:10.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.102 30901\nConnection to 172.31.26.102 30901 port [tcp/*] succeeded!\n"
  Jun 13 11:36:10.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:36:10.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-2278 exec execpod-affinityr8bj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.66 30901'
  Jun 13 11:36:10.150: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.66 30901\nConnection to 172.31.29.66 30901 port [tcp/*] succeeded!\n"
  Jun 13 11:36:10.150: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:36:10.157: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-2278 exec execpod-affinityr8bj7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.102:30901/ ; done'
  Jun 13 11:36:10.381: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n"
  Jun 13 11:36:10.381: INFO: stdout: "\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-4jkkp\naffinity-nodeport-transition-4jkkp\naffinity-nodeport-transition-4jkkp\naffinity-nodeport-transition-4jkkp\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-964v4\naffinity-nodeport-transition-4jkkp\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-964v4\naffinity-nodeport-transition-964v4\naffinity-nodeport-transition-4jkkp"
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-4jkkp
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-4jkkp
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-4jkkp
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-4jkkp
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-964v4
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-4jkkp
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-964v4
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-964v4
  Jun 13 11:36:10.381: INFO: Received response from host: affinity-nodeport-transition-4jkkp
  Jun 13 11:36:10.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-2278 exec execpod-affinityr8bj7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.102:30901/ ; done'
  Jun 13 11:36:10.604: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:30901/\n"
  Jun 13 11:36:10.604: INFO: stdout: "\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5\naffinity-nodeport-transition-hnzq5"
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Received response from host: affinity-nodeport-transition-hnzq5
  Jun 13 11:36:10.604: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2278, will wait for the garbage collector to delete the pods @ 06/13/24 11:36:10.615
  Jun 13 11:36:10.676: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.271784ms
  Jun 13 11:36:10.776: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.409763ms
  E0613 11:36:10.843217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:11.843296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:12.844069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:13.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2278" for this suite. @ 06/13/24 11:36:13.599
• [10.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/13/24 11:36:13.604
  Jun 13 11:36:13.604: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 11:36:13.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:36:13.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:36:13.618
  STEP: Creating resourceQuota "e2e-rq-status-pl8wg" @ 06/13/24 11:36:13.623
  Jun 13 11:36:13.629: INFO: Resource quota "e2e-rq-status-pl8wg" reports spec: hard cpu limit of 500m
  Jun 13 11:36:13.630: INFO: Resource quota "e2e-rq-status-pl8wg" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-pl8wg" /status @ 06/13/24 11:36:13.63
  STEP: Confirm /status for "e2e-rq-status-pl8wg" resourceQuota via watch @ 06/13/24 11:36:13.636
  Jun 13 11:36:13.637: INFO: observed resourceQuota "e2e-rq-status-pl8wg" in namespace "resourcequota-2052" with hard status: v1.ResourceList(nil)
  Jun 13 11:36:13.637: INFO: Found resourceQuota "e2e-rq-status-pl8wg" in namespace "resourcequota-2052" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 13 11:36:13.637: INFO: ResourceQuota "e2e-rq-status-pl8wg" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/13/24 11:36:13.64
  Jun 13 11:36:13.645: INFO: Resource quota "e2e-rq-status-pl8wg" reports spec: hard cpu limit of 1
  Jun 13 11:36:13.645: INFO: Resource quota "e2e-rq-status-pl8wg" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-pl8wg" /status @ 06/13/24 11:36:13.645
  STEP: Confirm /status for "e2e-rq-status-pl8wg" resourceQuota via watch @ 06/13/24 11:36:13.653
  Jun 13 11:36:13.655: INFO: observed resourceQuota "e2e-rq-status-pl8wg" in namespace "resourcequota-2052" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 13 11:36:13.655: INFO: Found resourceQuota "e2e-rq-status-pl8wg" in namespace "resourcequota-2052" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun 13 11:36:13.655: INFO: ResourceQuota "e2e-rq-status-pl8wg" /status was patched
  STEP: Get "e2e-rq-status-pl8wg" /status @ 06/13/24 11:36:13.655
  Jun 13 11:36:13.658: INFO: Resourcequota "e2e-rq-status-pl8wg" reports status: hard cpu of 1
  Jun 13 11:36:13.658: INFO: Resourcequota "e2e-rq-status-pl8wg" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-pl8wg" /status before checking Spec is unchanged @ 06/13/24 11:36:13.66
  Jun 13 11:36:13.664: INFO: Resourcequota "e2e-rq-status-pl8wg" reports status: hard cpu of 2
  Jun 13 11:36:13.664: INFO: Resourcequota "e2e-rq-status-pl8wg" reports status: hard memory of 2Gi
  Jun 13 11:36:13.666: INFO: Found resourceQuota "e2e-rq-status-pl8wg" in namespace "resourcequota-2052" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun 13 11:36:13.668: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aee900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aee930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aee978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:13.845127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:14.845364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:15.845659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:16.846125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:17.846294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:18.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:18.846408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:19.846651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:20.847062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:21.847555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:22.847857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:23.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aeec60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aeec90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aeecd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:23.848557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:24.848676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:25.848815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:26.848975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:27.849377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:28.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f1e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f248), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:28.849629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:29.849791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:30.850389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:31.850546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:32.850702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:33.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e5a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:33.851047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:34.851265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:35.851493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:36.851568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:37.851705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:38.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f698), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f6c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f6f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:38.852284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:39.852527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:40.852914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:41.853316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:42.853613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:43.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e9d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7ea08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7ea50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:43.854304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:44.854582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:45.854751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:46.854889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:47.855078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:48.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7ed20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7ed50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7ed98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:48.855362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:49.855587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:50.856031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:51.856094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:52.856391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:53.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aef260), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aef290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aef2c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:53.856479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:54.856721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:55.856953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:56.857457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:57.857767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:36:58.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f0b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f0e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:36:58.858725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:36:59.859518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:00.859982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:01.860072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:02.860274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:03.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aef6f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aef740), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aef788), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:03.861190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:04.861501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:05.861501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:06.861953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:07.862200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:08.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:08.862964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:09.863405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:10.863885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:11.864086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:12.865211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:13.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fb60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fb90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fbc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:13.866156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:14.866417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:15.866680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:16.867167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:17.867378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:18.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aefa28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aefa70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004aefab8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:18.867462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:19.867642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:20.868054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:21.868475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:22.868707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:23.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f8f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7f950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:23.869207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:24.869376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:25.869675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:26.869869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:27.870139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:28.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fe48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fe78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fea8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:28.870315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:29.870482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:30.870736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:31.871172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:32.871466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:33.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e018), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:33.871662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:34.871928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:35.872169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:36.873203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:37.873721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:38.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e1e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:38.880082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:39.881183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:40.881674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:41.881790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:42.882089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:43.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e5a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e5d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:43.882323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:44.882575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:45.882821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:46.883226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:47.883504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:48.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e8b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485e8e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:48.884023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:49.884197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:50.884682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:51.885101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:52.885335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:53.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485ed38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485ed98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485edc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:53.885954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:54.886208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:55.886463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:56.886617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:57.886839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:37:58.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cca420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cca468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cca4c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:37:58.887079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:37:59.887258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:00.887804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:01.888076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:02.888345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:03.671: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cca738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cca780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cca7b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:03.888413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:04.888569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:05.889183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:06.889732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:07.889946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:08.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f1a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f1d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:08.890521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:09.890731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:10.891143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:11.891623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:12.891769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:13.671: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccabd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccac30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccac60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:13.892842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:14.892992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:15.893239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:16.893778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:17.893934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:18.671: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7e5b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:18.894855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:19.895102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:20.895657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:21.896041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:22.896308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:23.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f4b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f4e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:23.896479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:24.896616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:25.896830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:26.897378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:27.897653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:28.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccb128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccb188), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccb1b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:28.898079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:29.898318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:30.898713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:31.899108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:32.899267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:33.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccb668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccb6e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccb710), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:33.900001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:34.900083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:35.901131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:36.901965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:37.902211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:38.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f740), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485f7a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:38.903069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:39.903288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:40.903691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:41.904072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:42.904707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:43.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccbe18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccbe60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ccbec0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:43.905183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:44.905412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:45.905677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:46.906084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:47.906334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:48.671: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:48.906586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:49.906852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:50.907389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:51.907874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:52.908056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:53.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e7f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7e870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:53.909028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:54.909283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:55.909534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:56.909666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:57.909891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:38:58.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7ec60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7ecc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7ed08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:38:58.910124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:38:59.910375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:00.910781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:01.911164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:02.911300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:03.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7f380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7f410), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a7f458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:39:03.912103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:04.912356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:05.912493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:06.912989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:07.913233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:08.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fbd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fc08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00485fc38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:39:08.913955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:09.914133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:10.914698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:11.915176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:12.915440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:13.670: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pl8wg", GenerateName:"", Namespace:"resourcequota-2052", SelfLink:"", UID:"08415be7-c5db-401e-b5d5-707b2c901c99", ResourceVersion:"29824", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pl8wg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7ef78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7efc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 11, 36, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b7eff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 11:39:13.916506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:14.917172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:15.917431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:16.917799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:17.918052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:18.669: INFO: ResourceQuota "e2e-rq-status-pl8wg" Spec was unchanged and /status reset
  Jun 13 11:39:18.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2052" for this suite. @ 06/13/24 11:39:18.673
• [185.073 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/13/24 11:39:18.677
  Jun 13 11:39:18.677: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-webhook @ 06/13/24 11:39:18.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:18.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:18.692
  STEP: Setting up server cert @ 06/13/24 11:39:18.695
  E0613 11:39:18.918750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/13/24 11:39:19.265
  STEP: Deploying the custom resource conversion webhook pod @ 06/13/24 11:39:19.272
  STEP: Wait for the deployment to be ready @ 06/13/24 11:39:19.287
  Jun 13 11:39:19.292: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0613 11:39:19.919044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:20.919539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:39:21.301
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:39:21.313
  E0613 11:39:21.920199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:22.313: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 13 11:39:22.319: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:39:22.920964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:23.922130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/13/24 11:39:24.885
  STEP: v2 custom resource should be converted @ 06/13/24 11:39:24.889
  E0613 11:39:24.922611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:25.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6198" for this suite. @ 06/13/24 11:39:25.453
• [6.800 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/13/24 11:39:25.477
  Jun 13 11:39:25.478: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 11:39:25.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:25.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:25.492
  E0613 11:39:25.923087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:26.923768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:27.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6943" for this suite. @ 06/13/24 11:39:27.537
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/13/24 11:39:27.545
  Jun 13 11:39:27.545: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:39:27.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:27.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:27.609
  STEP: Creating secret with name projected-secret-test-0274a5e4-c9cf-409d-8380-2e546336bd04 @ 06/13/24 11:39:27.612
  STEP: Creating a pod to test consume secrets @ 06/13/24 11:39:27.618
  E0613 11:39:27.924600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:28.924901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:29.925215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:30.925691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:39:31.634
  Jun 13 11:39:31.636: INFO: Trying to get logs from node 18.117.161.199 pod pod-projected-secrets-a9599d02-3d18-43e3-85fd-daa15ebabbf7 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:39:31.651
  Jun 13 11:39:31.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1868" for this suite. @ 06/13/24 11:39:31.669
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/13/24 11:39:31.674
  Jun 13 11:39:31.674: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:39:31.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:31.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:31.692
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:39:31.695
  E0613 11:39:31.926672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:32.927188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:33.928306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:34.928389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:39:35.718
  Jun 13 11:39:35.721: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-8a5cbf16-e45d-44d3-ad8b-c81deed9798e container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:39:35.727
  Jun 13 11:39:35.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-483" for this suite. @ 06/13/24 11:39:35.744
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/13/24 11:39:35.75
  Jun 13 11:39:35.750: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 11:39:35.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:35.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:35.766
  Jun 13 11:39:35.769: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0613 11:39:35.928441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/13/24 11:39:36.778
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/13/24 11:39:36.782
  E0613 11:39:36.928971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/13/24 11:39:37.788
  Jun 13 11:39:37.798: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/13/24 11:39:37.798
  E0613 11:39:37.929424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:39:38.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2174" for this suite. @ 06/13/24 11:39:38.807
• [3.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/13/24 11:39:38.814
  Jun 13 11:39:38.814: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 11:39:38.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:38.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:38.83
  Jun 13 11:39:38.833: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 11:39:38.841: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 11:39:38.844: INFO: 
  Logging pods the apiserver thinks is on node 18.117.132.30 before test
  Jun 13 11:39:38.850: INFO: calico-kube-controllers-8485458bd8-jnr6l from kube-system started at 2024-06-13 09:45:08 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.850: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 11:39:38.850: INFO: canal-rp4h4 from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 11:39:38.850: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 11:39:38.850: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 11:39:38.850: INFO: coredns-autoscaler-6ff6bf758-slrqs from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.850: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 11:39:38.850: INFO: busybox-scheduling-56409846-d66f-42c9-bbce-8c306b3d1f09 from kubelet-test-6943 started at 2024-06-13 11:39:25 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.850: INFO: 	Container busybox-scheduling-56409846-d66f-42c9-bbce-8c306b3d1f09 ready: true, restart count 0
  Jun 13 11:39:38.850: INFO: condition-test-phr2t from replication-controller-2174 started at 2024-06-13 11:39:36 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.850: INFO: 	Container httpd ready: true, restart count 0
  Jun 13 11:39:38.850: INFO: sonobuoy from sonobuoy started at 2024-06-13 10:15:49 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.850: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 11:39:38.850: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-bk62f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 11:39:38.850: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 11:39:38.851: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 11:39:38.851: INFO: 
  Logging pods the apiserver thinks is on node 18.117.161.199 before test
  Jun 13 11:39:38.856: INFO: canal-gzz2g from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 11:39:38.856: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 11:39:38.856: INFO: coredns-7b7785bd9-g7xjw from kube-system started at 2024-06-13 09:45:36 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 11:39:38.856: INFO: metrics-server-657c74b5d8-2zf6t from kube-system started at 2024-06-13 09:45:27 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 11:39:38.856: INFO: rke-coredns-addon-deploy-job-2bhwc from kube-system started at 2024-06-13 09:45:13 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 11:39:38.856: INFO: rke-metrics-addon-deploy-job-wkp4q from kube-system started at 2024-06-13 09:45:25 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 11:39:38.856: INFO: rke-network-plugin-deploy-job-rgkm9 from kube-system started at 2024-06-13 09:45:06 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 11:39:38.856: INFO: condition-test-xtr85 from replication-controller-2174 started at 2024-06-13 11:39:36 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container httpd ready: true, restart count 0
  Jun 13 11:39:38.856: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-t4ql9 from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 11:39:38.856: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 11:39:38.856: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 11:39:38.856: INFO: 
  Logging pods the apiserver thinks is on node 18.216.152.151 before test
  Jun 13 11:39:38.862: INFO: canal-k9tgk from kube-system started at 2024-06-13 09:45:08 +0000 UTC (2 container statuses recorded)
  Jun 13 11:39:38.862: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 11:39:38.862: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 11:39:38.862: INFO: coredns-7b7785bd9-glrkb from kube-system started at 2024-06-13 09:45:16 +0000 UTC (1 container statuses recorded)
  Jun 13 11:39:38.862: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 11:39:38.862: INFO: sonobuoy-e2e-job-5d97470650654ddd from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 11:39:38.862: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 11:39:38.862: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 11:39:38.862: INFO: sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-kwc7f from sonobuoy started at 2024-06-13 10:15:52 +0000 UTC (2 container statuses recorded)
  Jun 13 11:39:38.862: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 11:39:38.862: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/13/24 11:39:38.862
  E0613 11:39:38.929962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:39.930218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/13/24 11:39:40.878
  STEP: Trying to apply a random label on the found node. @ 06/13/24 11:39:40.888
  STEP: verifying the node has the label kubernetes.io/e2e-b33292e5-4723-4842-90df-8f53e2feff31 42 @ 06/13/24 11:39:40.903
  STEP: Trying to relaunch the pod, now with labels. @ 06/13/24 11:39:40.907
  E0613 11:39:40.930516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:41.931001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-b33292e5-4723-4842-90df-8f53e2feff31 off the node 18.216.152.151 @ 06/13/24 11:39:42.921
  E0613 11:39:42.931766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b33292e5-4723-4842-90df-8f53e2feff31 @ 06/13/24 11:39:42.932
  Jun 13 11:39:42.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2916" for this suite. @ 06/13/24 11:39:42.94
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/13/24 11:39:42.946
  Jun 13 11:39:42.946: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/13/24 11:39:42.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:42.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:42.959
  E0613 11:39:43.932069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:44.933193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 06/13/24 11:39:44.987
  STEP: Cleaning up the configmap @ 06/13/24 11:39:44.991
  STEP: Cleaning up the pod @ 06/13/24 11:39:44.995
  Jun 13 11:39:45.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6957" for this suite. @ 06/13/24 11:39:45.012
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/13/24 11:39:45.019
  Jun 13 11:39:45.019: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 11:39:45.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:45.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:45.035
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/13/24 11:39:45.038
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/13/24 11:39:45.038
  STEP: creating a pod to probe DNS @ 06/13/24 11:39:45.039
  STEP: submitting the pod to kubernetes @ 06/13/24 11:39:45.039
  E0613 11:39:45.933469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:46.933905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 11:39:47.056
  STEP: looking for the results for each expected name from probers @ 06/13/24 11:39:47.058
  Jun 13 11:39:47.069: INFO: DNS probes using dns-1626/dns-test-5b8823c7-b5cd-4f9c-8ef2-014c92908431 succeeded

  STEP: deleting the pod @ 06/13/24 11:39:47.069
  Jun 13 11:39:47.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1626" for this suite. @ 06/13/24 11:39:47.087
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/13/24 11:39:47.097
  Jun 13 11:39:47.097: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename gc @ 06/13/24 11:39:47.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:39:47.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:39:47.112
  STEP: create the rc1 @ 06/13/24 11:39:47.118
  STEP: create the rc2 @ 06/13/24 11:39:47.122
  E0613 11:39:47.934090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:48.934855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:49.935490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:50.938184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:51.938329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:52.938437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/13/24 11:39:53.174
  E0613 11:39:53.939276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:54.940041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/13/24 11:39:55.808
  STEP: wait for the rc to be deleted @ 06/13/24 11:39:55.816
  E0613 11:39:55.940549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:56.940730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:57.940840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:58.941106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:39:59.941358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:00.828: INFO: 70 pods remaining
  Jun 13 11:40:00.828: INFO: 70 pods has nil DeletionTimestamp
  Jun 13 11:40:00.828: INFO: 
  E0613 11:40:00.942105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:01.942693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:02.942993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:03.943235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:04.943512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 11:40:05.828
  W0613 11:40:05.833421      23 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 11:40:05.833: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 11:40:05.833: INFO: Deleting pod "simpletest-rc-to-be-deleted-2h6nj" in namespace "gc-3607"
  Jun 13 11:40:05.844: INFO: Deleting pod "simpletest-rc-to-be-deleted-2l6kh" in namespace "gc-3607"
  Jun 13 11:40:05.864: INFO: Deleting pod "simpletest-rc-to-be-deleted-2sxwb" in namespace "gc-3607"
  Jun 13 11:40:05.879: INFO: Deleting pod "simpletest-rc-to-be-deleted-49gm8" in namespace "gc-3607"
  Jun 13 11:40:05.910: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vhq5" in namespace "gc-3607"
  Jun 13 11:40:05.943: INFO: Deleting pod "simpletest-rc-to-be-deleted-55dbj" in namespace "gc-3607"
  E0613 11:40:05.943616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:05.956: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fw9b" in namespace "gc-3607"
  Jun 13 11:40:05.978: INFO: Deleting pod "simpletest-rc-to-be-deleted-5q7lm" in namespace "gc-3607"
  Jun 13 11:40:05.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nj4v" in namespace "gc-3607"
  Jun 13 11:40:06.008: INFO: Deleting pod "simpletest-rc-to-be-deleted-6s9rt" in namespace "gc-3607"
  Jun 13 11:40:06.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-6v2g8" in namespace "gc-3607"
  Jun 13 11:40:06.060: INFO: Deleting pod "simpletest-rc-to-be-deleted-76blr" in namespace "gc-3607"
  Jun 13 11:40:06.078: INFO: Deleting pod "simpletest-rc-to-be-deleted-79mh5" in namespace "gc-3607"
  Jun 13 11:40:06.110: INFO: Deleting pod "simpletest-rc-to-be-deleted-7hqvk" in namespace "gc-3607"
  Jun 13 11:40:06.132: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qkqx" in namespace "gc-3607"
  Jun 13 11:40:06.169: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vrhf" in namespace "gc-3607"
  Jun 13 11:40:06.210: INFO: Deleting pod "simpletest-rc-to-be-deleted-88pbm" in namespace "gc-3607"
  Jun 13 11:40:06.247: INFO: Deleting pod "simpletest-rc-to-be-deleted-8sjvl" in namespace "gc-3607"
  Jun 13 11:40:06.287: INFO: Deleting pod "simpletest-rc-to-be-deleted-97672" in namespace "gc-3607"
  Jun 13 11:40:06.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hqt2" in namespace "gc-3607"
  Jun 13 11:40:06.346: INFO: Deleting pod "simpletest-rc-to-be-deleted-9r6rt" in namespace "gc-3607"
  Jun 13 11:40:06.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9zgl" in namespace "gc-3607"
  Jun 13 11:40:06.409: INFO: Deleting pod "simpletest-rc-to-be-deleted-bckdb" in namespace "gc-3607"
  Jun 13 11:40:06.436: INFO: Deleting pod "simpletest-rc-to-be-deleted-bj78b" in namespace "gc-3607"
  Jun 13 11:40:06.459: INFO: Deleting pod "simpletest-rc-to-be-deleted-bp6zg" in namespace "gc-3607"
  Jun 13 11:40:06.491: INFO: Deleting pod "simpletest-rc-to-be-deleted-c5z2h" in namespace "gc-3607"
  Jun 13 11:40:06.526: INFO: Deleting pod "simpletest-rc-to-be-deleted-czr5s" in namespace "gc-3607"
  Jun 13 11:40:06.564: INFO: Deleting pod "simpletest-rc-to-be-deleted-d8sbd" in namespace "gc-3607"
  Jun 13 11:40:06.595: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmkwf" in namespace "gc-3607"
  Jun 13 11:40:06.616: INFO: Deleting pod "simpletest-rc-to-be-deleted-dv2b5" in namespace "gc-3607"
  Jun 13 11:40:06.637: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4m2k" in namespace "gc-3607"
  Jun 13 11:40:06.655: INFO: Deleting pod "simpletest-rc-to-be-deleted-fnqwq" in namespace "gc-3607"
  Jun 13 11:40:06.687: INFO: Deleting pod "simpletest-rc-to-be-deleted-g586z" in namespace "gc-3607"
  Jun 13 11:40:06.710: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggvmj" in namespace "gc-3607"
  Jun 13 11:40:06.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-h6kfc" in namespace "gc-3607"
  Jun 13 11:40:06.746: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7996" in namespace "gc-3607"
  Jun 13 11:40:06.765: INFO: Deleting pod "simpletest-rc-to-be-deleted-hbxkk" in namespace "gc-3607"
  Jun 13 11:40:06.823: INFO: Deleting pod "simpletest-rc-to-be-deleted-hf89k" in namespace "gc-3607"
  Jun 13 11:40:06.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-hfzpw" in namespace "gc-3607"
  Jun 13 11:40:06.867: INFO: Deleting pod "simpletest-rc-to-be-deleted-hmctc" in namespace "gc-3607"
  E0613 11:40:06.944236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:06.972: INFO: Deleting pod "simpletest-rc-to-be-deleted-hmzwq" in namespace "gc-3607"
  Jun 13 11:40:06.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-htj2b" in namespace "gc-3607"
  Jun 13 11:40:07.016: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvdbx" in namespace "gc-3607"
  Jun 13 11:40:07.058: INFO: Deleting pod "simpletest-rc-to-be-deleted-k892g" in namespace "gc-3607"
  Jun 13 11:40:07.093: INFO: Deleting pod "simpletest-rc-to-be-deleted-kz6pp" in namespace "gc-3607"
  Jun 13 11:40:07.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-lfx55" in namespace "gc-3607"
  Jun 13 11:40:07.158: INFO: Deleting pod "simpletest-rc-to-be-deleted-ljr6s" in namespace "gc-3607"
  Jun 13 11:40:07.194: INFO: Deleting pod "simpletest-rc-to-be-deleted-ll8fs" in namespace "gc-3607"
  Jun 13 11:40:07.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-lm827" in namespace "gc-3607"
  Jun 13 11:40:07.331: INFO: Deleting pod "simpletest-rc-to-be-deleted-ltglq" in namespace "gc-3607"
  Jun 13 11:40:07.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3607" for this suite. @ 06/13/24 11:40:07.376
• [20.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/13/24 11:40:07.418
  Jun 13 11:40:07.418: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 11:40:07.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:40:07.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:40:07.475
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/13/24 11:40:07.483
  Jun 13 11:40:07.499: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0613 11:40:07.945155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:08.945299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:09.945564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:10.945723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:11.946772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:12.502: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 11:40:12.502
  STEP: getting scale subresource @ 06/13/24 11:40:12.502
  STEP: updating a scale subresource @ 06/13/24 11:40:12.505
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/13/24 11:40:12.514
  STEP: Patch a scale subresource @ 06/13/24 11:40:12.52
  Jun 13 11:40:12.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7682" for this suite. @ 06/13/24 11:40:12.539
• [5.129 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/13/24 11:40:12.547
  Jun 13 11:40:12.547: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:40:12.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:40:12.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:40:12.563
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:40:12.567
  E0613 11:40:12.947682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:13.948034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:14.948108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:15.948231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:40:16.585
  Jun 13 11:40:16.588: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-0438b5ac-4dc6-4d59-b2a8-1a5a8834d09c container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:40:16.597
  Jun 13 11:40:16.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4923" for this suite. @ 06/13/24 11:40:16.611
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/13/24 11:40:16.618
  Jun 13 11:40:16.618: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 11:40:16.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:40:16.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:40:16.632
  STEP: apply creating a deployment @ 06/13/24 11:40:16.635
  Jun 13 11:40:16.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6810" for this suite. @ 06/13/24 11:40:16.648
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/13/24 11:40:16.655
  Jun 13 11:40:16.655: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:40:16.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:40:16.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:40:16.667
  STEP: creating service endpoint-test2 in namespace services-4649 @ 06/13/24 11:40:16.67
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[] @ 06/13/24 11:40:16.679
  Jun 13 11:40:16.684: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0613 11:40:16.949193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:17.745: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4649 @ 06/13/24 11:40:17.745
  E0613 11:40:17.950135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:18.950717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod1:[80]] @ 06/13/24 11:40:19.761
  Jun 13 11:40:19.769: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/13/24 11:40:19.769
  Jun 13 11:40:19.769: INFO: Creating new exec pod
  E0613 11:40:19.951563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:20.951827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:21.952261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:22.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4649 exec execpodsvnj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 13 11:40:22.932: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 13 11:40:22.932: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:40:22.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4649 exec execpodsvnj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.11.136 80'
  E0613 11:40:22.952966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:23.087: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.11.136 80\nConnection to 10.43.11.136 80 port [tcp/http] succeeded!\n"
  Jun 13 11:40:23.088: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4649 @ 06/13/24 11:40:23.088
  E0613 11:40:23.953468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:24.953891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/13/24 11:40:25.108
  Jun 13 11:40:25.118: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/13/24 11:40:25.118
  E0613 11:40:25.954663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:26.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4649 exec execpodsvnj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 13 11:40:26.268: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 13 11:40:26.268: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:40:26.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4649 exec execpodsvnj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.11.136 80'
  Jun 13 11:40:26.415: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.11.136 80\nConnection to 10.43.11.136 80 port [tcp/http] succeeded!\n"
  Jun 13 11:40:26.415: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4649 @ 06/13/24 11:40:26.415
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[pod2:[80]] @ 06/13/24 11:40:26.431
  Jun 13 11:40:26.441: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/13/24 11:40:26.441
  E0613 11:40:26.954843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:27.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4649 exec execpodsvnj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 13 11:40:27.600: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 13 11:40:27.600: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:40:27.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4649 exec execpodsvnj5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.11.136 80'
  Jun 13 11:40:27.751: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.11.136 80\nConnection to 10.43.11.136 80 port [tcp/http] succeeded!\n"
  Jun 13 11:40:27.751: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4649 @ 06/13/24 11:40:27.751
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4649 to expose endpoints map[] @ 06/13/24 11:40:27.766
  Jun 13 11:40:27.783: INFO: successfully validated that service endpoint-test2 in namespace services-4649 exposes endpoints map[]
  Jun 13 11:40:27.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4649" for this suite. @ 06/13/24 11:40:27.799
• [11.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/13/24 11:40:27.805
  Jun 13 11:40:27.805: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename aggregator @ 06/13/24 11:40:27.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:40:27.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:40:27.821
  Jun 13 11:40:27.824: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Registering the sample API server. @ 06/13/24 11:40:27.824
  E0613 11:40:27.955265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:28.558: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun 13 11:40:28.581: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0613 11:40:28.956385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:29.956535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:30.617: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:30.956722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:31.957163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:32.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:32.957343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:33.957673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:34.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:34.958513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:35.958760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:36.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:36.959562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:37.959677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:38.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:38.959842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:39.960155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:40.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:40.960995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:41.961484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:42.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:42.962311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:43.962551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:44.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:44.963208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:45.963457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:46.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:46.963517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:47.963778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:48.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:48.964242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:49.964429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:50.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:50.965226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:51.965699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:52.740: INFO: Waited 112.136265ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/13/24 11:40:52.796
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/13/24 11:40:52.799
  STEP: List APIServices @ 06/13/24 11:40:52.818
  Jun 13 11:40:52.823: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/13/24 11:40:52.823
  Jun 13 11:40:52.837: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/13/24 11:40:52.837
  Jun 13 11:40:52.846: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 52, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/13/24 11:40:52.846
  Jun 13 11:40:52.849: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-13 11:40:52 +0000 UTC Passed all checks passed}
  Jun 13 11:40:52.849: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 11:40:52.849: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/13/24 11:40:52.849
  Jun 13 11:40:52.872: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1100946969" @ 06/13/24 11:40:52.872
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/13/24 11:40:52.883
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/13/24 11:40:52.89
  STEP: Patch APIService Status @ 06/13/24 11:40:52.893
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/13/24 11:40:52.899
  Jun 13 11:40:52.902: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-13 11:40:52 +0000 UTC Passed all checks passed}
  Jun 13 11:40:52.902: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 11:40:52.902: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun 13 11:40:52.902: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/13/24 11:40:52.902
  STEP: Confirm that the generated APIService has been deleted @ 06/13/24 11:40:52.909
  Jun 13 11:40:52.909: INFO: Requesting list of APIServices to confirm quantity
  Jun 13 11:40:52.913: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun 13 11:40:52.913: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  E0613 11:40:52.965796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:52.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3354" for this suite. @ 06/13/24 11:40:52.993
• [25.193 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/13/24 11:40:52.998
  Jun 13 11:40:52.998: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:40:52.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:40:53.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:40:53.016
  STEP: Setting up server cert @ 06/13/24 11:40:53.038
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:40:53.523
  STEP: Deploying the webhook pod @ 06/13/24 11:40:53.528
  STEP: Wait for the deployment to be ready @ 06/13/24 11:40:53.542
  Jun 13 11:40:53.547: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 11:40:53.966764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:54.967161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:55.556: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 11, 40, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 11, 40, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 11:40:55.968182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:56.968657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:40:57.56
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:40:57.571
  E0613 11:40:57.969186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:40:58.572: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/13/24 11:40:58.636
  STEP: Creating a configMap that should be mutated @ 06/13/24 11:40:58.647
  STEP: Deleting the collection of validation webhooks @ 06/13/24 11:40:58.673
  STEP: Creating a configMap that should not be mutated @ 06/13/24 11:40:58.705
  Jun 13 11:40:58.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2544" for this suite. @ 06/13/24 11:40:58.748
  STEP: Destroying namespace "webhook-markers-5025" for this suite. @ 06/13/24 11:40:58.759
• [5.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/13/24 11:40:58.765
  Jun 13 11:40:58.765: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:40:58.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:40:58.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:40:58.781
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-527 @ 06/13/24 11:40:58.784
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/13/24 11:40:58.795
  STEP: creating service externalsvc in namespace services-527 @ 06/13/24 11:40:58.795
  STEP: creating replication controller externalsvc in namespace services-527 @ 06/13/24 11:40:58.806
  I0613 11:40:58.819752      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-527, replica count: 2
  E0613 11:40:58.969425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:40:59.970387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:00.970860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:41:01.870087      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/13/24 11:41:01.873
  Jun 13 11:41:01.888: INFO: Creating new exec pod
  E0613 11:41:01.970987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:02.971446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:03.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-527 exec execpodpksm5 -- /bin/sh -x -c nslookup clusterip-service.services-527.svc.cluster.local'
  E0613 11:41:03.972422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:04.080: INFO: stderr: "+ nslookup clusterip-service.services-527.svc.cluster.local\n"
  Jun 13 11:41:04.080: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-527.svc.cluster.local\tcanonical name = externalsvc.services-527.svc.cluster.local.\nName:\texternalsvc.services-527.svc.cluster.local\nAddress: 10.43.156.115\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-527, will wait for the garbage collector to delete the pods @ 06/13/24 11:41:04.08
  Jun 13 11:41:04.139: INFO: Deleting ReplicationController externalsvc took: 5.494468ms
  Jun 13 11:41:04.240: INFO: Terminating ReplicationController externalsvc pods took: 100.841512ms
  E0613 11:41:04.972547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:05.972968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:06.952: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun 13 11:41:06.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-527" for this suite. @ 06/13/24 11:41:06.965
• [8.206 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/13/24 11:41:06.971
  Jun 13 11:41:06.971: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:41:06.971
  E0613 11:41:06.973679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:06.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:06.988
  STEP: Creating the pod @ 06/13/24 11:41:06.991
  E0613 11:41:07.973845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:08.974152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:09.530: INFO: Successfully updated pod "annotationupdatecbbd1047-b70a-49b8-87de-106d69b7c13e"
  E0613 11:41:09.975174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:10.975360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:11.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2677" for this suite. @ 06/13/24 11:41:11.55
• [4.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/13/24 11:41:11.556
  Jun 13 11:41:11.556: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename job @ 06/13/24 11:41:11.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:11.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:11.573
  STEP: Creating a job @ 06/13/24 11:41:11.576
  STEP: Ensuring active pods == parallelism @ 06/13/24 11:41:11.581
  E0613 11:41:11.975584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:12.975935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 06/13/24 11:41:13.586
  STEP: deleting Job.batch foo in namespace job-9886, will wait for the garbage collector to delete the pods @ 06/13/24 11:41:13.586
  Jun 13 11:41:13.646: INFO: Deleting Job.batch foo took: 7.144162ms
  Jun 13 11:41:13.747: INFO: Terminating Job.batch foo pods took: 100.944388ms
  E0613 11:41:13.976744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:14.977329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:15.977571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 06/13/24 11:41:16.448
  Jun 13 11:41:16.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9886" for this suite. @ 06/13/24 11:41:16.455
• [4.905 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/13/24 11:41:16.461
  Jun 13 11:41:16.461: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:41:16.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:16.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:16.475
  Jun 13 11:41:16.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-317 version'
  Jun 13 11:41:16.535: INFO: stderr: ""
  Jun 13 11:41:16.535: INFO: stdout: "Client Version: v1.29.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.5\n"
  Jun 13 11:41:16.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-317" for this suite. @ 06/13/24 11:41:16.539
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/13/24 11:41:16.572
  Jun 13 11:41:16.572: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 11:41:16.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:16.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:16.588
  Jun 13 11:41:16.612: INFO: Create a RollingUpdate DaemonSet
  Jun 13 11:41:16.620: INFO: Check that daemon pods launch on every node of the cluster
  Jun 13 11:41:16.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 11:41:16.626: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  E0613 11:41:16.978502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:17.628: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 11:41:17.628: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  E0613 11:41:17.978576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:18.628: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 11:41:18.628: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun 13 11:41:18.628: INFO: Update the DaemonSet to trigger a rollout
  Jun 13 11:41:18.637: INFO: Updating DaemonSet daemon-set
  E0613 11:41:18.978711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:19.979533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:20.979627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:21.651: INFO: Roll back the DaemonSet before rollout is complete
  Jun 13 11:41:21.658: INFO: Updating DaemonSet daemon-set
  Jun 13 11:41:21.658: INFO: Make sure DaemonSet rollback is complete
  Jun 13 11:41:21.663: INFO: Wrong image for pod: daemon-set-th92c. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun 13 11:41:21.663: INFO: Pod daemon-set-th92c is not available
  E0613 11:41:21.980028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:22.981079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:23.981723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:24.662: INFO: Pod daemon-set-rngdm is not available
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 11:41:24.67
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4522, will wait for the garbage collector to delete the pods @ 06/13/24 11:41:24.67
  Jun 13 11:41:24.727: INFO: Deleting DaemonSet.extensions daemon-set took: 4.35198ms
  Jun 13 11:41:24.827: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.59684ms
  E0613 11:41:24.982138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:25.983148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:26.630: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 11:41:26.630: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 11:41:26.633: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33313"},"items":null}

  Jun 13 11:41:26.635: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33313"},"items":null}

  Jun 13 11:41:26.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4522" for this suite. @ 06/13/24 11:41:26.648
• [10.082 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/13/24 11:41:26.655
  Jun 13 11:41:26.655: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:41:26.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:26.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:26.667
  STEP: validating api versions @ 06/13/24 11:41:26.67
  Jun 13 11:41:26.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-3707 api-versions'
  Jun 13 11:41:26.733: INFO: stderr: ""
  Jun 13 11:41:26.733: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jun 13 11:41:26.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3707" for this suite. @ 06/13/24 11:41:26.736
• [0.088 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/13/24 11:41:26.743
  Jun 13 11:41:26.743: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 11:41:26.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:26.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:26.757
  STEP: Waiting for pod completion @ 06/13/24 11:41:26.77
  E0613 11:41:26.984053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:27.984436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:28.984938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:29.985186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:30.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1487" for this suite. @ 06/13/24 11:41:30.791
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/13/24 11:41:30.798
  Jun 13 11:41:30.798: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:41:30.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:30.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:30.81
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:41:30.813
  E0613 11:41:30.985955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:31.986725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:32.986772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:33.987019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:41:34.835
  Jun 13 11:41:34.837: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-e7b766e6-0264-4a66-87b9-4c2517ab4821 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:41:34.853
  Jun 13 11:41:34.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8224" for this suite. @ 06/13/24 11:41:34.868
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/13/24 11:41:34.873
  Jun 13 11:41:34.873: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 11:41:34.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:34.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:34.889
  Jun 13 11:41:34.892: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:41:34.987438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:35.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8695" for this suite. @ 06/13/24 11:41:35.43
• [0.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/13/24 11:41:35.435
  Jun 13 11:41:35.436: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 11:41:35.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:35.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:35.451
  E0613 11:41:35.987520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:36.987991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:41:37.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-727" for this suite. @ 06/13/24 11:41:37.485
• [2.054 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/13/24 11:41:37.489
  Jun 13 11:41:37.490: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:41:37.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:37.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:37.504
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/13/24 11:41:37.508
  E0613 11:41:37.988805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:38.989244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:39.990061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:40.990610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:41:41.524
  Jun 13 11:41:41.527: INFO: Trying to get logs from node 18.117.161.199 pod pod-f61cd828-669d-48bd-be77-4102257beddc container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:41:41.533
  Jun 13 11:41:41.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7748" for this suite. @ 06/13/24 11:41:41.549
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/13/24 11:41:41.555
  Jun 13 11:41:41.555: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 11:41:41.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:41.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:41.569
  Jun 13 11:41:41.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3185" for this suite. @ 06/13/24 11:41:41.58
• [0.031 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/13/24 11:41:41.586
  Jun 13 11:41:41.586: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pv @ 06/13/24 11:41:41.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:41.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:41.599
  STEP: Creating initial PV and PVC @ 06/13/24 11:41:41.602
  Jun 13 11:41:41.602: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9768" @ 06/13/24 11:41:41.615
  STEP: Listing PVCs in namespace "pv-9768" @ 06/13/24 11:41:41.618
  STEP: Reading "pvc-gkm95" Status @ 06/13/24 11:41:41.621
  STEP: Reading "pv-9768-tc6xd" Status @ 06/13/24 11:41:41.626
  STEP: Patching "pvc-gkm95" Status @ 06/13/24 11:41:41.633
  STEP: Patching "pv-9768-tc6xd" Status @ 06/13/24 11:41:41.639
  STEP: Updating "pvc-gkm95" Status @ 06/13/24 11:41:41.644
  STEP: Updating "pv-9768-tc6xd" Status @ 06/13/24 11:41:41.651
  Jun 13 11:41:41.659: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 13 11:41:41.659: INFO: Deleting PersistentVolumeClaim "pvc-gkm95"
  Jun 13 11:41:41.663: INFO: Deleting PersistentVolume "pv-9768-tc6xd"
  Jun 13 11:41:41.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9768" for this suite. @ 06/13/24 11:41:41.672
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/13/24 11:41:41.677
  Jun 13 11:41:41.677: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:41:41.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:41.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:41.692
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:41:41.695
  E0613 11:41:41.991570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:42.991811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:43.991931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:44.992068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:41:45.713
  Jun 13 11:41:45.716: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-1bd65661-2603-46ea-8a0d-29d2b8bd3a3c container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:41:45.722
  Jun 13 11:41:45.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1860" for this suite. @ 06/13/24 11:41:45.74
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/13/24 11:41:45.746
  Jun 13 11:41:45.746: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename hostport @ 06/13/24 11:41:45.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:41:45.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:41:45.762
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/13/24 11:41:45.768
  E0613 11:41:45.992923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:46.993350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.16.95 on the node which pod1 resides and expect scheduled @ 06/13/24 11:41:47.782
  E0613 11:41:47.994275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:48.994538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.16.95 but use UDP protocol on the node which pod2 resides @ 06/13/24 11:41:49.793
  E0613 11:41:49.994633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:50.994822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:51.995652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:52.995767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:53.996280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:54.996426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/13/24 11:41:55.824
  Jun 13 11:41:55.824: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.16.95 http://127.0.0.1:54323/hostname] Namespace:hostport-1492 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:41:55.824: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:41:55.825: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:41:55.825: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-1492/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.16.95+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.16.95, port: 54323 @ 06/13/24 11:41:55.911
  Jun 13 11:41:55.912: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.16.95:54323/hostname] Namespace:hostport-1492 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:41:55.912: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:41:55.912: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:41:55.912: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-1492/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.16.95%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0613 11:41:55.996810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.16.95, port: 54323 UDP @ 06/13/24 11:41:56
  Jun 13 11:41:56.000: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.16.95 54323] Namespace:hostport-1492 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:41:56.000: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:41:56.000: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:41:56.000: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-1492/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.16.95+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0613 11:41:56.997022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:57.997196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:58.997348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:41:59.997534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:00.997829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:42:01.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1492" for this suite. @ 06/13/24 11:42:01.098
• [15.358 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/13/24 11:42:01.104
  Jun 13 11:42:01.104: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:42:01.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:01.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:01.122
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/13/24 11:42:01.125
  E0613 11:42:01.998392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:02.998823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:03.998948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:04.999222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:42:05.148
  Jun 13 11:42:05.150: INFO: Trying to get logs from node 18.117.132.30 pod pod-b57850bb-9655-4b67-9110-a113dc009624 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:42:05.157
  Jun 13 11:42:05.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1729" for this suite. @ 06/13/24 11:42:05.173
• [4.073 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/13/24 11:42:05.177
  Jun 13 11:42:05.177: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:42:05.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:05.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:05.197
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/13/24 11:42:05.2
  E0613 11:42:06.000203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:07.000757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:08.001814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:09.002059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:42:09.221
  Jun 13 11:42:09.224: INFO: Trying to get logs from node 18.117.132.30 pod pod-1f3464db-80ce-4478-9cb5-5eca30669d11 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:42:09.231
  Jun 13 11:42:09.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4137" for this suite. @ 06/13/24 11:42:09.249
• [4.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/13/24 11:42:09.254
  Jun 13 11:42:09.254: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:42:09.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:09.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:09.268
  STEP: Creating a pod to test downward api env vars @ 06/13/24 11:42:09.271
  E0613 11:42:10.002213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:11.002726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:12.003316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:13.003572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:42:13.287
  Jun 13 11:42:13.289: INFO: Trying to get logs from node 18.117.161.199 pod downward-api-1fb9e1bf-8d10-4025-9686-37eccc52fa92 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 11:42:13.296
  Jun 13 11:42:13.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7164" for this suite. @ 06/13/24 11:42:13.315
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/13/24 11:42:13.321
  Jun 13 11:42:13.321: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 11:42:13.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:13.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:13.337
  Jun 13 11:42:13.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8568" for this suite. @ 06/13/24 11:42:13.364
• [0.048 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/13/24 11:42:13.369
  Jun 13 11:42:13.369: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:42:13.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:13.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:13.386
  STEP: Creating the pod @ 06/13/24 11:42:13.389
  E0613 11:42:14.004683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:15.004841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:42:15.924: INFO: Successfully updated pod "labelsupdateb9e512e2-a73f-4407-8b31-851135a9e8f1"
  E0613 11:42:16.005900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:17.006292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:18.006882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:19.007049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:42:19.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5752" for this suite. @ 06/13/24 11:42:19.952
• [6.587 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/13/24 11:42:19.957
  Jun 13 11:42:19.957: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:42:19.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:19.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:19.972
  STEP: Creating a pod to test downward api env vars @ 06/13/24 11:42:19.975
  E0613 11:42:20.007677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:21.008142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:22.008569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:23.009147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:42:23.992
  Jun 13 11:42:23.995: INFO: Trying to get logs from node 18.117.132.30 pod downward-api-610e6655-6d39-44b4-84c7-7ad459e99fc6 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 11:42:24.002
  E0613 11:42:24.009510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:42:24.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2317" for this suite. @ 06/13/24 11:42:24.015
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/13/24 11:42:24.02
  Jun 13 11:42:24.020: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename gc @ 06/13/24 11:42:24.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:24.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:24.036
  Jun 13 11:42:24.137: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"4fac8283-06a8-4ebf-a7b5-82eba74d3482", Controller:(*bool)(0xc003a3ecfe), BlockOwnerDeletion:(*bool)(0xc003a3ecff)}}
  Jun 13 11:42:24.144: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f4ed2738-8577-4a51-bc38-db383a6068e8", Controller:(*bool)(0xc003a3ef26), BlockOwnerDeletion:(*bool)(0xc003a3ef27)}}
  Jun 13 11:42:24.151: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"3ddc0f7c-240c-4a7c-a914-d5f51cd0dda4", Controller:(*bool)(0xc003a3f14e), BlockOwnerDeletion:(*bool)(0xc003a3f14f)}}
  E0613 11:42:25.010606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:26.010693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:27.010856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:28.011003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:29.011120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:42:29.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9417" for this suite. @ 06/13/24 11:42:29.165
• [5.149 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/13/24 11:42:29.17
  Jun 13 11:42:29.170: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 11:42:29.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:29.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:29.186
  STEP: Creating secret with name secret-test-map-f28ad144-5ed0-4ed2-8234-fc152e839a89 @ 06/13/24 11:42:29.191
  STEP: Creating a pod to test consume secrets @ 06/13/24 11:42:29.196
  E0613 11:42:30.012157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:31.012563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:32.013514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:33.013751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:42:33.213
  Jun 13 11:42:33.216: INFO: Trying to get logs from node 18.117.161.199 pod pod-secrets-adc7f5ad-2cce-42f8-a0ca-39e716907048 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:42:33.222
  Jun 13 11:42:33.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9267" for this suite. @ 06/13/24 11:42:33.24
• [4.074 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/13/24 11:42:33.244
  Jun 13 11:42:33.244: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 11:42:33.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:42:33.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:42:33.26
  STEP: Creating service test in namespace statefulset-7798 @ 06/13/24 11:42:33.263
  STEP: Creating a new StatefulSet @ 06/13/24 11:42:33.268
  Jun 13 11:42:33.278: INFO: Found 0 stateful pods, waiting for 3
  E0613 11:42:34.013896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:35.014062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:36.014662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:37.015141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:38.015398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:39.015644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:40.015950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:41.016550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:42.017395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:43.017662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:42:43.279: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 11:42:43.279: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 11:42:43.279: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/13/24 11:42:43.287
  Jun 13 11:42:43.304: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/13/24 11:42:43.304
  E0613 11:42:44.018070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:45.018311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:46.018327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:47.019273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:48.019527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:49.019875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:50.020077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:51.021197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:52.021711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:53.021956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/13/24 11:42:53.312
  STEP: Performing a canary update @ 06/13/24 11:42:53.312
  Jun 13 11:42:53.330: INFO: Updating stateful set ss2
  Jun 13 11:42:53.340: INFO: Waiting for Pod statefulset-7798/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0613 11:42:54.023015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:55.023172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:56.023348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:57.023512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:58.023771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:42:59.023981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:00.024103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:01.024238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:02.024410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:03.024561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/13/24 11:43:03.337
  Jun 13 11:43:03.371: INFO: Found 1 stateful pods, waiting for 3
  E0613 11:43:04.025482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:05.025793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:06.026020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:07.026474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:08.026722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:09.026986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:10.027245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:11.027683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:12.028128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:13.029158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:43:13.366: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 11:43:13.366: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 11:43:13.366: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/13/24 11:43:13.371
  Jun 13 11:43:13.389: INFO: Updating stateful set ss2
  Jun 13 11:43:13.396: INFO: Waiting for Pod statefulset-7798/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0613 11:43:14.029230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:15.029499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:16.029739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:17.030654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:18.031249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:19.031422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:20.031663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:21.032058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:22.032196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:23.032337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:43:23.413: INFO: Updating stateful set ss2
  Jun 13 11:43:23.421: INFO: Waiting for StatefulSet statefulset-7798/ss2 to complete update
  Jun 13 11:43:23.421: INFO: Waiting for Pod statefulset-7798/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0613 11:43:24.032498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:25.033309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:26.033623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:27.033788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:28.034151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:29.034415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:30.034582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:31.034935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:32.035421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:33.035741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:43:33.420: INFO: Deleting all statefulset in ns statefulset-7798
  Jun 13 11:43:33.423: INFO: Scaling statefulset ss2 to 0
  E0613 11:43:34.036377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:35.036543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:36.036700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:37.037254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:38.037524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:39.037707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:40.038111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:41.038252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:42.039278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:43.039528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:43:43.436: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 11:43:43.439: INFO: Deleting statefulset ss2
  Jun 13 11:43:43.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7798" for this suite. @ 06/13/24 11:43:43.452
• [70.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/13/24 11:43:43.462
  Jun 13 11:43:43.462: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:43:43.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:43:43.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:43:43.482
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:43:43.485
  E0613 11:43:44.040377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:45.040512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:46.041171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:47.041710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:43:47.504
  Jun 13 11:43:47.506: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-c0596f24-6f6d-4f00-82be-c66fe4a6dfbd container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:43:47.513
  Jun 13 11:43:47.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3934" for this suite. @ 06/13/24 11:43:47.533
• [4.075 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/13/24 11:43:47.537
  Jun 13 11:43:47.537: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename podtemplate @ 06/13/24 11:43:47.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:43:47.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:43:47.556
  Jun 13 11:43:47.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-799" for this suite. @ 06/13/24 11:43:47.586
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/13/24 11:43:47.591
  Jun 13 11:43:47.591: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename apf @ 06/13/24 11:43:47.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:43:47.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:43:47.61
  STEP: getting /apis @ 06/13/24 11:43:47.613
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/13/24 11:43:47.617
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/13/24 11:43:47.618
  STEP: creating @ 06/13/24 11:43:47.619
  STEP: getting @ 06/13/24 11:43:47.634
  STEP: listing @ 06/13/24 11:43:47.636
  STEP: watching @ 06/13/24 11:43:47.639
  Jun 13 11:43:47.639: INFO: starting watch
  STEP: patching @ 06/13/24 11:43:47.64
  STEP: updating @ 06/13/24 11:43:47.648
  Jun 13 11:43:47.654: INFO: waiting for watch events with expected annotations
  Jun 13 11:43:47.655: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 06/13/24 11:43:47.655
  STEP: patching /status @ 06/13/24 11:43:47.657
  STEP: updating /status @ 06/13/24 11:43:47.662
  STEP: deleting @ 06/13/24 11:43:47.691
  STEP: deleting a collection @ 06/13/24 11:43:47.7
  Jun 13 11:43:47.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5054" for this suite. @ 06/13/24 11:43:47.718
• [0.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/13/24 11:43:47.725
  Jun 13 11:43:47.725: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 11:43:47.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:43:47.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:43:47.75
  E0613 11:43:48.042358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:49.042468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:50.043063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:51.043557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:43:51.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5772" for this suite. @ 06/13/24 11:43:51.78
• [4.061 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/13/24 11:43:51.785
  Jun 13 11:43:51.785: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:43:51.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:43:51.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:43:51.806
  STEP: Creating a pod to test downward api env vars @ 06/13/24 11:43:51.809
  E0613 11:43:52.043609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:53.044190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:54.045154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:55.046095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:43:55.83
  Jun 13 11:43:55.832: INFO: Trying to get logs from node 18.117.161.199 pod downward-api-d338509b-e22f-424e-85f1-d3e09b3a0f64 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 11:43:55.839
  Jun 13 11:43:55.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3190" for this suite. @ 06/13/24 11:43:55.854
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/13/24 11:43:55.859
  Jun 13 11:43:55.859: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename job @ 06/13/24 11:43:55.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:43:55.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:43:55.876
  STEP: Creating a suspended job @ 06/13/24 11:43:55.881
  STEP: Patching the Job @ 06/13/24 11:43:55.886
  STEP: Watching for Job to be patched @ 06/13/24 11:43:55.905
  Jun 13 11:43:55.906: INFO: Event ADDED observed for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j] and annotations: map[]
  Jun 13 11:43:55.906: INFO: Event MODIFIED observed for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j] and annotations: map[]
  Jun 13 11:43:55.906: INFO: Event MODIFIED found for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[]
  STEP: Updating the job @ 06/13/24 11:43:55.907
  STEP: Watching for Job to be updated @ 06/13/24 11:43:55.914
  Jun 13 11:43:55.915: INFO: Event MODIFIED found for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[updated:true]
  Jun 13 11:43:55.915: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/13/24 11:43:55.915
  Jun 13 11:43:55.918: INFO: Job: e2e-wxs4j as labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched]
  STEP: Waiting for job to complete @ 06/13/24 11:43:55.918
  E0613 11:43:56.046238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:57.046764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:58.047647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:43:59.047750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:00.048418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:01.048521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:02.049451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:03.050372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 06/13/24 11:44:03.922
  STEP: Watching for Job to be deleted @ 06/13/24 11:44:03.927
  Jun 13 11:44:03.930: INFO: Event MODIFIED observed for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[updated:true]
  Jun 13 11:44:03.930: INFO: Event MODIFIED observed for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[updated:true]
  Jun 13 11:44:03.930: INFO: Event MODIFIED observed for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[updated:true]
  Jun 13 11:44:03.930: INFO: Event MODIFIED observed for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[updated:true]
  Jun 13 11:44:03.930: INFO: Event MODIFIED observed for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[updated:true]
  Jun 13 11:44:03.930: INFO: Event DELETED found for Job e2e-wxs4j in namespace job-8240 with labels: map[e2e-job-label:e2e-wxs4j e2e-wxs4j:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/13/24 11:44:03.93
  Jun 13 11:44:03.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8240" for this suite. @ 06/13/24 11:44:03.936
• [8.094 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/13/24 11:44:03.954
  Jun 13 11:44:03.954: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 11:44:03.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:03.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:03.974
  STEP: Creating secret with name secret-test-46a8e180-4030-4ec9-b9a8-14e2f38d60fe @ 06/13/24 11:44:03.977
  STEP: Creating a pod to test consume secrets @ 06/13/24 11:44:03.981
  E0613 11:44:04.051091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:05.051332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:06.052054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:07.052592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:44:07.998
  Jun 13 11:44:08.000: INFO: Trying to get logs from node 18.117.132.30 pod pod-secrets-5a181f3e-3f06-4740-860f-a644cce37e06 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:44:08.015
  Jun 13 11:44:08.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9847" for this suite. @ 06/13/24 11:44:08.032
• [4.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/13/24 11:44:08.037
  Jun 13 11:44:08.037: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:44:08.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:08.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:08.052
  E0613 11:44:08.052887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating Agnhost RC @ 06/13/24 11:44:08.055
  Jun 13 11:44:08.055: INFO: namespace kubectl-5088
  Jun 13 11:44:08.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-5088 create -f -'
  Jun 13 11:44:08.181: INFO: stderr: ""
  Jun 13 11:44:08.181: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/13/24 11:44:08.181
  E0613 11:44:09.053010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:09.185: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 11:44:09.185: INFO: Found 0 / 1
  E0613 11:44:10.053291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:10.186: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 11:44:10.186: INFO: Found 1 / 1
  Jun 13 11:44:10.186: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 13 11:44:10.188: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 11:44:10.188: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 11:44:10.188: INFO: wait on agnhost-primary startup in kubectl-5088 
  Jun 13 11:44:10.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-5088 logs agnhost-primary-nfqxw agnhost-primary'
  Jun 13 11:44:10.260: INFO: stderr: ""
  Jun 13 11:44:10.260: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/13/24 11:44:10.26
  Jun 13 11:44:10.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-5088 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun 13 11:44:10.336: INFO: stderr: ""
  Jun 13 11:44:10.336: INFO: stdout: "service/rm2 exposed\n"
  Jun 13 11:44:10.340: INFO: Service rm2 in namespace kubectl-5088 found.
  E0613 11:44:11.053522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:12.054086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 06/13/24 11:44:12.345
  Jun 13 11:44:12.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-5088 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun 13 11:44:12.420: INFO: stderr: ""
  Jun 13 11:44:12.420: INFO: stdout: "service/rm3 exposed\n"
  Jun 13 11:44:12.424: INFO: Service rm3 in namespace kubectl-5088 found.
  E0613 11:44:13.054394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:14.054647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:14.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5088" for this suite. @ 06/13/24 11:44:14.434
• [6.401 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/13/24 11:44:14.439
  Jun 13 11:44:14.439: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 11:44:14.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:14.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:14.455
  STEP: Creating a ResourceQuota @ 06/13/24 11:44:14.458
  STEP: Getting a ResourceQuota @ 06/13/24 11:44:14.462
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/13/24 11:44:14.464
  STEP: Patching the ResourceQuota @ 06/13/24 11:44:14.468
  STEP: Deleting a Collection of ResourceQuotas @ 06/13/24 11:44:14.472
  STEP: Verifying the deleted ResourceQuota @ 06/13/24 11:44:14.479
  Jun 13 11:44:14.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2082" for this suite. @ 06/13/24 11:44:14.484
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/13/24 11:44:14.489
  Jun 13 11:44:14.489: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename dns @ 06/13/24 11:44:14.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:14.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:14.505
  STEP: Creating a test headless service @ 06/13/24 11:44:14.508
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3905.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3905.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/13/24 11:44:14.515
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3905.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3905.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/13/24 11:44:14.515
  STEP: creating a pod to probe DNS @ 06/13/24 11:44:14.515
  STEP: submitting the pod to kubernetes @ 06/13/24 11:44:14.515
  E0613 11:44:15.054795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:16.055074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 11:44:16.531
  STEP: looking for the results for each expected name from probers @ 06/13/24 11:44:16.534
  Jun 13 11:44:16.547: INFO: DNS probes using dns-3905/dns-test-5cb28e2b-eb76-4696-a8e2-957de8fcbc9c succeeded

  STEP: deleting the pod @ 06/13/24 11:44:16.547
  STEP: deleting the test headless service @ 06/13/24 11:44:16.558
  Jun 13 11:44:16.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3905" for this suite. @ 06/13/24 11:44:16.584
• [2.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/13/24 11:44:16.589
  Jun 13 11:44:16.589: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename gc @ 06/13/24 11:44:16.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:16.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:16.603
  STEP: create the deployment @ 06/13/24 11:44:16.606
  W0613 11:44:16.610089      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/13/24 11:44:16.61
  E0613 11:44:17.055878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/13/24 11:44:17.116
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/13/24 11:44:17.12
  STEP: Gathering metrics @ 06/13/24 11:44:17.633
  W0613 11:44:17.638466      23 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 11:44:17.638: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 11:44:17.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9194" for this suite. @ 06/13/24 11:44:17.641
• [1.060 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/13/24 11:44:17.649
  Jun 13 11:44:17.649: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename discovery @ 06/13/24 11:44:17.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:17.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:17.669
  STEP: Setting up server cert @ 06/13/24 11:44:17.674
  E0613 11:44:18.056706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:18.274: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun 13 11:44:18.276: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun 13 11:44:18.276: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun 13 11:44:18.276: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun 13 11:44:18.276: INFO: Checking APIGroup: apps
  Jun 13 11:44:18.277: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun 13 11:44:18.277: INFO: Versions found [{apps/v1 v1}]
  Jun 13 11:44:18.277: INFO: apps/v1 matches apps/v1
  Jun 13 11:44:18.277: INFO: Checking APIGroup: events.k8s.io
  Jun 13 11:44:18.278: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun 13 11:44:18.278: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun 13 11:44:18.278: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun 13 11:44:18.278: INFO: Checking APIGroup: authentication.k8s.io
  Jun 13 11:44:18.279: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun 13 11:44:18.280: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun 13 11:44:18.280: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun 13 11:44:18.280: INFO: Checking APIGroup: authorization.k8s.io
  Jun 13 11:44:18.281: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun 13 11:44:18.281: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun 13 11:44:18.281: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun 13 11:44:18.281: INFO: Checking APIGroup: autoscaling
  Jun 13 11:44:18.282: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun 13 11:44:18.282: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun 13 11:44:18.282: INFO: autoscaling/v2 matches autoscaling/v2
  Jun 13 11:44:18.282: INFO: Checking APIGroup: batch
  Jun 13 11:44:18.283: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun 13 11:44:18.283: INFO: Versions found [{batch/v1 v1}]
  Jun 13 11:44:18.283: INFO: batch/v1 matches batch/v1
  Jun 13 11:44:18.283: INFO: Checking APIGroup: certificates.k8s.io
  Jun 13 11:44:18.284: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun 13 11:44:18.284: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun 13 11:44:18.284: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun 13 11:44:18.284: INFO: Checking APIGroup: networking.k8s.io
  Jun 13 11:44:18.285: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun 13 11:44:18.285: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun 13 11:44:18.285: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun 13 11:44:18.286: INFO: Checking APIGroup: policy
  Jun 13 11:44:18.287: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun 13 11:44:18.287: INFO: Versions found [{policy/v1 v1}]
  Jun 13 11:44:18.287: INFO: policy/v1 matches policy/v1
  Jun 13 11:44:18.287: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun 13 11:44:18.288: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun 13 11:44:18.288: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun 13 11:44:18.288: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun 13 11:44:18.288: INFO: Checking APIGroup: storage.k8s.io
  Jun 13 11:44:18.289: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun 13 11:44:18.289: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun 13 11:44:18.289: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun 13 11:44:18.289: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun 13 11:44:18.290: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun 13 11:44:18.290: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun 13 11:44:18.290: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun 13 11:44:18.290: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun 13 11:44:18.292: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun 13 11:44:18.292: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun 13 11:44:18.292: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun 13 11:44:18.292: INFO: Checking APIGroup: scheduling.k8s.io
  Jun 13 11:44:18.293: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun 13 11:44:18.293: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun 13 11:44:18.293: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun 13 11:44:18.293: INFO: Checking APIGroup: coordination.k8s.io
  Jun 13 11:44:18.294: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun 13 11:44:18.294: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun 13 11:44:18.294: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun 13 11:44:18.294: INFO: Checking APIGroup: node.k8s.io
  Jun 13 11:44:18.295: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun 13 11:44:18.295: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun 13 11:44:18.295: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun 13 11:44:18.295: INFO: Checking APIGroup: discovery.k8s.io
  Jun 13 11:44:18.297: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun 13 11:44:18.297: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun 13 11:44:18.297: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun 13 11:44:18.297: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun 13 11:44:18.298: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun 13 11:44:18.298: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun 13 11:44:18.298: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun 13 11:44:18.298: INFO: Checking APIGroup: crd.projectcalico.org
  Jun 13 11:44:18.299: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Jun 13 11:44:18.299: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Jun 13 11:44:18.299: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Jun 13 11:44:18.299: INFO: Checking APIGroup: metrics.k8s.io
  Jun 13 11:44:18.300: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jun 13 11:44:18.300: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jun 13 11:44:18.300: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jun 13 11:44:18.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5423" for this suite. @ 06/13/24 11:44:18.304
• [0.660 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/13/24 11:44:18.309
  Jun 13 11:44:18.309: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 11:44:18.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:18.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:18.324
  STEP: getting /apis @ 06/13/24 11:44:18.327
  STEP: getting /apis/discovery.k8s.io @ 06/13/24 11:44:18.331
  STEP: getting /apis/discovery.k8s.iov1 @ 06/13/24 11:44:18.332
  STEP: creating @ 06/13/24 11:44:18.334
  STEP: getting @ 06/13/24 11:44:18.348
  STEP: listing @ 06/13/24 11:44:18.35
  STEP: watching @ 06/13/24 11:44:18.352
  Jun 13 11:44:18.352: INFO: starting watch
  STEP: cluster-wide listing @ 06/13/24 11:44:18.354
  STEP: cluster-wide watching @ 06/13/24 11:44:18.356
  Jun 13 11:44:18.356: INFO: starting watch
  STEP: patching @ 06/13/24 11:44:18.357
  STEP: updating @ 06/13/24 11:44:18.362
  Jun 13 11:44:18.368: INFO: waiting for watch events with expected annotations
  Jun 13 11:44:18.368: INFO: saw patched and updated annotations
  STEP: deleting @ 06/13/24 11:44:18.368
  STEP: deleting a collection @ 06/13/24 11:44:18.377
  Jun 13 11:44:18.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1985" for this suite. @ 06/13/24 11:44:18.389
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/13/24 11:44:18.395
  Jun 13 11:44:18.395: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:44:18.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:18.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:18.41
  STEP: Creating the pod @ 06/13/24 11:44:18.413
  E0613 11:44:19.056834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:20.057280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:20.950: INFO: Successfully updated pod "labelsupdate91c69d10-794f-40a3-9cf0-d84df74d9580"
  E0613 11:44:21.057694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:22.058555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:22.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-376" for this suite. @ 06/13/24 11:44:22.971
• [4.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/13/24 11:44:22.976
  Jun 13 11:44:22.976: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 11:44:22.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:22.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:23.001
  Jun 13 11:44:23.004: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:44:23.059566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:24.060551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/13/24 11:44:24.369
  Jun 13 11:44:24.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-5636 --namespace=crd-publish-openapi-5636 create -f -'
  E0613 11:44:25.060743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:26.060838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:26.453: INFO: stderr: ""
  Jun 13 11:44:26.453: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 13 11:44:26.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-5636 --namespace=crd-publish-openapi-5636 delete e2e-test-crd-publish-openapi-883-crds test-cr'
  Jun 13 11:44:26.520: INFO: stderr: ""
  Jun 13 11:44:26.520: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun 13 11:44:26.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-5636 --namespace=crd-publish-openapi-5636 apply -f -'
  Jun 13 11:44:26.658: INFO: stderr: ""
  Jun 13 11:44:26.658: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 13 11:44:26.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-5636 --namespace=crd-publish-openapi-5636 delete e2e-test-crd-publish-openapi-883-crds test-cr'
  Jun 13 11:44:26.725: INFO: stderr: ""
  Jun 13 11:44:26.725: INFO: stdout: "e2e-test-crd-publish-openapi-883-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/13/24 11:44:26.725
  Jun 13 11:44:26.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=crd-publish-openapi-5636 explain e2e-test-crd-publish-openapi-883-crds'
  Jun 13 11:44:26.790: INFO: stderr: ""
  Jun 13 11:44:26.790: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-883-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0613 11:44:27.061105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:28.061694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:28.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5636" for this suite. @ 06/13/24 11:44:28.119
• [5.149 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/13/24 11:44:28.125
  Jun 13 11:44:28.125: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:44:28.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:28.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:28.139
  STEP: starting the proxy server @ 06/13/24 11:44:28.142
  Jun 13 11:44:28.142: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8580 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/13/24 11:44:28.191
  Jun 13 11:44:28.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8580" for this suite. @ 06/13/24 11:44:28.203
• [0.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/13/24 11:44:28.207
  Jun 13 11:44:28.207: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:44:28.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:28.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:28.223
  STEP: Creating the pod @ 06/13/24 11:44:28.226
  E0613 11:44:29.062122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:30.062535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:30.761: INFO: Successfully updated pod "annotationupdate1d38a659-012c-4cc8-83ff-27b2c3d719c7"
  E0613 11:44:31.063082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:32.063677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:33.064558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:34.065094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:34.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2082" for this suite. @ 06/13/24 11:44:34.79
• [6.588 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/13/24 11:44:34.795
  Jun 13 11:44:34.795: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:44:34.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:34.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:34.811
  STEP: creating a ConfigMap @ 06/13/24 11:44:34.814
  STEP: fetching the ConfigMap @ 06/13/24 11:44:34.817
  STEP: patching the ConfigMap @ 06/13/24 11:44:34.82
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/13/24 11:44:34.825
  STEP: deleting the ConfigMap by collection with a label selector @ 06/13/24 11:44:34.83
  STEP: listing all ConfigMaps in test namespace @ 06/13/24 11:44:34.835
  Jun 13 11:44:34.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3003" for this suite. @ 06/13/24 11:44:34.841
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/13/24 11:44:34.849
  Jun 13 11:44:34.849: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:44:34.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:34.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:34.865
  STEP: Setting up server cert @ 06/13/24 11:44:34.886
  E0613 11:44:35.065682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:44:35.238
  STEP: Deploying the webhook pod @ 06/13/24 11:44:35.245
  STEP: Wait for the deployment to be ready @ 06/13/24 11:44:35.255
  Jun 13 11:44:35.261: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 11:44:36.066547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:37.067346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:44:37.27
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:44:37.28
  E0613 11:44:38.067482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:38.280: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/13/24 11:44:38.286
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/13/24 11:44:38.288
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/13/24 11:44:38.288
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/13/24 11:44:38.288
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/13/24 11:44:38.289
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/13/24 11:44:38.289
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/13/24 11:44:38.29
  Jun 13 11:44:38.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5807" for this suite. @ 06/13/24 11:44:38.329
  STEP: Destroying namespace "webhook-markers-6627" for this suite. @ 06/13/24 11:44:38.334
• [3.491 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/13/24 11:44:38.34
  Jun 13 11:44:38.340: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 11:44:38.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:38.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:38.355
  Jun 13 11:44:38.358: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  W0613 11:44:38.359339      23 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000cd3ad0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0613 11:44:39.068041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:40.068470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0613 11:44:40.901014      23 warnings.go:70] unknown field "alpha"
  W0613 11:44:40.901050      23 warnings.go:70] unknown field "beta"
  W0613 11:44:40.901057      23 warnings.go:70] unknown field "delta"
  W0613 11:44:40.901063      23 warnings.go:70] unknown field "epsilon"
  W0613 11:44:40.901069      23 warnings.go:70] unknown field "gamma"
  E0613 11:44:41.069188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:41.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1005" for this suite. @ 06/13/24 11:44:41.435
• [3.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/13/24 11:44:41.441
  Jun 13 11:44:41.441: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-webhook @ 06/13/24 11:44:41.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:41.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:41.456
  STEP: Setting up server cert @ 06/13/24 11:44:41.459
  E0613 11:44:42.069976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/13/24 11:44:42.106
  STEP: Deploying the custom resource conversion webhook pod @ 06/13/24 11:44:42.113
  STEP: Wait for the deployment to be ready @ 06/13/24 11:44:42.123
  Jun 13 11:44:42.132: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0613 11:44:43.070912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:44.071192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:44:44.141
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:44:44.149
  E0613 11:44:45.071337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:45.150: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 13 11:44:45.156: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:44:46.071426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:47.071622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/13/24 11:44:47.718
  STEP: Create a v2 custom resource @ 06/13/24 11:44:47.732
  STEP: List CRs in v1 @ 06/13/24 11:44:47.766
  STEP: List CRs in v2 @ 06/13/24 11:44:47.77
  E0613 11:44:48.072264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:48.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8225" for this suite. @ 06/13/24 11:44:48.318
• [6.883 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/13/24 11:44:48.324
  Jun 13 11:44:48.324: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename controllerrevisions @ 06/13/24 11:44:48.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:48.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:48.341
  STEP: Creating DaemonSet "e2e-c9k4f-daemon-set" @ 06/13/24 11:44:48.357
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 11:44:48.362
  Jun 13 11:44:48.368: INFO: Number of nodes with available pods controlled by daemonset e2e-c9k4f-daemon-set: 0
  Jun 13 11:44:48.368: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  E0613 11:44:49.073190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:49.369: INFO: Number of nodes with available pods controlled by daemonset e2e-c9k4f-daemon-set: 0
  Jun 13 11:44:49.369: INFO: Node 18.117.132.30 is running 0 daemon pod, expected 1
  E0613 11:44:50.073463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:50.369: INFO: Number of nodes with available pods controlled by daemonset e2e-c9k4f-daemon-set: 3
  Jun 13 11:44:50.369: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-c9k4f-daemon-set
  STEP: Confirm DaemonSet "e2e-c9k4f-daemon-set" successfully created with "daemonset-name=e2e-c9k4f-daemon-set" label @ 06/13/24 11:44:50.371
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-c9k4f-daemon-set" @ 06/13/24 11:44:50.376
  Jun 13 11:44:50.379: INFO: Located ControllerRevision: "e2e-c9k4f-daemon-set-8877857cb"
  STEP: Patching ControllerRevision "e2e-c9k4f-daemon-set-8877857cb" @ 06/13/24 11:44:50.381
  Jun 13 11:44:50.386: INFO: e2e-c9k4f-daemon-set-8877857cb has been patched
  STEP: Create a new ControllerRevision @ 06/13/24 11:44:50.386
  Jun 13 11:44:50.393: INFO: Created ControllerRevision: e2e-c9k4f-daemon-set-6cf5cbd7d
  STEP: Confirm that there are two ControllerRevisions @ 06/13/24 11:44:50.393
  Jun 13 11:44:50.393: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 11:44:50.395: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-c9k4f-daemon-set-8877857cb" @ 06/13/24 11:44:50.395
  STEP: Confirm that there is only one ControllerRevision @ 06/13/24 11:44:50.4
  Jun 13 11:44:50.400: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 11:44:50.402: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-c9k4f-daemon-set-6cf5cbd7d" @ 06/13/24 11:44:50.404
  Jun 13 11:44:50.410: INFO: e2e-c9k4f-daemon-set-6cf5cbd7d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/13/24 11:44:50.41
  W0613 11:44:50.417955      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/13/24 11:44:50.418
  Jun 13 11:44:50.418: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0613 11:44:51.073613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:51.418: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 11:44:51.421: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-c9k4f-daemon-set-6cf5cbd7d=updated" @ 06/13/24 11:44:51.421
  STEP: Confirm that there is only one ControllerRevision @ 06/13/24 11:44:51.427
  Jun 13 11:44:51.427: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 11:44:51.429: INFO: Found 1 ControllerRevisions
  Jun 13 11:44:51.431: INFO: ControllerRevision "e2e-c9k4f-daemon-set-5984b4d547" has revision 3
  STEP: Deleting DaemonSet "e2e-c9k4f-daemon-set" @ 06/13/24 11:44:51.434
  STEP: deleting DaemonSet.extensions e2e-c9k4f-daemon-set in namespace controllerrevisions-665, will wait for the garbage collector to delete the pods @ 06/13/24 11:44:51.434
  Jun 13 11:44:51.492: INFO: Deleting DaemonSet.extensions e2e-c9k4f-daemon-set took: 5.050677ms
  Jun 13 11:44:51.593: INFO: Terminating DaemonSet.extensions e2e-c9k4f-daemon-set pods took: 100.898421ms
  E0613 11:44:52.074062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:53.075059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:53.396: INFO: Number of nodes with available pods controlled by daemonset e2e-c9k4f-daemon-set: 0
  Jun 13 11:44:53.396: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-c9k4f-daemon-set
  Jun 13 11:44:53.399: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35208"},"items":null}

  Jun 13 11:44:53.402: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35209"},"items":null}

  Jun 13 11:44:53.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-665" for this suite. @ 06/13/24 11:44:53.415
• [5.095 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/13/24 11:44:53.42
  Jun 13 11:44:53.420: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 11:44:53.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:53.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:53.433
  Jun 13 11:44:53.450: INFO: created pod pod-service-account-defaultsa
  Jun 13 11:44:53.450: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun 13 11:44:53.455: INFO: created pod pod-service-account-mountsa
  Jun 13 11:44:53.455: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun 13 11:44:53.462: INFO: created pod pod-service-account-nomountsa
  Jun 13 11:44:53.462: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun 13 11:44:53.471: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun 13 11:44:53.471: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun 13 11:44:53.478: INFO: created pod pod-service-account-mountsa-mountspec
  Jun 13 11:44:53.478: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun 13 11:44:53.486: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun 13 11:44:53.486: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun 13 11:44:53.501: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun 13 11:44:53.501: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun 13 11:44:53.506: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun 13 11:44:53.506: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun 13 11:44:53.514: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun 13 11:44:53.514: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun 13 11:44:53.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5891" for this suite. @ 06/13/24 11:44:53.552
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/13/24 11:44:53.57
  Jun 13 11:44:53.570: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 11:44:53.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:53.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:53.59
  STEP: Create set of pods @ 06/13/24 11:44:53.595
  Jun 13 11:44:53.605: INFO: created test-pod-1
  Jun 13 11:44:53.611: INFO: created test-pod-2
  Jun 13 11:44:53.619: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/13/24 11:44:53.619
  E0613 11:44:54.075645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:44:55.075660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 06/13/24 11:44:55.672
  Jun 13 11:44:55.675: INFO: Pod quantity 3 is different from expected quantity 0
  E0613 11:44:56.076676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:56.675: INFO: Pod quantity 3 is different from expected quantity 0
  E0613 11:44:57.077321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:57.675: INFO: Pod quantity 1 is different from expected quantity 0
  E0613 11:44:58.077368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:44:58.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1309" for this suite. @ 06/13/24 11:44:58.679
• [5.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/13/24 11:44:58.685
  Jun 13 11:44:58.685: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 11:44:58.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:44:58.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:44:58.7
  STEP: Creating pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974 @ 06/13/24 11:44:58.704
  E0613 11:44:59.077750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:00.078051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 11:45:00.723
  Jun 13 11:45:00.726: INFO: Initial restart count of pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb is 0
  Jun 13 11:45:00.728: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:01.078853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:02.079013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:02.732: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:03.079723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:04.080037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:04.736: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:05.080515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:06.080667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:06.740: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:07.080787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:08.080974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:08.744: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:09.081984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:10.082343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:10.748: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:11.083376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:12.083991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:12.752: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:13.084860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:14.085325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:14.756: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:15.085923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:16.086492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:16.760: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:17.087318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:18.087549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:18.764: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:19.088229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:20.088594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:20.768: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:21.089212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:22.090200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:22.772: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:23.090875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:24.091462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:24.776: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:25.091668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:26.091917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:26.780: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:27.092137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:28.092308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:28.785: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:29.092445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:30.093183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:30.788: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:31.093947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:32.094546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:32.792: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:33.094684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:34.095799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:34.795: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:35.096280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:36.097193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:36.800: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:37.097287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:38.097535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:38.803: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:39.098196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:40.099191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:40.807: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:41.099228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:42.100159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:42.811: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:43.100891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:44.100998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:44.814: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:45.101143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:46.101264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:46.818: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:47.101339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:48.101564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:48.822: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:49.102181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:50.102304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:50.827: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:51.103276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:52.103854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:52.831: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:53.104808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:54.105054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:54.834: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:55.106014      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:56.106270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:56.839: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:57.106867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:45:58.107011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:45:58.843: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:45:59.108040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:00.108227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:46:00.848: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:46:01.108844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:02.109440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:46:02.852: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:46:03.110154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:04.110414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:46:04.856: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  E0613 11:46:05.111043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:06.111342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:46:06.862: INFO: Get pod test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb in namespace container-probe-4974
  Jun 13 11:46:06.862: INFO: Restart count of pod container-probe-4974/test-grpc-43118a6a-72c4-456b-a7e3-5f418e20ffeb is now 1 (1m6.136748868s elapsed)
  STEP: deleting the pod @ 06/13/24 11:46:06.862
  Jun 13 11:46:06.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4974" for this suite. @ 06/13/24 11:46:06.876
• [68.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/13/24 11:46:06.883
  Jun 13 11:46:06.883: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:46:06.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:46:06.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:46:06.898
  STEP: Setting up server cert @ 06/13/24 11:46:06.918
  E0613 11:46:07.111779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:46:07.518
  STEP: Deploying the webhook pod @ 06/13/24 11:46:07.525
  STEP: Wait for the deployment to be ready @ 06/13/24 11:46:07.535
  Jun 13 11:46:07.543: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 11:46:08.112058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:09.113184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:46:09.552
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:46:09.564
  E0613 11:46:10.113394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:46:10.565: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/13/24 11:46:10.57
  STEP: create a pod that should be denied by the webhook @ 06/13/24 11:46:10.586
  STEP: create a pod that causes the webhook to hang @ 06/13/24 11:46:10.596
  E0613 11:46:11.113490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:12.114067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:13.114321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:14.114781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:15.115009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:16.115254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:17.115804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:18.115982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:19.116235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:20.116396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 06/13/24 11:46:20.603
  STEP: create a configmap that should be admitted by the webhook @ 06/13/24 11:46:20.611
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/13/24 11:46:20.619
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/13/24 11:46:20.625
  STEP: create a namespace that bypass the webhook @ 06/13/24 11:46:20.629
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/13/24 11:46:20.639
  Jun 13 11:46:20.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2456" for this suite. @ 06/13/24 11:46:20.688
  STEP: Destroying namespace "webhook-markers-7882" for this suite. @ 06/13/24 11:46:20.694
  STEP: Destroying namespace "exempted-namespace-2332" for this suite. @ 06/13/24 11:46:20.698
• [13.819 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/13/24 11:46:20.703
  Jun 13 11:46:20.703: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename subpath @ 06/13/24 11:46:20.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:46:20.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:46:20.719
  STEP: Setting up data @ 06/13/24 11:46:20.722
  STEP: Creating pod pod-subpath-test-secret-cnjt @ 06/13/24 11:46:20.729
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 11:46:20.729
  E0613 11:46:21.116990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:22.117411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:23.117576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:24.118154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:25.118835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:26.119742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:27.120642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:28.121207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:29.121337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:30.121519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:31.122569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:32.122840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:33.123869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:34.124160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:35.124718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:36.124697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:37.124826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:38.125213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:39.126262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:40.126405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:41.127436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:42.128082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:43.128360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:44.128518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:46:44.789
  Jun 13 11:46:44.792: INFO: Trying to get logs from node 18.117.132.30 pod pod-subpath-test-secret-cnjt container test-container-subpath-secret-cnjt: <nil>
  STEP: delete the pod @ 06/13/24 11:46:44.809
  STEP: Deleting pod pod-subpath-test-secret-cnjt @ 06/13/24 11:46:44.82
  Jun 13 11:46:44.820: INFO: Deleting pod "pod-subpath-test-secret-cnjt" in namespace "subpath-7405"
  Jun 13 11:46:44.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7405" for this suite. @ 06/13/24 11:46:44.826
• [24.127 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/13/24 11:46:44.83
  Jun 13 11:46:44.830: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 11:46:44.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:46:44.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:46:44.848
  Jun 13 11:46:44.862: INFO: created pod
  E0613 11:46:45.128977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:46.129314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:47.129388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:48.129906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:46:48.875
  E0613 11:46:49.129967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:50.130332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:51.130809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:52.131376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:53.131632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:54.132187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:55.132328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:56.132849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:57.133322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:58.134044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:46:59.134305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:00.134545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:01.134818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:02.135726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:03.136007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:04.136059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:05.136313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:06.136574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:07.137128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:08.137590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:09.137792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:10.138768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:11.138928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:12.139335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:13.139570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:14.139712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:15.139952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:16.140069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:17.140199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:18.141215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:47:18.876: INFO: polling logs
  Jun 13 11:47:18.883: INFO: Pod logs: 
  I0613 11:46:45.731221       1 log.go:245] OK: Got token
  I0613 11:46:45.731300       1 log.go:245] validating with in-cluster discovery
  I0613 11:46:45.731556       1 log.go:245] OK: got issuer https://18.117.161.199:6443
  I0613 11:46:45.731594       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.117.161.199:6443", Subject:"system:serviceaccount:svcaccounts-3577:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000327a00), NotBefore:(*jwt.NumericDate)(0xc000327ae8), IssuedAt:(*jwt.NumericDate)(0xc000327a10), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3577", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9da8b53f-d2fe-4535-8019-3397ea638262"}}}
  I0613 11:46:45.738679       1 log.go:245] OK: Constructed OIDC provider for issuer https://18.117.161.199:6443
  I0613 11:46:45.744532       1 log.go:245] OK: Validated signature on JWT
  I0613 11:46:45.744703       1 log.go:245] OK: Got valid claims from token!
  I0613 11:46:45.744738       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.117.161.199:6443", Subject:"system:serviceaccount:svcaccounts-3577:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000257cb0), NotBefore:(*jwt.NumericDate)(0xc000257cd8), IssuedAt:(*jwt.NumericDate)(0xc000257cb8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3577", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9da8b53f-d2fe-4535-8019-3397ea638262"}}}

  Jun 13 11:47:18.883: INFO: completed pod
  Jun 13 11:47:18.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3577" for this suite. @ 06/13/24 11:47:18.892
• [34.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/13/24 11:47:18.896
  Jun 13 11:47:18.896: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:47:18.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:47:18.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:47:18.91
  STEP: creating service in namespace services-3534 @ 06/13/24 11:47:18.913
  STEP: creating service affinity-clusterip in namespace services-3534 @ 06/13/24 11:47:18.913
  STEP: creating replication controller affinity-clusterip in namespace services-3534 @ 06/13/24 11:47:18.923
  I0613 11:47:18.930538      23 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-3534, replica count: 3
  E0613 11:47:19.142296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:20.143232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:21.144056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:47:21.980909      23 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 11:47:21.986: INFO: Creating new exec pod
  E0613 11:47:22.144649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:23.145071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:24.145762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:47:25.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-3534 exec execpod-affinityw77js -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0613 11:47:25.146588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:47:25.166: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun 13 11:47:25.166: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:47:25.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-3534 exec execpod-affinityw77js -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.145.30 80'
  Jun 13 11:47:25.321: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.145.30 80\nConnection to 10.43.145.30 80 port [tcp/http] succeeded!\n"
  Jun 13 11:47:25.321: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:47:25.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-3534 exec execpod-affinityw77js -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.145.30:80/ ; done'
  Jun 13 11:47:25.539: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.145.30:80/\n"
  Jun 13 11:47:25.539: INFO: stdout: "\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs\naffinity-clusterip-jgjgs"
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Received response from host: affinity-clusterip-jgjgs
  Jun 13 11:47:25.539: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3534, will wait for the garbage collector to delete the pods @ 06/13/24 11:47:25.548
  Jun 13 11:47:25.606: INFO: Deleting ReplicationController affinity-clusterip took: 5.259902ms
  Jun 13 11:47:25.706: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.088942ms
  E0613 11:47:26.147187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:27.148193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:28.148431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:47:28.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3534" for this suite. @ 06/13/24 11:47:28.726
• [9.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/13/24 11:47:28.732
  Jun 13 11:47:28.732: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 11:47:28.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:47:28.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:47:28.746
  Jun 13 11:47:28.760: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 11:47:29.149295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:30.149903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:31.150062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:32.150639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:33.150774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:34.151030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:35.151387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:36.151671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:37.151871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:38.152093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:39.152205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:40.153177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:41.154282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:42.154777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:43.155783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:44.156044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:45.156908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:46.158000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:47.158096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:48.158384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:49.159344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:50.159587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:51.159809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:52.160050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:53.161004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:54.161178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:55.161416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:56.161696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:57.162749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:58.163018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:47:59.163838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:00.164088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:01.164897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:02.165019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:03.165867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:04.166116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:05.166296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:06.166568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:07.166773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:08.167036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:09.168075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:10.169166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:11.169451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:12.169913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:13.170759      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:14.171025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:15.171757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:16.172760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:17.173018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:18.173322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:19.174123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:20.174395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:21.174531      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:22.175110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:23.176130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:24.176397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:25.177101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:26.177367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:27.177560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:28.177812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:48:28.765: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/13/24 11:48:28.767
  Jun 13 11:48:28.767: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/13/24 11:48:28.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:48:28.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:48:28.789
  STEP: Finding an available node @ 06/13/24 11:48:28.792
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/13/24 11:48:28.792
  E0613 11:48:29.177855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:30.178937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/13/24 11:48:30.809
  Jun 13 11:48:30.843: INFO: found a healthy node: 18.117.132.30
  E0613 11:48:31.179854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:32.179990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:33.180888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:34.181365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:35.181902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:36.182322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:48:36.904: INFO: pods created so far: [1 1 1]
  Jun 13 11:48:36.904: INFO: length of pods created so far: 3
  E0613 11:48:37.183158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:38.184063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:48:38.914: INFO: pods created so far: [2 2 1]
  E0613 11:48:39.185003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:40.185508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:41.185765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:42.185906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:43.186263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:44.186613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:45.186765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:48:45.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7296" for this suite. @ 06/13/24 11:48:45.988
  Jun 13 11:48:45.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3804" for this suite. @ 06/13/24 11:48:45.995
• [77.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/13/24 11:48:46.001
  Jun 13 11:48:46.001: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 11:48:46.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:48:46.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:48:46.015
  Jun 13 11:48:46.018: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:48:46.187891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:47.188906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:48.189250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0613 11:48:48.559605      23 warnings.go:70] unknown field "alpha"
  W0613 11:48:48.559636      23 warnings.go:70] unknown field "beta"
  W0613 11:48:48.559643      23 warnings.go:70] unknown field "delta"
  W0613 11:48:48.559649      23 warnings.go:70] unknown field "epsilon"
  W0613 11:48:48.559655      23 warnings.go:70] unknown field "gamma"
  Jun 13 11:48:49.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7316" for this suite. @ 06/13/24 11:48:49.098
• [3.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/13/24 11:48:49.103
  Jun 13 11:48:49.103: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:48:49.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:48:49.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:48:49.119
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/13/24 11:48:49.122
  E0613 11:48:49.189338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:50.189721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:51.190162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:52.190911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:48:53.141
  Jun 13 11:48:53.143: INFO: Trying to get logs from node 18.117.161.199 pod pod-50dddac0-4a06-40d4-8434-0c44cdc50e04 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:48:53.159
  Jun 13 11:48:53.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3411" for this suite. @ 06/13/24 11:48:53.175
• [4.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/13/24 11:48:53.179
  Jun 13 11:48:53.179: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 11:48:53.18
  E0613 11:48:53.190931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:48:53.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:48:53.195
  E0613 11:48:54.192087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:55.193187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:56.193767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:57.193866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:58.194450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:48:59.195266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:00.195805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:01.196127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:02.196875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:03.197504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:04.197534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:05.198215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:06.198695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:07.199500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:08.199761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:09.200050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:10.200710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/13/24 11:49:10.202
  E0613 11:49:11.201043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:12.201995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:13.202368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:14.202483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:15.202670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 11:49:15.205
  STEP: Ensuring resource quota status is calculated @ 06/13/24 11:49:15.209
  E0613 11:49:16.202842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:17.203008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/13/24 11:49:17.214
  STEP: Ensuring resource quota status captures configMap creation @ 06/13/24 11:49:17.224
  E0613 11:49:18.203666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:19.204015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/13/24 11:49:19.228
  STEP: Ensuring resource quota status released usage @ 06/13/24 11:49:19.233
  E0613 11:49:20.204412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:21.205045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:49:21.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-29" for this suite. @ 06/13/24 11:49:21.24
• [28.065 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/13/24 11:49:21.245
  Jun 13 11:49:21.245: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename lease-test @ 06/13/24 11:49:21.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:49:21.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:49:21.258
  Jun 13 11:49:21.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-725" for this suite. @ 06/13/24 11:49:21.307
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/13/24 11:49:21.313
  Jun 13 11:49:21.313: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 11:49:21.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:49:21.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:49:21.327
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:49:21.33
  E0613 11:49:22.205727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:23.206075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:24.206527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:25.206777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:49:25.346
  Jun 13 11:49:25.348: INFO: Trying to get logs from node 18.117.132.30 pod downwardapi-volume-f398c8ef-dfd9-4deb-afbc-6c24093c59a7 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:49:25.363
  Jun 13 11:49:25.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3565" for this suite. @ 06/13/24 11:49:25.378
• [4.069 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/13/24 11:49:25.383
  Jun 13 11:49:25.383: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 11:49:25.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:49:25.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:49:25.397
  STEP: Creating a ForbidConcurrent cronjob @ 06/13/24 11:49:25.401
  STEP: Ensuring a job is scheduled @ 06/13/24 11:49:25.405
  E0613 11:49:26.207405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:27.208424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:28.209414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:29.209839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:30.210379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:31.210842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:32.211203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:33.211375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:34.211891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:35.212146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:36.212277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:37.212852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:38.213531      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:39.213766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:40.213839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:41.214336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:42.214556      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:43.214825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:44.215452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:45.215833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:46.216104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:47.216632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:48.217436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:49.217601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:50.217836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:51.217994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:52.218903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:53.219341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:54.219866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:55.220074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:56.220110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:57.221144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:58.223879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:49:59.224167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:00.224847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:01.225809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/13/24 11:50:01.409
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/13/24 11:50:01.412
  STEP: Ensuring no more jobs are scheduled @ 06/13/24 11:50:01.414
  E0613 11:50:02.225949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:03.226117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:04.226731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:05.226959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:06.227690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:07.228028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:08.228085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:09.229192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:10.229618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:11.230297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:12.230443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:13.231454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:14.231861      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:15.232146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:16.233068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:17.233327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:18.233646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:19.233882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:20.233995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:21.234599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:22.235087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:23.235206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:24.235577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:25.235826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:26.236502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:27.236736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:28.236932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:29.238010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:30.238584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:31.239256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:32.239372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:33.239599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:34.239703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:35.239836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:36.240614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:37.240728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:38.241452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:39.241602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:40.242363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:41.243070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:42.243708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:43.243959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:44.244520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:45.244670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:46.245743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:47.245976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:48.246151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:49.246372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:50.246713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:51.247355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:52.247463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:53.247763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:54.248070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:55.248222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:56.248932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:57.249376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:58.249530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:50:59.249803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:00.249958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:01.250682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:02.250825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:03.250985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:04.251108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:05.251387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:06.252069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:07.253183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:08.254180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:09.254472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:10.255017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:11.255535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:12.255848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:13.256099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:14.256248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:15.256426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:16.257056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:17.257307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:18.257942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:19.258987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:20.259139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:21.259546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:22.259942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:23.260225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:24.261166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:25.261376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:26.262008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:27.262165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:28.262304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:29.262564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:30.262735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:31.263359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:32.264120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:33.264369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:34.264810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:35.265061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:36.265808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:37.266045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:38.266730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:39.266877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:40.267428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:41.268171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:42.269183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:43.269445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:44.269848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:45.270545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:46.271560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:47.271790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:48.272073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:49.273174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:50.273737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:51.274221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:52.274387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:53.274811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:54.275353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:55.275633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:56.276480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:57.276604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:58.277187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:51:59.277447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:00.278360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:01.279034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:02.279550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:03.279675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:04.280074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:05.280323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:06.281164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:07.281373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:08.281536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:09.281791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:10.282402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:11.283157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:12.283469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:13.283623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:14.284075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:15.284206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:16.284599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:17.284909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:18.285085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:19.285225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:20.285807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:21.286584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:22.287505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:23.287727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:24.287787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:25.288046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:26.288923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:27.289143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:28.289718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:29.289966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:30.290370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:31.291167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:32.291444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:33.291694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:34.292053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:35.292081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:36.292722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:37.293168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:38.294217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:39.294417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:40.294758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:41.295245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:42.295716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:43.295993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:44.296230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:45.296451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:46.296748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:47.296996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:48.297079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:49.297234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:50.297449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:51.297544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:52.297612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:53.297753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:54.297967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:55.298110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:56.298217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:57.298500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:58.299400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:52:59.299668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:00.300077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:01.301002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:02.301159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:03.301417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:04.302300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:05.302529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:06.303520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:07.303740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:08.304342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:09.304498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:10.304660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:11.305152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:12.305751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:13.306009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:14.306338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:15.306623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:16.307697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:17.307967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:18.308078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:19.308337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:20.308493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:21.308664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:22.309247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:23.309408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:24.309612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:25.309877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:26.310798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:27.311063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:28.311674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:29.311943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:30.312055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:31.312820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:32.312973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:33.313116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:34.313371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:35.313632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:36.314353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:37.314588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:38.315062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:39.316043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:40.317168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:41.318041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:42.318384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:43.318655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:44.319223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:45.319488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:46.319590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:47.319826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:48.320009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:49.320515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:50.321146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:51.321839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:52.322973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:53.323243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:54.323353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:55.323607      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:56.324595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:57.324765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:58.325077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:53:59.325297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:00.325453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:01.326043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:02.326236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:03.326386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:04.327495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:05.327751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:06.328634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:07.328808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:08.329668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:09.329915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:10.330012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:11.330687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:12.331432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:13.331721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:14.331917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:15.332181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:16.333103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:17.333264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:18.333876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:19.334105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:20.334262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:21.334942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:22.335096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:23.335342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:24.335785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:25.335959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:26.336283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:27.336538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:28.337339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:29.337516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:30.338080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:31.338609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:32.339099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:33.339321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:34.339455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:35.339695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:36.340274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:37.341192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:38.342165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:39.342409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:40.342797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:41.343589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:42.344046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:43.345163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:44.345757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:45.346325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:46.347251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:47.347525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:48.347733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:49.348010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:50.349101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:51.349852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:52.350301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:53.350528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:54.351001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:55.351253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:56.352084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:57.353231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:58.353727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:54:59.354009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:00.354612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:01.355389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/13/24 11:55:01.42
  Jun 13 11:55:01.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-701" for this suite. @ 06/13/24 11:55:01.428
• [336.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/13/24 11:55:01.433
  Jun 13 11:55:01.433: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:55:01.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:01.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:01.453
  STEP: creating service in namespace services-1266 @ 06/13/24 11:55:01.457
  STEP: creating service affinity-clusterip-transition in namespace services-1266 @ 06/13/24 11:55:01.457
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1266 @ 06/13/24 11:55:01.485
  I0613 11:55:01.491945      23 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-1266, replica count: 3
  E0613 11:55:02.356029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:03.356364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:04.357378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:55:04.542726      23 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 11:55:04.548: INFO: Creating new exec pod
  E0613 11:55:05.357946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:06.358445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:07.359094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:07.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1266 exec execpod-affinityxnklk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun 13 11:55:07.714: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun 13 11:55:07.714: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:55:07.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1266 exec execpod-affinityxnklk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.53.73 80'
  Jun 13 11:55:07.869: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.53.73 80\nConnection to 10.43.53.73 80 port [tcp/http] succeeded!\n"
  Jun 13 11:55:07.869: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:55:07.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1266 exec execpod-affinityxnklk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.53.73:80/ ; done'
  Jun 13 11:55:08.096: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n"
  Jun 13 11:55:08.096: INFO: stdout: "\naffinity-clusterip-transition-lsb9x\naffinity-clusterip-transition-rzvtz\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-lsb9x\naffinity-clusterip-transition-lsb9x\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-lsb9x\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-rzvtz\naffinity-clusterip-transition-lsb9x\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-lsb9x\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28"
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-lsb9x
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-rzvtz
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-lsb9x
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-lsb9x
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-lsb9x
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-rzvtz
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-lsb9x
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-lsb9x
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.097: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-1266 exec execpod-affinityxnklk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.53.73:80/ ; done'
  Jun 13 11:55:08.329: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.53.73:80/\n"
  Jun 13 11:55:08.329: INFO: stdout: "\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28\naffinity-clusterip-transition-r5m28"
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.329: INFO: Received response from host: affinity-clusterip-transition-r5m28
  Jun 13 11:55:08.330: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1266, will wait for the garbage collector to delete the pods @ 06/13/24 11:55:08.343
  E0613 11:55:08.360020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:08.402: INFO: Deleting ReplicationController affinity-clusterip-transition took: 4.65486ms
  Jun 13 11:55:08.502: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.637652ms
  E0613 11:55:09.360443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:10.361204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:11.361571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:11.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1266" for this suite. @ 06/13/24 11:55:11.424
• [9.995 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/13/24 11:55:11.428
  Jun 13 11:55:11.428: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 11:55:11.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:11.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:11.445
  STEP: Setting up server cert @ 06/13/24 11:55:11.465
  E0613 11:55:12.362527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 11:55:12.409
  STEP: Deploying the webhook pod @ 06/13/24 11:55:12.416
  STEP: Wait for the deployment to be ready @ 06/13/24 11:55:12.427
  Jun 13 11:55:12.436: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 11:55:13.362856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:14.363095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 11:55:14.443
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 11:55:14.453
  E0613 11:55:15.363527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:15.453: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 11:55:15.460: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3819-crds.webhook.example.com via the AdmissionRegistration API @ 06/13/24 11:55:15.969
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/13/24 11:55:15.984
  E0613 11:55:16.363723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:17.364002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:18.364776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:18.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-360" for this suite. @ 06/13/24 11:55:18.561
  STEP: Destroying namespace "webhook-markers-2650" for this suite. @ 06/13/24 11:55:18.566
• [7.142 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/13/24 11:55:18.571
  Jun 13 11:55:18.571: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:55:18.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:18.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:18.586
  STEP: create deployment with httpd image @ 06/13/24 11:55:18.589
  Jun 13 11:55:18.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-790 create -f -'
  Jun 13 11:55:18.682: INFO: stderr: ""
  Jun 13 11:55:18.682: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/13/24 11:55:18.682
  Jun 13 11:55:18.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-790 diff -f -'
  Jun 13 11:55:18.802: INFO: rc: 1
  Jun 13 11:55:18.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-790 delete -f -'
  Jun 13 11:55:18.888: INFO: stderr: ""
  Jun 13 11:55:18.888: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun 13 11:55:18.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-790" for this suite. @ 06/13/24 11:55:18.893
• [0.330 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/13/24 11:55:18.902
  Jun 13 11:55:18.902: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 11:55:18.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:18.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:18.915
  Jun 13 11:55:18.918: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:55:19.365195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:20.365545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:21.366418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:22.367187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:23.367378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:24.367786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:25.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8889" for this suite. @ 06/13/24 11:55:25.14
• [6.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/13/24 11:55:25.146
  Jun 13 11:55:25.146: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:55:25.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:25.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:25.162
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 11:55:25.165
  E0613 11:55:25.368765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:26.369806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:27.369882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:28.370152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:55:29.188
  Jun 13 11:55:29.190: INFO: Trying to get logs from node 18.117.161.199 pod downwardapi-volume-202d93d2-05fd-40c7-9bb4-8ca78dc03b10 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 11:55:29.205
  Jun 13 11:55:29.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9085" for this suite. @ 06/13/24 11:55:29.221
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/13/24 11:55:29.227
  Jun 13 11:55:29.227: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename chunking @ 06/13/24 11:55:29.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:29.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:29.244
  STEP: creating a large number of resources @ 06/13/24 11:55:29.247
  E0613 11:55:29.370787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:30.371250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:31.371369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:32.372065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:33.372545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:34.373184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:35.373564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:36.374374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:37.375182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:38.375852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:39.376862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:40.377846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:41.378088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:42.378150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:43.378856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:44.379276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:45.379426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:46.379970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 06/13/24 11:55:46.933
  Jun 13 11:55:46.982: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 13 11:55:47.032: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 13 11:55:47.082: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 13 11:55:47.132: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 13 11:55:47.182: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 13 11:55:47.231: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 13 11:55:47.282: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 13 11:55:47.332: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  E0613 11:55:47.380941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:47.381: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 13 11:55:47.432: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 13 11:55:47.481: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 13 11:55:47.532: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 13 11:55:47.582: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 13 11:55:47.632: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 13 11:55:47.685: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 13 11:55:47.732: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 13 11:55:47.782: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 13 11:55:47.831: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 13 11:55:47.882: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 13 11:55:47.931: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 13 11:55:47.982: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 13 11:55:48.032: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 13 11:55:48.081: INFO: Retrieved 17/17 results with rv 37743 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 13 11:55:48.131: INFO: Retrieved 9/17 results with rv 37743 and continue 
  Jun 13 11:55:48.182: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 13 11:55:48.231: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 13 11:55:48.282: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 13 11:55:48.331: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  E0613 11:55:48.381471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:48.382: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 13 11:55:48.432: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 13 11:55:48.482: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 13 11:55:48.532: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 13 11:55:48.582: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 13 11:55:48.632: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 13 11:55:48.682: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 13 11:55:48.732: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 13 11:55:48.782: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 13 11:55:48.833: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 13 11:55:48.882: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 13 11:55:48.932: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 13 11:55:48.982: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 13 11:55:49.033: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 13 11:55:49.082: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 13 11:55:49.132: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 13 11:55:49.182: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 13 11:55:49.232: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 13 11:55:49.281: INFO: Retrieved 17/17 results with rv 37746 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 13 11:55:49.331: INFO: Retrieved 9/17 results with rv 37746 and continue 
  E0613 11:55:49.382374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:49.382: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 13 11:55:49.434: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 13 11:55:49.482: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 13 11:55:49.531: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 13 11:55:49.582: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 13 11:55:49.632: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 13 11:55:49.683: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 13 11:55:49.732: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 13 11:55:49.782: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 13 11:55:49.832: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 13 11:55:49.881: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 13 11:55:49.933: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 13 11:55:49.982: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 13 11:55:50.032: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 13 11:55:50.082: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 13 11:55:50.131: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 13 11:55:50.182: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 13 11:55:50.232: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 13 11:55:50.282: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 13 11:55:50.332: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 13 11:55:50.382: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0613 11:55:50.382510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:55:50.432: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 13 11:55:50.482: INFO: Retrieved 17/17 results with rv 37748 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3NDgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 13 11:55:50.532: INFO: Retrieved 9/17 results with rv 37748 and continue 
  STEP: retrieving those results all at once @ 06/13/24 11:55:50.532
  Jun 13 11:55:50.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8714" for this suite. @ 06/13/24 11:55:50.632
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/13/24 11:55:50.687
  Jun 13 11:55:50.687: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 11:55:50.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:50.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:50.702
  STEP: Creating secret with name secret-test-map-14b67b92-e244-404b-a66f-c370d43831fb @ 06/13/24 11:55:50.705
  STEP: Creating a pod to test consume secrets @ 06/13/24 11:55:50.71
  E0613 11:55:51.383679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:52.384331      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:53.384377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:54.384635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:55:54.727
  Jun 13 11:55:54.730: INFO: Trying to get logs from node 18.117.132.30 pod pod-secrets-915b1791-bf54-4350-88ef-acc817fcaf85 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:55:54.747
  Jun 13 11:55:54.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1052" for this suite. @ 06/13/24 11:55:54.764
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/13/24 11:55:54.768
  Jun 13 11:55:54.768: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename certificates @ 06/13/24 11:55:54.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:54.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:54.783
  E0613 11:55:55.385801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 06/13/24 11:55:55.755
  STEP: getting /apis/certificates.k8s.io @ 06/13/24 11:55:55.759
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/13/24 11:55:55.761
  STEP: creating @ 06/13/24 11:55:55.762
  STEP: getting @ 06/13/24 11:55:55.779
  STEP: listing @ 06/13/24 11:55:55.782
  STEP: watching @ 06/13/24 11:55:55.785
  Jun 13 11:55:55.785: INFO: starting watch
  STEP: patching @ 06/13/24 11:55:55.786
  STEP: updating @ 06/13/24 11:55:55.791
  Jun 13 11:55:55.796: INFO: waiting for watch events with expected annotations
  Jun 13 11:55:55.796: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/13/24 11:55:55.796
  STEP: patching /approval @ 06/13/24 11:55:55.799
  STEP: updating /approval @ 06/13/24 11:55:55.806
  STEP: getting /status @ 06/13/24 11:55:55.813
  STEP: patching /status @ 06/13/24 11:55:55.815
  STEP: updating /status @ 06/13/24 11:55:55.825
  STEP: deleting @ 06/13/24 11:55:55.832
  STEP: deleting a collection @ 06/13/24 11:55:55.843
  Jun 13 11:55:55.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9748" for this suite. @ 06/13/24 11:55:55.858
• [1.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/13/24 11:55:55.868
  Jun 13 11:55:55.868: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:55:55.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:55.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:55.881
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/13/24 11:55:55.885
  E0613 11:55:56.386719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:57.387007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:58.387236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:55:59.387469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:55:59.906
  Jun 13 11:55:59.908: INFO: Trying to get logs from node 18.117.132.30 pod pod-a159ba9f-d730-4f39-b350-482f86481ab2 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:55:59.915
  Jun 13 11:55:59.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3678" for this suite. @ 06/13/24 11:55:59.93
• [4.069 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/13/24 11:55:59.937
  Jun 13 11:55:59.937: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename init-container @ 06/13/24 11:55:59.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:55:59.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:55:59.95
  STEP: creating the pod @ 06/13/24 11:55:59.953
  Jun 13 11:55:59.953: INFO: PodSpec: initContainers in spec.initContainers
  E0613 11:56:00.387667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:01.388476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:02.388638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:03.389182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:04.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2998" for this suite. @ 06/13/24 11:56:04.06
• [4.130 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/13/24 11:56:04.068
  Jun 13 11:56:04.068: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:56:04.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:04.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:04.082
  STEP: Creating configMap with name projected-configmap-test-volume-map-cc8302ec-0c81-4a79-921e-b22740ab2fd0 @ 06/13/24 11:56:04.085
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:56:04.091
  E0613 11:56:04.389254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:05.389498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:06.390148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:07.390369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:56:08.108
  Jun 13 11:56:08.111: INFO: Trying to get logs from node 18.117.132.30 pod pod-projected-configmaps-0ade37c4-6137-4a1f-b992-0ea6c5922477 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:56:08.118
  Jun 13 11:56:08.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8162" for this suite. @ 06/13/24 11:56:08.131
• [4.067 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/13/24 11:56:08.135
  Jun 13 11:56:08.135: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename podtemplate @ 06/13/24 11:56:08.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:08.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:08.149
  STEP: Create a pod template @ 06/13/24 11:56:08.152
  STEP: Replace a pod template @ 06/13/24 11:56:08.156
  Jun 13 11:56:08.163: INFO: Found updated podtemplate annotation: "true"

  Jun 13 11:56:08.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7124" for this suite. @ 06/13/24 11:56:08.166
• [0.038 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/13/24 11:56:08.173
  Jun 13 11:56:08.173: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename security-context @ 06/13/24 11:56:08.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:08.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:08.185
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/13/24 11:56:08.189
  E0613 11:56:08.391259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:09.391779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:10.391868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:11.392816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:56:12.206
  Jun 13 11:56:12.210: INFO: Trying to get logs from node 18.117.161.199 pod security-context-0b2845e3-32cc-4b3f-a6c1-3705391b6905 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 11:56:12.216
  Jun 13 11:56:12.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9006" for this suite. @ 06/13/24 11:56:12.232
• [4.065 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/13/24 11:56:12.238
  Jun 13 11:56:12.238: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename secrets @ 06/13/24 11:56:12.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:12.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:12.253
  STEP: creating a secret @ 06/13/24 11:56:12.257
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/13/24 11:56:12.261
  STEP: patching the secret @ 06/13/24 11:56:12.264
  STEP: deleting the secret using a LabelSelector @ 06/13/24 11:56:12.271
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/13/24 11:56:12.276
  Jun 13 11:56:12.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7512" for this suite. @ 06/13/24 11:56:12.282
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/13/24 11:56:12.287
  Jun 13 11:56:12.288: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 11:56:12.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:12.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:12.302
  STEP: Creating a pod to test service account token:  @ 06/13/24 11:56:12.305
  E0613 11:56:12.393194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:13.393433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:14.394518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:15.394798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:56:16.324
  Jun 13 11:56:16.326: INFO: Trying to get logs from node 18.117.161.199 pod test-pod-28fdf756-c040-4856-ad5e-ed7d4c5f460a container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:56:16.333
  Jun 13 11:56:16.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3006" for this suite. @ 06/13/24 11:56:16.349
• [4.067 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/13/24 11:56:16.354
  Jun 13 11:56:16.354: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 11:56:16.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:16.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:16.372
  E0613 11:56:16.395136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:17.395371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:18.396432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:18.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6902" for this suite. @ 06/13/24 11:56:18.4
• [2.051 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/13/24 11:56:18.405
  Jun 13 11:56:18.405: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:56:18.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:18.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:18.472
  Jun 13 11:56:18.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-967 create -f -'
  Jun 13 11:56:18.601: INFO: stderr: ""
  Jun 13 11:56:18.601: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun 13 11:56:18.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-967 create -f -'
  Jun 13 11:56:18.732: INFO: stderr: ""
  Jun 13 11:56:18.732: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/13/24 11:56:18.732
  E0613 11:56:19.397149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:19.735: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 11:56:19.736: INFO: Found 0 / 1
  E0613 11:56:20.397746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:20.735: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 11:56:20.735: INFO: Found 1 / 1
  Jun 13 11:56:20.735: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 13 11:56:20.738: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 11:56:20.738: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 11:56:20.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-967 describe pod agnhost-primary-m7tcg'
  Jun 13 11:56:20.810: INFO: stderr: ""
  Jun 13 11:56:20.810: INFO: stdout: "Name:             agnhost-primary-m7tcg\nNamespace:        kubectl-967\nPriority:         0\nService Account:  default\nNode:             18.117.161.199/172.31.16.95\nStart Time:       Thu, 13 Jun 2024 11:56:18 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 7a9da75eee15079863e2d950c39bd809e537f58a507bb42211d0401b75463a87\n                  cni.projectcalico.org/podIP: 10.42.0.31/32\n                  cni.projectcalico.org/podIPs: 10.42.0.31/32\nStatus:           Running\nIP:               10.42.0.31\nIPs:\n  IP:           10.42.0.31\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://abafea3b93df46a65fa9a9be0693f58d5158716a9b95c7a0c475fa481ea59feb\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 13 Jun 2024 11:56:19 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ls5st (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-ls5st:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-967/agnhost-primary-m7tcg to 18.117.161.199\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jun 13 11:56:20.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-967 describe rc agnhost-primary'
  Jun 13 11:56:20.884: INFO: stderr: ""
  Jun 13 11:56:20.884: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-967\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-m7tcg\n"
  Jun 13 11:56:20.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-967 describe service agnhost-primary'
  Jun 13 11:56:20.954: INFO: stderr: ""
  Jun 13 11:56:20.954: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-967\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.217.165\nIPs:               10.43.217.165\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.0.31:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun 13 11:56:20.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-967 describe node 18.117.132.30'
  Jun 13 11:56:21.042: INFO: stderr: ""
  Jun 13 11:56:21.042: INFO: stdout: "Name:               18.117.132.30\nRoles:              worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=18.117.132.30\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/worker=true\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"32:c9:b8:6b:61:ba\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.26.102\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke.cattle.io/external-ip: 18.117.132.30\n                    rke.cattle.io/internal-ip: 172.31.26.102\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 13 Jun 2024 09:44:42 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  18.117.132.30\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 13 Jun 2024 11:56:12 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 13 Jun 2024 09:45:31 +0000   Thu, 13 Jun 2024 09:45:31 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Thu, 13 Jun 2024 11:56:04 +0000   Thu, 13 Jun 2024 09:44:42 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 13 Jun 2024 11:56:04 +0000   Thu, 13 Jun 2024 09:44:42 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 13 Jun 2024 11:56:04 +0000   Thu, 13 Jun 2024 09:44:42 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 13 Jun 2024 11:56:04 +0000   Thu, 13 Jun 2024 09:45:21 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.26.102\n  Hostname:    18.117.132.30\nCapacity:\n  cpu:                  4\n  ephemeral-storage:    101583780Ki\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               16395124Ki\n  pods:                 110\nAllocatable:\n  cpu:                  4\n  ephemeral-storage:    101583780Ki\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               16395124Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                 \n  System UUID:                ec214dd3-a917-07c4-867d-4db6f9731878\n  Boot ID:                    cc8ff08d-3680-4f31-8f93-6bdaf64090e2\n  Kernel Version:             5.8.0-1038-aws\n  OS Image:                   Ubuntu 20.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://20.10.7\n  Kubelet Version:            v1.29.5\n  Kube-Proxy Version:         v1.29.5\nPodCIDR:                      10.42.2.0/24\nPodCIDRs:                     10.42.2.0/24\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-8485458bd8-jnr6l                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         131m\n  kube-system                 canal-rp4h4                                                250m (6%)     0 (0%)      0 (0%)           0 (0%)         131m\n  kube-system                 coredns-autoscaler-6ff6bf758-slrqs                         20m (0%)      0 (0%)      10Mi (0%)        0 (0%)         131m\n  kubelet-test-6902           busybox-readonly-fs1303839f-ccd1-4fff-abb6-491ee1ee0060    0 (0%)        0 (0%)      0 (0%)           0 (0%)         5s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         100m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-409406d7c0664ba6-bk62f    0 (0%)        0 (0%)      0 (0%)           0 (0%)         100m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests   Limits\n  --------             --------   ------\n  cpu                  270m (6%)  0 (0%)\n  memory               10Mi (0%)  0 (0%)\n  ephemeral-storage    0 (0%)     0 (0%)\n  hugepages-1Gi        0 (0%)     0 (0%)\n  hugepages-2Mi        0 (0%)     0 (0%)\n  example.com/fakecpu  0          0\nEvents:                <none>\n"
  Jun 13 11:56:21.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-967 describe namespace kubectl-967'
  Jun 13 11:56:21.112: INFO: stderr: ""
  Jun 13 11:56:21.112: INFO: stdout: "Name:         kubectl-967\nLabels:       e2e-framework=kubectl\n              e2e-run=84c413ca-8f3f-4cad-a8b5-6f08c8614968\n              kubernetes.io/metadata.name=kubectl-967\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun 13 11:56:21.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-967" for this suite. @ 06/13/24 11:56:21.116
• [2.717 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/13/24 11:56:21.123
  Jun 13 11:56:21.123: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:56:21.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:21.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:21.136
  STEP: Creating configMap configmap-9741/configmap-test-cbf31b82-af28-456b-acd3-65adc3760c24 @ 06/13/24 11:56:21.14
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:56:21.143
  E0613 11:56:21.398380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:22.398706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:23.399289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:24.399531      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:56:25.162
  Jun 13 11:56:25.165: INFO: Trying to get logs from node 18.216.152.151 pod pod-configmaps-f1e7f9dd-fd97-453d-9fd6-4a4a1fcdb574 container env-test: <nil>
  STEP: delete the pod @ 06/13/24 11:56:25.182
  Jun 13 11:56:25.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9741" for this suite. @ 06/13/24 11:56:25.199
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/13/24 11:56:25.204
  Jun 13 11:56:25.204: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:56:25.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:25.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:25.217
  STEP: creating a Service @ 06/13/24 11:56:25.222
  STEP: watching for the Service to be added @ 06/13/24 11:56:25.236
  Jun 13 11:56:25.238: INFO: Found Service test-service-xpfx2 in namespace services-2467 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32543}]
  Jun 13 11:56:25.238: INFO: Service test-service-xpfx2 created
  STEP: Getting /status @ 06/13/24 11:56:25.238
  Jun 13 11:56:25.241: INFO: Service test-service-xpfx2 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/13/24 11:56:25.241
  STEP: watching for the Service to be patched @ 06/13/24 11:56:25.245
  Jun 13 11:56:25.247: INFO: observed Service test-service-xpfx2 in namespace services-2467 with annotations: map[] & LoadBalancer: {[]}
  Jun 13 11:56:25.247: INFO: Found Service test-service-xpfx2 in namespace services-2467 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun 13 11:56:25.247: INFO: Service test-service-xpfx2 has service status patched
  STEP: updating the ServiceStatus @ 06/13/24 11:56:25.247
  Jun 13 11:56:25.254: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/13/24 11:56:25.254
  Jun 13 11:56:25.255: INFO: Observed Service test-service-xpfx2 in namespace services-2467 with annotations: map[] & Conditions: {[]}
  Jun 13 11:56:25.255: INFO: Observed event: &Service{ObjectMeta:{test-service-xpfx2  services-2467  276cb8af-1b6a-4c89-874e-cfd664ecb2ec 38487 0 2024-06-13 11:56:25 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-13 11:56:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-13 11:56:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32543,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.50.221,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.50.221],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun 13 11:56:25.255: INFO: Found Service test-service-xpfx2 in namespace services-2467 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 11:56:25.255: INFO: Service test-service-xpfx2 has service status updated
  STEP: patching the service @ 06/13/24 11:56:25.255
  STEP: watching for the Service to be patched @ 06/13/24 11:56:25.313
  Jun 13 11:56:25.318: INFO: observed Service test-service-xpfx2 in namespace services-2467 with labels: map[test-service-static:true]
  Jun 13 11:56:25.318: INFO: observed Service test-service-xpfx2 in namespace services-2467 with labels: map[test-service-static:true]
  Jun 13 11:56:25.318: INFO: observed Service test-service-xpfx2 in namespace services-2467 with labels: map[test-service-static:true]
  Jun 13 11:56:25.318: INFO: Found Service test-service-xpfx2 in namespace services-2467 with labels: map[test-service:patched test-service-static:true]
  Jun 13 11:56:25.318: INFO: Service test-service-xpfx2 patched
  STEP: deleting the service @ 06/13/24 11:56:25.318
  STEP: watching for the Service to be deleted @ 06/13/24 11:56:25.332
  Jun 13 11:56:25.334: INFO: Observed event: ADDED
  Jun 13 11:56:25.334: INFO: Observed event: MODIFIED
  Jun 13 11:56:25.334: INFO: Observed event: MODIFIED
  Jun 13 11:56:25.334: INFO: Observed event: MODIFIED
  Jun 13 11:56:25.334: INFO: Found Service test-service-xpfx2 in namespace services-2467 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun 13 11:56:25.334: INFO: Service test-service-xpfx2 deleted
  Jun 13 11:56:25.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2467" for this suite. @ 06/13/24 11:56:25.337
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/13/24 11:56:25.343
  Jun 13 11:56:25.343: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 11:56:25.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:25.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:25.357
  STEP: Creating Pod @ 06/13/24 11:56:25.36
  E0613 11:56:25.400171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:26.400779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/13/24 11:56:27.373
  Jun 13 11:56:27.373: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8170 PodName:pod-sharedvolume-2dfeeffb-10c1-4e59-95ab-822f4ea8a60e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 11:56:27.373: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 11:56:27.373: INFO: ExecWithOptions: Clientset creation
  Jun 13 11:56:27.373: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-8170/pods/pod-sharedvolume-2dfeeffb-10c1-4e59-95ab-822f4ea8a60e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  E0613 11:56:27.400875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:27.462: INFO: Exec stderr: ""
  Jun 13 11:56:27.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8170" for this suite. @ 06/13/24 11:56:27.465
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/13/24 11:56:27.471
  Jun 13 11:56:27.471: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename pods @ 06/13/24 11:56:27.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:27.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:27.487
  STEP: creating the pod @ 06/13/24 11:56:27.49
  STEP: submitting the pod to kubernetes @ 06/13/24 11:56:27.49
  E0613 11:56:28.401050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:29.401360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/13/24 11:56:29.506
  STEP: updating the pod @ 06/13/24 11:56:29.508
  Jun 13 11:56:30.020: INFO: Successfully updated pod "pod-update-cfeed8ab-b938-4c33-af75-81f01ecf597b"
  STEP: verifying the updated pod is in kubernetes @ 06/13/24 11:56:30.024
  Jun 13 11:56:30.026: INFO: Pod update OK
  Jun 13 11:56:30.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6797" for this suite. @ 06/13/24 11:56:30.029
• [2.564 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/13/24 11:56:30.035
  Jun 13 11:56:30.035: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 11:56:30.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:30.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:30.048
  E0613 11:56:30.401600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:31.402277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:32.402403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:33.402648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:34.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7133" for this suite. @ 06/13/24 11:56:34.068
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/13/24 11:56:34.073
  Jun 13 11:56:34.073: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename projected @ 06/13/24 11:56:34.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:34.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:34.088
  STEP: Creating projection with secret that has name projected-secret-test-2704031e-decd-4a16-b922-f881637f07cc @ 06/13/24 11:56:34.091
  STEP: Creating a pod to test consume secrets @ 06/13/24 11:56:34.095
  E0613 11:56:34.402849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:35.402935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:36.403816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:37.404134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:56:38.113
  Jun 13 11:56:38.115: INFO: Trying to get logs from node 18.117.132.30 pod pod-projected-secrets-05046136-fff3-4331-8ae1-4a99e9c4f746 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 11:56:38.123
  Jun 13 11:56:38.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1486" for this suite. @ 06/13/24 11:56:38.139
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/13/24 11:56:38.146
  Jun 13 11:56:38.146: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename gc @ 06/13/24 11:56:38.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:38.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:38.159
  STEP: create the deployment @ 06/13/24 11:56:38.162
  W0613 11:56:38.167566      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/13/24 11:56:38.167
  E0613 11:56:38.404732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/13/24 11:56:38.671
  STEP: wait for all rs to be garbage collected @ 06/13/24 11:56:38.678
  STEP: expected 0 rs, got 1 rs @ 06/13/24 11:56:38.684
  STEP: expected 0 pods, got 2 pods @ 06/13/24 11:56:38.688
  STEP: Gathering metrics @ 06/13/24 11:56:39.186
  W0613 11:56:39.190653      23 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 11:56:39.190: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 11:56:39.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-315" for this suite. @ 06/13/24 11:56:39.193
• [1.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/13/24 11:56:39.199
  Jun 13 11:56:39.199: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:56:39.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:39.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:39.231
  STEP: creating the pod @ 06/13/24 11:56:39.234
  Jun 13 11:56:39.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 create -f -'
  Jun 13 11:56:39.363: INFO: stderr: ""
  Jun 13 11:56:39.363: INFO: stdout: "pod/pause created\n"
  E0613 11:56:39.405187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:40.405574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/13/24 11:56:41.369
  Jun 13 11:56:41.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 label pods pause testing-label=testing-label-value'
  E0613 11:56:41.405985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:41.440: INFO: stderr: ""
  Jun 13 11:56:41.440: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/13/24 11:56:41.44
  Jun 13 11:56:41.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 get pod pause -L testing-label'
  Jun 13 11:56:41.502: INFO: stderr: ""
  Jun 13 11:56:41.502: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/13/24 11:56:41.502
  Jun 13 11:56:41.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 label pods pause testing-label-'
  Jun 13 11:56:41.574: INFO: stderr: ""
  Jun 13 11:56:41.574: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/13/24 11:56:41.574
  Jun 13 11:56:41.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 get pod pause -L testing-label'
  Jun 13 11:56:41.638: INFO: stderr: ""
  Jun 13 11:56:41.638: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/13/24 11:56:41.638
  Jun 13 11:56:41.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 delete --grace-period=0 --force -f -'
  Jun 13 11:56:41.710: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 11:56:41.711: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun 13 11:56:41.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 get rc,svc -l name=pause --no-headers'
  Jun 13 11:56:41.776: INFO: stderr: "No resources found in kubectl-8908 namespace.\n"
  Jun 13 11:56:41.776: INFO: stdout: ""
  Jun 13 11:56:41.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-8908 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 13 11:56:41.841: INFO: stderr: ""
  Jun 13 11:56:41.841: INFO: stdout: ""
  Jun 13 11:56:41.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8908" for this suite. @ 06/13/24 11:56:41.844
• [2.651 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/13/24 11:56:41.85
  Jun 13 11:56:41.850: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 11:56:41.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:41.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:41.865
  STEP: set up a multi version CRD @ 06/13/24 11:56:41.868
  Jun 13 11:56:41.868: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  E0613 11:56:42.406866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:43.407983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:44.408142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 06/13/24 11:56:45.339
  STEP: check the unserved version gets removed @ 06/13/24 11:56:45.356
  E0613 11:56:45.408221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 06/13/24 11:56:46.168
  E0613 11:56:46.409055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:47.409348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:48.410302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:48.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9634" for this suite. @ 06/13/24 11:56:48.888
• [7.042 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/13/24 11:56:48.892
  Jun 13 11:56:48.892: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:56:48.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:48.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:48.908
  STEP: creating a collection of services @ 06/13/24 11:56:48.911
  Jun 13 11:56:48.911: INFO: Creating e2e-svc-a-xhxjw
  Jun 13 11:56:48.921: INFO: Creating e2e-svc-b-l6h6c
  Jun 13 11:56:48.931: INFO: Creating e2e-svc-c-wn9p2
  STEP: deleting service collection @ 06/13/24 11:56:48.942
  Jun 13 11:56:48.964: INFO: Collection of services has been deleted
  Jun 13 11:56:48.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3246" for this suite. @ 06/13/24 11:56:48.967
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/13/24 11:56:48.972
  Jun 13 11:56:48.972: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename services @ 06/13/24 11:56:48.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:48.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:48.985
  STEP: creating service in namespace services-4774 @ 06/13/24 11:56:48.988
  STEP: creating service affinity-nodeport in namespace services-4774 @ 06/13/24 11:56:48.988
  STEP: creating replication controller affinity-nodeport in namespace services-4774 @ 06/13/24 11:56:48.999
  I0613 11:56:49.006712      23 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4774, replica count: 3
  E0613 11:56:49.410895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:50.411803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:51.412293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 11:56:52.057411      23 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 11:56:52.066: INFO: Creating new exec pod
  E0613 11:56:52.413200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:53.413456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:54.414122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:55.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4774 exec execpod-affinityvljhj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun 13 11:56:55.229: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun 13 11:56:55.229: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:56:55.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4774 exec execpod-affinityvljhj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.134.58 80'
  Jun 13 11:56:55.371: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.134.58 80\nConnection to 10.43.134.58 80 port [tcp/http] succeeded!\n"
  Jun 13 11:56:55.371: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:56:55.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4774 exec execpod-affinityvljhj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.66 32261'
  E0613 11:56:55.414509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:55.520: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.66 32261\nConnection to 172.31.29.66 32261 port [tcp/*] succeeded!\n"
  Jun 13 11:56:55.520: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:56:55.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4774 exec execpod-affinityvljhj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.102 32261'
  Jun 13 11:56:55.672: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.102 32261\nConnection to 172.31.26.102 32261 port [tcp/*] succeeded!\n"
  Jun 13 11:56:55.672: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 11:56:55.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=services-4774 exec execpod-affinityvljhj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.102:32261/ ; done'
  Jun 13 11:56:55.894: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.102:32261/\n"
  Jun 13 11:56:55.894: INFO: stdout: "\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m\naffinity-nodeport-jqj5m"
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Received response from host: affinity-nodeport-jqj5m
  Jun 13 11:56:55.894: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4774, will wait for the garbage collector to delete the pods @ 06/13/24 11:56:55.907
  Jun 13 11:56:55.966: INFO: Deleting ReplicationController affinity-nodeport took: 4.763892ms
  Jun 13 11:56:56.067: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.033803ms
  E0613 11:56:56.415188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:57.416138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:56:58.416816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:56:59.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4774" for this suite. @ 06/13/24 11:56:59.403
• [10.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/13/24 11:56:59.408
  Jun 13 11:56:59.408: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 11:56:59.409
  E0613 11:56:59.416814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:56:59.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:56:59.421
  STEP: creating a replication controller @ 06/13/24 11:56:59.424
  Jun 13 11:56:59.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 create -f -'
  Jun 13 11:56:59.549: INFO: stderr: ""
  Jun 13 11:56:59.549: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 11:56:59.55
  Jun 13 11:56:59.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 11:56:59.614: INFO: stderr: ""
  Jun 13 11:56:59.614: INFO: stdout: "update-demo-nautilus-5xhnq update-demo-nautilus-lqjcc "
  Jun 13 11:56:59.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-5xhnq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:56:59.677: INFO: stderr: ""
  Jun 13 11:56:59.677: INFO: stdout: ""
  Jun 13 11:56:59.677: INFO: update-demo-nautilus-5xhnq is created but not running
  E0613 11:57:00.417341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:01.417948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:02.418188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:03.418373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:04.418616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:57:04.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 11:57:04.744: INFO: stderr: ""
  Jun 13 11:57:04.744: INFO: stdout: "update-demo-nautilus-5xhnq update-demo-nautilus-lqjcc "
  Jun 13 11:57:04.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-5xhnq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:57:04.806: INFO: stderr: ""
  Jun 13 11:57:04.806: INFO: stdout: "true"
  Jun 13 11:57:04.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-5xhnq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 11:57:04.869: INFO: stderr: ""
  Jun 13 11:57:04.869: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 11:57:04.869: INFO: validating pod update-demo-nautilus-5xhnq
  Jun 13 11:57:04.872: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 11:57:04.872: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 11:57:04.872: INFO: update-demo-nautilus-5xhnq is verified up and running
  Jun 13 11:57:04.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-lqjcc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:57:04.936: INFO: stderr: ""
  Jun 13 11:57:04.936: INFO: stdout: "true"
  Jun 13 11:57:04.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-lqjcc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 11:57:05.001: INFO: stderr: ""
  Jun 13 11:57:05.001: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 11:57:05.001: INFO: validating pod update-demo-nautilus-lqjcc
  Jun 13 11:57:05.005: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 11:57:05.005: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 11:57:05.005: INFO: update-demo-nautilus-lqjcc is verified up and running
  STEP: scaling down the replication controller @ 06/13/24 11:57:05.005
  Jun 13 11:57:05.007: INFO: scanned /root for discovery docs: <nil>
  Jun 13 11:57:05.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0613 11:57:05.418781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:57:06.083: INFO: stderr: ""
  Jun 13 11:57:06.083: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 11:57:06.083
  Jun 13 11:57:06.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 11:57:06.147: INFO: stderr: ""
  Jun 13 11:57:06.147: INFO: stdout: "update-demo-nautilus-5xhnq "
  Jun 13 11:57:06.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-5xhnq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:57:06.208: INFO: stderr: ""
  Jun 13 11:57:06.208: INFO: stdout: "true"
  Jun 13 11:57:06.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-5xhnq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 11:57:06.271: INFO: stderr: ""
  Jun 13 11:57:06.271: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 11:57:06.271: INFO: validating pod update-demo-nautilus-5xhnq
  Jun 13 11:57:06.274: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 11:57:06.274: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 11:57:06.274: INFO: update-demo-nautilus-5xhnq is verified up and running
  STEP: scaling up the replication controller @ 06/13/24 11:57:06.274
  Jun 13 11:57:06.275: INFO: scanned /root for discovery docs: <nil>
  Jun 13 11:57:06.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0613 11:57:06.419497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:57:07.353: INFO: stderr: ""
  Jun 13 11:57:07.353: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 11:57:07.353
  Jun 13 11:57:07.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0613 11:57:07.419602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 11:57:07.419: INFO: stderr: ""
  Jun 13 11:57:07.420: INFO: stdout: "update-demo-nautilus-5xhnq update-demo-nautilus-pqfmm "
  Jun 13 11:57:07.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-5xhnq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:57:07.481: INFO: stderr: ""
  Jun 13 11:57:07.481: INFO: stdout: "true"
  Jun 13 11:57:07.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-5xhnq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 11:57:07.542: INFO: stderr: ""
  Jun 13 11:57:07.542: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 11:57:07.542: INFO: validating pod update-demo-nautilus-5xhnq
  Jun 13 11:57:07.545: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 11:57:07.545: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 11:57:07.545: INFO: update-demo-nautilus-5xhnq is verified up and running
  Jun 13 11:57:07.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-pqfmm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 11:57:07.606: INFO: stderr: ""
  Jun 13 11:57:07.606: INFO: stdout: "true"
  Jun 13 11:57:07.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods update-demo-nautilus-pqfmm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 11:57:07.670: INFO: stderr: ""
  Jun 13 11:57:07.670: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 11:57:07.670: INFO: validating pod update-demo-nautilus-pqfmm
  Jun 13 11:57:07.674: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 11:57:07.674: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 11:57:07.674: INFO: update-demo-nautilus-pqfmm is verified up and running
  STEP: using delete to clean up resources @ 06/13/24 11:57:07.674
  Jun 13 11:57:07.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 delete --grace-period=0 --force -f -'
  Jun 13 11:57:07.739: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 11:57:07.739: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 13 11:57:07.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get rc,svc -l name=update-demo --no-headers'
  Jun 13 11:57:07.838: INFO: stderr: "No resources found in kubectl-28 namespace.\n"
  Jun 13 11:57:07.838: INFO: stdout: ""
  Jun 13 11:57:07.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-81812869 --namespace=kubectl-28 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 13 11:57:07.904: INFO: stderr: ""
  Jun 13 11:57:07.904: INFO: stdout: ""
  Jun 13 11:57:07.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-28" for this suite. @ 06/13/24 11:57:07.908
• [8.507 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/13/24 11:57:07.915
  Jun 13 11:57:07.915: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 11:57:07.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:57:07.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:57:07.938
  STEP: Creating a cronjob @ 06/13/24 11:57:07.941
  STEP: Ensuring more than one job is running at a time @ 06/13/24 11:57:07.948
  E0613 11:57:08.419748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:09.419952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:10.420761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:11.421320      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:12.421836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:13.422509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:14.423227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:15.424279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:16.424867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:17.425167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:18.426204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:19.426996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:20.427340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:21.427851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:22.428042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:23.428739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:24.429144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:25.429413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:26.430262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:27.431238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:28.431940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:29.432076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:30.433198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:31.433729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:32.433853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:33.434114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:34.434203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:35.434479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:36.435497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:37.435624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:38.435776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:39.436030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:40.436571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:41.436722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:42.437243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:43.438275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:44.438919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:45.439175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:46.439384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:47.439553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:48.440261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:49.441209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:50.441956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:51.442793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:52.443926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:53.444186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:54.444796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:55.445069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:56.445831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:57.446073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:58.446384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:57:59.446654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:00.447252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:01.447769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:02.448276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:03.448379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:04.448442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:05.448555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:06.449500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:07.449728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:08.449981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:09.450140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:10.450418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:11.450986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:12.451036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:13.451265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:14.451404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:15.451815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:16.452853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:17.453197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:18.453658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:19.453909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:20.454005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:21.454542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:22.454681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:23.454811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:24.454951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:25.455131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:26.455878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:27.456170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:28.456898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:29.457209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:30.457246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:31.457716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:32.457809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:33.458058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:34.458208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:35.458506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:36.458675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:37.459091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:38.459758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:39.460047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:40.460366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:41.460926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:42.461491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:43.461726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:44.461882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:45.462154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:46.463213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:47.463410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:48.463810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:49.464127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:50.465003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:51.465516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:52.465676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:53.465807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:54.465985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:55.466467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:56.466628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:57.466766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:58.466822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:58:59.467071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:00.467337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:01.467820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/13/24 11:59:01.952
  STEP: Removing cronjob @ 06/13/24 11:59:01.954
  Jun 13 11:59:01.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9210" for this suite. @ 06/13/24 11:59:01.962
• [114.052 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/13/24 11:59:01.968
  Jun 13 11:59:01.968: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:59:01.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:59:01.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:59:01.994
  STEP: Creating configMap with name configmap-test-volume-map-93622ba2-ae7d-44d3-97b8-3b485914452b @ 06/13/24 11:59:01.998
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:59:02.004
  E0613 11:59:02.468160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:03.468286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:04.469012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:05.469266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:59:06.022
  Jun 13 11:59:06.024: INFO: Trying to get logs from node 18.117.161.199 pod pod-configmaps-f4535f42-90ac-4216-9fd9-fb2fc29dbd43 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:59:06.038
  Jun 13 11:59:06.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2469" for this suite. @ 06/13/24 11:59:06.053
• [4.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/13/24 11:59:06.058
  Jun 13 11:59:06.058: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 11:59:06.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:59:06.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:59:06.073
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 11:59:06.079
  E0613 11:59:06.469386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:07.469649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/13/24 11:59:08.094
  E0613 11:59:08.470299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:09.470551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/13/24 11:59:10.109
  E0613 11:59:10.471123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:11.471749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:12.471975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:13.472141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/13/24 11:59:14.125
  Jun 13 11:59:14.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4070" for this suite. @ 06/13/24 11:59:14.144
• [8.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/13/24 11:59:14.148
  Jun 13 11:59:14.148: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename configmap @ 06/13/24 11:59:14.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:59:14.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:59:14.165
  STEP: Creating configMap with name configmap-test-volume-11ec31e6-f1c0-4907-ae3d-8ee7585f4c57 @ 06/13/24 11:59:14.168
  STEP: Creating a pod to test consume configMaps @ 06/13/24 11:59:14.172
  E0613 11:59:14.473100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:15.473830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:16.474806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:17.475095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 11:59:18.193
  Jun 13 11:59:18.195: INFO: Trying to get logs from node 18.117.132.30 pod pod-configmaps-9e744d16-d94e-435b-8bc1-9ebb234ed6c7 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 11:59:18.21
  Jun 13 11:59:18.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7936" for this suite. @ 06/13/24 11:59:18.232
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/13/24 11:59:18.238
  Jun 13 11:59:18.238: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 11:59:18.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 11:59:18.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 11:59:18.254
  Jun 13 11:59:18.267: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 11:59:18.475252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:19.475510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:20.476248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:21.476863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:22.477401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:23.477665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:24.478391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:25.478727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:26.479021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:27.479190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:28.479334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:29.480279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:30.481172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:31.481787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:32.481874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:33.482134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:34.483019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:35.483174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:36.483303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:37.483549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:38.484685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:39.484970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:40.485341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:41.485832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:42.486995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:43.487256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:44.487484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:45.487751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:46.488130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:47.488421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:48.489138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:49.489390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:50.490299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:51.490895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:52.491879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:53.492073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:54.492784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:55.493161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:56.493904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:57.494177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:58.494896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 11:59:59.495179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:00.495268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:01.495821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:02.496155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:03.496397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:04.496463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:05.496991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:06.498096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:07.498367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:08.499331      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:09.499590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:10.499691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:11.499812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:12.500880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:13.501106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:14.501663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:15.501895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:16.502669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:17.502906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:00:18.274: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/13/24 12:00:18.276
  Jun 13 12:00:18.294: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 13 12:00:18.301: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 13 12:00:18.318: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 13 12:00:18.326: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 13 12:00:18.344: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 13 12:00:18.354: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/13/24 12:00:18.354
  E0613 12:00:18.504052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:19.504095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/13/24 12:00:20.376
  E0613 12:00:20.504868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:21.505457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:22.505909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:23.506213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:24.507169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:25.507489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:00:26.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4303" for this suite. @ 06/13/24 12:00:26.46
• [68.227 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/13/24 12:00:26.465
  Jun 13 12:00:26.465: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 12:00:26.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 12:00:26.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 12:00:26.478
  STEP: Setting up server cert @ 06/13/24 12:00:26.496
  E0613 12:00:26.507897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 12:00:26.988
  STEP: Deploying the webhook pod @ 06/13/24 12:00:26.993
  STEP: Wait for the deployment to be ready @ 06/13/24 12:00:27.005
  Jun 13 12:00:27.011: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 12:00:27.508096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:28.509178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 12:00:29.021
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 12:00:29.029
  E0613 12:00:29.509367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:00:30.030: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/13/24 12:00:30.035
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/13/24 12:00:30.05
  Jun 13 12:00:30.050: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  Jun 13 12:00:30.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1325" for this suite. @ 06/13/24 12:00:30.099
  STEP: Destroying namespace "webhook-markers-279" for this suite. @ 06/13/24 12:00:30.103
• [3.642 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/13/24 12:00:30.116
  Jun 13 12:00:30.116: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename csi-storageclass @ 06/13/24 12:00:30.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 12:00:30.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 12:00:30.132
  STEP: Creating a StorageClass @ 06/13/24 12:00:30.135
  STEP: Get StorageClass "e2e-98gwl" @ 06/13/24 12:00:30.14
  STEP: Patching the StorageClass "e2e-98gwl" @ 06/13/24 12:00:30.142
  STEP: Delete StorageClass "e2e-98gwl" @ 06/13/24 12:00:30.149
  STEP: Confirm deletion of StorageClass "e2e-98gwl" @ 06/13/24 12:00:30.153
  STEP: Create a replacement StorageClass @ 06/13/24 12:00:30.155
  STEP: Updating StorageClass "e2e-v2-sjnsw" @ 06/13/24 12:00:30.161
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-sjnsw=updated" @ 06/13/24 12:00:30.167
  STEP: Deleting StorageClass "e2e-v2-sjnsw" via DeleteCollection @ 06/13/24 12:00:30.169
  STEP: Confirm deletion of StorageClass "e2e-v2-sjnsw" @ 06/13/24 12:00:30.174
  Jun 13 12:00:30.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-287" for this suite. @ 06/13/24 12:00:30.179
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/13/24 12:00:30.184
  Jun 13 12:00:30.184: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename webhook @ 06/13/24 12:00:30.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 12:00:30.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 12:00:30.198
  STEP: Setting up server cert @ 06/13/24 12:00:30.217
  E0613 12:00:30.510232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 12:00:30.695
  STEP: Deploying the webhook pod @ 06/13/24 12:00:30.7
  STEP: Wait for the deployment to be ready @ 06/13/24 12:00:30.71
  Jun 13 12:00:30.718: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 12:00:31.513085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:32.512210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 12:00:32.726
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 12:00:32.733
  E0613 12:00:33.513187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:00:33.734: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/13/24 12:00:33.74
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 12:00:33.74
  E0613 12:00:34.514323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:35.514740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:36.515277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:37.515509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:38.515767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:39.516038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:40.516600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:41.516947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:42.517190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:43.517464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:00:43.757: INFO: Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/13/24 12:00:43.867
  E0613 12:00:44.517930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/13/24 12:00:44.875
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 12:00:44.875
  E0613 12:00:45.518779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 06/13/24 12:00:45.902
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 12:00:45.903
  E0613 12:00:46.519146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:47.519402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:48.519656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:49.519917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:50.520463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/13/24 12:00:50.931
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 12:00:50.931
  E0613 12:00:51.521174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:52.521440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:53.521680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:54.521928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:55.522170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:00:55.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3724" for this suite. @ 06/13/24 12:00:56.001
  STEP: Destroying namespace "webhook-markers-927" for this suite. @ 06/13/24 12:00:56.006
• [25.826 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/13/24 12:00:56.01
  Jun 13 12:00:56.010: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename init-container @ 06/13/24 12:00:56.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 12:00:56.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 12:00:56.026
  STEP: creating the pod @ 06/13/24 12:00:56.029
  Jun 13 12:00:56.029: INFO: PodSpec: initContainers in spec.initContainers
  E0613 12:00:56.522321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:57.522462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:58.522846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:00:59.523285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:00.524396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:01.524940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:02.525192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:03.525435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:04.525847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:05.525977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:06.526559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:07.526788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:08.527160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:09.527334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:10.527438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:11.527962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:12.528360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:13.529204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:14.529343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:15.529536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:16.529613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:17.529728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:18.529999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:19.530226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:20.530417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:21.530755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:22.530920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:23.531062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:24.531202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:25.531382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:26.531981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:27.532497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:28.533174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:29.533457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:30.534321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:31.534782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:32.535037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:33.535295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:34.535703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:35.535965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:36.536481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:37.536623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:38.536805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:39.537746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:40.538249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:41.538812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:42.539034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:43.539258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:44.539737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:45.540020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:01:46.052: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-00d82fed-b0ab-4906-b64f-4e6b41f92da3", GenerateName:"", Namespace:"init-container-1389", SelfLink:"", UID:"ca0e21fe-0bc0-4b90-9374-154d37b9cae4", ResourceVersion:"39956", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"29910002"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"6b76b9bee9f241058b62c0ddfc53520d9127aa42467c874b111ecd9246d95984", "cni.projectcalico.org/podIP":"10.42.2.58/32", "cni.projectcalico.org/podIPs":"10.42.2.58/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a54ab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a54af8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 12, 1, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a54b28), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-dngm9", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00423a2e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dngm9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dngm9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dngm9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0027446f8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"18.117.132.30", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000045a40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002744780)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0027447a0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0027447a8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0027447ac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004811d40), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 12, 0, 57, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.26.102", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.26.102"}}, PodIP:"10.42.2.58", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.2.58"}}, StartTime:time.Date(2024, time.June, 13, 12, 0, 56, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000045b20)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000045b90)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://e400b8b7eb05635305cbe231582968d348913542e696e6bec3f689c4a6887f94", Started:(*bool)(0xc00274484a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00423a340), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00274485f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00423a320), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00274482f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun 13 12:01:46.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1389" for this suite. @ 06/13/24 12:01:46.057
• [50.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/13/24 12:01:46.064
  Jun 13 12:01:46.064: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename tables @ 06/13/24 12:01:46.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 12:01:46.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 12:01:46.076
  Jun 13 12:01:46.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8041" for this suite. @ 06/13/24 12:01:46.084
• [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/13/24 12:01:46.089
  Jun 13 12:01:46.089: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 12:01:46.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 12:01:46.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 12:01:46.103
  E0613 12:01:46.540839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:47.540986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:48.541757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:49.541870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:50.542452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:51.542830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:52.542897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:53.543176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:54.543991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:55.544240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:56.544540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:57.544781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:58.544930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:01:59.545079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:00.545914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:01.546477      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:02.547298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:03.547584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:04.548295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:05.548561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:06.548681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:07.548838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:02:08.159: INFO: Container started at 2024-06-13 12:01:46 +0000 UTC, pod became ready at 2024-06-13 12:02:06 +0000 UTC
  Jun 13 12:02:08.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9027" for this suite. @ 06/13/24 12:02:08.163
• [22.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/13/24 12:02:08.168
  Jun 13 12:02:08.168: INFO: >>> kubeConfig: /tmp/kubeconfig-81812869
  STEP: Building a namespace api object, basename init-container @ 06/13/24 12:02:08.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 12:02:08.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 12:02:08.184
  STEP: creating the pod @ 06/13/24 12:02:08.187
  Jun 13 12:02:08.187: INFO: PodSpec: initContainers in spec.initContainers
  E0613 12:02:08.549762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:09.550384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:10.551158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 12:02:11.551448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 12:02:12.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2922" for this suite. @ 06/13/24 12:02:12.453
• [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun 13 12:02:12.459: INFO: Running AfterSuite actions on node 1
  Jun 13 12:02:12.459: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.062 seconds]
------------------------------

Ran 388 of 7408 Specs in 6360.988 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h46m2.154396508s
Test Suite Passed
