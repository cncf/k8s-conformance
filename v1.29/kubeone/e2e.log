Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1715370109 - will randomize all specs

Will run 388 of 7407 specs
Running in parallel across 3 processes
------------------------------
[ReportBeforeSuite] PASSED [0.000 seconds]
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
------------------------------
[SynchronizedBeforeSuite] PASSED [0.169 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77

  Timeline >>
  May 10 19:41:50.910: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  May 10 19:41:50.911: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  May 10 19:41:51.062: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  May 10 19:41:51.071: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'aws-cloud-controller-manager' (0 seconds elapsed)
  May 10 19:41:51.071: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'canal' (0 seconds elapsed)
  May 10 19:41:51.071: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'ebs-csi-node' (0 seconds elapsed)
  May 10 19:41:51.071: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  May 10 19:41:51.071: INFO: 9 / 9 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  May 10 19:41:51.071: INFO: e2e test version: v1.29.4
  May 10 19:41:51.072: INFO: kube-apiserver version: v1.29.4
  May 10 19:41:51.073: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  May 10 19:41:51.078: INFO: Cluster IP family: ipv4
  << Timeline
------------------------------
[SynchronizedBeforeSuite] PASSED [0.013 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77

  Timeline >>
  May 10 19:41:51.098: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:41:51.110: INFO: Cluster IP family: ipv4
  << Timeline
------------------------------
[SynchronizedBeforeSuite] PASSED [0.069 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77

  Timeline >>
  May 10 19:41:51.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:41:51.132: INFO: Cluster IP family: ipv4
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.328 seconds]
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:51.392
  May 10 19:41:51.392: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 19:41:51.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:51.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:51.493
  STEP: Creating a cronjob @ 05/10/24 19:41:51.496
  STEP: creating @ 05/10/24 19:41:51.496
  STEP: getting @ 05/10/24 19:41:51.522
  STEP: listing @ 05/10/24 19:41:51.54
  STEP: watching @ 05/10/24 19:41:51.559
  May 10 19:41:51.559: INFO: starting watch
  STEP: cluster-wide listing @ 05/10/24 19:41:51.56
  STEP: cluster-wide watching @ 05/10/24 19:41:51.569
  May 10 19:41:51.569: INFO: starting watch
  STEP: patching @ 05/10/24 19:41:51.57
  STEP: updating @ 05/10/24 19:41:51.582
  May 10 19:41:51.600: INFO: waiting for watch events with expected annotations
  May 10 19:41:51.600: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/10/24 19:41:51.6
  STEP: updating /status @ 05/10/24 19:41:51.609
  STEP: get /status @ 05/10/24 19:41:51.627
  STEP: deleting @ 05/10/24 19:41:51.638
  STEP: deleting a collection @ 05/10/24 19:41:51.673
  May 10 19:41:51.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6651" for this suite. @ 05/10/24 19:41:51.704
  << Timeline
------------------------------
SSS
------------------------------
• [6.139 seconds]
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:51.723
  May 10 19:41:51.723: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:41:51.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:51.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:51.77
  May 10 19:41:55.811: INFO: Deleting pod "var-expansion-5103fe9f-a4b0-4766-83c8-5f88027ba0d4" in namespace "var-expansion-3336"
  May 10 19:41:55.828: INFO: Wait up to 5m0s for pod "var-expansion-5103fe9f-a4b0-4766-83c8-5f88027ba0d4" to be fully deleted
  May 10 19:41:57.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3336" for this suite. @ 05/10/24 19:41:57.85
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [8.315 seconds]
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:51.398
  May 10 19:41:51.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:41:51.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:51.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:51.522
  STEP: Creating configMap with name configmap-test-volume-1d75c6f8-4d70-4488-b34e-3173d97a5840 @ 05/10/24 19:41:51.527
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:41:51.539
  STEP: Saw pod success @ 05/10/24 19:41:59.64
  May 10 19:41:59.648: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-configmaps-560b60a1-695e-460c-a0d5-4c636037d470 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:41:59.669
  May 10 19:41:59.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9130" for this suite. @ 05/10/24 19:41:59.702
  << Timeline
------------------------------
• [21.461 seconds]
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:51.336
  May 10 19:41:51.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename chunking @ 05/10/24 19:41:51.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:51.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:51.371
  STEP: creating a large number of resources @ 05/10/24 19:41:51.382
  STEP: retrieving those results in paged fashion several times @ 05/10/24 19:42:09.048
  May 10 19:42:09.094: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May 10 19:42:09.143: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May 10 19:42:09.192: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May 10 19:42:09.243: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May 10 19:42:09.292: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May 10 19:42:09.342: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May 10 19:42:09.403: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May 10 19:42:09.444: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May 10 19:42:09.492: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May 10 19:42:09.544: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May 10 19:42:09.603: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May 10 19:42:09.642: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May 10 19:42:09.694: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May 10 19:42:09.747: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May 10 19:42:09.793: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May 10 19:42:09.846: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May 10 19:42:09.898: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May 10 19:42:09.942: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May 10 19:42:09.994: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May 10 19:42:10.043: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May 10 19:42:10.095: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May 10 19:42:10.144: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May 10 19:42:10.193: INFO: Retrieved 17/17 results with rv 13355 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May 10 19:42:10.242: INFO: Retrieved 9/17 results with rv 13355 and continue 
  May 10 19:42:10.293: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May 10 19:42:10.344: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May 10 19:42:10.402: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May 10 19:42:10.447: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May 10 19:42:10.494: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May 10 19:42:10.543: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May 10 19:42:10.593: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May 10 19:42:10.652: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May 10 19:42:10.694: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May 10 19:42:10.742: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May 10 19:42:10.792: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May 10 19:42:10.844: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May 10 19:42:10.892: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May 10 19:42:10.943: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May 10 19:42:10.999: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May 10 19:42:11.043: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May 10 19:42:11.093: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May 10 19:42:11.143: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May 10 19:42:11.193: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May 10 19:42:11.242: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May 10 19:42:11.292: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May 10 19:42:11.348: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May 10 19:42:11.393: INFO: Retrieved 17/17 results with rv 13360 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May 10 19:42:11.443: INFO: Retrieved 9/17 results with rv 13360 and continue 
  May 10 19:42:11.503: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May 10 19:42:11.548: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May 10 19:42:11.594: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May 10 19:42:11.644: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May 10 19:42:11.694: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May 10 19:42:11.744: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May 10 19:42:11.792: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May 10 19:42:11.842: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May 10 19:42:11.893: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May 10 19:42:11.955: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May 10 19:42:11.993: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May 10 19:42:12.043: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May 10 19:42:12.093: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May 10 19:42:12.142: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May 10 19:42:12.199: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May 10 19:42:12.242: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May 10 19:42:12.292: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May 10 19:42:12.346: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May 10 19:42:12.393: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May 10 19:42:12.443: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May 10 19:42:12.492: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May 10 19:42:12.543: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May 10 19:42:12.594: INFO: Retrieved 17/17 results with rv 13369 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May 10 19:42:12.644: INFO: Retrieved 9/17 results with rv 13369 and continue 
  STEP: retrieving those results all at once @ 05/10/24 19:42:12.644
  May 10 19:42:12.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-884" for this suite. @ 05/10/24 19:42:12.746
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.128 seconds]
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:12.809
  May 10 19:42:12.809: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename services @ 05/10/24 19:42:12.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:12.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:12.838
  STEP: creating an Endpoint @ 05/10/24 19:42:12.849
  STEP: waiting for available Endpoint @ 05/10/24 19:42:12.856
  STEP: listing all Endpoints @ 05/10/24 19:42:12.858
  STEP: updating the Endpoint @ 05/10/24 19:42:12.863
  STEP: fetching the Endpoint @ 05/10/24 19:42:12.871
  STEP: patching the Endpoint @ 05/10/24 19:42:12.877
  STEP: fetching the Endpoint @ 05/10/24 19:42:12.889
  STEP: deleting the Endpoint by Collection @ 05/10/24 19:42:12.896
  STEP: waiting for Endpoint deletion @ 05/10/24 19:42:12.913
  STEP: fetching the Endpoint @ 05/10/24 19:42:12.915
  May 10 19:42:12.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2871" for this suite. @ 05/10/24 19:42:12.928
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.162 seconds]
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:12.941
  May 10 19:42:12.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename disruption @ 05/10/24 19:42:12.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:12.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:12.97
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:42:12.982
  STEP: Updating PodDisruptionBudget status @ 05/10/24 19:42:14.989
  STEP: Waiting for all pods to be running @ 05/10/24 19:42:15.008
  May 10 19:42:15.022: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 05/10/24 19:42:17.018
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:42:17.048
  STEP: Patching PodDisruptionBudget status @ 05/10/24 19:42:17.059
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:42:17.072
  May 10 19:42:17.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-206" for this suite. @ 05/10/24 19:42:17.088
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [0.208 seconds]
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:17.111
  May 10 19:42:17.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename events @ 05/10/24 19:42:17.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:17.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:17.149
  STEP: creating a test event @ 05/10/24 19:42:17.154
  STEP: listing all events in all namespaces @ 05/10/24 19:42:17.16
  STEP: patching the test event @ 05/10/24 19:42:17.194
  STEP: fetching the test event @ 05/10/24 19:42:17.204
  STEP: updating the test event @ 05/10/24 19:42:17.21
  STEP: getting the test event @ 05/10/24 19:42:17.225
  STEP: deleting the test event @ 05/10/24 19:42:17.239
  STEP: listing all events in all namespaces @ 05/10/24 19:42:17.256
  May 10 19:42:17.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1501" for this suite. @ 05/10/24 19:42:17.306
  << Timeline
------------------------------
SSS
------------------------------
• [6.141 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:17.321
  May 10 19:42:17.321: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sysctl @ 05/10/24 19:42:17.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:17.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:17.351
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/10/24 19:42:17.355
  STEP: Watching for error events or started pod @ 05/10/24 19:42:17.37
  STEP: Waiting for pod completion @ 05/10/24 19:42:19.383
  STEP: Checking that the pod succeeded @ 05/10/24 19:42:23.42
  STEP: Getting logs from the pod @ 05/10/24 19:42:23.42
  STEP: Checking that the sysctl is actually updated @ 05/10/24 19:42:23.442
  May 10 19:42:23.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3103" for this suite. @ 05/10/24 19:42:23.452
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.117 seconds]
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:23.469
  May 10 19:42:23.469: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 19:42:23.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:23.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:23.524
  May 10 19:42:27.567: INFO: Got logs for pod "busybox-privileged-false-678656ce-3e5e-4efa-8f02-68aaaa68e711": "ip: RTNETLINK answers: Operation not permitted\n"
  May 10 19:42:27.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-451" for this suite. @ 05/10/24 19:42:27.574
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [31.270 seconds]
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:57.869
  May 10 19:41:57.869: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 19:41:57.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:57.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:57.901
  STEP: Performing setup for networking test in namespace pod-network-test-9997 @ 05/10/24 19:41:57.906
  STEP: creating a selector @ 05/10/24 19:41:57.906
  STEP: Creating the service pods in kubernetes @ 05/10/24 19:41:57.906
  May 10 19:41:57.906: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 19:42:20.337
  May 10 19:42:22.459: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 19:42:22.459: INFO: Going to poll 10.244.5.3 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:42:22.472: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.5.3 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:42:22.472: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:42:22.473: INFO: ExecWithOptions: Clientset creation
  May 10 19:42:22.473: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.5.3+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:42:23.599: INFO: Found all 1 expected endpoints: [netserver-0]
  May 10 19:42:23.599: INFO: Going to poll 10.244.8.4 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:42:23.611: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.8.4 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:42:23.611: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:42:23.612: INFO: ExecWithOptions: Clientset creation
  May 10 19:42:23.612: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.8.4+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:42:24.704: INFO: Found all 1 expected endpoints: [netserver-1]
  May 10 19:42:24.704: INFO: Going to poll 10.244.7.3 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:42:24.710: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.7.3 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:42:24.710: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:42:24.710: INFO: ExecWithOptions: Clientset creation
  May 10 19:42:24.710: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.7.3+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:42:25.797: INFO: Found all 1 expected endpoints: [netserver-2]
  May 10 19:42:25.797: INFO: Going to poll 10.244.3.3 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:42:25.802: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.3.3 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:42:25.802: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:42:25.803: INFO: ExecWithOptions: Clientset creation
  May 10 19:42:25.803: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.3.3+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:42:26.893: INFO: Found all 1 expected endpoints: [netserver-3]
  May 10 19:42:26.893: INFO: Going to poll 10.244.4.4 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:42:26.898: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.4.4 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:42:26.898: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:42:26.898: INFO: ExecWithOptions: Clientset creation
  May 10 19:42:26.898: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.4.4+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:42:27.991: INFO: Found all 1 expected endpoints: [netserver-4]
  May 10 19:42:27.991: INFO: Going to poll 10.244.6.4 on port 8081 at least 0 times, with a maximum of 66 tries before failing
  May 10 19:42:27.998: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.6.4 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:42:27.998: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:42:27.998: INFO: ExecWithOptions: Clientset creation
  May 10 19:42:27.998: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.6.4+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 19:42:29.102: INFO: Found all 1 expected endpoints: [netserver-5]
  May 10 19:42:29.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9997" for this suite. @ 05/10/24 19:42:29.117
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.129 seconds]
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:27.594
  May 10 19:42:27.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:42:27.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:27.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:27.628
  STEP: Creating a pod to test downward api env vars @ 05/10/24 19:42:27.633
  STEP: Saw pod success @ 05/10/24 19:42:31.671
  May 10 19:42:31.675: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod downward-api-d832387d-a740-4b5c-8291-84b70843e1e0 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:42:31.684
  May 10 19:42:31.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-409" for this suite. @ 05/10/24 19:42:31.714
  << Timeline
------------------------------
SS
------------------------------
• [4.201 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:29.148
  May 10 19:42:29.148: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:42:29.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:29.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:29.208
  STEP: Creating configMap with name configmap-test-volume-8252e979-db72-40ed-9eb7-ca72c9ddcd0b @ 05/10/24 19:42:29.215
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:42:29.222
  STEP: Saw pod success @ 05/10/24 19:42:33.27
  May 10 19:42:33.275: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-configmaps-7df74dbf-76f1-4789-9f6a-e77e59417bf0 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:42:33.294
  May 10 19:42:33.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8415" for this suite. @ 05/10/24 19:42:33.335
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [3.228 seconds]
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:33.357
  May 10 19:42:33.357: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:42:33.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:33.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:33.386
  May 10 19:42:33.389: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  W0510 19:42:35.942875      23 warnings.go:70] unknown field "alpha"
  W0510 19:42:35.942885      23 warnings.go:70] unknown field "beta"
  W0510 19:42:35.942886      23 warnings.go:70] unknown field "delta"
  W0510 19:42:35.942888      23 warnings.go:70] unknown field "epsilon"
  W0510 19:42:35.942890      23 warnings.go:70] unknown field "gamma"
  May 10 19:42:36.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4489" for this suite. @ 05/10/24 19:42:36.559
  << Timeline
------------------------------
SSSSSS
------------------------------
• [45.095 seconds]
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:41:59.714
  May 10 19:41:59.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:41:59.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:41:59.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:41:59.752
  STEP: create the rc @ 05/10/24 19:41:59.764
  W0510 19:41:59.772626      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 19:42:05.779
  STEP: wait for the rc to be deleted @ 05/10/24 19:42:05.795
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/10/24 19:42:10.804
  STEP: Gathering metrics @ 05/10/24 19:42:40.827
  May 10 19:42:41.037: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 19:42:41.037: INFO: Deleting pod "simpletest.rc-27842" in namespace "gc-8074"
  May 10 19:42:41.058: INFO: Deleting pod "simpletest.rc-2tbrr" in namespace "gc-8074"
  May 10 19:42:41.080: INFO: Deleting pod "simpletest.rc-44t7b" in namespace "gc-8074"
  May 10 19:42:41.103: INFO: Deleting pod "simpletest.rc-45g5n" in namespace "gc-8074"
  May 10 19:42:41.122: INFO: Deleting pod "simpletest.rc-4g45n" in namespace "gc-8074"
  May 10 19:42:41.157: INFO: Deleting pod "simpletest.rc-4n5n8" in namespace "gc-8074"
  May 10 19:42:41.209: INFO: Deleting pod "simpletest.rc-5q62m" in namespace "gc-8074"
  May 10 19:42:41.246: INFO: Deleting pod "simpletest.rc-66m2p" in namespace "gc-8074"
  May 10 19:42:41.272: INFO: Deleting pod "simpletest.rc-6s9mm" in namespace "gc-8074"
  May 10 19:42:41.292: INFO: Deleting pod "simpletest.rc-6xrvh" in namespace "gc-8074"
  May 10 19:42:41.318: INFO: Deleting pod "simpletest.rc-7drw2" in namespace "gc-8074"
  May 10 19:42:41.346: INFO: Deleting pod "simpletest.rc-7mkft" in namespace "gc-8074"
  May 10 19:42:41.376: INFO: Deleting pod "simpletest.rc-7nxrx" in namespace "gc-8074"
  May 10 19:42:41.395: INFO: Deleting pod "simpletest.rc-82vn2" in namespace "gc-8074"
  May 10 19:42:41.429: INFO: Deleting pod "simpletest.rc-8bwbj" in namespace "gc-8074"
  May 10 19:42:41.448: INFO: Deleting pod "simpletest.rc-8cqmt" in namespace "gc-8074"
  May 10 19:42:41.473: INFO: Deleting pod "simpletest.rc-8nxzl" in namespace "gc-8074"
  May 10 19:42:41.495: INFO: Deleting pod "simpletest.rc-98mlh" in namespace "gc-8074"
  May 10 19:42:41.525: INFO: Deleting pod "simpletest.rc-9jkzs" in namespace "gc-8074"
  May 10 19:42:41.554: INFO: Deleting pod "simpletest.rc-9tl76" in namespace "gc-8074"
  May 10 19:42:41.577: INFO: Deleting pod "simpletest.rc-9zcbc" in namespace "gc-8074"
  May 10 19:42:41.602: INFO: Deleting pod "simpletest.rc-blrn5" in namespace "gc-8074"
  May 10 19:42:41.668: INFO: Deleting pod "simpletest.rc-bnmg9" in namespace "gc-8074"
  May 10 19:42:41.699: INFO: Deleting pod "simpletest.rc-bs2fc" in namespace "gc-8074"
  May 10 19:42:41.722: INFO: Deleting pod "simpletest.rc-c7bkc" in namespace "gc-8074"
  May 10 19:42:41.819: INFO: Deleting pod "simpletest.rc-cwxfd" in namespace "gc-8074"
  May 10 19:42:41.871: INFO: Deleting pod "simpletest.rc-d5lrk" in namespace "gc-8074"
  May 10 19:42:41.909: INFO: Deleting pod "simpletest.rc-d5tth" in namespace "gc-8074"
  May 10 19:42:41.942: INFO: Deleting pod "simpletest.rc-djbnx" in namespace "gc-8074"
  May 10 19:42:41.978: INFO: Deleting pod "simpletest.rc-dth9k" in namespace "gc-8074"
  May 10 19:42:42.042: INFO: Deleting pod "simpletest.rc-dwnrw" in namespace "gc-8074"
  May 10 19:42:42.074: INFO: Deleting pod "simpletest.rc-f4jnj" in namespace "gc-8074"
  May 10 19:42:42.119: INFO: Deleting pod "simpletest.rc-f55rt" in namespace "gc-8074"
  May 10 19:42:42.140: INFO: Deleting pod "simpletest.rc-f89hh" in namespace "gc-8074"
  May 10 19:42:42.167: INFO: Deleting pod "simpletest.rc-fw75q" in namespace "gc-8074"
  May 10 19:42:42.190: INFO: Deleting pod "simpletest.rc-fzzqm" in namespace "gc-8074"
  May 10 19:42:42.246: INFO: Deleting pod "simpletest.rc-gvsq6" in namespace "gc-8074"
  May 10 19:42:42.275: INFO: Deleting pod "simpletest.rc-h2f7c" in namespace "gc-8074"
  May 10 19:42:42.320: INFO: Deleting pod "simpletest.rc-htx4p" in namespace "gc-8074"
  May 10 19:42:42.351: INFO: Deleting pod "simpletest.rc-hxlwp" in namespace "gc-8074"
  May 10 19:42:42.373: INFO: Deleting pod "simpletest.rc-jt2pr" in namespace "gc-8074"
  May 10 19:42:42.405: INFO: Deleting pod "simpletest.rc-jz2xj" in namespace "gc-8074"
  May 10 19:42:42.430: INFO: Deleting pod "simpletest.rc-k9j56" in namespace "gc-8074"
  May 10 19:42:42.459: INFO: Deleting pod "simpletest.rc-kd9nk" in namespace "gc-8074"
  May 10 19:42:42.482: INFO: Deleting pod "simpletest.rc-kmtjq" in namespace "gc-8074"
  May 10 19:42:42.510: INFO: Deleting pod "simpletest.rc-ktppf" in namespace "gc-8074"
  May 10 19:42:42.548: INFO: Deleting pod "simpletest.rc-kttcc" in namespace "gc-8074"
  May 10 19:42:42.593: INFO: Deleting pod "simpletest.rc-kw7mr" in namespace "gc-8074"
  May 10 19:42:42.638: INFO: Deleting pod "simpletest.rc-l799m" in namespace "gc-8074"
  May 10 19:42:42.670: INFO: Deleting pod "simpletest.rc-lrzln" in namespace "gc-8074"
  May 10 19:42:42.691: INFO: Deleting pod "simpletest.rc-lwg4q" in namespace "gc-8074"
  May 10 19:42:42.723: INFO: Deleting pod "simpletest.rc-m2zgv" in namespace "gc-8074"
  May 10 19:42:42.743: INFO: Deleting pod "simpletest.rc-mb86z" in namespace "gc-8074"
  May 10 19:42:42.799: INFO: Deleting pod "simpletest.rc-mg68n" in namespace "gc-8074"
  May 10 19:42:42.844: INFO: Deleting pod "simpletest.rc-mqrc6" in namespace "gc-8074"
  May 10 19:42:42.869: INFO: Deleting pod "simpletest.rc-mv84c" in namespace "gc-8074"
  May 10 19:42:42.903: INFO: Deleting pod "simpletest.rc-n2pfp" in namespace "gc-8074"
  May 10 19:42:42.942: INFO: Deleting pod "simpletest.rc-n8x42" in namespace "gc-8074"
  May 10 19:42:42.969: INFO: Deleting pod "simpletest.rc-nxqpg" in namespace "gc-8074"
  May 10 19:42:42.999: INFO: Deleting pod "simpletest.rc-p5tcn" in namespace "gc-8074"
  May 10 19:42:43.028: INFO: Deleting pod "simpletest.rc-phqfc" in namespace "gc-8074"
  May 10 19:42:43.056: INFO: Deleting pod "simpletest.rc-pqkxs" in namespace "gc-8074"
  May 10 19:42:43.116: INFO: Deleting pod "simpletest.rc-pztns" in namespace "gc-8074"
  May 10 19:42:43.164: INFO: Deleting pod "simpletest.rc-q6r4w" in namespace "gc-8074"
  May 10 19:42:43.202: INFO: Deleting pod "simpletest.rc-qgzgm" in namespace "gc-8074"
  May 10 19:42:43.226: INFO: Deleting pod "simpletest.rc-qjtdh" in namespace "gc-8074"
  May 10 19:42:43.276: INFO: Deleting pod "simpletest.rc-qp5pm" in namespace "gc-8074"
  May 10 19:42:43.324: INFO: Deleting pod "simpletest.rc-qpwgx" in namespace "gc-8074"
  May 10 19:42:43.351: INFO: Deleting pod "simpletest.rc-qr47t" in namespace "gc-8074"
  May 10 19:42:43.392: INFO: Deleting pod "simpletest.rc-qrrs7" in namespace "gc-8074"
  May 10 19:42:43.435: INFO: Deleting pod "simpletest.rc-qz6qg" in namespace "gc-8074"
  May 10 19:42:43.541: INFO: Deleting pod "simpletest.rc-r4k5b" in namespace "gc-8074"
  May 10 19:42:43.578: INFO: Deleting pod "simpletest.rc-r54ww" in namespace "gc-8074"
  May 10 19:42:43.610: INFO: Deleting pod "simpletest.rc-rh84s" in namespace "gc-8074"
  May 10 19:42:43.649: INFO: Deleting pod "simpletest.rc-rqljx" in namespace "gc-8074"
  May 10 19:42:43.683: INFO: Deleting pod "simpletest.rc-rvbkf" in namespace "gc-8074"
  May 10 19:42:43.726: INFO: Deleting pod "simpletest.rc-s9lzr" in namespace "gc-8074"
  May 10 19:42:43.765: INFO: Deleting pod "simpletest.rc-sldmc" in namespace "gc-8074"
  May 10 19:42:43.796: INFO: Deleting pod "simpletest.rc-svjnc" in namespace "gc-8074"
  May 10 19:42:43.829: INFO: Deleting pod "simpletest.rc-th7gl" in namespace "gc-8074"
  May 10 19:42:43.859: INFO: Deleting pod "simpletest.rc-tmggq" in namespace "gc-8074"
  May 10 19:42:43.892: INFO: Deleting pod "simpletest.rc-v64bd" in namespace "gc-8074"
  May 10 19:42:43.923: INFO: Deleting pod "simpletest.rc-v8r9z" in namespace "gc-8074"
  May 10 19:42:43.950: INFO: Deleting pod "simpletest.rc-vcznl" in namespace "gc-8074"
  May 10 19:42:43.981: INFO: Deleting pod "simpletest.rc-vq7f4" in namespace "gc-8074"
  May 10 19:42:44.044: INFO: Deleting pod "simpletest.rc-vstm7" in namespace "gc-8074"
  May 10 19:42:44.099: INFO: Deleting pod "simpletest.rc-wrpsb" in namespace "gc-8074"
  May 10 19:42:44.153: INFO: Deleting pod "simpletest.rc-x58rw" in namespace "gc-8074"
  May 10 19:42:44.212: INFO: Deleting pod "simpletest.rc-x9bmg" in namespace "gc-8074"
  May 10 19:42:44.253: INFO: Deleting pod "simpletest.rc-xfkzk" in namespace "gc-8074"
  May 10 19:42:44.281: INFO: Deleting pod "simpletest.rc-xjn9w" in namespace "gc-8074"
  May 10 19:42:44.322: INFO: Deleting pod "simpletest.rc-xkx8s" in namespace "gc-8074"
  May 10 19:42:44.370: INFO: Deleting pod "simpletest.rc-xtcfs" in namespace "gc-8074"
  May 10 19:42:44.406: INFO: Deleting pod "simpletest.rc-z4vdt" in namespace "gc-8074"
  May 10 19:42:44.438: INFO: Deleting pod "simpletest.rc-zckqs" in namespace "gc-8074"
  May 10 19:42:44.468: INFO: Deleting pod "simpletest.rc-zcww7" in namespace "gc-8074"
  May 10 19:42:44.520: INFO: Deleting pod "simpletest.rc-znwgx" in namespace "gc-8074"
  May 10 19:42:44.552: INFO: Deleting pod "simpletest.rc-zpbvt" in namespace "gc-8074"
  May 10 19:42:44.615: INFO: Deleting pod "simpletest.rc-zqbrl" in namespace "gc-8074"
  May 10 19:42:44.670: INFO: Deleting pod "simpletest.rc-zx57d" in namespace "gc-8074"
  May 10 19:42:44.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8074" for this suite. @ 05/10/24 19:42:44.772
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [16.207 seconds]
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:31.725
  May 10 19:42:31.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:42:31.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:31.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:31.753
  STEP: Creating a ResourceQuota with best effort scope @ 05/10/24 19:42:31.757
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:42:31.765
  STEP: Creating a ResourceQuota with not best effort scope @ 05/10/24 19:42:33.77
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:42:33.779
  STEP: Creating a best-effort pod @ 05/10/24 19:42:35.787
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/10/24 19:42:35.807
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/10/24 19:42:37.812
  STEP: Deleting the pod @ 05/10/24 19:42:39.817
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:42:39.837
  STEP: Creating a not best-effort pod @ 05/10/24 19:42:41.843
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/10/24 19:42:41.861
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/10/24 19:42:43.865
  STEP: Deleting the pod @ 05/10/24 19:42:45.87
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:42:45.89
  May 10 19:42:47.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4436" for this suite. @ 05/10/24 19:42:47.921
  << Timeline
------------------------------
SSSSSS
------------------------------
• [6.891 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:44.819
  May 10 19:42:44.819: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:42:44.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:44.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:44.854
  STEP: Setting up server cert @ 05/10/24 19:42:44.898
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:42:45.034
  STEP: Deploying the webhook pod @ 05/10/24 19:42:45.052
  STEP: Wait for the deployment to be ready @ 05/10/24 19:42:45.079
  May 10 19:42:45.092: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 19:42:47.133
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:42:47.237
  May 10 19:42:48.238: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 19:42:48.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/10/24 19:42:48.783
  STEP: Creating a custom resource that should be denied by the webhook @ 05/10/24 19:42:48.814
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/10/24 19:42:50.84
  STEP: Updating the custom resource with disallowed data should be denied @ 05/10/24 19:42:50.85
  STEP: Deleting the custom resource should be denied @ 05/10/24 19:42:50.877
  STEP: Remove the offending key and value from the custom resource data @ 05/10/24 19:42:50.887
  STEP: Deleting the updated custom resource should be successful @ 05/10/24 19:42:50.901
  May 10 19:42:51.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6163" for this suite. @ 05/10/24 19:42:51.68
  STEP: Destroying namespace "webhook-markers-7395" for this suite. @ 05/10/24 19:42:51.699
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [8.777 seconds]
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:47.936
  May 10 19:42:47.936: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename services @ 05/10/24 19:42:47.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:47.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:47.987
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3112 @ 05/10/24 19:42:47.992
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/10/24 19:42:48.025
  STEP: creating service externalsvc in namespace services-3112 @ 05/10/24 19:42:48.025
  STEP: creating replication controller externalsvc in namespace services-3112 @ 05/10/24 19:42:48.048
  I0510 19:42:48.059330      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3112, replica count: 2
  I0510 19:42:51.109945      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/10/24 19:42:51.115
  May 10 19:42:51.151: INFO: Creating new exec pod
  May 10 19:42:53.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-3112 exec execpodvwwrt -- /bin/sh -x -c nslookup nodeport-service.services-3112.svc.cluster.local'
  May 10 19:42:53.411: INFO: stderr: "+ nslookup nodeport-service.services-3112.svc.cluster.local\n"
  May 10 19:42:53.411: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-3112.svc.cluster.local\tcanonical name = externalsvc.services-3112.svc.cluster.local.\nName:\texternalsvc.services-3112.svc.cluster.local\nAddress: 10.98.102.167\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3112, will wait for the garbage collector to delete the pods @ 05/10/24 19:42:53.411
  May 10 19:42:53.504: INFO: Deleting ReplicationController externalsvc took: 36.397741ms
  May 10 19:42:53.605: INFO: Terminating ReplicationController externalsvc pods took: 100.579097ms
  May 10 19:42:56.599: INFO: Cleaning up the NodePort to ExternalName test service
  May 10 19:42:56.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3112" for this suite. @ 05/10/24 19:42:56.682
  << Timeline
------------------------------
SSSS
------------------------------
• [20.312 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:36.588
  May 10 19:42:36.588: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 19:42:36.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:36.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:36.643
  STEP: Creating service test in namespace statefulset-389 @ 05/10/24 19:42:36.647
  STEP: Creating statefulset ss in namespace statefulset-389 @ 05/10/24 19:42:36.668
  May 10 19:42:36.699: INFO: Found 0 stateful pods, waiting for 1
  May 10 19:42:46.700: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/10/24 19:42:46.719
  STEP: Getting /status @ 05/10/24 19:42:46.734
  May 10 19:42:46.743: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/10/24 19:42:46.743
  May 10 19:42:46.761: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/10/24 19:42:46.761
  May 10 19:42:46.764: INFO: Observed &StatefulSet event: ADDED
  May 10 19:42:46.764: INFO: Found Statefulset ss in namespace statefulset-389 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:42:46.764: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/10/24 19:42:46.764
  May 10 19:42:46.764: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 10 19:42:46.776: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/10/24 19:42:46.776
  May 10 19:42:46.788: INFO: Observed &StatefulSet event: ADDED
  May 10 19:42:46.788: INFO: Deleting all statefulset in ns statefulset-389
  May 10 19:42:46.795: INFO: Scaling statefulset ss to 0
  May 10 19:42:56.825: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:42:56.833: INFO: Deleting statefulset ss
  May 10 19:42:56.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-389" for this suite. @ 05/10/24 19:42:56.873
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.173 seconds]
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:56.716
  May 10 19:42:56.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename security-context @ 05/10/24 19:42:56.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:56.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:56.773
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/10/24 19:42:56.777
  STEP: Saw pod success @ 05/10/24 19:43:00.808
  May 10 19:43:00.813: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod security-context-d70a9a08-a8ca-4203-89c3-9af82762aae4 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:43:00.834
  May 10 19:43:00.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-769" for this suite. @ 05/10/24 19:43:00.876
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.207 seconds]
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:56.905
  May 10 19:42:56.905: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:42:56.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:56.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:56.955
  STEP: Creating secret with name secret-test-94c93dee-3002-4417-9dc7-e0e7621aff7b @ 05/10/24 19:42:56.96
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:42:56.969
  STEP: Saw pod success @ 05/10/24 19:43:01.026
  May 10 19:43:01.032: INFO: Trying to get logs from node ip-172-31-180-76.eu-west-3.compute.internal pod pod-secrets-dcbd657a-a7d1-48d5-a9d3-3721349bf67d container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:43:01.056
  May 10 19:43:01.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3374" for this suite. @ 05/10/24 19:43:01.1
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.245 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:01.123
  May 10 19:43:01.123: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename certificates @ 05/10/24 19:43:01.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:01.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:01.168
  STEP: getting /apis @ 05/10/24 19:43:02.048
  STEP: getting /apis/certificates.k8s.io @ 05/10/24 19:43:02.059
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/10/24 19:43:02.06
  STEP: creating @ 05/10/24 19:43:02.061
  STEP: getting @ 05/10/24 19:43:02.11
  STEP: listing @ 05/10/24 19:43:02.117
  STEP: watching @ 05/10/24 19:43:02.126
  May 10 19:43:02.126: INFO: starting watch
  STEP: patching @ 05/10/24 19:43:02.128
  STEP: updating @ 05/10/24 19:43:02.139
  May 10 19:43:02.150: INFO: waiting for watch events with expected annotations
  May 10 19:43:02.150: INFO: saw patched and updated annotations
  STEP: getting /approval @ 05/10/24 19:43:02.15
  STEP: patching /approval @ 05/10/24 19:43:02.159
  STEP: updating /approval @ 05/10/24 19:43:02.168
  STEP: getting /status @ 05/10/24 19:43:02.184
  STEP: patching /status @ 05/10/24 19:43:02.195
  STEP: updating /status @ 05/10/24 19:43:02.21
  STEP: deleting @ 05/10/24 19:43:02.228
  STEP: deleting a collection @ 05/10/24 19:43:02.265
  May 10 19:43:02.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1212" for this suite. @ 05/10/24 19:43:02.338
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.145 seconds]
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:02.378
  May 10 19:43:02.378: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:43:02.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:02.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:02.409
  STEP: apply creating a deployment @ 05/10/24 19:43:02.414
  May 10 19:43:02.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1948" for this suite. @ 05/10/24 19:43:02.505
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.190 seconds]
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:02.532
  May 10 19:43:02.532: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename tables @ 05/10/24 19:43:02.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:02.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:02.615
  May 10 19:43:02.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1762" for this suite. @ 05/10/24 19:43:02.686
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [8.178 seconds]
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:00.897
  May 10 19:43:00.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:43:00.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:00.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:00.945
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/10/24 19:43:00.95
  STEP: When a replicaset with a matching selector is created @ 05/10/24 19:43:07.004
  STEP: Then the orphan pod is adopted @ 05/10/24 19:43:07.01
  STEP: When the matched label of one of its pods change @ 05/10/24 19:43:08.025
  May 10 19:43:08.030: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/10/24 19:43:08.045
  May 10 19:43:09.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9695" for this suite. @ 05/10/24 19:43:09.065
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [24.339 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:02.728
  May 10 19:43:02.728: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:43:02.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:02.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:02.762
  STEP: Setting up data @ 05/10/24 19:43:02.769
  STEP: Creating pod pod-subpath-test-downwardapi-hmqw @ 05/10/24 19:43:02.789
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:43:02.789
  STEP: Saw pod success @ 05/10/24 19:43:26.948
  May 10 19:43:26.954: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-subpath-test-downwardapi-hmqw container test-container-subpath-downwardapi-hmqw: <nil>
  STEP: delete the pod @ 05/10/24 19:43:26.988
  STEP: Deleting pod pod-subpath-test-downwardapi-hmqw @ 05/10/24 19:43:27.029
  May 10 19:43:27.029: INFO: Deleting pod "pod-subpath-test-downwardapi-hmqw" in namespace "subpath-586"
  May 10 19:43:27.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-586" for this suite. @ 05/10/24 19:43:27.047
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [40.993 seconds]
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:42:51.718
  May 10 19:42:51.718: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename services @ 05/10/24 19:42:51.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:42:51.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:42:51.757
  STEP: creating service in namespace services-1341 @ 05/10/24 19:42:51.761
  STEP: creating service affinity-clusterip-transition in namespace services-1341 @ 05/10/24 19:42:51.761
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1341 @ 05/10/24 19:42:51.795
  I0510 19:42:51.809144      24 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-1341, replica count: 3
  I0510 19:42:54.859671      24 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:42:54.883: INFO: Creating new exec pod
  May 10 19:42:57.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1341 exec execpod-affinityvrrt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  May 10 19:42:58.079: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  May 10 19:42:58.079: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:42:58.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1341 exec execpod-affinityvrrt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.38.240 80'
  May 10 19:42:58.221: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.38.240 80\nConnection to 10.110.38.240 80 port [tcp/http] succeeded!\n"
  May 10 19:42:58.221: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:42:58.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1341 exec execpod-affinityvrrt4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.38.240:80/ ; done'
  May 10 19:42:58.503: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n"
  May 10 19:42:58.503: INFO: stdout: "\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-2r9fm"
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:42:58.503: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:43:28.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1341 exec execpod-affinityvrrt4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.38.240:80/ ; done'
  May 10 19:43:28.783: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n"
  May 10 19:43:28.783: INFO: stdout: "\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-2r9fm\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-phltd\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-2r9fm"
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-phltd
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:28.783: INFO: Received response from host: affinity-clusterip-transition-2r9fm
  May 10 19:43:28.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1341 exec execpod-affinityvrrt4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.38.240:80/ ; done'
  May 10 19:43:29.084: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.38.240:80/\n"
  May 10 19:43:29.085: INFO: stdout: "\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw\naffinity-clusterip-transition-x6kdw"
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Received response from host: affinity-clusterip-transition-x6kdw
  May 10 19:43:29.085: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1341, will wait for the garbage collector to delete the pods @ 05/10/24 19:43:29.111
  May 10 19:43:29.185: INFO: Deleting ReplicationController affinity-clusterip-transition took: 13.59071ms
  May 10 19:43:29.285: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.482109ms
  May 10 19:43:32.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1341" for this suite. @ 05/10/24 19:43:32.693
  << Timeline
------------------------------
SSS
------------------------------
• [27.527 seconds]
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:09.082
  May 10 19:43:09.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename services @ 05/10/24 19:43:09.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:09.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:09.122
  STEP: creating service multiprotocol-test in namespace services-835 @ 05/10/24 19:43:09.127
  STEP: creating pod pod1 in namespace services-835 @ 05/10/24 19:43:09.148
  STEP: Creating pod pod1 in namespace services-835 @ 05/10/24 19:43:09.148
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-835 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/10/24 19:43:11.214
  May 10 19:43:11.236: INFO: successfully validated that service multiprotocol-test in namespace services-835 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/10/24 19:43:11.236
  May 10 19:43:11.236: INFO: Creating new exec pod
  May 10 19:43:13.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80'
  May 10 19:43:13.408: INFO: stderr: "+ + echo hostNamenc\n -v -t -w 2 10.96.216.185 80\nConnection to 10.96.216.185 80 port [tcp/http] succeeded!\n"
  May 10 19:43:13.408: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:43:13.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.216.185 80'
  May 10 19:43:17.580: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.216.185 80\nConnection to 10.96.216.185 80 port [udp/*] succeeded!\n"
  May 10 19:43:17.580: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/10/24 19:43:17.58
  May 10 19:43:17.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80'
  May 10 19:43:17.735: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.216.185 80\nConnection to 10.96.216.185 80 port [tcp/http] succeeded!\n"
  May 10 19:43:17.735: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:43:17.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.216.185 80'
  May 10 19:43:21.871: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.216.185 80\nConnection to 10.96.216.185 80 port [udp/*] succeeded!\n"
  May 10 19:43:21.871: INFO: stdout: ""
  May 10 19:43:21.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.216.185 80'
  May 10 19:43:26.003: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.216.185 80\nConnection to 10.96.216.185 80 port [udp/*] succeeded!\n"
  May 10 19:43:26.003: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/10/24 19:43:26.003
  May 10 19:43:26.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.216.185 80'
  May 10 19:43:30.173: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.216.185 80\nConnection to 10.96.216.185 80 port [udp/*] succeeded!\n"
  May 10 19:43:30.173: INFO: stdout: "pod1"
  May 10 19:43:30.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80'
  May 10 19:43:32.313: INFO: rc: 1
  May 10 19:43:32.313: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.216.185 80
  nc: connect to 10.96.216.185 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 10 19:43:32.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80'
  May 10 19:43:34.455: INFO: rc: 1
  May 10 19:43:34.455: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.216.185 80
  nc: connect to 10.96.216.185 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 10 19:43:34.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80'
  May 10 19:43:36.589: INFO: rc: 1
  May 10 19:43:36.589: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-835 exec execpod82jrz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.216.185 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.216.185 80
  nc: connect to 10.96.216.185 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 10 19:43:36.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-835" for this suite. @ 05/10/24 19:43:36.598
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.639 seconds]
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:32.713
  May 10 19:43:32.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 19:43:32.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:32.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:32.831
  STEP: reading a file in the container @ 05/10/24 19:43:36.879
  May 10 19:43:36.879: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6826 pod-service-account-673032e7-51ff-4476-ba29-d20730d72bda -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/10/24 19:43:37.021
  May 10 19:43:37.021: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6826 pod-service-account-673032e7-51ff-4476-ba29-d20730d72bda -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/10/24 19:43:37.171
  May 10 19:43:37.171: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6826 pod-service-account-673032e7-51ff-4476-ba29-d20730d72bda -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  May 10 19:43:37.320: INFO: Got root ca configmap in namespace "svcaccounts-6826"
  May 10 19:43:37.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6826" for this suite. @ 05/10/24 19:43:37.335
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.265 seconds]
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:37.358
  May 10 19:43:37.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/10/24 19:43:37.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:37.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:37.393
  STEP: creating a target pod @ 05/10/24 19:43:37.398
  STEP: adding an ephemeral container @ 05/10/24 19:43:39.45
  STEP: checking pod container endpoints @ 05/10/24 19:43:41.48
  May 10 19:43:41.480: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5196 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:43:41.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:43:41.481: INFO: ExecWithOptions: Clientset creation
  May 10 19:43:41.481: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-5196/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 10 19:43:41.582: INFO: Exec stderr: ""
  May 10 19:43:41.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5196" for this suite. @ 05/10/24 19:43:41.611
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.346 seconds]
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:41.627
  May 10 19:43:41.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:43:41.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:41.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:41.743
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:43:41.747
  STEP: Saw pod success @ 05/10/24 19:43:45.802
  May 10 19:43:45.813: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod downwardapi-volume-8979dc37-ed7f-4a5f-b8aa-32f0495ca37e container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:43:45.853
  May 10 19:43:45.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5484" for this suite. @ 05/10/24 19:43:45.948
  << Timeline
------------------------------
• [4.164 seconds]
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:45.974
  May 10 19:43:45.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:43:45.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:46.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:46.008
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/10/24 19:43:46.012
  STEP: Saw pod success @ 05/10/24 19:43:50.058
  May 10 19:43:50.068: INFO: Trying to get logs from node ip-172-31-180-76.eu-west-3.compute.internal pod pod-f60452a3-0084-4ae8-af9b-7232f1f14f73 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:43:50.093
  May 10 19:43:50.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2562" for this suite. @ 05/10/24 19:43:50.125
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [16.891 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:36.621
  May 10 19:43:36.621: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:43:36.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:36.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:36.666
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/10/24 19:43:36.671
  May 10 19:43:36.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/10/24 19:43:44.229
  May 10 19:43:44.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  May 10 19:43:46.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  May 10 19:43:53.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3963" for this suite. @ 05/10/24 19:43:53.501
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.215 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:50.143
  May 10 19:43:50.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:43:50.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:50.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:50.208
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/10/24 19:43:50.212
  STEP: Saw pod success @ 05/10/24 19:43:54.254
  May 10 19:43:54.262: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-7d979615-104c-4c12-8abc-8ed1091e402b container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:43:54.294
  May 10 19:43:54.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3867" for this suite. @ 05/10/24 19:43:54.346
  << Timeline
------------------------------
SSSS
------------------------------
• [6.222 seconds]
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:53.536
  May 10 19:43:53.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:43:53.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:53.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:53.592
  STEP: creating a Deployment @ 05/10/24 19:43:53.602
  May 10 19:43:53.602: INFO: Creating simple deployment test-deployment-psc4p
  May 10 19:43:53.619: INFO: deployment "test-deployment-psc4p" doesn't have the required revision set
  May 10 19:43:55.644: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-psc4p-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:43:57.651: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-psc4p-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 05/10/24 19:43:59.654
  May 10 19:43:59.661: INFO: Deployment test-deployment-psc4p has Conditions: [{Available True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-psc4p-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/10/24 19:43:59.661
  May 10 19:43:59.678: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 43, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 43, 53, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-psc4p-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/10/24 19:43:59.678
  May 10 19:43:59.681: INFO: Observed &Deployment event: ADDED
  May 10 19:43:59.681: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-psc4p-5d576bd769"}
  May 10 19:43:59.681: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.684: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-psc4p-5d576bd769"}
  May 10 19:43:59.684: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:43:59.684: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.684: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:43:59.684: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-psc4p-5d576bd769" is progressing.}
  May 10 19:43:59.684: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.685: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:43:59.685: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-psc4p-5d576bd769" has successfully progressed.}
  May 10 19:43:59.685: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.685: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:43:59.685: INFO: Observed Deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-psc4p-5d576bd769" has successfully progressed.}
  May 10 19:43:59.685: INFO: Found Deployment test-deployment-psc4p in namespace deployment-6126 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:43:59.685: INFO: Deployment test-deployment-psc4p has an updated status
  STEP: patching the Statefulset Status @ 05/10/24 19:43:59.685
  May 10 19:43:59.685: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 10 19:43:59.703: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/10/24 19:43:59.703
  May 10 19:43:59.706: INFO: Observed &Deployment event: ADDED
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-psc4p-5d576bd769"}
  May 10 19:43:59.706: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-psc4p-5d576bd769"}
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:43:59.706: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:53 +0000 UTC 2024-05-10 19:43:53 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-psc4p-5d576bd769" is progressing.}
  May 10 19:43:59.706: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-psc4p-5d576bd769" has successfully progressed.}
  May 10 19:43:59.706: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 19:43:58 +0000 UTC 2024-05-10 19:43:53 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-psc4p-5d576bd769" has successfully progressed.}
  May 10 19:43:59.706: INFO: Observed deployment test-deployment-psc4p in namespace deployment-6126 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:43:59.706: INFO: Observed &Deployment event: MODIFIED
  May 10 19:43:59.706: INFO: Found deployment test-deployment-psc4p in namespace deployment-6126 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  May 10 19:43:59.706: INFO: Deployment test-deployment-psc4p has a patched status
  May 10 19:43:59.714: INFO: Deployment "test-deployment-psc4p":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-psc4p",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c3cda01-04e1-443e-af75-99d599af8e24",
      ResourceVersion: (string) (len=5) "16502",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-psc4p-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 19:43:59.719: INFO: New ReplicaSet "test-deployment-psc4p-5d576bd769" of Deployment "test-deployment-psc4p":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-psc4p-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4bd9338-d359-4278-920d-03ad9e44da34",
      ResourceVersion: (string) (len=5) "16449",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-psc4p",
          UID: (types.UID) (len=36) "0c3cda01-04e1-443e-af75-99d599af8e24",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 63 33  |k:{\"uid\":\"0c3|
              00000120  63 64 61 30 31 2d 30 34  65 31 2d 34 34 33 65 2d  |cda01-04e1-443e-|
              00000130  61 66 37 35 2d 39 39 64  35 39 39 61 66 38 65 32  |af75-99d599af8e2|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:43:59.730: INFO: Pod "test-deployment-psc4p-5d576bd769-7fgqv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-psc4p-5d576bd769-7fgqv",
      GenerateName: (string) (len=33) "test-deployment-psc4p-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "084418ab-4f23-4dc3-b4b8-f4aece0dbd19",
      ResourceVersion: (string) (len=5) "16448",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dbee76fa4bfeca6884148d8919bc7d0563dfd67365562c65e27e88005decb1a5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-psc4p-5d576bd769",
          UID: (types.UID) (len=36) "e4bd9338-d359-4278-920d-03ad9e44da34",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 34 62 64 39 33 33  38 2d 64 33 35 39 2d 34  |"e4bd9338-d359-4|
              000000a0  32 37 38 2d 39 32 30 64  2d 30 33 61 64 39 65 34  |278-920d-03ad9e4|
              000000b0  34 64 61 33 34 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |4da34\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 38 2e 32  35 5c 22 7d 22 3a 7b 22  |.244.8.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zlmf6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zlmf6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) (len=11) "10.244.8.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967037,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e39407ce8899b5348203c253ff775141834ad4e10626a294d6d4a4a5f36e7cdc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:43:59.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6126" for this suite. @ 05/10/24 19:43:59.737
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.016 seconds]
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:54.363
  May 10 19:43:54.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:43:54.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:54.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:54.405
  STEP: creating a Deployment @ 05/10/24 19:43:54.415
  STEP: waiting for Deployment to be created @ 05/10/24 19:43:54.423
  STEP: waiting for all Replicas to be Ready @ 05/10/24 19:43:54.425
  May 10 19:43:54.426: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:54.426: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:54.444: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:54.444: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:54.482: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:54.482: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:54.543: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:54.543: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 10 19:43:55.587: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 10 19:43:55.587: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 10 19:43:56.092: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/10/24 19:43:56.092
  May 10 19:43:56.105: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/10/24 19:43:56.105
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 0
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.107: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.122: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.122: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.177: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.177: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:56.192: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:43:56.192: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:43:56.219: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:43:56.219: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:43:57.676: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:57.676: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:43:57.730: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  STEP: listing Deployments @ 05/10/24 19:43:57.73
  May 10 19:43:57.737: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/10/24 19:43:57.737
  May 10 19:43:57.764: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/10/24 19:43:57.764
  May 10 19:43:57.773: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:57.822: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:57.885: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:57.984: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:57.984: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:59.167: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:59.650: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:59.754: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:43:59.787: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 10 19:44:01.155: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/10/24 19:44:01.223
  STEP: fetching the DeploymentStatus @ 05/10/24 19:44:01.242
  May 10 19:44:01.251: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 1
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 3
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 2
  May 10 19:44:01.252: INFO: observed Deployment test-deployment in namespace deployment-5137 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/10/24 19:44:01.252
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.276: INFO: observed event type MODIFIED
  May 10 19:44:01.284: INFO: Log out all the ReplicaSets if there is no deployment created
  May 10 19:44:01.290: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5137",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60bddc0c-0d16-4112-a1d3-bce065edd890",
      ResourceVersion: (string) (len=5) "16542",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8463f847-291c-49df-82fc-cb255de448ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 36 33  66 38 34 37 2d 32 39 31  |":\"8463f847-291|
              00000130  63 2d 34 39 64 66 2d 38  32 66 63 2d 63 62 32 35  |c-49df-82fc-cb25|
              00000140  35 64 65 34 34 38 65 65  5c 22 7d 22 3a 7b 7d 7d  |5de448ee\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 10 19:44:01.301: INFO: pod: "test-deployment-64fd565c98-bl27h":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-bl27h",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5137",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd966041-f2f5-41a0-a184-e5da4f7c9648",
      ResourceVersion: (string) (len=5) "16490",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967037,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967041,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fafedc00b51bb8e83db25097abe603e8be1bddb3cedfeda33baa01543e2c40e7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "60bddc0c-0d16-4112-a1d3-bce065edd890",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 30 62 64 64 63 30 63  |uid\":\"60bddc0c|
              000000a0  2d 30 64 31 36 2d 34 31  31 32 2d 61 31 64 33 2d  |-0d16-4112-a1d3-|
              000000b0  62 63 65 30 36 35 65 64  64 38 39 30 5c 22 7d 22  |bce065edd890\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 35 2e 32  38 5c 22 7d 22 3a 7b 22  |.244.5.28\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ldvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ldvb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) (len=11) "10.244.5.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967037,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967038,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://e14ad8d164f46eb392127fbf4e5ec819ad4f687b257061573cc9759c7c02a746",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 19:44:01.301: INFO: pod: "test-deployment-64fd565c98-xg7rf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-xg7rf",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5137",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "896e50c3-ff50-4a6d-8ab5-b57997035093",
      ResourceVersion: (string) (len=5) "16538",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967043,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "caacaa84c52e478d6cf86913133b4d1b59530ef68504b7ee9d7f7ae65f30475b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "60bddc0c-0d16-4112-a1d3-bce065edd890",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 30 62 64 64 63 30 63  |uid\":\"60bddc0c|
              000000a0  2d 30 64 31 36 2d 34 31  31 32 2d 61 31 64 33 2d  |-0d16-4112-a1d3-|
              000000b0  62 63 65 30 36 35 65 64  64 38 39 30 5c 22 7d 22  |bce065edd890\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 32  38 5c 22 7d 22 3a 7b 22  |.244.4.28\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cl8v4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cl8v4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-18.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.18"
        }
      },
      PodIP: (string) (len=11) "10.244.4.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967036,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://4fc6f97743a1cb19c860a3d8b245b2873e30d18b32e8a3b50d9b7f561409d898",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 19:44:01.301: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5137",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dde11cbd-4d85-4042-941d-b30a57823c45",
      ResourceVersion: (string) (len=5) "16534",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967037,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8463f847-291c-49df-82fc-cb255de448ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 36 33  66 38 34 37 2d 32 39 31  |":\"8463f847-291|
              00000130  63 2d 34 39 64 66 2d 38  32 66 63 2d 63 62 32 35  |c-49df-82fc-cb25|
              00000140  35 64 65 34 34 38 65 65  5c 22 7d 22 3a 7b 7d 7d  |5de448ee\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 10 19:44:01.309: INFO: pod: "test-deployment-79ff746c4-5n69x":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-5n69x",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5137",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59ae8ae2-c89c-4f10-b4d0-cec7e4259040",
      ResourceVersion: (string) (len=5) "16483",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967037,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.28/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c74c5c85fb6b1127711207fecbba7e9ae52572f63bb1cfd96fcff5f072f7ec0b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "dde11cbd-4d85-4042-941d-b30a57823c45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 64 65 31 31 63 62 64  |uid\":\"dde11cbd|
              000000a0  2d 34 64 38 35 2d 34 30  34 32 2d 39 34 31 64 2d  |-4d85-4042-941d-|
              000000b0  62 33 30 61 35 37 38 32  33 63 34 35 5c 22 7d 22  |b30a57823c45\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 33 2e 32  38 5c 22 7d 22 3a 7b 22  |.244.3.28\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d4h7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d4h7p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.181.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.181.94"
        }
      },
      PodIP: (string) (len=11) "10.244.3.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967037,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967038,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://88b81a4a02ceca8e42da391b12fa9761fa51fcf5257fe195d9bf8158c67d486a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 19:44:01.309: INFO: pod: "test-deployment-79ff746c4-wl2xc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-wl2xc",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5137",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c99bf76-547a-4edf-8e53-94ebbce45583",
      ResourceVersion: (string) (len=5) "16533",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.29/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0534c4ca7ec64073c5384152a7e9e57de222350cb3e8a70686ac3f00cdffe6c4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "dde11cbd-4d85-4042-941d-b30a57823c45",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 64 65 31 31 63 62 64  |uid\":\"dde11cbd|
              000000a0  2d 34 64 38 35 2d 34 30  34 32 2d 39 34 31 64 2d  |-4d85-4042-941d-|
              000000b0  62 33 30 61 35 37 38 32  33 63 34 35 5c 22 7d 22  |b30a57823c45\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967040,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 35 2e 32  39 5c 22 7d 22 3a 7b 22  |.244.5.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-njwx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-njwx8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967041,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967039,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) (len=11) "10.244.5.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967039,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967040,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4b784440c6b7a9ec58d0c23274966dc9c7b6f332351e7a20d4ef321b4ceffd3c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 10 19:44:01.309: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5137",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82b5e3c8-6800-4264-9285-2f1470846eba",
      ResourceVersion: (string) (len=5) "16417",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8463f847-291c-49df-82fc-cb255de448ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 36 33  66 38 34 37 2d 32 39 31  |":\"8463f847-291|
              00000130  63 2d 34 39 64 66 2d 38  32 66 63 2d 63 62 32 35  |c-49df-82fc-cb25|
              00000140  35 64 65 34 34 38 65 65  5c 22 7d 22 3a 7b 7d 7d  |5de448ee\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967037,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 10 19:44:01.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5137" for this suite. @ 05/10/24 19:44:01.338
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [2.294 seconds]
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:59.772
  May 10 19:43:59.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 19:43:59.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:59.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:59.831
  May 10 19:44:01.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-203" for this suite. @ 05/10/24 19:44:02.035
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.816 seconds]
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:01.389
  May 10 19:44:01.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename services @ 05/10/24 19:44:01.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:01.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:01.432
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3744 @ 05/10/24 19:44:01.442
  STEP: changing the ExternalName service to type=ClusterIP @ 05/10/24 19:44:01.459
  STEP: creating replication controller externalname-service in namespace services-3744 @ 05/10/24 19:44:01.527
  I0510 19:44:01.550289      24 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3744, replica count: 2
  I0510 19:44:04.601937      24 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:44:04.601: INFO: Creating new exec pod
  May 10 19:44:07.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-3744 exec execpodv9q58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 10 19:44:07.949: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 10 19:44:07.949: INFO: stdout: "externalname-service-ksf8b"
  May 10 19:44:07.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-3744 exec execpodv9q58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.21.92 80'
  May 10 19:44:08.109: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.21.92 80\nConnection to 10.110.21.92 80 port [tcp/http] succeeded!\n"
  May 10 19:44:08.109: INFO: stdout: "externalname-service-ksf8b"
  May 10 19:44:08.109: INFO: Cleaning up the ExternalName to ClusterIP test service
  May 10 19:44:08.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3744" for this suite. @ 05/10/24 19:44:08.177
  << Timeline
------------------------------
S
------------------------------
• [52.441 seconds]
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:43:27.087
  May 10 19:43:27.087: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:43:27.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:43:27.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:43:27.137
  STEP: Creating pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291 @ 05/10/24 19:43:27.14
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:43:29.171
  May 10 19:43:29.178: INFO: Initial restart count of pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 is 0
  May 10 19:43:29.185: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:31.193: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:33.199: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:35.207: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:37.216: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:39.236: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:41.249: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:43.263: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:45.268: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:47.278: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:49.285: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:51.292: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:53.301: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:55.310: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:57.316: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:43:59.324: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:01.364: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:03.371: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:05.379: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:07.393: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:09.407: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:11.413: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:13.424: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:15.433: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:17.439: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:19.458: INFO: Get pod busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 in namespace container-probe-4291
  May 10 19:44:19.458: INFO: Restart count of pod container-probe-4291/busybox-bab3a1ca-eff6-40fd-9e82-aebce5c3a2d4 is now 1 (50.279942013s elapsed)
  STEP: deleting the pod @ 05/10/24 19:44:19.459
  May 10 19:44:19.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4291" for this suite. @ 05/10/24 19:44:19.515
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.082 seconds]
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:19.54
  May 10 19:44:19.540: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 19:44:19.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:19.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:19.568
  STEP: Create a pod template @ 05/10/24 19:44:19.571
  STEP: Replace a pod template @ 05/10/24 19:44:19.578
  May 10 19:44:19.590: INFO: Found updated podtemplate annotation: "true"

  May 10 19:44:19.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3259" for this suite. @ 05/10/24 19:44:19.6
  << Timeline
------------------------------
SSSS
------------------------------
• [11.501 seconds]
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:08.207
  May 10 19:44:08.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename services @ 05/10/24 19:44:08.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:08.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:08.278
  STEP: creating service endpoint-test2 in namespace services-4030 @ 05/10/24 19:44:08.292
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4030 to expose endpoints map[] @ 05/10/24 19:44:08.319
  May 10 19:44:08.334: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  May 10 19:44:09.348: INFO: successfully validated that service endpoint-test2 in namespace services-4030 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4030 @ 05/10/24 19:44:09.348
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4030 to expose endpoints map[pod1:[80]] @ 05/10/24 19:44:11.401
  May 10 19:44:11.417: INFO: successfully validated that service endpoint-test2 in namespace services-4030 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/10/24 19:44:11.418
  May 10 19:44:11.418: INFO: Creating new exec pod
  May 10 19:44:14.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-4030 exec execpodlnwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 10 19:44:14.585: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 10 19:44:14.585: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:44:14.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-4030 exec execpodlnwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.239.87 80'
  May 10 19:44:14.734: INFO: stderr: "+ nc -v -t -w 2 10.102.239.87 80\n+ echo hostName\nConnection to 10.102.239.87 80 port [tcp/http] succeeded!\n"
  May 10 19:44:14.734: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4030 @ 05/10/24 19:44:14.734
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4030 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/10/24 19:44:16.771
  May 10 19:44:16.804: INFO: successfully validated that service endpoint-test2 in namespace services-4030 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/10/24 19:44:16.804
  May 10 19:44:17.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-4030 exec execpodlnwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 10 19:44:17.980: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 10 19:44:17.980: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:44:17.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-4030 exec execpodlnwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.239.87 80'
  May 10 19:44:18.144: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.239.87 80\nConnection to 10.102.239.87 80 port [tcp/http] succeeded!\n"
  May 10 19:44:18.144: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4030 @ 05/10/24 19:44:18.144
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4030 to expose endpoints map[pod2:[80]] @ 05/10/24 19:44:18.215
  May 10 19:44:18.256: INFO: successfully validated that service endpoint-test2 in namespace services-4030 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/10/24 19:44:18.256
  May 10 19:44:19.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-4030 exec execpodlnwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 10 19:44:19.423: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 10 19:44:19.423: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:44:19.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-4030 exec execpodlnwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.239.87 80'
  May 10 19:44:19.585: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.239.87 80\nConnection to 10.102.239.87 80 port [tcp/http] succeeded!\n"
  May 10 19:44:19.585: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4030 @ 05/10/24 19:44:19.585
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4030 to expose endpoints map[] @ 05/10/24 19:44:19.608
  May 10 19:44:19.643: INFO: successfully validated that service endpoint-test2 in namespace services-4030 exposes endpoints map[]
  May 10 19:44:19.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4030" for this suite. @ 05/10/24 19:44:19.693
  << Timeline
------------------------------
SSSS
------------------------------
• [2.188 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:19.711
  May 10 19:44:19.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:44:19.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:19.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:19.783
  STEP: Creating configMap with name projected-configmap-test-volume-cbc87394-3b5d-4469-97f9-21271fdf8c0e @ 05/10/24 19:44:19.787
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:44:19.794
  STEP: Saw pod success @ 05/10/24 19:44:21.825
  May 10 19:44:21.831: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-projected-configmaps-9088f4aa-df6c-4245-9329-1591c3c7f52f container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:44:21.842
  May 10 19:44:21.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6113" for this suite. @ 05/10/24 19:44:21.887
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [2.094 seconds]
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:21.904
  May 10 19:44:21.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:44:21.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:21.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:21.938
  STEP: Create a pod @ 05/10/24 19:44:21.942
  STEP: patching /status @ 05/10/24 19:44:23.966
  May 10 19:44:23.979: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  May 10 19:44:23.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7808" for this suite. @ 05/10/24 19:44:23.989
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.168 seconds]
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:24.002
  May 10 19:44:24.002: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:44:24.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:24.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:24.045
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:44:24.054
  STEP: Saw pod success @ 05/10/24 19:44:28.094
  May 10 19:44:28.101: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod downwardapi-volume-0ed9fd62-e61c-4135-a556-a5646dc54646 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:44:28.117
  May 10 19:44:28.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3291" for this suite. @ 05/10/24 19:44:28.157
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [0.120 seconds]
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:28.174
  May 10 19:44:28.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:44:28.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:28.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:28.216
  STEP: starting the proxy server @ 05/10/24 19:44:28.22
  May 10 19:44:28.221: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-277 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/10/24 19:44:28.262
  May 10 19:44:28.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-277" for this suite. @ 05/10/24 19:44:28.283
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [27.410 seconds]
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:02.075
  May 10 19:44:02.075: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename aggregator @ 05/10/24 19:44:02.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:02.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:02.167
  May 10 19:44:02.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Registering the sample API server. @ 05/10/24 19:44:02.173
  May 10 19:44:02.551: INFO: Found ClusterRoles; assuming RBAC is enabled.
  May 10 19:44:02.603: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  May 10 19:44:04.778: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:06.788: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:08.785: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:10.785: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:12.783: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:14.791: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:16.784: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:18.785: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:20.785: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:22.785: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:24.784: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:26.784: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 19:44:29.023: INFO: Waited 227.046934ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/10/24 19:44:29.09
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/10/24 19:44:29.113
  STEP: List APIServices @ 05/10/24 19:44:29.127
  May 10 19:44:29.133: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/10/24 19:44:29.133
  May 10 19:44:29.154: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/10/24 19:44:29.155
  May 10 19:44:29.179: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 10, 19, 44, 28, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/10/24 19:44:29.179
  May 10 19:44:29.184: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-10 19:44:28 +0000 UTC Passed all checks passed}
  May 10 19:44:29.184: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:44:29.184: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/10/24 19:44:29.184
  May 10 19:44:29.200: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-57343529" @ 05/10/24 19:44:29.2
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/10/24 19:44:29.229
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/10/24 19:44:29.24
  STEP: Patch APIService Status @ 05/10/24 19:44:29.245
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/10/24 19:44:29.257
  May 10 19:44:29.262: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-10 19:44:28 +0000 UTC Passed all checks passed}
  May 10 19:44:29.262: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:44:29.262: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  May 10 19:44:29.262: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/10/24 19:44:29.262
  STEP: Confirm that the generated APIService has been deleted @ 05/10/24 19:44:29.276
  May 10 19:44:29.276: INFO: Requesting list of APIServices to confirm quantity
  May 10 19:44:29.282: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  May 10 19:44:29.282: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  May 10 19:44:29.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-305" for this suite. @ 05/10/24 19:44:29.474
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [13.486 seconds]
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:19.624
  May 10 19:44:19.624: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename hostport @ 05/10/24 19:44:19.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:19.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:19.66
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/10/24 19:44:19.68
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.181.233 on the node which pod1 resides and expect scheduled @ 05/10/24 19:44:21.719
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.181.233 but use UDP protocol on the node which pod2 resides @ 05/10/24 19:44:23.748
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/10/24 19:44:27.821
  May 10 19:44:27.821: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.181.233 http://127.0.0.1:54323/hostname] Namespace:hostport-5981 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:44:27.821: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:44:27.821: INFO: ExecWithOptions: Clientset creation
  May 10 19:44:27.821: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-5981/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.181.233+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.181.233, port: 54323 @ 05/10/24 19:44:27.909
  May 10 19:44:27.909: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.181.233:54323/hostname] Namespace:hostport-5981 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:44:27.909: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:44:27.910: INFO: ExecWithOptions: Clientset creation
  May 10 19:44:27.910: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-5981/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.181.233%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.181.233, port: 54323 UDP @ 05/10/24 19:44:27.981
  May 10 19:44:27.981: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.181.233 54323] Namespace:hostport-5981 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:44:27.981: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:44:27.981: INFO: ExecWithOptions: Clientset creation
  May 10 19:44:27.981: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-5981/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.181.233+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  May 10 19:44:33.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5981" for this suite. @ 05/10/24 19:44:33.098
  << Timeline
------------------------------
• [4.165 seconds]
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:29.496
  May 10 19:44:29.496: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:44:29.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:29.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:29.541
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:44:29.545
  STEP: Saw pod success @ 05/10/24 19:44:33.583
  May 10 19:44:33.590: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod downwardapi-volume-a30e1889-9d93-4ee8-af21-5756eb9086fc container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:44:33.606
  May 10 19:44:33.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4672" for this suite. @ 05/10/24 19:44:33.647
  << Timeline
------------------------------
SSSSSS
------------------------------
• [0.144 seconds]
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:33.665
  May 10 19:44:33.665: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:44:33.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:33.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:33.732
  STEP: validating api versions @ 05/10/24 19:44:33.737
  May 10 19:44:33.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-7245 api-versions'
  May 10 19:44:33.793: INFO: stderr: ""
  May 10 19:44:33.793: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncluster.k8s.io/v1alpha1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\noperatingsystemmanager.k8c.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  May 10 19:44:33.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7245" for this suite. @ 05/10/24 19:44:33.801
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.264 seconds]
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:33.813
  May 10 19:44:33.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 19:44:33.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:33.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:33.873
  May 10 19:44:33.906: INFO: created pod pod-service-account-defaultsa
  May 10 19:44:33.906: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  May 10 19:44:33.914: INFO: created pod pod-service-account-mountsa
  May 10 19:44:33.914: INFO: pod pod-service-account-mountsa service account token volume mount: true
  May 10 19:44:33.926: INFO: created pod pod-service-account-nomountsa
  May 10 19:44:33.926: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  May 10 19:44:33.935: INFO: created pod pod-service-account-defaultsa-mountspec
  May 10 19:44:33.935: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  May 10 19:44:33.949: INFO: created pod pod-service-account-mountsa-mountspec
  May 10 19:44:33.949: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  May 10 19:44:33.966: INFO: created pod pod-service-account-nomountsa-mountspec
  May 10 19:44:33.966: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  May 10 19:44:33.981: INFO: created pod pod-service-account-defaultsa-nomountspec
  May 10 19:44:33.981: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  May 10 19:44:34.019: INFO: created pod pod-service-account-mountsa-nomountspec
  May 10 19:44:34.019: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  May 10 19:44:34.037: INFO: created pod pod-service-account-nomountsa-nomountspec
  May 10 19:44:34.037: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  May 10 19:44:34.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3727" for this suite. @ 05/10/24 19:44:34.06
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.141 seconds]
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:34.083
  May 10 19:44:34.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:44:34.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:34.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:34.119
  STEP: creating secret secrets-323/secret-test-6f31f887-87b5-4dc4-b7b3-0b4a01224348 @ 05/10/24 19:44:34.123
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:44:34.13
  STEP: Saw pod success @ 05/10/24 19:44:38.173
  May 10 19:44:38.177: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-configmaps-10127d0c-4778-48ff-a664-c7acc989331d container env-test: <nil>
  STEP: delete the pod @ 05/10/24 19:44:38.188
  May 10 19:44:38.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-323" for this suite. @ 05/10/24 19:44:38.215
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.078 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:38.242
  May 10 19:44:38.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sysctl @ 05/10/24 19:44:38.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:38.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:38.284
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/10/24 19:44:38.289
  May 10 19:44:38.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6880" for this suite. @ 05/10/24 19:44:38.309
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [12.062 seconds]
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:33.111
  May 10 19:44:33.111: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename services @ 05/10/24 19:44:33.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:33.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:33.144
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1503 @ 05/10/24 19:44:33.153
  STEP: changing the ExternalName service to type=NodePort @ 05/10/24 19:44:33.168
  STEP: creating replication controller externalname-service in namespace services-1503 @ 05/10/24 19:44:33.22
  I0510 19:44:33.233659      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1503, replica count: 2
  I0510 19:44:36.284792      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:44:36.284: INFO: Creating new exec pod
  May 10 19:44:39.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 10 19:44:39.525: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 10 19:44:39.525: INFO: stdout: "externalname-service-pn97q"
  May 10 19:44:39.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.119.228 80'
  May 10 19:44:39.686: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.119.228 80\nConnection to 10.97.119.228 80 port [tcp/http] succeeded!\n"
  May 10 19:44:39.686: INFO: stdout: ""
  May 10 19:44:40.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.119.228 80'
  May 10 19:44:40.689: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.119.228 80\nConnection to 10.97.119.228 80 port [tcp/http] succeeded!\n"
  May 10 19:44:40.689: INFO: stdout: ""
  May 10 19:44:41.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.119.228 80'
  May 10 19:44:41.695: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.119.228 80\nConnection to 10.97.119.228 80 port [tcp/http] succeeded!\n"
  May 10 19:44:41.695: INFO: stdout: ""
  May 10 19:44:42.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.119.228 80'
  May 10 19:44:42.697: INFO: stderr: "+ nc+  -v -t -wecho 2 hostName 10.97.119.228\n 80\nConnection to 10.97.119.228 80 port [tcp/http] succeeded!\n"
  May 10 19:44:42.697: INFO: stdout: ""
  May 10 19:44:43.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.119.228 80'
  May 10 19:44:43.710: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.119.228 80\nConnection to 10.97.119.228 80 port [tcp/http] succeeded!\n"
  May 10 19:44:43.710: INFO: stdout: ""
  May 10 19:44:44.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.119.228 80'
  May 10 19:44:44.725: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.119.228 80\nConnection to 10.97.119.228 80 port [tcp/http] succeeded!\n"
  May 10 19:44:44.725: INFO: stdout: "externalname-service-jqtjc"
  May 10 19:44:44.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.182.18 30970'
  May 10 19:44:44.894: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.182.18 30970\nConnection to 172.31.182.18 30970 port [tcp/*] succeeded!\n"
  May 10 19:44:44.894: INFO: stdout: "externalname-service-pn97q"
  May 10 19:44:44.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-1503 exec execpodtsjnk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.181.94 30970'
  May 10 19:44:45.069: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.181.94 30970\nConnection to 172.31.181.94 30970 port [tcp/*] succeeded!\n"
  May 10 19:44:45.069: INFO: stdout: "externalname-service-pn97q"
  May 10 19:44:45.070: INFO: Cleaning up the ExternalName to NodePort test service
  May 10 19:44:45.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1503" for this suite. @ 05/10/24 19:44:45.159
  << Timeline
------------------------------
SS
------------------------------
• [0.103 seconds]
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:45.175
  May 10 19:44:45.175: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename services @ 05/10/24 19:44:45.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:45.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:45.207
  May 10 19:44:45.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5547" for this suite. @ 05/10/24 19:44:45.247
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [8.073 seconds]
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:38.33
  May 10 19:44:38.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename job @ 05/10/24 19:44:38.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:38.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:38.355
  STEP: Creating Indexed job @ 05/10/24 19:44:38.36
  STEP: Ensuring job reaches completions @ 05/10/24 19:44:38.368
  STEP: Ensuring pods with index for job exist @ 05/10/24 19:44:46.375
  May 10 19:44:46.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5806" for this suite. @ 05/10/24 19:44:46.392
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [8.215 seconds]
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:46.408
  May 10 19:44:46.408: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:44:46.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:46.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:46.437
  STEP: Saw pod success @ 05/10/24 19:44:54.559
  May 10 19:44:54.563: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod client-envvars-a1e73c46-e5cf-4688-bc92-c894a1b2f468 container env3cont: <nil>
  STEP: delete the pod @ 05/10/24 19:44:54.579
  May 10 19:44:54.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1350" for this suite. @ 05/10/24 19:44:54.612
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [12.402 seconds]
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:45.284
  May 10 19:44:45.284: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename deployment @ 05/10/24 19:44:45.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:45.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:45.322
  May 10 19:44:45.324: INFO: Creating deployment "webserver-deployment"
  May 10 19:44:45.337: INFO: Waiting for observed generation 1
  May 10 19:44:47.355: INFO: Waiting for all required pods to come up
  May 10 19:44:47.362: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/10/24 19:44:47.362
  May 10 19:44:53.408: INFO: Waiting for deployment "webserver-deployment" to complete
  May 10 19:44:53.427: INFO: Updating deployment "webserver-deployment" with a non-existent image
  May 10 19:44:53.453: INFO: Updating deployment webserver-deployment
  May 10 19:44:53.453: INFO: Waiting for observed generation 2
  May 10 19:44:55.474: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  May 10 19:44:55.490: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  May 10 19:44:55.505: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 10 19:44:55.522: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  May 10 19:44:55.522: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  May 10 19:44:55.527: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 10 19:44:55.538: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  May 10 19:44:55.538: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  May 10 19:44:55.556: INFO: Updating deployment webserver-deployment
  May 10 19:44:55.556: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  May 10 19:44:55.582: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  May 10 19:44:55.622: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  May 10 19:44:57.634: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "884fc3ec-b509-4c48-9c27-57a5088c48f9",
      ResourceVersion: (string) (len=5) "18272",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 19:44:57.639: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
      ResourceVersion: (string) (len=5) "18111",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "884fc3ec-b509-4c48-9c27-57a5088c48f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 34 66 63 33  65 63 2d 62 35 30 39 2d  |\"884fc3ec-b509-|
              00000120  34 63 34 38 2d 39 63 32  37 2d 35 37 61 35 30 38  |4c48-9c27-57a508|
              00000130  38 63 34 38 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8c48f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:44:57.639: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  May 10 19:44:57.640: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
      ResourceVersion: (string) (len=5) "18271",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "884fc3ec-b509-4c48-9c27-57a5088c48f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 34 66 63 33  65 63 2d 62 35 30 39 2d  |\"884fc3ec-b509-|
              00000120  34 63 34 38 2d 39 63 32  37 2d 35 37 61 35 30 38  |4c48-9c27-57a508|
              00000130  38 63 34 38 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8c48f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 19:44:57.648: INFO: Pod "webserver-deployment-557759b7c7-4r9qh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4r9qh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37f2295b-b622-46f6-a1bd-4d87ea2c01e5",
      ResourceVersion: (string) (len=5) "18242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "756035ef302c57c8cf00cc48ad51e1bc3726fe8c920b607b6f193a7ff46e83f0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 37 2e 33  39 5c 22 7d 22 3a 7b 22  |.244.7.39\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d8wbx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d8wbx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-181-233.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.181.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.31.181.233"
        }
      },
      PodIP: (string) (len=11) "10.244.7.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cd05bd8180d3f978fd4f2c545666fde69b40b4ad8f4d6a238b94dfd90637f90c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.648: INFO: Pod "webserver-deployment-557759b7c7-5x2kd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5x2kd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2ac397d-abce-46b9-a5b3-2837ed6c1add",
      ResourceVersion: (string) (len=5) "18261",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.36/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "14058b399cece9ac89a7e35eb720115f66403d3ef46f82cf69e0975db0b06627",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.36/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 35 2e 33  36 5c 22 7d 22 3a 7b 22  |.244.5.36\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d5frw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d5frw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) (len=11) "10.244.5.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0c398518a98668ac146b8fc23f7cfe11e5dc276eb35d99587a12ab44631ed9a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.649: INFO: Pod "webserver-deployment-557759b7c7-66879" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-66879",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "116e93d9-4715-40d7-a76e-c829924181a1",
      ResourceVersion: (string) (len=5) "18255",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7acf019d7d2ac9a16b8aeb4d0976dd098c2792ff5defd311c1c8f4f031a61a95",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 36 2e 32  36 5c 22 7d 22 3a 7b 22  |.244.6.26\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w2s55",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w2s55",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-90.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.90"
        }
      },
      PodIP: (string) (len=11) "10.244.6.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://93136ac52c52ec52dbfb483e2c3038083d36486a8e0bb92d6b4e9cc8fe8edd08",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.649: INFO: Pod "webserver-deployment-557759b7c7-6jz27" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6jz27",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "242099f0-3e17-47d0-8e32-926a4ac632b2",
      ResourceVersion: (string) (len=5) "17794",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "571e1d0c3e6ca9818cda2fa5f10fa4f28344c98d1a6c8e50396b21ebd246b4a8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.34/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 35 2e 33  34 5c 22 7d 22 3a 7b 22  |.244.5.34\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2hvw2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2hvw2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) (len=11) "10.244.5.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967086,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aba408f9d77773e6c14b7a696fe1ec598fb7b69d5407e7e2ecfa3ff5df4496cb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.649: INFO: Pod "webserver-deployment-557759b7c7-7kjxz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7kjxz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95d522de-e296-43eb-9c34-09364e7c1784",
      ResourceVersion: (string) (len=5) "18239",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d5f1daf69685ffd9f37c2ac851fac33e85736c94bb9fd55fef1014448b3f9bec",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.40/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.40/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 33 2e 34  30 5c 22 7d 22 3a 7b 22  |.244.3.40\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lctvh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lctvh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.181.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.181.94"
        }
      },
      PodIP: (string) (len=11) "10.244.3.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1f4ace665d0f05c4e694713cd79fbd8a464e913163eb3a7050f26b81d75ec18c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.650: INFO: Pod "webserver-deployment-557759b7c7-7mvnm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7mvnm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ee601fd-186b-4aec-b4bb-d53e0515a70d",
      ResourceVersion: (string) (len=5) "18258",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a78df77058a52e3f6aa4531474dfbf3fcbb5296b34f75a92650db6b22d33cc45",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 36 2e 32  34 5c 22 7d 22 3a 7b 22  |.244.6.24\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8gc4t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8gc4t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-90.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.90"
        }
      },
      PodIP: (string) (len=11) "10.244.6.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c3499fb435b93069af56363b18e578b724b6c800765ca19ab44ee7fa46febc06",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.650: INFO: Pod "webserver-deployment-557759b7c7-9s76d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9s76d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbde953c-9cf9-4c7c-845d-96c7e644f39f",
      ResourceVersion: (string) (len=5) "17761",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d5f7cd641cb16de4eb0746cf9f2d756b1bada724c9b2c26a3346375aeb5f9d07",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 38 2e 33  31 5c 22 7d 22 3a 7b 22  |.244.8.31\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7pw5q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7pw5q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) (len=11) "10.244.8.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967086,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4c24ec9ff8e13577c5539c68af87a2c9dcceac796ba0b29b5b02ff9d9fc74941",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.651: INFO: Pod "webserver-deployment-557759b7c7-dkvmg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dkvmg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce2479d3-1743-465b-a4d8-901ac5f92a9f",
      ResourceVersion: (string) (len=5) "18264",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ffe5df2cb265addae7728d27d64133106be968ea04164ece7e6e8c73d0e506c9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.37/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 35 2e 33  37 5c 22 7d 22 3a 7b 22  |.244.5.37\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8892x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8892x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) (len=11) "10.244.5.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7ed787ddeb5ba140f4ea5d23012e6b3cffbc77da98e39f51a89d51a73de1c0cf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.651: INFO: Pod "webserver-deployment-557759b7c7-hcfkt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hcfkt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3ca2099-0745-4742-b7d3-80a1712e8d45",
      ResourceVersion: (string) (len=5) "18270",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "857afadfdef5be157253e8dafe4668d1cea149b5aac38fc8327cb15d80344319",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.32/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.32/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 38 2e 33  32 5c 22 7d 22 3a 7b 22  |.244.8.32\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ccp4s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ccp4s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) (len=11) "10.244.8.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9e40713a347cfbd87c9f0862f7464d6d1e330920bcc32ab2450cc857745d8f44",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.651: INFO: Pod "webserver-deployment-557759b7c7-hvnsr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hvnsr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10efe90c-af8e-4dfe-98e5-5969e590f7e6",
      ResourceVersion: (string) (len=5) "18238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3041177acc6a313a26a9b03986033a360e94610366de7e286272535bd1625c7a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 37 2e 33  38 5c 22 7d 22 3a 7b 22  |.244.7.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wq6qk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wq6qk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-181-233.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.181.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.31.181.233"
        }
      },
      PodIP: (string) (len=11) "10.244.7.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f0dfb2bdca0a4f2fb3f814ed82263f2483bd881b5c1299b8a0c7d0dda255031e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.651: INFO: Pod "webserver-deployment-557759b7c7-k6rxx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k6rxx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebb29c2e-e76f-4964-8f33-bccf33c758cf",
      ResourceVersion: (string) (len=5) "18235",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d0a7efddcbc8cdf0b270c3a7c641611dbbfd69704acbdbfb6f9f7857ead6d21f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 33 2e 33  38 5c 22 7d 22 3a 7b 22  |.244.3.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nfr8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nfr8v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.181.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.181.94"
        }
      },
      PodIP: (string) (len=11) "10.244.3.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://905e867e16cf5446d4314c3550fec3abb4f71e10d22436d8fb0dceb272c15c27",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.652: INFO: Pod "webserver-deployment-557759b7c7-k9h5m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k9h5m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d1540e2-6ebc-4260-a0f2-571354312f36",
      ResourceVersion: (string) (len=5) "18248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.42/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e10c3dffa35060a6ef86a45898a43bcd728b2754677e9d8fb320331601bbee79",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.42/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 34  32 5c 22 7d 22 3a 7b 22  |.244.4.42\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjgxg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjgxg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-18.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.18"
        }
      },
      PodIP: (string) (len=11) "10.244.4.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://137975293fc8273405da660968e92bf88359181c31ad8089b2d5d23d0e22e974",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.653: INFO: Pod "webserver-deployment-557759b7c7-l8jxf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l8jxf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72de6b81-c0bc-4a08-9cb4-22359fe033f1",
      ResourceVersion: (string) (len=5) "17885",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "77a59fb76328c4fc0c53f6dd2ddeb429b5860025ced3d8d115e0255896f0b556",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 37 2e 33  33 5c 22 7d 22 3a 7b 22  |.244.7.33\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djdlj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djdlj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-181-233.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.181.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.31.181.233"
        }
      },
      PodIP: (string) (len=11) "10.244.7.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b094ae3fd0f97483b44d453bd3423489097ce35e10fe019607cab87d008f478c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.653: INFO: Pod "webserver-deployment-557759b7c7-m2sr9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m2sr9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98a439bf-e28e-4c8d-a56a-1adc53461a85",
      ResourceVersion: (string) (len=5) "17755",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3dc142bb0f1ff110b7959246fc9ad69d6278096c139b13ad5be5bf1ce6cc195f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 35 2e 33  33 5c 22 7d 22 3a 7b 22  |.244.5.33\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jwv9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jwv9b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) (len=11) "10.244.5.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967086,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c6d5c0f744c509cc2dc6552c35258bbdc07f3acb325a7db8633306a61ddf4214",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.653: INFO: Pod "webserver-deployment-557759b7c7-n8c5n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n8c5n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6703772e-e533-413d-9cd7-2a8057cbace0",
      ResourceVersion: (string) (len=5) "17782",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.38/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "367034f15fd3ca2929f4fd0b9e337f74c3c23be0642e78665ab757b4288f508a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 33  38 5c 22 7d 22 3a 7b 22  |.244.4.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gclv8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gclv8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-18.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.18"
        }
      },
      PodIP: (string) (len=11) "10.244.4.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967086,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0005777c04980d2377c4cdcb3c89cc315e9e4ca2e3c5d5fb2e32fc8d3302c336",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.653: INFO: Pod "webserver-deployment-557759b7c7-nb76s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nb76s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fddeeb73-49d7-48b1-ad84-2bdff960836f",
      ResourceVersion: (string) (len=5) "18231",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b6162f9e9357fd2948475ed357e19cbe9e1c989e2cc2139e0cebd58fdb8e965d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.37/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 33 2e 33  37 5c 22 7d 22 3a 7b 22  |.244.3.37\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hq5dt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hq5dt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.181.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.181.94"
        }
      },
      PodIP: (string) (len=11) "10.244.3.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a786653c73bc27f2eb3d7e5a04fdba8f5be6a413224db76581da97c68a9ad5ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.654: INFO: Pod "webserver-deployment-557759b7c7-rjhw7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rjhw7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe1096c5-6fc7-414d-9577-11c3e0e2d738",
      ResourceVersion: (string) (len=5) "17887",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "42c989ef46837d4798e9fa6da20cc8ab5112c6f656afeb753e36e5c067b866ef",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.34/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 37 2e 33  34 5c 22 7d 22 3a 7b 22  |.244.7.34\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8tpdl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8tpdl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-181-233.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.181.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.31.181.233"
        }
      },
      PodIP: (string) (len=11) "10.244.7.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://285f9e66b675ee521d868c531b1ed2a26b6795793812165cc968c7aa958006f3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.654: INFO: Pod "webserver-deployment-557759b7c7-swtw2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-swtw2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3eb0b182-371f-402d-b4ad-ce73534314bf",
      ResourceVersion: (string) (len=5) "17819",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ff92ebe5b883877fd563b01dd6726c6b4904bd0275335f408d04a82acb479d8a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967089,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 36 2e 32  32 5c 22 7d 22 3a 7b 22  |.244.6.22\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zgqhc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zgqhc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-90.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967089,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967089,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967089,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.90"
        }
      },
      PodIP: (string) (len=11) "10.244.6.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967089,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f91fbdafdac580b92c24d8dc52474730f8f747d1c0c918bf078df6e398db6c64",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.654: INFO: Pod "webserver-deployment-557759b7c7-twfj4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-twfj4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "371f706c-59ec-4a32-95f7-2c0dc4d6b379",
      ResourceVersion: (string) (len=5) "17785",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "53d66b429ea49e4748b4df8c5222690d2609c041a00c36401a003fbc56c3173b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.37/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 33  37 5c 22 7d 22 3a 7b 22  |.244.4.37\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2td2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2td2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-18.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.18"
        }
      },
      PodIP: (string) (len=11) "10.244.4.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967086,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bffe055c22c8e41b178c5e6012c95fba3648553394dc0b28a7e3a7378c0c4676",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.654: INFO: Pod "webserver-deployment-557759b7c7-v8vmw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-v8vmw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41d761b3-4333-4fc5-89f5-df4a54de00cf",
      ResourceVersion: (string) (len=5) "18267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a0693c74c0ff98f4ad7b4caad10eed30ed93a4b9f0f43ccca1cceccf7804c502",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.34/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1ce730ed-2777-40e8-a4a5-00c01fff5ee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  65 37 33 30 65 64 2d 32  |d\":\"1ce730ed-2|
              00000090  37 37 37 2d 34 30 65 38  2d 61 34 61 35 2d 30 30  |777-40e8-a4a5-00|
              000000a0  63 30 31 66 66 66 35 65  65 33 5c 22 7d 22 3a 7b  |c01fff5ee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 38 2e 33  34 5c 22 7d 22 3a 7b 22  |.244.8.34\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qmd89",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qmd89",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) (len=11) "10.244.8.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850967096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9153921a6fad35923eed3d0b4ad195f935ba9d3ff6ecbd97e85dec146909e3c1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.655: INFO: Pod "webserver-deployment-9b4f5bf69-29xfp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-29xfp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98efac6a-71c9-4dfc-a8ad-2060bbbd63e0",
      ResourceVersion: (string) (len=5) "18171",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.41/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "17525db0aa50bd095043a1056e1cd777c15b96ed564380d1fff7647e7398457f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.41/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2w54t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2w54t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-18.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.18"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.655: INFO: Pod "webserver-deployment-9b4f5bf69-7xkz6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7xkz6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51c47ad1-f900-4c78-822a-1ec27c613c43",
      ResourceVersion: (string) (len=5) "18136",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a07a8258fab478a840af8b2f1be37ee8378aa59e3efc0b51385e745a48238355",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.36/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.36/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 37 2e 33 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.7.36\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9hp25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9hp25",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-181-233.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.181.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.31.181.233"
        }
      },
      PodIP: (string) (len=11) "10.244.7.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.7.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.655: INFO: Pod "webserver-deployment-9b4f5bf69-9xppb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9xppb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4cd1ce9-f1ba-4f0c-97a0-2280b90de44d",
      ResourceVersion: (string) (len=5) "18115",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2a8937019d39c3c8933c9473a7219924b7a979a5d9878fbc6e1f0a511a833a50",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.4.40/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.4.40/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 34 2e 34 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.4.40\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvtqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvtqm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-18.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.18"
        }
      },
      PodIP: (string) (len=11) "10.244.4.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.4.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.656: INFO: Pod "webserver-deployment-9b4f5bf69-cjf28" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cjf28",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3559a4c6-9b88-451f-b024-93904673ef99",
      ResourceVersion: (string) (len=5) "18169",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.35/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "918f730e07538c4d0f32b028519e2881be7d400d7424c8bea5e6b0e1952041a9"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 35 2e 33 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.5.35\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tfvqn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tfvqn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) (len=11) "10.244.5.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.5.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.656: INFO: Pod "webserver-deployment-9b4f5bf69-d46v8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d46v8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67785976-a037-482b-b12e-88cfa8b1ad23",
      ResourceVersion: (string) (len=5) "18093",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "babd0c852e46c0e9ab1fc3fe8192c07bdb2dcedd048fc1448e872446d228f22d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.35/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 33 2e 33 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.3.35\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5bk5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5bk5v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.181.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.181.94"
        }
      },
      PodIP: (string) (len=11) "10.244.3.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.3.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.656: INFO: Pod "webserver-deployment-9b4f5bf69-g4qjx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g4qjx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7493f2b9-ff87-4cbe-8385-443f0ad37ed8",
      ResourceVersion: (string) (len=5) "18144",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6040dacdca37b3d0755e75513acdc484cff6c537613fc5da76221748d97bf353",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.7.37/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.7.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kjfjq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kjfjq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-181-233.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.181.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.31.181.233"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.658: INFO: Pod "webserver-deployment-9b4f5bf69-hxnkd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hxnkd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2edc099-ea92-4e30-9d64-614610125050",
      ResourceVersion: (string) (len=5) "18159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cbe85bc343c98f65e34107e25754afd2afefd1cf661076ddb666b493f5d8f4a0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.23/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.23/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 36 2e 32 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.6.23\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mlnfm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mlnfm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-90.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.90"
        }
      },
      PodIP: (string) (len=11) "10.244.6.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.6.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.658: INFO: Pod "webserver-deployment-9b4f5bf69-jkspj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jkspj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20f0a702-7943-423c-8784-8feb92e021d2",
      ResourceVersion: (string) (len=5) "18189",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "849395796bd0a8031527c063cd4bd7eb2d8a471aa74b4507f05647dfed970ac3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.35/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dn2sb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dn2sb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.658: INFO: Pod "webserver-deployment-9b4f5bf69-ltcwl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ltcwl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a51e90b-6db1-40eb-854e-1903f558695c",
      ResourceVersion: (string) (len=5) "18166",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0c091beb5b5ff1c3108dbe13cd2e5761d322be2bba1ead337e92e6b9e36486d3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kfq2k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kfq2k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.658: INFO: Pod "webserver-deployment-9b4f5bf69-nhsfm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nhsfm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f618edf6-f67e-4d17-bab9-053f314cff51",
      ResourceVersion: (string) (len=5) "18154",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8a5b68031106637257f87c5a40f1deb507d5972e0f15691b4f299468879c7dc0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.6.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.6.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w98z6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w98z6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-90.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.659: INFO: Pod "webserver-deployment-9b4f5bf69-p4cc6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-p4cc6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90936443-d373-4c83-8c3f-1bf4c2fcf87e",
      ResourceVersion: (string) (len=5) "18181",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4f0b5b24385808e115932a4aa53939c3e1a9595b76bf4bd62fea141a7d082452",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8kmvx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8kmvx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.659: INFO: Pod "webserver-deployment-9b4f5bf69-whzpn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-whzpn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a499c096-9605-4f0d-b107-8c475bb3aa1b",
      ResourceVersion: (string) (len=5) "18173",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "885e292cdc372a655d31dcdf224ac5167682d4ed2e8f897550f5fc5959b39bd3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.3.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.3.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gqpcg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gqpcg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.181.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.181.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.659: INFO: Pod "webserver-deployment-9b4f5bf69-xsbhv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xsbhv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1048",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b46db210-006e-445d-af01-e70a7e60febf",
      ResourceVersion: (string) (len=5) "18222",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cb58149b4c0b13f79386d38b856f7d373a16b51b91f00618b13c06d7be02df36",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.5.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.5.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "92d276b3-f358-47f1-ac61-440d638cb5ad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  64 32 37 36 62 33 2d 66  |d\":\"92d276b3-f|
              00000090  33 35 38 2d 34 37 66 31  2d 61 63 36 31 2d 34 34  |358-47f1-ac61-44|
              000000a0  30 64 36 33 38 63 62 35  61 64 5c 22 7d 22 3a 7b  |0d638cb5ad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jlq25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jlq25",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-76.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850967095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.76"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850967095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 19:44:57.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1048" for this suite. @ 05/10/24 19:44:57.67
  << Timeline
------------------------------
SSSS
------------------------------
• [4.156 seconds]
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:54.629
  May 10 19:44:54.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:44:54.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:54.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:54.674
  STEP: Creating a pod to test substitution in container's command @ 05/10/24 19:44:54.679
  STEP: Saw pod success @ 05/10/24 19:44:58.72
  May 10 19:44:58.725: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod var-expansion-7c624183-f7ba-41a7-8402-07605ec8ab77 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:44:58.746
  May 10 19:44:58.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9935" for this suite. @ 05/10/24 19:44:58.776
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [33.706 seconds]
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:28.299
  May 10 19:44:28.299: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename dns @ 05/10/24 19:44:28.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:28.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:28.335
  STEP: Creating a test headless service @ 05/10/24 19:44:28.339
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6268 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6268;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6268 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6268;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6268.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6268.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6268.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6268.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6268.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6268.svc;check="$$(dig +notcp +noall +answer +search 154.209.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.209.154_udp@PTR;check="$$(dig +tcp +noall +answer +search 154.209.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.209.154_tcp@PTR;sleep 1; done
   @ 05/10/24 19:44:28.425
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6268 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6268;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6268 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6268;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6268.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6268.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6268.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6268.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6268.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6268.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6268.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6268.svc;check="$$(dig +notcp +noall +answer +search 154.209.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.209.154_udp@PTR;check="$$(dig +tcp +noall +answer +search 154.209.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.209.154_tcp@PTR;sleep 1; done
   @ 05/10/24 19:44:28.425
  STEP: creating a pod to probe DNS @ 05/10/24 19:44:28.425
  STEP: submitting the pod to kubernetes @ 05/10/24 19:44:28.425
  STEP: retrieving the pod @ 05/10/24 19:44:36.499
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:44:36.505
  May 10 19:44:36.514: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.520: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.526: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.547: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.560: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.578: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.585: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.590: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.622: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.628: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.634: INFO: Unable to read jessie_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.640: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.647: INFO: Unable to read jessie_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.655: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.664: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.672: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:36.698: INFO: Lookups using dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6268 wheezy_tcp@dns-test-service.dns-6268 wheezy_udp@dns-test-service.dns-6268.svc wheezy_tcp@dns-test-service.dns-6268.svc wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6268 jessie_tcp@dns-test-service.dns-6268 jessie_udp@dns-test-service.dns-6268.svc jessie_tcp@dns-test-service.dns-6268.svc jessie_udp@_http._tcp.dns-test-service.dns-6268.svc jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc]

  May 10 19:44:36.712: INFO: Pod client logs for webserver: 
  May 10 19:44:36.722: INFO: Pod client logs for querier: 
  May 10 19:44:36.733: INFO: Pod client logs for jessie-querier: 
  May 10 19:44:41.513: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.519: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.526: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.533: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.539: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.545: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.553: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.559: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.595: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.601: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.610: INFO: Unable to read jessie_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.616: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.623: INFO: Unable to read jessie_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.633: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.639: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.646: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:41.685: INFO: Lookups using dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6268 wheezy_tcp@dns-test-service.dns-6268 wheezy_udp@dns-test-service.dns-6268.svc wheezy_tcp@dns-test-service.dns-6268.svc wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6268 jessie_tcp@dns-test-service.dns-6268 jessie_udp@dns-test-service.dns-6268.svc jessie_tcp@dns-test-service.dns-6268.svc jessie_udp@_http._tcp.dns-test-service.dns-6268.svc jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc]

  May 10 19:44:41.700: INFO: Pod client logs for webserver: 
  May 10 19:44:41.711: INFO: Pod client logs for querier: 
  May 10 19:44:41.723: INFO: Pod client logs for jessie-querier: 
  May 10 19:44:46.518: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.530: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.536: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.542: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.549: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.555: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.564: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.570: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.604: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.616: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.624: INFO: Unable to read jessie_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.631: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.638: INFO: Unable to read jessie_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.644: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.650: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.659: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:46.706: INFO: Lookups using dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6268 wheezy_tcp@dns-test-service.dns-6268 wheezy_udp@dns-test-service.dns-6268.svc wheezy_tcp@dns-test-service.dns-6268.svc wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6268 jessie_tcp@dns-test-service.dns-6268 jessie_udp@dns-test-service.dns-6268.svc jessie_tcp@dns-test-service.dns-6268.svc jessie_udp@_http._tcp.dns-test-service.dns-6268.svc jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc]

  May 10 19:44:46.719: INFO: Pod client logs for webserver: 
  May 10 19:44:46.729: INFO: Pod client logs for querier: 
  May 10 19:44:46.740: INFO: Pod client logs for jessie-querier: 
  May 10 19:44:51.512: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.528: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.534: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.542: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.555: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.560: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.567: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.574: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.613: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.619: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.629: INFO: Unable to read jessie_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.635: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.641: INFO: Unable to read jessie_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.648: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.654: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.662: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:51.699: INFO: Lookups using dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6268 wheezy_tcp@dns-test-service.dns-6268 wheezy_udp@dns-test-service.dns-6268.svc wheezy_tcp@dns-test-service.dns-6268.svc wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6268 jessie_tcp@dns-test-service.dns-6268 jessie_udp@dns-test-service.dns-6268.svc jessie_tcp@dns-test-service.dns-6268.svc jessie_udp@_http._tcp.dns-test-service.dns-6268.svc jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc]

  May 10 19:44:51.709: INFO: Pod client logs for webserver: 
  May 10 19:44:51.723: INFO: Pod client logs for querier: 
  May 10 19:44:51.736: INFO: Pod client logs for jessie-querier: 
  May 10 19:44:56.519: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.549: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.564: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.580: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.598: INFO: Unable to read wheezy_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.608: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.624: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.635: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.692: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.698: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.707: INFO: Unable to read jessie_udp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.719: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268 from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.732: INFO: Unable to read jessie_udp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.749: INFO: Unable to read jessie_tcp@dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.757: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.775: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc from pod dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a: the server could not find the requested resource (get pods dns-test-a0132731-c248-4c55-8adf-c873c20ce07a)
  May 10 19:44:56.822: INFO: Lookups using dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6268 wheezy_tcp@dns-test-service.dns-6268 wheezy_udp@dns-test-service.dns-6268.svc wheezy_tcp@dns-test-service.dns-6268.svc wheezy_udp@_http._tcp.dns-test-service.dns-6268.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6268.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6268 jessie_tcp@dns-test-service.dns-6268 jessie_udp@dns-test-service.dns-6268.svc jessie_tcp@dns-test-service.dns-6268.svc jessie_udp@_http._tcp.dns-test-service.dns-6268.svc jessie_tcp@_http._tcp.dns-test-service.dns-6268.svc]

  May 10 19:44:56.845: INFO: Pod client logs for webserver: 
  May 10 19:44:56.879: INFO: Pod client logs for querier: 
  May 10 19:44:56.921: INFO: Pod client logs for jessie-querier: 
  May 10 19:45:01.732: INFO: DNS probes using dns-6268/dns-test-a0132731-c248-4c55-8adf-c873c20ce07a succeeded

  STEP: deleting the pod @ 05/10/24 19:45:01.732
  STEP: deleting the test service @ 05/10/24 19:45:01.793
  STEP: deleting the test headless service @ 05/10/24 19:45:01.903
  May 10 19:45:01.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6268" for this suite. @ 05/10/24 19:45:01.961
  << Timeline
------------------------------
SSSS
------------------------------
• [4.310 seconds]
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:57.777
  May 10 19:44:57.777: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename containers @ 05/10/24 19:44:57.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:57.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:57.805
  STEP: Creating a pod to test override command @ 05/10/24 19:44:57.808
  STEP: Saw pod success @ 05/10/24 19:45:01.915
  May 10 19:45:01.924: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod client-containers-2d628214-0434-40a7-a29a-3a181e87ad8a container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:45:01.967
  May 10 19:45:02.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5318" for this suite. @ 05/10/24 19:45:02.064
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.167 seconds]
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:02.097
  May 10 19:45:02.097: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:45:02.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:02.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:02.139
  STEP: Creating ReplicationController "e2e-rc-khvzw" @ 05/10/24 19:45:02.145
  May 10 19:45:02.155: INFO: Get Replication Controller "e2e-rc-khvzw" to confirm replicas
  May 10 19:45:03.156: INFO: Get Replication Controller "e2e-rc-khvzw" to confirm replicas
  May 10 19:45:03.169: INFO: Found 1 replicas for "e2e-rc-khvzw" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-khvzw" @ 05/10/24 19:45:03.169
  STEP: Updating a scale subresource @ 05/10/24 19:45:03.177
  STEP: Verifying replicas where modified for replication controller "e2e-rc-khvzw" @ 05/10/24 19:45:03.194
  May 10 19:45:03.194: INFO: Get Replication Controller "e2e-rc-khvzw" to confirm replicas
  May 10 19:45:04.194: INFO: Get Replication Controller "e2e-rc-khvzw" to confirm replicas
  May 10 19:45:04.232: INFO: Found 2 replicas for "e2e-rc-khvzw" replication controller
  May 10 19:45:04.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4001" for this suite. @ 05/10/24 19:45:04.246
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.067 seconds]
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:02.008
  May 10 19:45:02.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:45:02.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:02.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:02.07
  May 10 19:45:02.111: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 19:45:02.111
  STEP: Scaling up "test-rs" replicaset @ 05/10/24 19:45:04.133
  May 10 19:45:04.153: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/10/24 19:45:04.153
  May 10 19:45:04.170: INFO: observed ReplicaSet test-rs in namespace replicaset-4502 with ReadyReplicas 1, AvailableReplicas 1
  May 10 19:45:04.214: INFO: observed ReplicaSet test-rs in namespace replicaset-4502 with ReadyReplicas 1, AvailableReplicas 1
  May 10 19:45:04.250: INFO: observed ReplicaSet test-rs in namespace replicaset-4502 with ReadyReplicas 1, AvailableReplicas 1
  May 10 19:45:04.263: INFO: observed ReplicaSet test-rs in namespace replicaset-4502 with ReadyReplicas 1, AvailableReplicas 1
  May 10 19:45:05.777: INFO: observed ReplicaSet test-rs in namespace replicaset-4502 with ReadyReplicas 2, AvailableReplicas 2
  May 10 19:45:06.038: INFO: observed Replicaset test-rs in namespace replicaset-4502 with ReadyReplicas 3 found true
  May 10 19:45:06.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4502" for this suite. @ 05/10/24 19:45:06.058
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [2.932 seconds]
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:04.294
  May 10 19:45:04.294: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename watch @ 05/10/24 19:45:04.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:04.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:04.323
  STEP: getting a starting resourceVersion @ 05/10/24 19:45:04.326
  STEP: starting a background goroutine to produce watch events @ 05/10/24 19:45:04.333
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/10/24 19:45:04.333
  May 10 19:45:07.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8505" for this suite. @ 05/10/24 19:45:07.159
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.347 seconds]
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:44:58.792
  May 10 19:44:58.792: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:44:58.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:44:58.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:44:58.902
  STEP: create the rc @ 05/10/24 19:44:58.912
  W0510 19:44:58.921496      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 19:45:03.929
  STEP: wait for all pods to be garbage collected @ 05/10/24 19:45:03.937
  STEP: Gathering metrics @ 05/10/24 19:45:08.948
  May 10 19:45:09.122: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 19:45:09.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7395" for this suite. @ 05/10/24 19:45:09.13
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.160 seconds]
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:06.08
  May 10 19:45:06.080: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:45:06.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:06.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:06.137
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:45:06.141
  STEP: Saw pod success @ 05/10/24 19:45:10.181
  May 10 19:45:10.186: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod downwardapi-volume-82ee67a7-7fb2-4424-bf19-dea0acd74925 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:45:10.196
  May 10 19:45:10.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2862" for this suite. @ 05/10/24 19:45:10.229
  << Timeline
------------------------------
• [4.145 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:09.144
  May 10 19:45:09.144: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:45:09.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:09.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:09.175
  STEP: Creating configMap with name projected-configmap-test-volume-41da6041-f5aa-40d1-952c-0b129c202f54 @ 05/10/24 19:45:09.18
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:45:09.188
  STEP: Saw pod success @ 05/10/24 19:45:13.233
  May 10 19:45:13.237: INFO: Trying to get logs from node ip-172-31-180-76.eu-west-3.compute.internal pod pod-projected-configmaps-437bcce2-c3f0-4e32-bb9d-064f6ddfce2e container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:45:13.253
  May 10 19:45:13.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7202" for this suite. @ 05/10/24 19:45:13.281
  << Timeline
------------------------------
• [12.093 seconds]
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:10.243
  May 10 19:45:10.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename job @ 05/10/24 19:45:10.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:10.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:10.289
  STEP: Creating a job @ 05/10/24 19:45:10.295
  STEP: Ensuring job reaches completions @ 05/10/24 19:45:10.308
  May 10 19:45:22.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9469" for this suite. @ 05/10/24 19:45:22.324
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [11.322 seconds]
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:22.347
  May 10 19:45:22.347: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:45:22.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:22.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:22.402
  STEP: create the rc @ 05/10/24 19:45:22.417
  W0510 19:45:22.433397      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 19:45:26.446
  STEP: wait for the rc to be deleted @ 05/10/24 19:45:26.464
  May 10 19:45:27.496: INFO: 80 pods remaining
  May 10 19:45:27.496: INFO: 80 pods has nil DeletionTimestamp
  May 10 19:45:27.496: INFO: 
  May 10 19:45:28.568: INFO: 71 pods remaining
  May 10 19:45:28.568: INFO: 70 pods has nil DeletionTimestamp
  May 10 19:45:28.568: INFO: 
  May 10 19:45:29.492: INFO: 60 pods remaining
  May 10 19:45:29.492: INFO: 60 pods has nil DeletionTimestamp
  May 10 19:45:29.492: INFO: 
  May 10 19:45:30.501: INFO: 40 pods remaining
  May 10 19:45:30.501: INFO: 40 pods has nil DeletionTimestamp
  May 10 19:45:30.501: INFO: 
  May 10 19:45:31.537: INFO: 30 pods remaining
  May 10 19:45:31.537: INFO: 30 pods has nil DeletionTimestamp
  May 10 19:45:31.537: INFO: 
  May 10 19:45:32.480: INFO: 20 pods remaining
  May 10 19:45:32.480: INFO: 20 pods has nil DeletionTimestamp
  May 10 19:45:32.480: INFO: 
  STEP: Gathering metrics @ 05/10/24 19:45:33.486
  May 10 19:45:33.644: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 19:45:33.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5173" for this suite. @ 05/10/24 19:45:33.654
  << Timeline
------------------------------
SS
------------------------------
• [4.195 seconds]
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:33.672
  May 10 19:45:33.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:45:33.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:33.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:33.727
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:45:33.732
  STEP: Saw pod success @ 05/10/24 19:45:37.771
  May 10 19:45:37.778: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod downwardapi-volume-04b20690-d84b-44e7-ae45-6f7999574daa container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:45:37.799
  May 10 19:45:37.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-964" for this suite. @ 05/10/24 19:45:37.847
  << Timeline
------------------------------
SSSSS
------------------------------
• [0.807 seconds]
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:37.871
  May 10 19:45:37.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:45:37.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:37.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:37.92
  STEP: create the deployment @ 05/10/24 19:45:37.925
  W0510 19:45:37.934591      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/10/24 19:45:37.934
  STEP: delete the deployment @ 05/10/24 19:45:37.976
  STEP: wait for all rs to be garbage collected @ 05/10/24 19:45:37.988
  STEP: expected 0 rs, got 1 rs @ 05/10/24 19:45:38.011
  STEP: expected 0 pods, got 2 pods @ 05/10/24 19:45:38.029
  STEP: Gathering metrics @ 05/10/24 19:45:38.505
  May 10 19:45:38.634: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 19:45:38.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-509" for this suite. @ 05/10/24 19:45:38.656
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [243.067 seconds]
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:13.291
  May 10 19:45:13.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:45:13.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:13.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:13.325
  STEP: Creating pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960 @ 05/10/24 19:45:13.33
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:45:15.363
  May 10 19:45:15.373: INFO: Initial restart count of pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d is 0
  May 10 19:45:15.385: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:17.391: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:19.398: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:21.404: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:23.432: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:25.437: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:27.449: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:29.459: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:31.466: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:33.471: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:35.477: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:37.492: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:39.499: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:41.510: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:43.516: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:45.522: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:47.526: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:49.536: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:51.544: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:53.550: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:55.555: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:57.561: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:45:59.567: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:01.572: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:03.579: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:05.585: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:07.591: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:09.601: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:11.607: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:13.613: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:15.619: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:17.624: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:19.629: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:21.646: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:23.651: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:25.657: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:27.663: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:29.668: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:31.673: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:33.679: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:35.685: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:37.695: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:39.703: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:41.712: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:43.718: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:45.730: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:47.737: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:49.742: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:51.752: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:53.759: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:55.764: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:57.778: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:46:59.783: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:01.791: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:03.796: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:05.801: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:07.806: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:09.811: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:11.830: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:13.836: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:15.842: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:17.858: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:19.872: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:21.877: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:23.892: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:25.897: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:27.903: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:29.910: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:31.916: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:33.922: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:35.928: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:37.934: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:39.948: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:41.961: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:43.968: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:45.983: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:47.989: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:50.003: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:52.014: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:54.020: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:56.026: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:47:58.031: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:00.038: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:02.054: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:04.062: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:06.068: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:08.073: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:10.079: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:12.085: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:14.090: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:16.096: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:18.103: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:20.110: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:22.118: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:24.124: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:26.129: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:28.135: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:30.141: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:32.150: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:34.159: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:36.164: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:38.174: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:40.184: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:42.192: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:44.197: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:46.207: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:48.213: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:50.220: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:52.226: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:54.233: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:56.240: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:48:58.247: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:00.253: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:02.271: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:04.277: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:06.282: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:08.288: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:10.294: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:12.300: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  May 10 19:49:14.305: INFO: Get pod test-webserver-d0909ad6-0a34-457d-90a8-5b7b0e6c283d in namespace container-probe-9960
  STEP: deleting the pod @ 05/10/24 19:49:16.306
  May 10 19:49:16.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9960" for this suite. @ 05/10/24 19:49:16.343
  << Timeline
------------------------------
SSSS
------------------------------
• [2.195 seconds]
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:16.361
  May 10 19:49:16.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename dns @ 05/10/24 19:49:16.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:16.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:16.393
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/10/24 19:49:16.402
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/10/24 19:49:16.402
  STEP: creating a pod to probe DNS @ 05/10/24 19:49:16.402
  STEP: submitting the pod to kubernetes @ 05/10/24 19:49:16.402
  STEP: retrieving the pod @ 05/10/24 19:49:18.459
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:49:18.463
  May 10 19:49:18.489: INFO: DNS probes using dns-5983/dns-test-bdc7c1ca-082b-43c9-94ce-0f6ff11b4db7 succeeded

  STEP: deleting the pod @ 05/10/24 19:49:18.49
  May 10 19:49:18.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5983" for this suite. @ 05/10/24 19:49:18.535
  << Timeline
------------------------------
SSSSS
------------------------------
• [243.235 seconds]
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:38.691
  May 10 19:45:38.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:45:38.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:38.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:38.74
  STEP: Creating pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221 @ 05/10/24 19:45:38.744
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:45:40.793
  May 10 19:45:40.799: INFO: Initial restart count of pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f is 0
  May 10 19:45:40.805: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:42.812: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:44.821: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:46.828: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:48.836: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:50.844: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:52.851: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:54.865: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:56.872: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:45:58.887: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:00.896: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:02.905: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:04.911: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:06.923: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:08.930: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:10.939: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:12.950: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:14.957: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:16.964: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:18.972: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:20.979: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:23.002: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:25.013: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:27.020: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:29.027: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:31.039: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:33.046: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:35.052: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:37.059: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:39.082: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:41.088: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:43.095: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:45.102: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:47.109: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:49.126: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:51.132: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:53.139: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:55.147: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:57.156: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:46:59.163: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:01.170: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:03.178: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:05.185: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:07.194: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:09.208: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:11.215: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:13.230: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:15.245: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:17.252: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:19.261: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:21.268: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:23.275: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:25.289: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:27.308: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:29.319: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:31.325: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:33.332: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:35.339: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:37.348: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:39.354: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:41.365: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:43.373: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:45.382: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:47.390: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:49.403: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:51.417: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:53.423: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:55.431: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:57.437: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:47:59.444: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:01.454: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:03.461: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:05.468: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:07.475: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:09.492: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:11.499: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:13.505: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:15.523: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:17.535: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:19.546: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:21.554: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:23.564: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:25.571: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:27.578: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:29.585: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:31.594: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:33.601: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:35.609: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:37.617: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:39.626: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:41.634: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:43.641: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:45.649: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:47.658: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:49.665: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:51.672: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:53.680: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:55.687: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:57.693: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:48:59.701: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:01.707: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:03.715: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:05.722: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:07.728: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:09.737: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:11.742: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:13.754: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:15.765: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:17.772: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:19.781: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:21.791: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:23.797: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:25.804: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:27.815: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:29.823: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:31.830: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:33.836: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:35.842: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:37.848: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  May 10 19:49:39.872: INFO: Get pod busybox-04c9d70e-852f-4203-b1ce-94d41f47992f in namespace container-probe-221
  STEP: deleting the pod @ 05/10/24 19:49:41.873
  May 10 19:49:41.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-221" for this suite. @ 05/10/24 19:49:41.912
  << Timeline
------------------------------
SSSSSS
------------------------------
• [7.144 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:41.93
  May 10 19:49:41.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename crd-webhook @ 05/10/24 19:49:41.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:41.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:41.977
  STEP: Setting up server cert @ 05/10/24 19:49:41.981
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/10/24 19:49:42.602
  STEP: Deploying the custom resource conversion webhook pod @ 05/10/24 19:49:42.613
  STEP: Wait for the deployment to be ready @ 05/10/24 19:49:42.636
  May 10 19:49:42.651: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:49:44.681
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:49:44.729
  May 10 19:49:45.729: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 10 19:49:45.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Creating a v1 custom resource @ 05/10/24 19:49:48.377
  STEP: v2 custom resource should be converted @ 05/10/24 19:49:48.386
  May 10 19:49:49.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5165" for this suite. @ 05/10/24 19:49:49.055
  << Timeline
------------------------------
SS
------------------------------
• [4.364 seconds]
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:49.076
  May 10 19:49:49.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:49:49.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:49.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:49.126
  STEP: Creating configMap with name cm-test-opt-del-1d203a4f-981f-406d-beda-5837dd613442 @ 05/10/24 19:49:49.139
  STEP: Creating configMap with name cm-test-opt-upd-9ec92908-32cb-441f-9b89-a1d8a819dc8e @ 05/10/24 19:49:49.149
  STEP: Creating the pod @ 05/10/24 19:49:49.16
  STEP: Deleting configmap cm-test-opt-del-1d203a4f-981f-406d-beda-5837dd613442 @ 05/10/24 19:49:51.274
  STEP: Updating configmap cm-test-opt-upd-9ec92908-32cb-441f-9b89-a1d8a819dc8e @ 05/10/24 19:49:51.294
  STEP: Creating configMap with name cm-test-opt-create-cd1f9b40-d97a-4528-808b-c9f41f0829a4 @ 05/10/24 19:49:51.313
  STEP: waiting to observe update in volume @ 05/10/24 19:49:51.328
  May 10 19:49:53.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7379" for this suite. @ 05/10/24 19:49:53.425
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.135 seconds]
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:53.45
  May 10 19:49:53.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:49:53.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:53.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:53.483
  May 10 19:49:55.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7327" for this suite. @ 05/10/24 19:49:55.57
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.185 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:55.597
  May 10 19:49:55.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:49:55.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:55.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:55.627
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/10/24 19:49:55.631
  STEP: Saw pod success @ 05/10/24 19:49:59.664
  May 10 19:49:59.673: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-e546de17-e30b-4812-843b-aea364568e5c container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:49:59.717
  May 10 19:49:59.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1956" for this suite. @ 05/10/24 19:49:59.771
  << Timeline
------------------------------
S
------------------------------
• [0.121 seconds]
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:59.783
  May 10 19:49:59.783: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:49:59.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:59.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:59.877
  STEP: Creating projection with secret that has name secret-emptykey-test-1fba099e-ea7e-474b-9220-517f734392ca @ 05/10/24 19:49:59.881
  May 10 19:49:59.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9508" for this suite. @ 05/10/24 19:49:59.893
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.217 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:59.913
  May 10 19:49:59.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 19:49:59.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:59.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:59.953
  May 10 19:49:59.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:50:03.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4726" for this suite. @ 05/10/24 19:50:03.12
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.266 seconds]
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:03.136
  May 10 19:50:03.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:50:03.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:03.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:03.199
  May 10 19:50:03.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-209" for this suite. @ 05/10/24 19:50:03.372
  << Timeline
------------------------------
SSSSS
------------------------------
• [6.113 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:03.405
  May 10 19:50:03.405: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:50:03.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:03.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:03.461
  STEP: Setting up server cert @ 05/10/24 19:50:03.541
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:50:04.063
  STEP: Deploying the webhook pod @ 05/10/24 19:50:04.075
  STEP: Wait for the deployment to be ready @ 05/10/24 19:50:04.096
  May 10 19:50:04.125: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 19:50:06.144
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:50:06.187
  May 10 19:50:07.188: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/10/24 19:50:07.201
  STEP: create a pod @ 05/10/24 19:50:07.226
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/10/24 19:50:09.264
  May 10 19:50:09.264: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=webhook-8452 attach --namespace=webhook-8452 to-be-attached-pod -i -c=container1'
  May 10 19:50:09.341: INFO: rc: 1
  May 10 19:50:09.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8452" for this suite. @ 05/10/24 19:50:09.468
  STEP: Destroying namespace "webhook-markers-5722" for this suite. @ 05/10/24 19:50:09.494
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.184 seconds]
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:09.531
  May 10 19:50:09.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/10/24 19:50:09.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:09.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:09.578
  STEP: Cleaning up the secret @ 05/10/24 19:50:11.645
  STEP: Cleaning up the configmap @ 05/10/24 19:50:11.655
  STEP: Cleaning up the pod @ 05/10/24 19:50:11.666
  May 10 19:50:11.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4342" for this suite. @ 05/10/24 19:50:11.703
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.258 seconds]
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:11.72
  May 10 19:50:11.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 19:50:11.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:11.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:11.763
  STEP: getting /apis @ 05/10/24 19:50:11.767
  STEP: getting /apis/node.k8s.io @ 05/10/24 19:50:11.774
  STEP: getting /apis/node.k8s.io/v1 @ 05/10/24 19:50:11.776
  STEP: creating @ 05/10/24 19:50:11.778
  STEP: watching @ 05/10/24 19:50:11.806
  May 10 19:50:11.806: INFO: starting watch
  STEP: getting @ 05/10/24 19:50:11.832
  STEP: listing @ 05/10/24 19:50:11.849
  STEP: patching @ 05/10/24 19:50:11.858
  STEP: updating @ 05/10/24 19:50:11.879
  May 10 19:50:11.896: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 05/10/24 19:50:11.896
  STEP: deleting a collection @ 05/10/24 19:50:11.928
  May 10 19:50:11.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-428" for this suite. @ 05/10/24 19:50:11.967
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [61.660 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:49:18.559
  May 10 19:49:18.559: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 19:49:18.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:49:18.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:49:18.589
  STEP: Creating service test in namespace statefulset-8304 @ 05/10/24 19:49:18.597
  STEP: Creating stateful set ss in namespace statefulset-8304 @ 05/10/24 19:49:18.606
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8304 @ 05/10/24 19:49:18.615
  May 10 19:49:18.619: INFO: Found 0 stateful pods, waiting for 1
  May 10 19:49:28.626: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/10/24 19:49:28.626
  May 10 19:49:28.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=statefulset-8304 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:49:28.819: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:49:28.819: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:49:28.819: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:49:28.823: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May 10 19:49:38.826: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:49:38.826: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:49:38.857: INFO: POD   NODE                                         PHASE    GRACE  CONDITIONS
  May 10 19:49:38.857: INFO: ss-0  ip-172-31-182-18.eu-west-3.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:29 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:29 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:18 +0000 UTC  }]
  May 10 19:49:38.857: INFO: 
  May 10 19:49:38.857: INFO: StatefulSet ss has not reached scale 3, at 1
  May 10 19:49:39.878: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.992077827s
  May 10 19:49:40.891: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.971130479s
  May 10 19:49:41.899: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.958662329s
  May 10 19:49:42.906: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.951060782s
  May 10 19:49:43.916: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.943642648s
  May 10 19:49:44.922: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.933296111s
  May 10 19:49:45.928: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.92777743s
  May 10 19:49:46.934: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.92125407s
  May 10 19:49:47.941: INFO: Verifying statefulset ss doesn't scale past 3 for another 916.244811ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8304 @ 05/10/24 19:49:48.942
  May 10 19:49:48.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=statefulset-8304 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:49:49.119: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:49:49.119: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:49:49.119: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:49:49.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=statefulset-8304 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:49:49.283: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 10 19:49:49.283: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:49:49.283: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:49:49.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=statefulset-8304 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:49:49.502: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 10 19:49:49.502: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:49:49.502: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:49:49.507: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  May 10 19:49:59.508: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:49:59.508: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:49:59.508: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/10/24 19:49:59.508
  May 10 19:49:59.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=statefulset-8304 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:49:59.653: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:49:59.653: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:49:59.653: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:49:59.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=statefulset-8304 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:49:59.813: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:49:59.813: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:49:59.813: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:49:59.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=statefulset-8304 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:49:59.965: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:49:59.965: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:49:59.965: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:49:59.965: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:50:00.009: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  May 10 19:50:09.978: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:50:09.978: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:50:09.978: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:50:10.008: INFO: POD   NODE                                         PHASE    GRACE  CONDITIONS
  May 10 19:50:10.008: INFO: ss-0  ip-172-31-182-18.eu-west-3.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:18 +0000 UTC  }]
  May 10 19:50:10.008: INFO: ss-1  ip-172-31-180-98.eu-west-3.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:38 +0000 UTC  }]
  May 10 19:50:10.008: INFO: ss-2  ip-172-31-181-94.eu-west-3.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:39 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:38 +0000 UTC  }]
  May 10 19:50:10.008: INFO: 
  May 10 19:50:10.008: INFO: StatefulSet ss has not reached scale 0, at 3
  May 10 19:50:11.024: INFO: POD   NODE                                         PHASE      GRACE  CONDITIONS
  May 10 19:50:11.024: INFO: ss-0  ip-172-31-182-18.eu-west-3.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:18 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:18 +0000 UTC  }]
  May 10 19:50:11.024: INFO: ss-1  ip-172-31-180-98.eu-west-3.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:38 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:50:00 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:49:38 +0000 UTC  }]
  May 10 19:50:11.024: INFO: 
  May 10 19:50:11.024: INFO: StatefulSet ss has not reached scale 0, at 2
  May 10 19:50:12.030: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.973488009s
  May 10 19:50:13.038: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.967501853s
  May 10 19:50:14.051: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.959951393s
  May 10 19:50:15.057: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.946997629s
  May 10 19:50:16.063: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.94018886s
  May 10 19:50:17.070: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.934627144s
  May 10 19:50:18.081: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.927168109s
  May 10 19:50:19.088: INFO: Verifying statefulset ss doesn't scale past 0 for another 916.502294ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8304 @ 05/10/24 19:50:20.089
  May 10 19:50:20.094: INFO: Scaling statefulset ss to 0
  May 10 19:50:20.121: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:50:20.134: INFO: Deleting all statefulset in ns statefulset-8304
  May 10 19:50:20.141: INFO: Scaling statefulset ss to 0
  May 10 19:50:20.166: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:50:20.170: INFO: Deleting statefulset ss
  May 10 19:50:20.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8304" for this suite. @ 05/10/24 19:50:20.208
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [3.143 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:20.223
  May 10 19:50:20.223: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:50:20.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:20.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:20.263
  STEP: create the container @ 05/10/24 19:50:20.279
  W0510 19:50:20.290456      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 19:50:20.29
  STEP: get the container status @ 05/10/24 19:50:23.32
  STEP: the container should be terminated @ 05/10/24 19:50:23.324
  STEP: the termination message should be set @ 05/10/24 19:50:23.324
  May 10 19:50:23.324: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/10/24 19:50:23.324
  May 10 19:50:23.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7791" for this suite. @ 05/10/24 19:50:23.356
  << Timeline
------------------------------
SSS
------------------------------
• [4.254 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:23.368
  May 10 19:50:23.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:50:23.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:23.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:23.434
  STEP: Creating configMap with name projected-configmap-test-volume-map-4b7d0407-7f57-4881-a53d-e7ac7b19daf3 @ 05/10/24 19:50:23.438
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:50:23.447
  STEP: Saw pod success @ 05/10/24 19:50:27.509
  May 10 19:50:27.527: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-projected-configmaps-f692c74f-75a3-4e54-b2b5-bea070245923 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:50:27.56
  May 10 19:50:27.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3493" for this suite. @ 05/10/24 19:50:27.605
  << Timeline
------------------------------
SSSS
------------------------------
• [16.153 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:11.983
  May 10 19:50:11.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:50:11.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:12.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:12.028
  STEP: Discovering how many secrets are in namespace by default @ 05/10/24 19:50:12.034
  STEP: Counting existing ResourceQuota @ 05/10/24 19:50:17.039
  STEP: Creating a ResourceQuota @ 05/10/24 19:50:22.046
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:50:22.054
  STEP: Creating a Secret @ 05/10/24 19:50:24.061
  STEP: Ensuring resource quota status captures secret creation @ 05/10/24 19:50:24.078
  STEP: Deleting a secret @ 05/10/24 19:50:26.085
  STEP: Ensuring resource quota status released usage @ 05/10/24 19:50:26.1
  May 10 19:50:28.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7671" for this suite. @ 05/10/24 19:50:28.116
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.219 seconds]
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:28.149
  May 10 19:50:28.149: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:50:28.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:28.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:28.194
  STEP: Creating secret with name secret-test-map-4f7501b7-f78c-4dbc-b644-4e0ead9d7fb1 @ 05/10/24 19:50:28.201
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:50:28.213
  STEP: Saw pod success @ 05/10/24 19:50:32.283
  May 10 19:50:32.288: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-secrets-05b38a5d-6eae-4ab2-8415-02ac63cf9dda container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:50:32.3
  May 10 19:50:32.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7658" for this suite. @ 05/10/24 19:50:32.356
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.318 seconds]
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:27.624
  May 10 19:50:27.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename disruption @ 05/10/24 19:50:27.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:27.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:27.678
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/10/24 19:50:27.683
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:50:27.691
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/10/24 19:50:29.707
  STEP: Waiting for all pods to be running @ 05/10/24 19:50:29.707
  May 10 19:50:29.711: INFO: pods: 0 < 3
  STEP: locating a running pod @ 05/10/24 19:50:31.713
  STEP: Updating the pdb to allow a pod to be evicted @ 05/10/24 19:50:31.738
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:50:31.75
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/10/24 19:50:33.755
  STEP: Waiting for all pods to be running @ 05/10/24 19:50:33.755
  STEP: Waiting for the pdb to observed all healthy pods @ 05/10/24 19:50:33.763
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/10/24 19:50:33.799
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:50:33.828
  STEP: Waiting for all pods to be running @ 05/10/24 19:50:35.833
  STEP: locating a running pod @ 05/10/24 19:50:35.84
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/10/24 19:50:35.862
  STEP: Waiting for the pdb to be deleted @ 05/10/24 19:50:35.87
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/10/24 19:50:35.885
  STEP: Waiting for all pods to be running @ 05/10/24 19:50:35.885
  May 10 19:50:35.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3018" for this suite. @ 05/10/24 19:50:35.923
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.145 seconds]
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:35.946
  May 10 19:50:35.946: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:50:35.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:35.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:35.994
  May 10 19:50:36.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1429" for this suite. @ 05/10/24 19:50:36.08
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [3.834 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:32.382
  May 10 19:50:32.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:50:32.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:32.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:32.43
  STEP: Setting up server cert @ 05/10/24 19:50:32.48
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:50:32.917
  STEP: Deploying the webhook pod @ 05/10/24 19:50:32.931
  STEP: Wait for the deployment to be ready @ 05/10/24 19:50:32.99
  May 10 19:50:33.001: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 19:50:35.022
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:50:35.06
  May 10 19:50:36.061: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/10/24 19:50:36.077
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/10/24 19:50:36.08
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/10/24 19:50:36.08
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/10/24 19:50:36.08
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/10/24 19:50:36.081
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/10/24 19:50:36.081
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/10/24 19:50:36.083
  May 10 19:50:36.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4326" for this suite. @ 05/10/24 19:50:36.189
  STEP: Destroying namespace "webhook-markers-9496" for this suite. @ 05/10/24 19:50:36.198
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.208 seconds]
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:36.094
  May 10 19:50:36.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:50:36.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:36.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:36.174
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:50:36.207
  STEP: Saw pod success @ 05/10/24 19:50:40.248
  May 10 19:50:40.252: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod downwardapi-volume-58b8b7c8-a3cb-4244-8bd5-de4d967ab96f container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:50:40.264
  May 10 19:50:40.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9116" for this suite. @ 05/10/24 19:50:40.294
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.236 seconds]
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:36.227
  May 10 19:50:36.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:50:36.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:36.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:36.278
  STEP: Creating a pod to test downward api env vars @ 05/10/24 19:50:36.283
  STEP: Saw pod success @ 05/10/24 19:50:40.335
  May 10 19:50:40.367: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod downward-api-7540282e-e699-4d98-8451-69e5eec6e464 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:50:40.42
  May 10 19:50:40.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6598" for this suite. @ 05/10/24 19:50:40.453
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.537 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:40.305
  May 10 19:50:40.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 19:50:40.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:40.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:40.334
  May 10 19:50:40.337: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  May 10 19:50:46.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1716" for this suite. @ 05/10/24 19:50:46.832
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [354.221 seconds]
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:45:07.242
  May 10 19:45:07.242: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 19:45:07.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:45:07.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:45:07.351
  STEP: Creating a ForbidConcurrent cronjob @ 05/10/24 19:45:07.356
  STEP: Ensuring a job is scheduled @ 05/10/24 19:45:07.375
  STEP: Ensuring exactly one is scheduled @ 05/10/24 19:46:01.383
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/10/24 19:46:01.39
  STEP: Ensuring no more jobs are scheduled @ 05/10/24 19:46:01.402
  STEP: Removing cronjob @ 05/10/24 19:51:01.417
  May 10 19:51:01.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-867" for this suite. @ 05/10/24 19:51:01.443
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [24.251 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:40.472
  May 10 19:50:40.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:50:40.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:40.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:40.502
  STEP: Setting up data @ 05/10/24 19:50:40.506
  STEP: Creating pod pod-subpath-test-projected-zd4t @ 05/10/24 19:50:40.523
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:50:40.523
  STEP: Saw pod success @ 05/10/24 19:51:04.634
  May 10 19:51:04.639: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-subpath-test-projected-zd4t container test-container-subpath-projected-zd4t: <nil>
  STEP: delete the pod @ 05/10/24 19:51:04.655
  STEP: Deleting pod pod-subpath-test-projected-zd4t @ 05/10/24 19:51:04.681
  May 10 19:51:04.681: INFO: Deleting pod "pod-subpath-test-projected-zd4t" in namespace "subpath-6471"
  May 10 19:51:04.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6471" for this suite. @ 05/10/24 19:51:04.709
  << Timeline
------------------------------
SS
------------------------------
• [4.183 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:04.724
  May 10 19:51:04.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:51:04.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:04.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:04.778
  STEP: Creating configMap with name configmap-test-volume-11e9e1ca-9101-4e43-b5cd-8701f404174c @ 05/10/24 19:51:04.782
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:51:04.79
  STEP: Saw pod success @ 05/10/24 19:51:08.829
  May 10 19:51:08.836: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-configmaps-6b5f5a74-d759-4b6d-a134-cb42dc36f5a5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:51:08.852
  May 10 19:51:08.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2108" for this suite. @ 05/10/24 19:51:08.893
  << Timeline
------------------------------
SSSS
------------------------------
• [24.230 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:50:46.855
  May 10 19:50:46.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:50:46.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:50:46.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:50:46.889
  STEP: Setting up data @ 05/10/24 19:50:46.893
  STEP: Creating pod pod-subpath-test-configmap-vfc6 @ 05/10/24 19:50:46.905
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:50:46.905
  STEP: Saw pod success @ 05/10/24 19:51:11.013
  May 10 19:51:11.018: INFO: Trying to get logs from node ip-172-31-180-76.eu-west-3.compute.internal pod pod-subpath-test-configmap-vfc6 container test-container-subpath-configmap-vfc6: <nil>
  STEP: delete the pod @ 05/10/24 19:51:11.034
  STEP: Deleting pod pod-subpath-test-configmap-vfc6 @ 05/10/24 19:51:11.06
  May 10 19:51:11.060: INFO: Deleting pod "pod-subpath-test-configmap-vfc6" in namespace "subpath-3360"
  May 10 19:51:11.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3360" for this suite. @ 05/10/24 19:51:11.077
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.116 seconds]
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:11.092
  May 10 19:51:11.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:51:11.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:11.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:11.122
  STEP: validating cluster-info @ 05/10/24 19:51:11.126
  May 10 19:51:11.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-3816 cluster-info'
  May 10 19:51:11.185: INFO: stderr: ""
  May 10 19:51:11.185: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  May 10 19:51:11.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3816" for this suite. @ 05/10/24 19:51:11.197
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [0.068 seconds]
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:11.215
  May 10 19:51:11.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:51:11.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:11.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:11.258
  STEP: Creating configMap that has name configmap-test-emptyKey-d3794b6c-4a92-4a93-b9b5-a75c035d2cc5 @ 05/10/24 19:51:11.262
  May 10 19:51:11.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3675" for this suite. @ 05/10/24 19:51:11.272
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.173 seconds]
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:08.909
  May 10 19:51:08.909: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:51:08.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:08.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:08.951
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:51:08.96
  STEP: Saw pod success @ 05/10/24 19:51:13
  May 10 19:51:13.006: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod downwardapi-volume-ce942364-3952-4a50-95fc-77719d5c12a2 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:51:13.022
  May 10 19:51:13.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9085" for this suite. @ 05/10/24 19:51:13.066
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [28.217 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:01.483
  May 10 19:51:01.483: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:51:01.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:01.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:01.568
  STEP: Counting existing ResourceQuota @ 05/10/24 19:51:18.599
  STEP: Creating a ResourceQuota @ 05/10/24 19:51:23.605
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:51:23.613
  STEP: Creating a ConfigMap @ 05/10/24 19:51:25.62
  STEP: Ensuring resource quota status captures configMap creation @ 05/10/24 19:51:25.642
  STEP: Deleting a ConfigMap @ 05/10/24 19:51:27.649
  STEP: Ensuring resource quota status released usage @ 05/10/24 19:51:27.661
  May 10 19:51:29.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5794" for this suite. @ 05/10/24 19:51:29.68
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.066 seconds]
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:29.705
  May 10 19:51:29.705: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename conformance-tests @ 05/10/24 19:51:29.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:29.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:29.732
  STEP: Getting node addresses @ 05/10/24 19:51:29.735
  May 10 19:51:29.735: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  May 10 19:51:29.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2661" for this suite. @ 05/10/24 19:51:29.761
  << Timeline
------------------------------
SSS
------------------------------
• [4.207 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:29.774
  May 10 19:51:29.774: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:51:29.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:29.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:29.83
  STEP: Creating projection with secret that has name projected-secret-test-map-f7b27fdb-c72f-41d4-af26-295142c17d40 @ 05/10/24 19:51:29.835
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:51:29.85
  STEP: Saw pod success @ 05/10/24 19:51:33.899
  May 10 19:51:33.904: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-projected-secrets-8231ba32-1e45-4812-819c-d15709fe3f5a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:51:33.921
  May 10 19:51:33.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9367" for this suite. @ 05/10/24 19:51:33.969
  << Timeline
------------------------------
• [4.124 seconds]
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:33.981
  May 10 19:51:33.981: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 19:51:33.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:34.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:34.012
  May 10 19:51:38.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7162" for this suite. @ 05/10/24 19:51:38.081
  << Timeline
------------------------------
• [4.210 seconds]
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:38.107
  May 10 19:51:38.107: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:51:38.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:38.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:38.153
  STEP: creating a Pod with a static label @ 05/10/24 19:51:38.174
  STEP: watching for Pod to be ready @ 05/10/24 19:51:38.198
  May 10 19:51:38.201: INFO: observed Pod pod-test in namespace pods-6925 in phase Pending with labels: map[test-pod-static:true] & conditions []
  May 10 19:51:38.204: INFO: observed Pod pod-test in namespace pods-6925 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  }]
  May 10 19:51:38.255: INFO: observed Pod pod-test in namespace pods-6925 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  }]
  May 10 19:51:38.617: INFO: observed Pod pod-test in namespace pods-6925 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  }]
  May 10 19:51:39.176: INFO: Found Pod pod-test in namespace pods-6925 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:39 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:39 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:39 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 19:51:38 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/10/24 19:51:39.19
  STEP: getting the Pod and ensuring that it's patched @ 05/10/24 19:51:39.21
  STEP: replacing the Pod's status Ready condition to False @ 05/10/24 19:51:39.22
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/10/24 19:51:39.26
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/10/24 19:51:39.26
  STEP: watching for the Pod to be deleted @ 05/10/24 19:51:39.297
  May 10 19:51:39.299: INFO: observed event type MODIFIED
  May 10 19:51:41.193: INFO: observed event type MODIFIED
  May 10 19:51:41.369: INFO: observed event type MODIFIED
  May 10 19:51:41.434: INFO: observed event type MODIFIED
  May 10 19:51:42.197: INFO: observed event type MODIFIED
  May 10 19:51:42.247: INFO: observed event type MODIFIED
  May 10 19:51:42.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6925" for this suite. @ 05/10/24 19:51:42.291
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [8.347 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:42.322
  May 10 19:51:42.322: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 19:51:42.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:42.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:42.44
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 19:51:42.471
  STEP: create the pod with lifecycle hook @ 05/10/24 19:51:44.534
  STEP: delete the pod with lifecycle hook @ 05/10/24 19:51:46.574
  STEP: check prestop hook @ 05/10/24 19:51:50.629
  May 10 19:51:50.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6783" for this suite. @ 05/10/24 19:51:50.659
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [38.629 seconds]
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:13.087
  May 10 19:51:13.087: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename dns @ 05/10/24 19:51:13.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:13.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:13.133
  STEP: Creating a test externalName service @ 05/10/24 19:51:13.138
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-241.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local; sleep 1; done
   @ 05/10/24 19:51:13.153
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-241.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-241.svc.cluster.local; sleep 1; done
   @ 05/10/24 19:51:13.153
  STEP: creating a pod to probe DNS @ 05/10/24 19:51:13.153
  STEP: submitting the pod to kubernetes @ 05/10/24 19:51:13.153
  STEP: retrieving the pod @ 05/10/24 19:51:21.215
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:51:21.228
  May 10 19:51:21.254: INFO: DNS probes using dns-test-85c5a155-792e-46b8-8adb-9d4153ca923d succeeded

  STEP: changing the externalName to bar.example.com @ 05/10/24 19:51:21.254
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-241.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local; sleep 1; done
   @ 05/10/24 19:51:21.275
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-241.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-241.svc.cluster.local; sleep 1; done
   @ 05/10/24 19:51:21.275
  STEP: creating a second pod to probe DNS @ 05/10/24 19:51:21.275
  STEP: submitting the pod to kubernetes @ 05/10/24 19:51:21.275
  STEP: retrieving the pod @ 05/10/24 19:51:29.337
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:51:29.343
  May 10 19:51:29.353: INFO: File wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local from pod  dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 10 19:51:29.361: INFO: File jessie_udp@dns-test-service-3.dns-241.svc.cluster.local from pod  dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 10 19:51:29.361: INFO: Lookups using dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 failed for: [wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local jessie_udp@dns-test-service-3.dns-241.svc.cluster.local]

  May 10 19:51:29.373: INFO: Pod client logs for webserver: 
  May 10 19:51:29.383: INFO: Pod client logs for querier: 
  May 10 19:51:29.394: INFO: Pod client logs for jessie-querier: 
  May 10 19:51:34.351: INFO: File wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local from pod  dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 10 19:51:34.357: INFO: File jessie_udp@dns-test-service-3.dns-241.svc.cluster.local from pod  dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 10 19:51:34.357: INFO: Lookups using dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 failed for: [wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local jessie_udp@dns-test-service-3.dns-241.svc.cluster.local]

  May 10 19:51:34.370: INFO: Pod client logs for webserver: 
  May 10 19:51:34.381: INFO: Pod client logs for querier: 
  May 10 19:51:34.399: INFO: Pod client logs for jessie-querier: 
  May 10 19:51:39.352: INFO: File wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local from pod  dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 10 19:51:39.359: INFO: File jessie_udp@dns-test-service-3.dns-241.svc.cluster.local from pod  dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 10 19:51:39.359: INFO: Lookups using dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 failed for: [wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local jessie_udp@dns-test-service-3.dns-241.svc.cluster.local]

  May 10 19:51:39.370: INFO: Pod client logs for webserver: 
  May 10 19:51:39.382: INFO: Pod client logs for querier: 
  May 10 19:51:39.393: INFO: Pod client logs for jessie-querier: 
  May 10 19:51:44.356: INFO: File wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local from pod  dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 10 19:51:44.363: INFO: Lookups using dns-241/dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 failed for: [wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local]

  May 10 19:51:44.376: INFO: Pod client logs for webserver: 
  May 10 19:51:44.386: INFO: Pod client logs for querier: 
  May 10 19:51:44.397: INFO: Pod client logs for jessie-querier: 
  May 10 19:51:49.359: INFO: DNS probes using dns-test-45316146-5b1e-47c8-a6a5-38c21dbd83c0 succeeded

  STEP: changing the service to type=ClusterIP @ 05/10/24 19:51:49.359
  W0510 19:51:49.430347      24 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-241.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-241.svc.cluster.local; sleep 1; done
   @ 05/10/24 19:51:49.43
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-241.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-241.svc.cluster.local; sleep 1; done
   @ 05/10/24 19:51:49.43
  STEP: creating a third pod to probe DNS @ 05/10/24 19:51:49.43
  STEP: submitting the pod to kubernetes @ 05/10/24 19:51:49.438
  STEP: retrieving the pod @ 05/10/24 19:51:51.49
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:51:51.496
  May 10 19:51:51.514: INFO: DNS probes using dns-test-e40a507e-d655-44e1-9464-83956bdb63ae succeeded

  STEP: deleting the pod @ 05/10/24 19:51:51.514
  STEP: deleting the pod @ 05/10/24 19:51:51.551
  STEP: deleting the pod @ 05/10/24 19:51:51.575
  STEP: deleting the test externalName service @ 05/10/24 19:51:51.624
  May 10 19:51:51.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-241" for this suite. @ 05/10/24 19:51:51.704
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [3.867 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:50.676
  May 10 19:51:50.676: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:51:50.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:50.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:50.702
  STEP: Setting up server cert @ 05/10/24 19:51:50.738
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:51:51.131
  STEP: Deploying the webhook pod @ 05/10/24 19:51:51.145
  STEP: Wait for the deployment to be ready @ 05/10/24 19:51:51.162
  May 10 19:51:51.184: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:51:53.211
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:51:53.267
  May 10 19:51:54.268: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/10/24 19:51:54.281
  STEP: create a pod that should be updated by the webhook @ 05/10/24 19:51:54.301
  May 10 19:51:54.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7102" for this suite. @ 05/10/24 19:51:54.518
  STEP: Destroying namespace "webhook-markers-9566" for this suite. @ 05/10/24 19:51:54.531
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.046 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:51.722
  May 10 19:51:51.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:51:51.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:51.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:51.764
  STEP: Setting up server cert @ 05/10/24 19:51:51.812
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:51:52.271
  May 10 19:51:52.289: INFO: role binding webhook-auth-reader already exists
  STEP: Deploying the webhook pod @ 05/10/24 19:51:52.289
  STEP: Wait for the deployment to be ready @ 05/10/24 19:51:52.314
  May 10 19:51:52.329: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:51:54.381
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:51:54.453
  May 10 19:51:55.453: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/10/24 19:51:55.469
  STEP: create a namespace for the webhook @ 05/10/24 19:51:55.49
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/10/24 19:51:55.576
  May 10 19:51:55.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9463" for this suite. @ 05/10/24 19:51:55.706
  STEP: Destroying namespace "webhook-markers-9971" for this suite. @ 05/10/24 19:51:55.737
  STEP: Destroying namespace "fail-closed-namespace-7559" for this suite. @ 05/10/24 19:51:55.749
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.313 seconds]
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:54.552
  May 10 19:51:54.552: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename services @ 05/10/24 19:51:54.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:54.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:54.604
  STEP: creating service multi-endpoint-test in namespace services-4568 @ 05/10/24 19:51:54.607
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4568 to expose endpoints map[] @ 05/10/24 19:51:54.664
  May 10 19:51:54.681: INFO: successfully validated that service multi-endpoint-test in namespace services-4568 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4568 @ 05/10/24 19:51:54.681
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4568 to expose endpoints map[pod1:[100]] @ 05/10/24 19:51:56.72
  May 10 19:51:56.746: INFO: successfully validated that service multi-endpoint-test in namespace services-4568 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4568 @ 05/10/24 19:51:56.746
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4568 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/10/24 19:51:58.778
  May 10 19:51:58.803: INFO: successfully validated that service multi-endpoint-test in namespace services-4568 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/10/24 19:51:58.803
  May 10 19:51:58.803: INFO: Creating new exec pod
  May 10 19:52:01.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-4568 exec execpodntds8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  May 10 19:52:01.998: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  May 10 19:52:01.998: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:52:01.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-4568 exec execpodntds8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.207.11 80'
  May 10 19:52:02.151: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.207.11 80\nConnection to 10.109.207.11 80 port [tcp/http] succeeded!\n"
  May 10 19:52:02.151: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:52:02.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-4568 exec execpodntds8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  May 10 19:52:02.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  May 10 19:52:02.325: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:52:02.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-4568 exec execpodntds8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.207.11 81'
  May 10 19:52:02.474: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.207.11 81\nConnection to 10.109.207.11 81 port [tcp/*] succeeded!\n"
  May 10 19:52:02.474: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4568 @ 05/10/24 19:52:02.474
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4568 to expose endpoints map[pod2:[101]] @ 05/10/24 19:52:02.528
  May 10 19:52:03.609: INFO: successfully validated that service multi-endpoint-test in namespace services-4568 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4568 @ 05/10/24 19:52:03.609
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4568 to expose endpoints map[] @ 05/10/24 19:52:03.664
  May 10 19:52:04.721: INFO: successfully validated that service multi-endpoint-test in namespace services-4568 exposes endpoints map[]
  May 10 19:52:04.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4568" for this suite. @ 05/10/24 19:52:04.854
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [13.909 seconds]
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:55.785
  May 10 19:51:55.785: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:51:55.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:55.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:55.831
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:52:05.566
  STEP: Saw pod success @ 05/10/24 19:52:09.624
  May 10 19:52:09.631: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod downwardapi-volume-a9712789-96fc-4a09-8fca-1a6341524c82 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:09.651
  May 10 19:52:09.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7957" for this suite. @ 05/10/24 19:52:09.683
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [60.092 seconds]
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:51:11.293
  May 10 19:51:11.293: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:51:11.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:51:11.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:51:11.332
  May 10 19:52:11.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-935" for this suite. @ 05/10/24 19:52:11.367
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.490 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:04.874
  May 10 19:52:04.874: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:52:04.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:04.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:04.908
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/10/24 19:52:05.886
  May 10 19:52:05.886: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:52:07.842: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:52:15.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3526" for this suite. @ 05/10/24 19:52:15.345
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.083 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:11.406
  May 10 19:52:11.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:52:11.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:11.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:11.446
  STEP: Setting up server cert @ 05/10/24 19:52:11.495
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:52:12.109
  May 10 19:52:12.128: INFO: role binding webhook-auth-reader already exists
  STEP: Deploying the webhook pod @ 05/10/24 19:52:12.128
  STEP: Wait for the deployment to be ready @ 05/10/24 19:52:12.142
  May 10 19:52:12.151: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 19:52:14.166
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:52:14.214
  May 10 19:52:15.215: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/10/24 19:52:15.224
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 19:52:15.245
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/10/24 19:52:15.258
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 19:52:15.3
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/10/24 19:52:15.324
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 19:52:15.334
  May 10 19:52:15.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3121" for this suite. @ 05/10/24 19:52:15.453
  STEP: Destroying namespace "webhook-markers-9522" for this suite. @ 05/10/24 19:52:15.47
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.128 seconds]
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:15.494
  May 10 19:52:15.494: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename watch @ 05/10/24 19:52:15.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:15.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:15.546
  STEP: creating a watch on configmaps @ 05/10/24 19:52:15.553
  STEP: creating a new configmap @ 05/10/24 19:52:15.555
  STEP: modifying the configmap once @ 05/10/24 19:52:15.569
  STEP: closing the watch once it receives two notifications @ 05/10/24 19:52:15.583
  May 10 19:52:15.583: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-277  57040910-3266-47a9-a629-95d0f220b061 25050 0 2024-05-10 19:52:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:52:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:52:15.583: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-277  57040910-3266-47a9-a629-95d0f220b061 25051 0 2024-05-10 19:52:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:52:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/10/24 19:52:15.583
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/10/24 19:52:15.593
  STEP: deleting the configmap @ 05/10/24 19:52:15.595
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/10/24 19:52:15.605
  May 10 19:52:15.605: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-277  57040910-3266-47a9-a629-95d0f220b061 25052 0 2024-05-10 19:52:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:52:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:52:15.605: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-277  57040910-3266-47a9-a629-95d0f220b061 25053 0 2024-05-10 19:52:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 19:52:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:52:15.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-277" for this suite. @ 05/10/24 19:52:15.613
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.132 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:15.629
  May 10 19:52:15.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:52:15.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:15.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:15.662
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/10/24 19:52:15.669
  STEP: Saw pod success @ 05/10/24 19:52:19.699
  May 10 19:52:19.705: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-4bcdc84e-1fd6-4c56-88bc-9156beab688c container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:19.72
  May 10 19:52:19.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4583" for this suite. @ 05/10/24 19:52:19.753
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.310 seconds]
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:19.772
  May 10 19:52:19.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename services @ 05/10/24 19:52:19.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:19.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:19.803
  STEP: creating a Service @ 05/10/24 19:52:19.818
  STEP: watching for the Service to be added @ 05/10/24 19:52:19.915
  May 10 19:52:19.920: INFO: Found Service test-service-tbrrb in namespace services-3741 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31670}]
  May 10 19:52:19.920: INFO: Service test-service-tbrrb created
  STEP: Getting /status @ 05/10/24 19:52:19.92
  May 10 19:52:19.928: INFO: Service test-service-tbrrb has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/10/24 19:52:19.928
  STEP: watching for the Service to be patched @ 05/10/24 19:52:19.954
  May 10 19:52:19.961: INFO: observed Service test-service-tbrrb in namespace services-3741 with annotations: map[] & LoadBalancer: {[]}
  May 10 19:52:19.961: INFO: Found Service test-service-tbrrb in namespace services-3741 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  May 10 19:52:19.961: INFO: Service test-service-tbrrb has service status patched
  STEP: updating the ServiceStatus @ 05/10/24 19:52:19.961
  May 10 19:52:19.975: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/10/24 19:52:19.975
  May 10 19:52:19.977: INFO: Observed Service test-service-tbrrb in namespace services-3741 with annotations: map[] & Conditions: {[]}
  May 10 19:52:19.977: INFO: Observed event: &Service{ObjectMeta:{test-service-tbrrb  services-3741  c7517576-8e89-46f0-9623-56046ffa4e48 25119 0 2024-05-10 19:52:19 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-10 19:52:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-10 19:52:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31670,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.104.93.130,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.104.93.130],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  May 10 19:52:19.978: INFO: Found Service test-service-tbrrb in namespace services-3741 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 19:52:19.978: INFO: Service test-service-tbrrb has service status updated
  STEP: patching the service @ 05/10/24 19:52:19.978
  STEP: watching for the Service to be patched @ 05/10/24 19:52:19.993
  May 10 19:52:19.995: INFO: observed Service test-service-tbrrb in namespace services-3741 with labels: map[test-service-static:true]
  May 10 19:52:19.995: INFO: observed Service test-service-tbrrb in namespace services-3741 with labels: map[test-service-static:true]
  May 10 19:52:19.995: INFO: observed Service test-service-tbrrb in namespace services-3741 with labels: map[test-service-static:true]
  May 10 19:52:19.995: INFO: Found Service test-service-tbrrb in namespace services-3741 with labels: map[test-service:patched test-service-static:true]
  May 10 19:52:19.995: INFO: Service test-service-tbrrb patched
  STEP: deleting the service @ 05/10/24 19:52:19.995
  STEP: watching for the Service to be deleted @ 05/10/24 19:52:20.061
  May 10 19:52:20.064: INFO: Observed event: ADDED
  May 10 19:52:20.064: INFO: Observed event: MODIFIED
  May 10 19:52:20.064: INFO: Observed event: MODIFIED
  May 10 19:52:20.064: INFO: Observed event: MODIFIED
  May 10 19:52:20.064: INFO: Found Service test-service-tbrrb in namespace services-3741 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  May 10 19:52:20.064: INFO: Service test-service-tbrrb deleted
  May 10 19:52:20.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3741" for this suite. @ 05/10/24 19:52:20.073
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [2.789 seconds]
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:20.097
  May 10 19:52:20.097: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:52:20.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:20.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:20.158
  STEP: creating a ReplicationController @ 05/10/24 19:52:20.169
  STEP: waiting for RC to be added @ 05/10/24 19:52:20.178
  STEP: waiting for available Replicas @ 05/10/24 19:52:20.179
  STEP: patching ReplicationController @ 05/10/24 19:52:21.195
  STEP: waiting for RC to be modified @ 05/10/24 19:52:21.207
  STEP: patching ReplicationController status @ 05/10/24 19:52:21.208
  STEP: waiting for RC to be modified @ 05/10/24 19:52:21.228
  STEP: waiting for available Replicas @ 05/10/24 19:52:21.228
  STEP: fetching ReplicationController status @ 05/10/24 19:52:21.236
  STEP: patching ReplicationController scale @ 05/10/24 19:52:21.241
  STEP: waiting for RC to be modified @ 05/10/24 19:52:21.258
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/10/24 19:52:21.258
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/10/24 19:52:22.751
  STEP: updating ReplicationController status @ 05/10/24 19:52:22.755
  STEP: waiting for RC to be modified @ 05/10/24 19:52:22.761
  STEP: listing all ReplicationControllers @ 05/10/24 19:52:22.761
  STEP: checking that ReplicationController has expected values @ 05/10/24 19:52:22.767
  STEP: deleting ReplicationControllers by collection @ 05/10/24 19:52:22.767
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/10/24 19:52:22.777
  E0510 19:52:22.869241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:52:22.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2668" for this suite. @ 05/10/24 19:52:22.877
  << Timeline
------------------------------
SS
------------------------------
• [2.201 seconds]
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:22.892
  May 10 19:52:22.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:52:22.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:22.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:22.935
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:52:22.942
  E0510 19:52:23.869373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:24.869792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:52:24.966
  May 10 19:52:24.971: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod downwardapi-volume-c2881337-9172-4d10-9e25-5602101367a6 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:24.981
  May 10 19:52:25.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1464" for this suite. @ 05/10/24 19:52:25.051
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [15.770 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:09.706
  May 10 19:52:09.706: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:52:09.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:09.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:09.745
  STEP: Setting up server cert @ 05/10/24 19:52:09.797
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:52:09.963
  STEP: Deploying the webhook pod @ 05/10/24 19:52:09.974
  STEP: Wait for the deployment to be ready @ 05/10/24 19:52:09.998
  May 10 19:52:10.017: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:52:12.038
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:52:12.081
  May 10 19:52:13.081: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/10/24 19:52:13.094
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:52:13.094
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/10/24 19:52:13.114
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/10/24 19:52:14.129
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:52:14.129
  STEP: Having no error when timeout is longer than webhook latency @ 05/10/24 19:52:15.182
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:52:15.182
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/10/24 19:52:20.237
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 19:52:20.237
  May 10 19:52:25.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-152" for this suite. @ 05/10/24 19:52:25.429
  STEP: Destroying namespace "webhook-markers-1340" for this suite. @ 05/10/24 19:52:25.462
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.150 seconds]
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:25.113
  May 10 19:52:25.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:52:25.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:25.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:25.161
  E0510 19:52:25.870133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:26.870872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:52:27.200: INFO: Deleting pod "var-expansion-33b1a920-274d-4a6d-9a6a-93647bc972dc" in namespace "var-expansion-6394"
  May 10 19:52:27.215: INFO: Wait up to 5m0s for pod "var-expansion-33b1a920-274d-4a6d-9a6a-93647bc972dc" to be fully deleted
  E0510 19:52:27.871670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:28.872520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:29.872876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:30.873901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:52:31.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6394" for this suite. @ 05/10/24 19:52:31.25
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [6.247 seconds]
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:25.503
  May 10 19:52:25.503: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/10/24 19:52:25.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:25.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:25.549
  STEP: mirroring a new custom Endpoint @ 05/10/24 19:52:25.632
  May 10 19:52:25.647: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/10/24 19:52:27.655
  May 10 19:52:27.673: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 05/10/24 19:52:29.68
  May 10 19:52:29.716: INFO: Waiting for 0 EndpointSlices to exist, got 1
  May 10 19:52:31.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5931" for this suite. @ 05/10/24 19:52:31.736
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.199 seconds]
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:31.758
  May 10 19:52:31.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 19:52:31.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:31.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:31.798
  May 10 19:52:31.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8336" for this suite. @ 05/10/24 19:52:31.939
  << Timeline
------------------------------
SSSSS
------------------------------
• [1.871 seconds]
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:31.268
  May 10 19:52:31.268: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:52:31.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:31.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:31.298
  May 10 19:52:31.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9223 create -f -'
  May 10 19:52:31.429: INFO: stderr: ""
  May 10 19:52:31.429: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  May 10 19:52:31.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9223 create -f -'
  May 10 19:52:31.586: INFO: stderr: ""
  May 10 19:52:31.586: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 19:52:31.586
  E0510 19:52:31.874807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:52:32.600: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:52:32.600: INFO: Found 1 / 1
  May 10 19:52:32.600: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 10 19:52:32.620: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:52:32.621: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:52:32.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9223 describe pod agnhost-primary-nh87f'
  May 10 19:52:32.696: INFO: stderr: ""
  May 10 19:52:32.696: INFO: stdout: "Name:             agnhost-primary-nh87f\nNamespace:        kubectl-9223\nPriority:         0\nService Account:  default\nNode:             ip-172-31-181-233.eu-west-3.compute.internal/172.31.181.233\nStart Time:       Fri, 10 May 2024 19:52:31 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: b439e2d0149d255b9f16744cc26f097d7775ac8666ce37cc51c1a917b5680eb8\n                  cni.projectcalico.org/podIP: 10.244.7.76/32\n                  cni.projectcalico.org/podIPs: 10.244.7.76/32\nStatus:           Running\nIP:               10.244.7.76\nIPs:\n  IP:           10.244.7.76\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://1824aa77df576d4223792976f712d33f73c2ad04e469cd43cf38a8e506cba960\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 10 May 2024 19:52:32 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-4q9xm (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-4q9xm:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9223/agnhost-primary-nh87f to ip-172-31-181-233.eu-west-3.compute.internal\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  May 10 19:52:32.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9223 describe rc agnhost-primary'
  May 10 19:52:32.772: INFO: stderr: ""
  May 10 19:52:32.772: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9223\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-nh87f\n"
  May 10 19:52:32.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9223 describe service agnhost-primary'
  May 10 19:52:32.849: INFO: stderr: ""
  May 10 19:52:32.849: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9223\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.100.162.67\nIPs:               10.100.162.67\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.7.76:6379\nSession Affinity:  None\nEvents:            <none>\n"
  May 10 19:52:32.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9223 describe node ip-172-31-180-207.eu-west-3.compute.internal'
  E0510 19:52:32.875101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:52:33.030: INFO: stderr: ""
  May 10 19:52:33.030: INFO: stdout: "Name:               ip-172-31-180-207.eu-west-3.compute.internal\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=t3.medium\n                    beta.kubernetes.io/os=linux\n                    custom-label-to-add=custom-value\n                    failure-domain.beta.kubernetes.io/region=eu-west-3\n                    failure-domain.beta.kubernetes.io/zone=eu-west-3a\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-180-207.eu-west-3.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\n                    node.kubernetes.io/instance-type=t3.medium\n                    topology.ebs.csi.aws.com/zone=eu-west-3a\n                    topology.kubernetes.io/region=eu-west-3\n                    topology.kubernetes.io/zone=eu-west-3a\n                    v1.kubeone.io/operating-system=ubuntu\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.180.207\n                    csi.volume.kubernetes.io/nodeid: {\"ebs.csi.aws.com\":\"i-0b27a2968a2c52351\"}\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"fa:c0:b6:cd:d1:6e\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.180.207\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 10 May 2024 19:10:22 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-180-207.eu-west-3.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 10 May 2024 19:52:25 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Fri, 10 May 2024 19:13:32 +0000   Fri, 10 May 2024 19:13:32 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Fri, 10 May 2024 19:50:10 +0000   Fri, 10 May 2024 19:10:22 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Fri, 10 May 2024 19:50:10 +0000   Fri, 10 May 2024 19:10:22 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Fri, 10 May 2024 19:50:10 +0000   Fri, 10 May 2024 19:10:22 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Fri, 10 May 2024 19:50:10 +0000   Fri, 10 May 2024 19:14:29 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:   172.31.180.207\n  ExternalIP:   15.237.193.204\n  InternalDNS:  ip-172-31-180-207.eu-west-3.compute.internal\n  Hostname:     ip-172-31-180-207.eu-west-3.compute.internal\n  ExternalDNS:  ec2-15-237-193-204.eu-west-3.compute.amazonaws.com\nCapacity:\n  cpu:                2\n  ephemeral-storage:  101430960Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3919472Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  93478772582\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3817072Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec24af2f998b0393856f41effcd64f98\n  System UUID:                ec24af2f-998b-0393-856f-41effcd64f98\n  Boot ID:                    891ed9a8-2f84-46fd-8fa8-4118068dc51e\n  Kernel Version:             6.5.0-1018-aws\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.31\n  Kubelet Version:            v1.29.4\n  Kube-Proxy Version:         v1.29.4\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nProviderID:                   aws:///eu-west-3a/i-0b27a2968a2c52351\nNon-terminated Pods:          (18 in total)\n  Namespace                   Name                                                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                                    ------------  ----------  ---------------  -------------  ---\n  kube-system                 aws-cloud-controller-manager-njf5g                                      200m (10%)    0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 calico-kube-controllers-7fbcfc6b49-srcmk                                0 (0%)        0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 canal-2znbg                                                             250m (12%)    0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 coredns-778c49ccf5-pc9vn                                                100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     20m\n  kube-system                 ebs-csi-controller-7dbbcc55d8-d52k6                                     60m (3%)      0 (0%)      240Mi (6%)       1536Mi (41%)   39m\n  kube-system                 ebs-csi-controller-7dbbcc55d8-fgntc                                     60m (3%)      0 (0%)      240Mi (6%)       1536Mi (41%)   39m\n  kube-system                 ebs-csi-node-95zrw                                                      30m (1%)      0 (0%)      120Mi (3%)       768Mi (20%)    39m\n  kube-system                 etcd-ip-172-31-180-207.eu-west-3.compute.internal                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         42m\n  kube-system                 kube-apiserver-ip-172-31-180-207.eu-west-3.compute.internal             250m (12%)    0 (0%)      0 (0%)           0 (0%)         42m\n  kube-system                 kube-controller-manager-ip-172-31-180-207.eu-west-3.compute.internal    200m (10%)    0 (0%)      0 (0%)           0 (0%)         40m\n  kube-system                 kube-proxy-4kppc                                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         42m\n  kube-system                 kube-scheduler-ip-172-31-180-207.eu-west-3.compute.internal             100m (5%)     0 (0%)      0 (0%)           0 (0%)         42m\n  kube-system                 metrics-server-b65cdc569-225ql                                          100m (5%)     0 (0%)      200Mi (5%)       0 (0%)         39m\n  kube-system                 node-local-dns-9btsq                                                    25m (1%)      0 (0%)      5Mi (0%)         0 (0%)         39m\n  kube-system                 snapshot-controller-66b5f64467-45cgv                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 snapshot-controller-66b5f64467-bv4v9                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 snapshot-webhook-76f5cfd4-bnpch                                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 snapshot-webhook-76f5cfd4-kk5hx                                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         39m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1475m (73%)  0 (0%)\n  memory             975Mi (26%)  4010Mi (107%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:\n  Type     Reason                   Age                From                   Message\n  ----     ------                   ----               ----                   -------\n  Normal   Starting                 42m                kube-proxy             \n  Normal   NodeAllocatableEnforced  42m                kubelet                Updated Node Allocatable limit across pods\n  Normal   Starting                 42m                kubelet                Starting kubelet.\n  Warning  InvalidDiskCapacity      42m                kubelet                invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     42m (x7 over 42m)  kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  42m (x8 over 42m)  kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    42m (x7 over 42m)  kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasNoDiskPressure\n  Normal   NodeHasNoDiskPressure    42m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasNoDiskPressure\n  Normal   Starting                 42m                kubelet                Starting kubelet.\n  Warning  InvalidDiskCapacity      42m                kubelet                invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  42m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     42m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  42m                kubelet                Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           42m                node-controller        Node ip-172-31-180-207.eu-west-3.compute.internal event: Registered Node ip-172-31-180-207.eu-west-3.compute.internal in Controller\n  Normal   RegisteredNode           39m                node-controller        Node ip-172-31-180-207.eu-west-3.compute.internal event: Registered Node ip-172-31-180-207.eu-west-3.compute.internal in Controller\n  Normal   NodeReady                39m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeReady\n  Normal   Synced                   38m                cloud-node-controller  Node synced successfully\n  Normal   Starting                 38m                kubelet                Starting kubelet.\n  Warning  InvalidDiskCapacity      38m                kubelet                invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  38m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    38m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     38m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeHasSufficientPID\n  Normal   NodeNotReady             38m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeNotReady\n  Normal   NodeAllocatableEnforced  38m                kubelet                Updated Node Allocatable limit across pods\n  Normal   NodeReady                38m                kubelet                Node ip-172-31-180-207.eu-west-3.compute.internal status is now: NodeReady\n"
  May 10 19:52:33.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9223 describe namespace kubectl-9223'
  May 10 19:52:33.113: INFO: stderr: ""
  May 10 19:52:33.113: INFO: stdout: "Name:         kubectl-9223\nLabels:       e2e-framework=kubectl\n              e2e-run=8fdaa902-2b84-4fa5-a877-e6d9123acc6e\n              kubernetes.io/metadata.name=kubectl-9223\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  May 10 19:52:33.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9223" for this suite. @ 05/10/24 19:52:33.125
  << Timeline
------------------------------
S
------------------------------
• [4.191 seconds]
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:31.96
  May 10 19:52:31.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 19:52:31.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:31.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:32.004
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/10/24 19:52:32.009
  STEP: Saw pod success @ 05/10/24 19:52:36.048
  May 10 19:52:36.054: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-9198b41a-bebe-4abe-8fa1-d7299ee47dd3 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:36.074
  May 10 19:52:36.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5832" for this suite. @ 05/10/24 19:52:36.134
  << Timeline
------------------------------
SS
------------------------------
• [3.194 seconds]
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:33.141
  May 10 19:52:33.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:52:33.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:33.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:33.18
  May 10 19:52:33.188: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  W0510 19:52:33.189366      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000bafae0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0510 19:52:33.876208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:34.876492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0510 19:52:35.752444      22 warnings.go:70] unknown field "alpha"
  W0510 19:52:35.752451      22 warnings.go:70] unknown field "beta"
  W0510 19:52:35.752453      22 warnings.go:70] unknown field "delta"
  W0510 19:52:35.752455      22 warnings.go:70] unknown field "epsilon"
  W0510 19:52:35.752457      22 warnings.go:70] unknown field "gamma"
  E0510 19:52:35.876888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:52:36.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4005" for this suite. @ 05/10/24 19:52:36.326
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.304 seconds]
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:36.153
  May 10 19:52:36.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename ingress @ 05/10/24 19:52:36.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:36.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:36.19
  STEP: getting /apis @ 05/10/24 19:52:36.194
  STEP: getting /apis/networking.k8s.io @ 05/10/24 19:52:36.2
  STEP: getting /apis/networking.k8s.iov1 @ 05/10/24 19:52:36.201
  STEP: creating @ 05/10/24 19:52:36.203
  STEP: getting @ 05/10/24 19:52:36.246
  STEP: listing @ 05/10/24 19:52:36.257
  STEP: watching @ 05/10/24 19:52:36.268
  May 10 19:52:36.268: INFO: starting watch
  STEP: cluster-wide listing @ 05/10/24 19:52:36.272
  STEP: cluster-wide watching @ 05/10/24 19:52:36.282
  May 10 19:52:36.282: INFO: starting watch
  STEP: patching @ 05/10/24 19:52:36.285
  STEP: updating @ 05/10/24 19:52:36.3
  May 10 19:52:36.325: INFO: waiting for watch events with expected annotations
  May 10 19:52:36.325: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/10/24 19:52:36.325
  STEP: updating /status @ 05/10/24 19:52:36.361
  STEP: get /status @ 05/10/24 19:52:36.374
  STEP: deleting @ 05/10/24 19:52:36.383
  STEP: deleting a collection @ 05/10/24 19:52:36.409
  May 10 19:52:36.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2866" for this suite. @ 05/10/24 19:52:36.447
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.173 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:36.462
  May 10 19:52:36.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:52:36.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:36.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:36.5
  STEP: Creating configMap with name projected-configmap-test-volume-18af3bbe-f602-486e-970e-65fee87b66be @ 05/10/24 19:52:36.505
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:52:36.522
  STEP: Saw pod success @ 05/10/24 19:52:40.564
  May 10 19:52:40.570: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-projected-configmaps-8da6a607-cfe1-4ff6-8286-dd96be4ac008 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:52:40.593
  May 10 19:52:40.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6093" for this suite. @ 05/10/24 19:52:40.626
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [5.190 seconds]
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:40.642
  May 10 19:52:40.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:52:40.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:40.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:40.692
  STEP: Create a Replicaset @ 05/10/24 19:52:40.703
  STEP: Verify that the required pods have come up. @ 05/10/24 19:52:40.712
  May 10 19:52:40.722: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 10 19:52:45.738: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 19:52:45.738
  STEP: Getting /status @ 05/10/24 19:52:45.739
  May 10 19:52:45.759: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/10/24 19:52:45.759
  May 10 19:52:45.786: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/10/24 19:52:45.786
  May 10 19:52:45.789: INFO: Observed &ReplicaSet event: ADDED
  May 10 19:52:45.789: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:52:45.789: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:52:45.789: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:52:45.789: INFO: Found replicaset test-rs in namespace replicaset-6917 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 19:52:45.789: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/10/24 19:52:45.789
  May 10 19:52:45.789: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 10 19:52:45.805: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/10/24 19:52:45.805
  May 10 19:52:45.808: INFO: Observed &ReplicaSet event: ADDED
  May 10 19:52:45.808: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:52:45.808: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:52:45.808: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:52:45.808: INFO: Observed replicaset test-rs in namespace replicaset-6917 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 10 19:52:45.808: INFO: Observed &ReplicaSet event: MODIFIED
  May 10 19:52:45.808: INFO: Found replicaset test-rs in namespace replicaset-6917 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May 10 19:52:45.808: INFO: Replicaset test-rs has a patched status
  May 10 19:52:45.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6917" for this suite. @ 05/10/24 19:52:45.82
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.705 seconds]
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:45.843
  May 10 19:52:45.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:52:45.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:45.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:45.882
  STEP: Creating the pod @ 05/10/24 19:52:45.887
  May 10 19:52:48.469: INFO: Successfully updated pod "annotationupdate79a1b42d-5966-47d6-a02d-b5f6462a3c11"
  May 10 19:52:52.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2050" for this suite. @ 05/10/24 19:52:52.524
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.724 seconds]
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:52.568
  May 10 19:52:52.568: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:52:52.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:52.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:52.635
  STEP: Creating the pod @ 05/10/24 19:52:52.641
  May 10 19:52:55.218: INFO: Successfully updated pod "labelsupdate9ef69446-2cee-48a5-bb6e-960dc114609f"
  May 10 19:52:59.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8147" for this suite. @ 05/10/24 19:52:59.28
  << Timeline
------------------------------
SSSSSS
------------------------------
• [41.172 seconds]
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:59.296
  May 10 19:52:59.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename init-container @ 05/10/24 19:52:59.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:59.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:59.356
  STEP: creating the pod @ 05/10/24 19:52:59.364
  May 10 19:52:59.364: INFO: PodSpec: initContainers in spec.initContainers
  May 10 19:53:40.425: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-2637c582-1bd0-44d0-a7db-295aaef5f2f2", GenerateName:"", Namespace:"init-container-5103", SelfLink:"", UID:"ac633b76-8241-4470-a462-0033b4fb4350", ResourceVersion:"26035", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"364357598"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"4e871688c0c9607ba64abb08e3146394e623dc4a58572a8ad4f29af7f0cb902d", "cni.projectcalico.org/podIP":"10.244.7.78/32", "cni.projectcalico.org/podIPs":"10.244.7.78/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00518f050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00518f080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 19, 53, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00518f0b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-j4qp7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000920c20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j4qp7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j4qp7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j4qp7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003b5cca0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-181-233.eu-west-3.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0005bb500), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003b5cd20)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003b5cd40)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003b5cd48), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003b5cd4c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000c6e170), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 53, 0, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.181.233", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.181.233"}}, PodIP:"10.244.7.78", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.7.78"}}, StartTime:time.Date(2024, time.May, 10, 19, 52, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005bb5e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005bb650)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://33cdb956a4a1dddd448bee3d1be08e7b754defe0108946608e7a2786f3eccf45", Started:(*bool)(0xc003b5cdea), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000920cc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003b5cdff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000920ca0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003b5cdcf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  May 10 19:53:40.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5103" for this suite. @ 05/10/24 19:53:40.436
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [5.014 seconds]
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:40.475
  May 10 19:53:40.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/10/24 19:53:40.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:40.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:40.512
  STEP: Setting up the test @ 05/10/24 19:53:40.517
  STEP: Creating hostNetwork=false pod @ 05/10/24 19:53:40.517
  STEP: Creating hostNetwork=true pod @ 05/10/24 19:53:42.555
  STEP: Running the test @ 05/10/24 19:53:44.594
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/10/24 19:53:44.594
  May 10 19:53:44.594: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:44.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:44.594: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:44.594: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:53:44.698: INFO: Exec stderr: ""
  May 10 19:53:44.698: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:44.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:44.698: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:44.698: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:53:44.780: INFO: Exec stderr: ""
  May 10 19:53:44.780: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:44.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:44.781: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:44.781: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:53:44.863: INFO: Exec stderr: ""
  May 10 19:53:44.863: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:44.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:44.863: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:44.863: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:53:44.955: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/10/24 19:53:44.955
  May 10 19:53:44.955: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:44.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:44.956: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:44.956: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 10 19:53:45.050: INFO: Exec stderr: ""
  May 10 19:53:45.050: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:45.050: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:45.050: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:45.050: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 10 19:53:45.134: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/10/24 19:53:45.134
  May 10 19:53:45.134: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:45.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:45.135: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:45.135: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:53:45.243: INFO: Exec stderr: ""
  May 10 19:53:45.243: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:45.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:45.243: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:45.243: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 10 19:53:45.322: INFO: Exec stderr: ""
  May 10 19:53:45.322: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:45.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:45.322: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:45.322: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:53:45.394: INFO: Exec stderr: ""
  May 10 19:53:45.394: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9564 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 19:53:45.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:53:45.394: INFO: ExecWithOptions: Clientset creation
  May 10 19:53:45.394: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9564/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 10 19:53:45.461: INFO: Exec stderr: ""
  May 10 19:53:45.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9564" for this suite. @ 05/10/24 19:53:45.475
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.240 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:45.507
  May 10 19:53:45.507: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:53:45.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:45.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:45.551
  STEP: Creating configMap with name configmap-test-volume-c15db0a1-a971-4219-aec0-0c53cda33c64 @ 05/10/24 19:53:45.559
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:53:45.569
  STEP: Saw pod success @ 05/10/24 19:53:49.623
  May 10 19:53:49.638: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-configmaps-64bb4e31-f49a-4459-9822-54eab176bf39 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:53:49.662
  May 10 19:53:49.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8507" for this suite. @ 05/10/24 19:53:49.735
  << Timeline
------------------------------
SS
------------------------------
• [0.368 seconds]
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:49.75
  May 10 19:53:49.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename apf @ 05/10/24 19:53:49.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:49.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:49.795
  STEP: getting /apis @ 05/10/24 19:53:49.821
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/10/24 19:53:49.828
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/10/24 19:53:49.83
  STEP: creating @ 05/10/24 19:53:49.832
  STEP: getting @ 05/10/24 19:53:49.878
  STEP: listing @ 05/10/24 19:53:49.891
  STEP: watching @ 05/10/24 19:53:49.897
  May 10 19:53:49.897: INFO: starting watch
  STEP: patching @ 05/10/24 19:53:49.899
  STEP: updating @ 05/10/24 19:53:49.915
  May 10 19:53:49.933: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/10/24 19:53:49.933
  STEP: patching /status @ 05/10/24 19:53:49.94
  STEP: updating /status @ 05/10/24 19:53:49.962
  STEP: deleting @ 05/10/24 19:53:49.996
  STEP: deleting a collection @ 05/10/24 19:53:50.047
  May 10 19:53:50.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1956" for this suite. @ 05/10/24 19:53:50.103
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [2.131 seconds]
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:50.126
  May 10 19:53:50.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:53:50.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:50.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:50.183
  May 10 19:53:52.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2202" for this suite. @ 05/10/24 19:53:52.246
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [84.105 seconds]
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:36.343
  May 10 19:52:36.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 19:52:36.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:36.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:36.388
  STEP: Creating a ReplaceConcurrent cronjob @ 05/10/24 19:52:36.392
  STEP: Ensuring a job is scheduled @ 05/10/24 19:52:36.401
  E0510 19:52:36.877064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:37.877962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:38.878709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:39.879192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:40.879288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:41.879327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:42.879969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:43.881013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:44.881368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:45.881345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:46.882242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:47.882994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:48.883894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:49.884195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:50.884785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:51.885151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:52.885997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:53.886119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:54.886253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:55.886904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:56.887662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:57.887980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:58.888702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:52:59.889316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/10/24 19:53:00.406
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/10/24 19:53:00.41
  STEP: Ensuring the job is replaced with a new one @ 05/10/24 19:53:00.414
  E0510 19:53:00.889998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:01.890684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:02.891151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:03.891553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:04.891980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:05.892791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:06.893641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:07.894045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:08.894523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:09.895454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:10.896133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:11.897275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:12.898123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:13.898361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:14.899435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:15.900522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:16.901228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:17.901295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:18.902140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:19.903164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:20.903406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:21.903916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:22.904925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:23.905892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:24.906079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:25.906477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:26.907259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:27.907770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:28.908205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:29.908342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:30.908559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:31.909405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:32.909781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:33.909841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:34.910523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:35.911068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:36.911040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:37.912144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:38.912712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:39.913360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:40.914424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:41.915476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:42.916237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:43.916541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:44.917379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:45.918046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:46.919146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:47.919333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:48.920235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:49.921285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:50.922344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:51.922521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:52.923430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:53.924291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:54.924465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:55.925103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:56.925480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:57.926477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:58.927133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:53:59.928091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/10/24 19:54:00.42
  May 10 19:54:00.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1824" for this suite. @ 05/10/24 19:54:00.439
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [22.188 seconds]
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:00.457
  May 10 19:54:00.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:54:00.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:00.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:00.495
  STEP: Creating pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494 @ 05/10/24 19:54:00.499
  E0510 19:54:00.928359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:01.928993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:54:02.528
  May 10 19:54:02.533: INFO: Initial restart count of pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 is 0
  May 10 19:54:02.538: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:02.929781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:03.930497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:04.544: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:04.931174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:05.931851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:06.551: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:06.931925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:07.932769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:08.560: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:08.933000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:09.933470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:10.565: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:10.933588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:11.934457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:12.570: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:12.934881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:13.935876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:14.578: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:14.936001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:15.937043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:16.587: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:16.937605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:17.937684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:18.592: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:18.938310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:19.939398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:20.599: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  E0510 19:54:20.939790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:21.939996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:22.605: INFO: Get pod liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 in namespace container-probe-494
  May 10 19:54:22.605: INFO: Restart count of pod container-probe-494/liveness-832a634c-359d-40ca-b6a4-1cc6e3f68599 is now 1 (20.071571589s elapsed)
  STEP: deleting the pod @ 05/10/24 19:54:22.605
  May 10 19:54:22.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-494" for this suite. @ 05/10/24 19:54:22.633
  << Timeline
------------------------------
S
------------------------------
• [13.602 seconds]
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:22.647
  May 10 19:54:22.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:54:22.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:22.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:22.698
  STEP: creating a replication controller @ 05/10/24 19:54:22.704
  May 10 19:54:22.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 create -f -'
  May 10 19:54:22.820: INFO: stderr: ""
  May 10 19:54:22.820: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 19:54:22.82
  May 10 19:54:22.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:54:22.878: INFO: stderr: ""
  May 10 19:54:22.878: INFO: stdout: "update-demo-nautilus-2nffv update-demo-nautilus-fsk8h "
  May 10 19:54:22.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-2nffv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:22.935: INFO: stderr: ""
  May 10 19:54:22.935: INFO: stdout: ""
  May 10 19:54:22.935: INFO: update-demo-nautilus-2nffv is created but not running
  E0510 19:54:22.940532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:23.940779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:24.941343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:25.942274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:26.942890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:27.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0510 19:54:27.943504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:28.006: INFO: stderr: ""
  May 10 19:54:28.006: INFO: stdout: "update-demo-nautilus-2nffv update-demo-nautilus-fsk8h "
  May 10 19:54:28.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-2nffv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:28.067: INFO: stderr: ""
  May 10 19:54:28.067: INFO: stdout: "true"
  May 10 19:54:28.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-2nffv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:54:28.136: INFO: stderr: ""
  May 10 19:54:28.136: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:54:28.136: INFO: validating pod update-demo-nautilus-2nffv
  May 10 19:54:28.155: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:54:28.155: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:54:28.155: INFO: update-demo-nautilus-2nffv is verified up and running
  May 10 19:54:28.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-fsk8h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:28.217: INFO: stderr: ""
  May 10 19:54:28.217: INFO: stdout: "true"
  May 10 19:54:28.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-fsk8h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:54:28.283: INFO: stderr: ""
  May 10 19:54:28.283: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:54:28.283: INFO: validating pod update-demo-nautilus-fsk8h
  May 10 19:54:28.289: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:54:28.289: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:54:28.289: INFO: update-demo-nautilus-fsk8h is verified up and running
  STEP: scaling down the replication controller @ 05/10/24 19:54:28.289
  May 10 19:54:28.290: INFO: scanned /root for discovery docs: <nil>
  May 10 19:54:28.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0510 19:54:28.944226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:29.398: INFO: stderr: ""
  May 10 19:54:29.398: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 19:54:29.398
  May 10 19:54:29.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:54:29.462: INFO: stderr: ""
  May 10 19:54:29.462: INFO: stdout: "update-demo-nautilus-2nffv update-demo-nautilus-fsk8h "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/10/24 19:54:29.462
  E0510 19:54:29.945074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:30.945645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:31.946030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:32.946319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:33.946975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:34.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:54:34.526: INFO: stderr: ""
  May 10 19:54:34.526: INFO: stdout: "update-demo-nautilus-fsk8h "
  May 10 19:54:34.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-fsk8h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:34.585: INFO: stderr: ""
  May 10 19:54:34.585: INFO: stdout: "true"
  May 10 19:54:34.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-fsk8h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:54:34.639: INFO: stderr: ""
  May 10 19:54:34.639: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:54:34.639: INFO: validating pod update-demo-nautilus-fsk8h
  May 10 19:54:34.645: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:54:34.645: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:54:34.645: INFO: update-demo-nautilus-fsk8h is verified up and running
  STEP: scaling up the replication controller @ 05/10/24 19:54:34.645
  May 10 19:54:34.646: INFO: scanned /root for discovery docs: <nil>
  May 10 19:54:34.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0510 19:54:34.948106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:35.730: INFO: stderr: ""
  May 10 19:54:35.730: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 19:54:35.73
  May 10 19:54:35.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:54:35.789: INFO: stderr: ""
  May 10 19:54:35.789: INFO: stdout: "update-demo-nautilus-cw8pp update-demo-nautilus-fsk8h "
  May 10 19:54:35.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-cw8pp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:35.846: INFO: stderr: ""
  May 10 19:54:35.846: INFO: stdout: "true"
  May 10 19:54:35.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-cw8pp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:54:35.904: INFO: stderr: ""
  May 10 19:54:35.904: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:54:35.904: INFO: validating pod update-demo-nautilus-cw8pp
  May 10 19:54:35.911: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:54:35.911: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:54:35.911: INFO: update-demo-nautilus-cw8pp is verified up and running
  May 10 19:54:35.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-fsk8h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0510 19:54:35.948396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:35.975: INFO: stderr: ""
  May 10 19:54:35.975: INFO: stdout: "true"
  May 10 19:54:35.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods update-demo-nautilus-fsk8h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:54:36.032: INFO: stderr: ""
  May 10 19:54:36.032: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:54:36.032: INFO: validating pod update-demo-nautilus-fsk8h
  May 10 19:54:36.037: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:54:36.037: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:54:36.037: INFO: update-demo-nautilus-fsk8h is verified up and running
  STEP: using delete to clean up resources @ 05/10/24 19:54:36.037
  May 10 19:54:36.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 delete --grace-period=0 --force -f -'
  May 10 19:54:36.103: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:54:36.103: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 10 19:54:36.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get rc,svc -l name=update-demo --no-headers'
  May 10 19:54:36.169: INFO: stderr: "No resources found in kubectl-5977 namespace.\n"
  May 10 19:54:36.169: INFO: stdout: ""
  May 10 19:54:36.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-5977 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 10 19:54:36.229: INFO: stderr: ""
  May 10 19:54:36.229: INFO: stdout: ""
  May 10 19:54:36.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5977" for this suite. @ 05/10/24 19:54:36.239
  << Timeline
------------------------------
SSSS
------------------------------
• [4.117 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:36.252
  May 10 19:54:36.252: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:54:36.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:36.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:36.285
  STEP: Setting up server cert @ 05/10/24 19:54:36.355
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:54:36.82
  STEP: Deploying the webhook pod @ 05/10/24 19:54:36.837
  STEP: Wait for the deployment to be ready @ 05/10/24 19:54:36.855
  May 10 19:54:36.864: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0510 19:54:36.949066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:37.949690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 19:54:38.896
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:54:38.92
  E0510 19:54:38.950475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:39.921: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0510 19:54:39.951376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 05/10/24 19:54:40.019
  STEP: Creating a configMap that should be mutated @ 05/10/24 19:54:40.037
  STEP: Deleting the collection of validation webhooks @ 05/10/24 19:54:40.077
  STEP: Creating a configMap that should not be mutated @ 05/10/24 19:54:40.177
  May 10 19:54:40.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3293" for this suite. @ 05/10/24 19:54:40.326
  STEP: Destroying namespace "webhook-markers-9073" for this suite. @ 05/10/24 19:54:40.346
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.871 seconds]
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:40.38
  May 10 19:54:40.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:54:40.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:40.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:40.43
  STEP: creating a replication controller @ 05/10/24 19:54:40.437
  May 10 19:54:40.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 create -f -'
  May 10 19:54:40.552: INFO: stderr: ""
  May 10 19:54:40.552: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 19:54:40.552
  May 10 19:54:40.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:54:40.634: INFO: stderr: ""
  May 10 19:54:40.634: INFO: stdout: "update-demo-nautilus-5s6dr update-demo-nautilus-f55z4 "
  May 10 19:54:40.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods update-demo-nautilus-5s6dr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:40.697: INFO: stderr: ""
  May 10 19:54:40.697: INFO: stdout: ""
  May 10 19:54:40.697: INFO: update-demo-nautilus-5s6dr is created but not running
  E0510 19:54:40.952394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:41.953341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:42.953489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:43.954004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:44.954203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:45.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 10 19:54:45.759: INFO: stderr: ""
  May 10 19:54:45.759: INFO: stdout: "update-demo-nautilus-5s6dr update-demo-nautilus-f55z4 "
  May 10 19:54:45.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods update-demo-nautilus-5s6dr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:45.818: INFO: stderr: ""
  May 10 19:54:45.818: INFO: stdout: "true"
  May 10 19:54:45.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods update-demo-nautilus-5s6dr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 10 19:54:45.877: INFO: stderr: ""
  May 10 19:54:45.877: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:54:45.877: INFO: validating pod update-demo-nautilus-5s6dr
  May 10 19:54:45.886: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:54:45.886: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:54:45.886: INFO: update-demo-nautilus-5s6dr is verified up and running
  May 10 19:54:45.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods update-demo-nautilus-f55z4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 10 19:54:45.950: INFO: stderr: ""
  May 10 19:54:45.950: INFO: stdout: "true"
  May 10 19:54:45.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods update-demo-nautilus-f55z4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0510 19:54:45.955188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:46.011: INFO: stderr: ""
  May 10 19:54:46.011: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 10 19:54:46.011: INFO: validating pod update-demo-nautilus-f55z4
  May 10 19:54:46.020: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 10 19:54:46.020: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 10 19:54:46.020: INFO: update-demo-nautilus-f55z4 is verified up and running
  STEP: using delete to clean up resources @ 05/10/24 19:54:46.02
  May 10 19:54:46.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 delete --grace-period=0 --force -f -'
  May 10 19:54:46.093: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 19:54:46.093: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 10 19:54:46.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get rc,svc -l name=update-demo --no-headers'
  May 10 19:54:46.178: INFO: stderr: "No resources found in kubectl-9928 namespace.\n"
  May 10 19:54:46.178: INFO: stdout: ""
  May 10 19:54:46.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-9928 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 10 19:54:46.234: INFO: stderr: ""
  May 10 19:54:46.234: INFO: stdout: ""
  May 10 19:54:46.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9928" for this suite. @ 05/10/24 19:54:46.243
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.182 seconds]
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:46.256
  May 10 19:54:46.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:54:46.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:46.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:46.296
  STEP: Creating configMap with name configmap-test-upd-37fe3e38-4c9b-4f6a-9917-97d992241032 @ 05/10/24 19:54:46.31
  STEP: Creating the pod @ 05/10/24 19:54:46.321
  E0510 19:54:46.955326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:47.956313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:48.956722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:49.957295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 05/10/24 19:54:50.354
  STEP: Waiting for pod with binary data @ 05/10/24 19:54:50.373
  May 10 19:54:50.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6203" for this suite. @ 05/10/24 19:54:50.425
  << Timeline
------------------------------
S
------------------------------
• [2.295 seconds]
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:50.439
  May 10 19:54:50.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:54:50.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:50.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:50.475
  STEP: creating Agnhost RC @ 05/10/24 19:54:50.485
  May 10 19:54:50.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-2370 create -f -'
  May 10 19:54:50.605: INFO: stderr: ""
  May 10 19:54:50.605: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 19:54:50.605
  E0510 19:54:50.957820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:51.612: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:51.612: INFO: Found 0 / 1
  E0510 19:54:51.958506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:54:52.611: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:52.611: INFO: Found 1 / 1
  May 10 19:54:52.611: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/10/24 19:54:52.611
  May 10 19:54:52.616: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:52.616: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:54:52.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-2370 patch pod agnhost-primary-fm8hd -p {"metadata":{"annotations":{"x":"y"}}}'
  May 10 19:54:52.708: INFO: stderr: ""
  May 10 19:54:52.708: INFO: stdout: "pod/agnhost-primary-fm8hd patched\n"
  STEP: checking annotations @ 05/10/24 19:54:52.708
  May 10 19:54:52.715: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:54:52.715: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:54:52.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2370" for this suite. @ 05/10/24 19:54:52.725
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [6.169 seconds]
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:52.742
  May 10 19:54:52.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:54:52.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:52.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:52.778
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:54:52.783
  E0510 19:54:52.959482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:53.960296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:54.960540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:55.961471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:56.962219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:54:57.962528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:54:58.829
  May 10 19:54:58.839: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod downwardapi-volume-d09f078f-316d-4c34-a918-8f54a8e23a18 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:54:58.864
  May 10 19:54:58.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3203" for this suite. @ 05/10/24 19:54:58.902
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.262 seconds]
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:54:58.925
  May 10 19:54:58.925: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:54:58.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:54:58.961
  E0510 19:54:58.963024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:54:58.966
  STEP: Creating configMap with name cm-test-opt-del-940d294b-0a17-4d90-9373-c6ef3cbdff3e @ 05/10/24 19:54:58.98
  STEP: Creating configMap with name cm-test-opt-upd-e687a6b6-0326-4a6f-b016-421f5c99423e @ 05/10/24 19:54:58.986
  STEP: Creating the pod @ 05/10/24 19:54:58.995
  E0510 19:54:59.963808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:00.964609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-940d294b-0a17-4d90-9373-c6ef3cbdff3e @ 05/10/24 19:55:01.082
  STEP: Updating configmap cm-test-opt-upd-e687a6b6-0326-4a6f-b016-421f5c99423e @ 05/10/24 19:55:01.097
  STEP: Creating configMap with name cm-test-opt-create-ca1b4df2-9d8b-4c2c-97fe-2335fa65492e @ 05/10/24 19:55:01.113
  STEP: waiting to observe update in volume @ 05/10/24 19:55:01.121
  E0510 19:55:01.965553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:02.966327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:03.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9565" for this suite. @ 05/10/24 19:55:03.178
  << Timeline
------------------------------
SSSSS
------------------------------
• [101.041 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:53:52.28
  May 10 19:53:52.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 19:53:52.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:53:52.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:53:52.323
  STEP: Creating service test in namespace statefulset-1118 @ 05/10/24 19:53:52.328
  STEP: Creating a new StatefulSet @ 05/10/24 19:53:52.339
  May 10 19:53:52.358: INFO: Found 0 stateful pods, waiting for 3
  May 10 19:54:02.359: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:54:02.359: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:54:02.359: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:54:02.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-1118 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:54:02.531: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:54:02.531: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:54:02.531: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/10/24 19:54:12.552
  May 10 19:54:12.580: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/10/24 19:54:12.58
  STEP: Updating Pods in reverse ordinal order @ 05/10/24 19:54:22.596
  May 10 19:54:22.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-1118 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:54:22.826: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:54:22.826: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:54:22.826: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:54:42.865: INFO: Waiting for StatefulSet statefulset-1118/ss2 to complete update
  STEP: Rolling back to a previous revision @ 05/10/24 19:54:52.864
  May 10 19:54:52.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-1118 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:54:53.013: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:54:53.013: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:54:53.013: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:55:03.052: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/10/24 19:55:13.066
  May 10 19:55:13.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-1118 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:55:13.200: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:55:13.200: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:55:13.200: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:55:23.230: INFO: Deleting all statefulset in ns statefulset-1118
  May 10 19:55:23.238: INFO: Scaling statefulset ss2 to 0
  May 10 19:55:33.274: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:55:33.280: INFO: Deleting statefulset ss2
  May 10 19:55:33.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1118" for this suite. @ 05/10/24 19:55:33.311
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [0.526 seconds]
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:33.328
  May 10 19:55:33.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename discovery @ 05/10/24 19:55:33.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:33.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:33.362
  STEP: Setting up server cert @ 05/10/24 19:55:33.367
  May 10 19:55:33.793: INFO: Checking APIGroup: apiregistration.k8s.io
  May 10 19:55:33.794: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  May 10 19:55:33.794: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  May 10 19:55:33.794: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  May 10 19:55:33.794: INFO: Checking APIGroup: apps
  May 10 19:55:33.796: INFO: PreferredVersion.GroupVersion: apps/v1
  May 10 19:55:33.796: INFO: Versions found [{apps/v1 v1}]
  May 10 19:55:33.796: INFO: apps/v1 matches apps/v1
  May 10 19:55:33.796: INFO: Checking APIGroup: events.k8s.io
  May 10 19:55:33.797: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  May 10 19:55:33.797: INFO: Versions found [{events.k8s.io/v1 v1}]
  May 10 19:55:33.797: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  May 10 19:55:33.797: INFO: Checking APIGroup: authentication.k8s.io
  May 10 19:55:33.799: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  May 10 19:55:33.799: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  May 10 19:55:33.799: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  May 10 19:55:33.799: INFO: Checking APIGroup: authorization.k8s.io
  May 10 19:55:33.800: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  May 10 19:55:33.800: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  May 10 19:55:33.800: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  May 10 19:55:33.800: INFO: Checking APIGroup: autoscaling
  May 10 19:55:33.801: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  May 10 19:55:33.801: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  May 10 19:55:33.801: INFO: autoscaling/v2 matches autoscaling/v2
  May 10 19:55:33.801: INFO: Checking APIGroup: batch
  May 10 19:55:33.803: INFO: PreferredVersion.GroupVersion: batch/v1
  May 10 19:55:33.803: INFO: Versions found [{batch/v1 v1}]
  May 10 19:55:33.803: INFO: batch/v1 matches batch/v1
  May 10 19:55:33.803: INFO: Checking APIGroup: certificates.k8s.io
  May 10 19:55:33.804: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  May 10 19:55:33.804: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  May 10 19:55:33.804: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  May 10 19:55:33.804: INFO: Checking APIGroup: networking.k8s.io
  May 10 19:55:33.806: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  May 10 19:55:33.806: INFO: Versions found [{networking.k8s.io/v1 v1}]
  May 10 19:55:33.806: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  May 10 19:55:33.806: INFO: Checking APIGroup: policy
  May 10 19:55:33.807: INFO: PreferredVersion.GroupVersion: policy/v1
  May 10 19:55:33.807: INFO: Versions found [{policy/v1 v1}]
  May 10 19:55:33.807: INFO: policy/v1 matches policy/v1
  May 10 19:55:33.807: INFO: Checking APIGroup: rbac.authorization.k8s.io
  May 10 19:55:33.808: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  May 10 19:55:33.808: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  May 10 19:55:33.808: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  May 10 19:55:33.808: INFO: Checking APIGroup: storage.k8s.io
  May 10 19:55:33.810: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  May 10 19:55:33.810: INFO: Versions found [{storage.k8s.io/v1 v1}]
  May 10 19:55:33.810: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  May 10 19:55:33.810: INFO: Checking APIGroup: admissionregistration.k8s.io
  May 10 19:55:33.815: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  May 10 19:55:33.815: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  May 10 19:55:33.815: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  May 10 19:55:33.815: INFO: Checking APIGroup: apiextensions.k8s.io
  May 10 19:55:33.817: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  May 10 19:55:33.817: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  May 10 19:55:33.817: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  May 10 19:55:33.817: INFO: Checking APIGroup: scheduling.k8s.io
  May 10 19:55:33.819: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  May 10 19:55:33.819: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  May 10 19:55:33.819: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  May 10 19:55:33.819: INFO: Checking APIGroup: coordination.k8s.io
  May 10 19:55:33.820: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  May 10 19:55:33.820: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  May 10 19:55:33.820: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  May 10 19:55:33.820: INFO: Checking APIGroup: node.k8s.io
  May 10 19:55:33.822: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  May 10 19:55:33.822: INFO: Versions found [{node.k8s.io/v1 v1}]
  May 10 19:55:33.822: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  May 10 19:55:33.822: INFO: Checking APIGroup: discovery.k8s.io
  May 10 19:55:33.824: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  May 10 19:55:33.824: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  May 10 19:55:33.824: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  May 10 19:55:33.824: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  May 10 19:55:33.826: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  May 10 19:55:33.826: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  May 10 19:55:33.826: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  May 10 19:55:33.826: INFO: Checking APIGroup: crd.projectcalico.org
  May 10 19:55:33.828: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  May 10 19:55:33.828: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  May 10 19:55:33.828: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  May 10 19:55:33.828: INFO: Checking APIGroup: snapshot.storage.k8s.io
  May 10 19:55:33.829: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  May 10 19:55:33.829: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1}]
  May 10 19:55:33.829: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  May 10 19:55:33.829: INFO: Checking APIGroup: cluster.k8s.io
  May 10 19:55:33.831: INFO: PreferredVersion.GroupVersion: cluster.k8s.io/v1alpha1
  May 10 19:55:33.831: INFO: Versions found [{cluster.k8s.io/v1alpha1 v1alpha1}]
  May 10 19:55:33.831: INFO: cluster.k8s.io/v1alpha1 matches cluster.k8s.io/v1alpha1
  May 10 19:55:33.831: INFO: Checking APIGroup: operatingsystemmanager.k8c.io
  May 10 19:55:33.832: INFO: PreferredVersion.GroupVersion: operatingsystemmanager.k8c.io/v1alpha1
  May 10 19:55:33.832: INFO: Versions found [{operatingsystemmanager.k8c.io/v1alpha1 v1alpha1}]
  May 10 19:55:33.832: INFO: operatingsystemmanager.k8c.io/v1alpha1 matches operatingsystemmanager.k8c.io/v1alpha1
  May 10 19:55:33.832: INFO: Checking APIGroup: metrics.k8s.io
  May 10 19:55:33.833: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  May 10 19:55:33.833: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  May 10 19:55:33.833: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  May 10 19:55:33.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2675" for this suite. @ 05/10/24 19:55:33.844
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.199 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:33.858
  May 10 19:55:33.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:55:33.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:33.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:33.89
  STEP: Creating projection with secret that has name projected-secret-test-map-0769d7fc-f051-4c11-8c0c-7d6919f9cac3 @ 05/10/24 19:55:33.893
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:55:33.9
  STEP: Saw pod success @ 05/10/24 19:55:37.934
  May 10 19:55:37.941: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-projected-secrets-d4177521-1087-48d8-9ac8-d2aca961382d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:55:37.983
  May 10 19:55:38.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2552" for this suite. @ 05/10/24 19:55:38.045
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.409 seconds]
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:38.063
  May 10 19:55:38.063: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename apf @ 05/10/24 19:55:38.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:38.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:38.129
  STEP: getting /apis @ 05/10/24 19:55:38.139
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/10/24 19:55:38.146
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/10/24 19:55:38.148
  STEP: creating @ 05/10/24 19:55:38.154
  STEP: getting @ 05/10/24 19:55:38.246
  STEP: listing @ 05/10/24 19:55:38.277
  STEP: watching @ 05/10/24 19:55:38.301
  May 10 19:55:38.301: INFO: starting watch
  STEP: patching @ 05/10/24 19:55:38.312
  STEP: updating @ 05/10/24 19:55:38.323
  May 10 19:55:38.339: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/10/24 19:55:38.339
  STEP: patching /status @ 05/10/24 19:55:38.344
  STEP: updating /status @ 05/10/24 19:55:38.357
  STEP: deleting @ 05/10/24 19:55:38.376
  STEP: deleting a collection @ 05/10/24 19:55:38.413
  May 10 19:55:38.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-149" for this suite. @ 05/10/24 19:55:38.458
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [9.192 seconds]
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:38.478
  May 10 19:55:38.478: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename prestop @ 05/10/24 19:55:38.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:38.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:38.52
  STEP: Creating server pod server in namespace prestop-6754 @ 05/10/24 19:55:38.525
  STEP: Waiting for pods to come up. @ 05/10/24 19:55:38.539
  STEP: Creating tester pod tester in namespace prestop-6754 @ 05/10/24 19:55:40.565
  STEP: Deleting pre-stop pod @ 05/10/24 19:55:42.589
  May 10 19:55:47.619: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/10/24 19:55:47.619
  May 10 19:55:47.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6754" for this suite. @ 05/10/24 19:55:47.659
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.132 seconds]
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:47.687
  May 10 19:55:47.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename proxy @ 05/10/24 19:55:47.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:47.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:47.739
  STEP: starting an echo server on multiple ports @ 05/10/24 19:55:47.781
  STEP: creating replication controller proxy-service-46qnz in namespace proxy-311 @ 05/10/24 19:55:47.781
  I0510 19:55:47.795147      24 runners.go:197] Created replication controller with name: proxy-service-46qnz, namespace: proxy-311, replica count: 1
  I0510 19:55:48.846184      24 runners.go:197] proxy-service-46qnz Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0510 19:55:49.847170      24 runners.go:197] proxy-service-46qnz Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:55:49.852: INFO: setup took 2.106764318s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/10/24 19:55:49.852
  May 10 19:55:49.862: INFO: (0) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 10.016613ms)
  May 10 19:55:49.870: INFO: (0) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 17.054595ms)
  May 10 19:55:49.872: INFO: (0) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 19.020956ms)
  May 10 19:55:49.872: INFO: (0) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 18.877611ms)
  May 10 19:55:49.872: INFO: (0) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 19.227709ms)
  May 10 19:55:49.872: INFO: (0) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 18.91695ms)
  May 10 19:55:49.872: INFO: (0) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 19.088979ms)
  May 10 19:55:49.874: INFO: (0) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 21.441612ms)
  May 10 19:55:49.876: INFO: (0) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 22.990321ms)
  May 10 19:55:49.876: INFO: (0) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 23.119867ms)
  May 10 19:55:49.877: INFO: (0) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 23.94535ms)
  May 10 19:55:49.880: INFO: (0) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 27.49254ms)
  May 10 19:55:49.880: INFO: (0) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 27.504071ms)
  May 10 19:55:49.880: INFO: (0) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 27.596051ms)
  May 10 19:55:49.881: INFO: (0) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 27.957174ms)
  May 10 19:55:49.881: INFO: (0) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 28.066721ms)
  May 10 19:55:49.891: INFO: (1) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 10.134817ms)
  May 10 19:55:49.892: INFO: (1) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 11.366722ms)
  May 10 19:55:49.892: INFO: (1) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 11.491527ms)
  May 10 19:55:49.893: INFO: (1) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 11.787889ms)
  May 10 19:55:49.893: INFO: (1) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 11.801206ms)
  May 10 19:55:49.893: INFO: (1) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 11.754456ms)
  May 10 19:55:49.893: INFO: (1) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 11.861699ms)
  May 10 19:55:49.893: INFO: (1) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 11.874903ms)
  May 10 19:55:49.893: INFO: (1) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 12.024009ms)
  May 10 19:55:49.894: INFO: (1) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 12.853432ms)
  May 10 19:55:49.898: INFO: (1) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 16.858922ms)
  May 10 19:55:49.900: INFO: (1) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 19.361461ms)
  May 10 19:55:49.900: INFO: (1) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 19.453209ms)
  May 10 19:55:49.900: INFO: (1) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 19.457377ms)
  May 10 19:55:49.900: INFO: (1) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 19.394013ms)
  May 10 19:55:49.900: INFO: (1) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 19.486839ms)
  May 10 19:55:49.916: INFO: (2) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 15.481293ms)
  May 10 19:55:49.916: INFO: (2) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 15.745555ms)
  May 10 19:55:49.916: INFO: (2) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 15.717037ms)
  May 10 19:55:49.916: INFO: (2) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 15.671503ms)
  May 10 19:55:49.917: INFO: (2) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 16.523674ms)
  May 10 19:55:49.917: INFO: (2) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 16.685711ms)
  May 10 19:55:49.918: INFO: (2) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 16.994431ms)
  May 10 19:55:49.919: INFO: (2) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 18.546508ms)
  May 10 19:55:49.919: INFO: (2) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 18.573274ms)
  May 10 19:55:49.919: INFO: (2) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 18.800206ms)
  May 10 19:55:49.920: INFO: (2) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 19.731521ms)
  May 10 19:55:49.921: INFO: (2) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 20.218321ms)
  May 10 19:55:49.924: INFO: (2) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 23.335483ms)
  May 10 19:55:49.924: INFO: (2) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 23.362499ms)
  May 10 19:55:49.924: INFO: (2) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 23.31573ms)
  May 10 19:55:49.924: INFO: (2) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 23.431131ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 14.672806ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 14.710416ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 14.921043ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 15.140984ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 15.116789ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 14.97967ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 15.094733ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 15.036755ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 15.496342ms)
  May 10 19:55:49.939: INFO: (3) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 15.417906ms)
  May 10 19:55:49.942: INFO: (3) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 17.615504ms)
  May 10 19:55:49.944: INFO: (3) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 19.810534ms)
  May 10 19:55:49.947: INFO: (3) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 22.664326ms)
  May 10 19:55:49.947: INFO: (3) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 22.72542ms)
  May 10 19:55:49.947: INFO: (3) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 22.714449ms)
  May 10 19:55:49.947: INFO: (3) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 22.672563ms)
  May 10 19:55:49.960: INFO: (4) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 12.976854ms)
  May 10 19:55:49.960: INFO: (4) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 12.921834ms)
  May 10 19:55:49.960: INFO: (4) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 13.439664ms)
  May 10 19:55:49.960: INFO: (4) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 13.499518ms)
  May 10 19:55:49.961: INFO: (4) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 14.070296ms)
  May 10 19:55:49.961: INFO: (4) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 14.108427ms)
  May 10 19:55:49.961: INFO: (4) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 14.10692ms)
  May 10 19:55:49.962: INFO: (4) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 15.488647ms)
  May 10 19:55:49.963: INFO: (4) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 15.961351ms)
  May 10 19:55:49.964: INFO: (4) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 16.813546ms)
  May 10 19:55:49.964: INFO: (4) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 17.420468ms)
  May 10 19:55:49.965: INFO: (4) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 18.56418ms)
  May 10 19:55:49.968: INFO: (4) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 20.793039ms)
  May 10 19:55:49.968: INFO: (4) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 21.243701ms)
  May 10 19:55:49.968: INFO: (4) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 21.24255ms)
  May 10 19:55:49.968: INFO: (4) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 21.382935ms)
  May 10 19:55:50.000: INFO: (5) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 31.589902ms)
  May 10 19:55:50.000: INFO: (5) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 31.668627ms)
  May 10 19:55:50.000: INFO: (5) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 31.990932ms)
  May 10 19:55:50.000: INFO: (5) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 31.902396ms)
  May 10 19:55:50.000: INFO: (5) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 31.990381ms)
  May 10 19:55:50.001: INFO: (5) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 32.165303ms)
  May 10 19:55:50.001: INFO: (5) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 32.34229ms)
  May 10 19:55:50.001: INFO: (5) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 32.335455ms)
  May 10 19:55:50.001: INFO: (5) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 32.743489ms)
  May 10 19:55:50.001: INFO: (5) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 32.721025ms)
  May 10 19:55:50.001: INFO: (5) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 32.867719ms)
  May 10 19:55:50.006: INFO: (5) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 37.454698ms)
  May 10 19:55:50.007: INFO: (5) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 38.911099ms)
  May 10 19:55:50.007: INFO: (5) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 39.088923ms)
  May 10 19:55:50.008: INFO: (5) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 39.318359ms)
  May 10 19:55:50.008: INFO: (5) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 39.405282ms)
  May 10 19:55:50.024: INFO: (6) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 16.467149ms)
  May 10 19:55:50.024: INFO: (6) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 16.606301ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 17.062721ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 17.002568ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 16.974422ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 17.002687ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 17.016328ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 17.052721ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 17.24775ms)
  May 10 19:55:50.025: INFO: (6) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 17.612593ms)
  May 10 19:55:50.027: INFO: (6) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 19.533948ms)
  May 10 19:55:50.030: INFO: (6) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 22.438946ms)
  May 10 19:55:50.030: INFO: (6) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 22.524553ms)
  May 10 19:55:50.030: INFO: (6) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 22.595748ms)
  May 10 19:55:50.031: INFO: (6) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 22.590121ms)
  May 10 19:55:50.031: INFO: (6) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 22.705536ms)
  May 10 19:55:50.046: INFO: (7) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 14.999605ms)
  May 10 19:55:50.052: INFO: (7) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 21.599524ms)
  May 10 19:55:50.052: INFO: (7) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 21.660546ms)
  May 10 19:55:50.053: INFO: (7) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 22.213209ms)
  May 10 19:55:50.053: INFO: (7) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 21.982921ms)
  May 10 19:55:50.055: INFO: (7) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 23.731523ms)
  May 10 19:55:50.055: INFO: (7) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 24.032798ms)
  May 10 19:55:50.055: INFO: (7) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 24.307408ms)
  May 10 19:55:50.055: INFO: (7) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 24.580515ms)
  May 10 19:55:50.055: INFO: (7) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 24.64479ms)
  May 10 19:55:50.058: INFO: (7) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 26.921107ms)
  May 10 19:55:50.058: INFO: (7) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 26.848619ms)
  May 10 19:55:50.058: INFO: (7) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 26.982258ms)
  May 10 19:55:50.058: INFO: (7) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 27.16931ms)
  May 10 19:55:50.058: INFO: (7) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 27.362289ms)
  May 10 19:55:50.058: INFO: (7) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 27.230627ms)
  May 10 19:55:50.072: INFO: (8) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 13.438545ms)
  May 10 19:55:50.074: INFO: (8) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 15.338994ms)
  May 10 19:55:50.074: INFO: (8) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 15.367461ms)
  May 10 19:55:50.074: INFO: (8) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 15.510802ms)
  May 10 19:55:50.075: INFO: (8) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 16.354695ms)
  May 10 19:55:50.087: INFO: (8) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 28.730339ms)
  May 10 19:55:50.087: INFO: (8) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 28.809561ms)
  May 10 19:55:50.087: INFO: (8) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 28.768095ms)
  May 10 19:55:50.087: INFO: (8) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 28.788288ms)
  May 10 19:55:50.087: INFO: (8) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 29.088597ms)
  May 10 19:55:50.094: INFO: (8) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 36.315733ms)
  May 10 19:55:50.097: INFO: (8) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 38.266192ms)
  May 10 19:55:50.097: INFO: (8) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 38.318065ms)
  May 10 19:55:50.097: INFO: (8) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 38.391355ms)
  May 10 19:55:50.097: INFO: (8) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 38.336555ms)
  May 10 19:55:50.104: INFO: (8) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 46.045384ms)
  May 10 19:55:50.116: INFO: (9) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 11.297372ms)
  May 10 19:55:50.116: INFO: (9) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 11.396337ms)
  May 10 19:55:50.116: INFO: (9) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 11.19194ms)
  May 10 19:55:50.116: INFO: (9) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 11.175291ms)
  May 10 19:55:50.116: INFO: (9) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 11.447403ms)
  May 10 19:55:50.116: INFO: (9) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 11.374008ms)
  May 10 19:55:50.116: INFO: (9) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 11.480431ms)
  May 10 19:55:50.119: INFO: (9) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 13.948601ms)
  May 10 19:55:50.119: INFO: (9) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 14.204246ms)
  May 10 19:55:50.119: INFO: (9) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 14.643602ms)
  May 10 19:55:50.119: INFO: (9) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 14.457276ms)
  May 10 19:55:50.122: INFO: (9) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 17.74937ms)
  May 10 19:55:50.125: INFO: (9) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 20.212711ms)
  May 10 19:55:50.125: INFO: (9) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 20.429725ms)
  May 10 19:55:50.125: INFO: (9) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 20.383972ms)
  May 10 19:55:50.125: INFO: (9) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 20.553801ms)
  May 10 19:55:50.141: INFO: (10) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 15.617086ms)
  May 10 19:55:50.142: INFO: (10) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 16.548913ms)
  May 10 19:55:50.142: INFO: (10) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 16.634293ms)
  May 10 19:55:50.145: INFO: (10) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 19.616686ms)
  May 10 19:55:50.145: INFO: (10) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 19.654261ms)
  May 10 19:55:50.145: INFO: (10) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 19.612363ms)
  May 10 19:55:50.146: INFO: (10) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 20.370731ms)
  May 10 19:55:50.146: INFO: (10) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 20.684422ms)
  May 10 19:55:50.146: INFO: (10) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 20.616839ms)
  May 10 19:55:50.146: INFO: (10) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 20.805499ms)
  May 10 19:55:50.146: INFO: (10) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 20.862756ms)
  May 10 19:55:50.156: INFO: (10) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 30.294895ms)
  May 10 19:55:50.157: INFO: (10) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 31.607092ms)
  May 10 19:55:50.158: INFO: (10) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 32.659615ms)
  May 10 19:55:50.158: INFO: (10) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 32.756715ms)
  May 10 19:55:50.159: INFO: (10) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 33.384773ms)
  May 10 19:55:50.178: INFO: (11) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 18.611532ms)
  May 10 19:55:50.178: INFO: (11) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 19.385618ms)
  May 10 19:55:50.178: INFO: (11) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 19.379201ms)
  May 10 19:55:50.178: INFO: (11) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 19.532557ms)
  May 10 19:55:50.178: INFO: (11) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 19.325197ms)
  May 10 19:55:50.180: INFO: (11) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 21.302636ms)
  May 10 19:55:50.181: INFO: (11) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 21.783195ms)
  May 10 19:55:50.181: INFO: (11) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 22.117209ms)
  May 10 19:55:50.182: INFO: (11) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 22.59073ms)
  May 10 19:55:50.182: INFO: (11) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 22.683076ms)
  May 10 19:55:50.182: INFO: (11) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 22.804693ms)
  May 10 19:55:50.184: INFO: (11) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 25.32219ms)
  May 10 19:55:50.184: INFO: (11) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 25.389461ms)
  May 10 19:55:50.186: INFO: (11) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 27.140763ms)
  May 10 19:55:50.187: INFO: (11) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 28.011826ms)
  May 10 19:55:50.187: INFO: (11) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 28.125547ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 28.367531ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 28.531244ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 28.763775ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 28.138984ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 28.793947ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 28.431817ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 28.402619ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 28.713212ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 28.382143ms)
  May 10 19:55:50.216: INFO: (12) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 28.849887ms)
  May 10 19:55:50.217: INFO: (12) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 29.913773ms)
  May 10 19:55:50.220: INFO: (12) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 32.310993ms)
  May 10 19:55:50.220: INFO: (12) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 32.337974ms)
  May 10 19:55:50.220: INFO: (12) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 32.534847ms)
  May 10 19:55:50.224: INFO: (12) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 36.917125ms)
  May 10 19:55:50.224: INFO: (12) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 36.889084ms)
  May 10 19:55:50.247: INFO: (13) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 22.525716ms)
  May 10 19:55:50.247: INFO: (13) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 22.760333ms)
  May 10 19:55:50.247: INFO: (13) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 22.800247ms)
  May 10 19:55:50.247: INFO: (13) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 22.735392ms)
  May 10 19:55:50.247: INFO: (13) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 22.728528ms)
  May 10 19:55:50.248: INFO: (13) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 23.304794ms)
  May 10 19:55:50.248: INFO: (13) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 23.348404ms)
  May 10 19:55:50.248: INFO: (13) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 23.468636ms)
  May 10 19:55:50.248: INFO: (13) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 23.93258ms)
  May 10 19:55:50.249: INFO: (13) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 24.143808ms)
  May 10 19:55:50.249: INFO: (13) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 24.261988ms)
  May 10 19:55:50.250: INFO: (13) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 25.478133ms)
  May 10 19:55:50.256: INFO: (13) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 31.698164ms)
  May 10 19:55:50.256: INFO: (13) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 31.897343ms)
  May 10 19:55:50.256: INFO: (13) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 31.70123ms)
  May 10 19:55:50.256: INFO: (13) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 31.865112ms)
  May 10 19:55:50.264: INFO: (14) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 8.016206ms)
  May 10 19:55:50.270: INFO: (14) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 13.288792ms)
  May 10 19:55:50.270: INFO: (14) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 13.482548ms)
  May 10 19:55:50.280: INFO: (14) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 23.196846ms)
  May 10 19:55:50.280: INFO: (14) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 23.269382ms)
  May 10 19:55:50.280: INFO: (14) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 23.425064ms)
  May 10 19:55:50.285: INFO: (14) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 28.506503ms)
  May 10 19:55:50.285: INFO: (14) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 28.671218ms)
  May 10 19:55:50.286: INFO: (14) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 29.115607ms)
  May 10 19:55:50.286: INFO: (14) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 29.322632ms)
  May 10 19:55:50.286: INFO: (14) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 29.125134ms)
  May 10 19:55:50.286: INFO: (14) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 29.515619ms)
  May 10 19:55:50.286: INFO: (14) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 29.632584ms)
  May 10 19:55:50.286: INFO: (14) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 29.698465ms)
  May 10 19:55:50.286: INFO: (14) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 29.735925ms)
  May 10 19:55:50.288: INFO: (14) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 31.783545ms)
  May 10 19:55:50.312: INFO: (15) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 23.339538ms)
  May 10 19:55:50.318: INFO: (15) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 29.332549ms)
  May 10 19:55:50.318: INFO: (15) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 29.408872ms)
  May 10 19:55:50.318: INFO: (15) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 29.334051ms)
  May 10 19:55:50.318: INFO: (15) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 29.332348ms)
  May 10 19:55:50.318: INFO: (15) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 29.615596ms)
  May 10 19:55:50.318: INFO: (15) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 29.556902ms)
  May 10 19:55:50.319: INFO: (15) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 30.303687ms)
  May 10 19:55:50.319: INFO: (15) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 30.289738ms)
  May 10 19:55:50.319: INFO: (15) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 30.270154ms)
  May 10 19:55:50.319: INFO: (15) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 30.808037ms)
  May 10 19:55:50.322: INFO: (15) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 33.169354ms)
  May 10 19:55:50.322: INFO: (15) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 33.309513ms)
  May 10 19:55:50.322: INFO: (15) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 33.37748ms)
  May 10 19:55:50.322: INFO: (15) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 33.900901ms)
  May 10 19:55:50.322: INFO: (15) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 33.949715ms)
  May 10 19:55:50.332: INFO: (16) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 9.96587ms)
  May 10 19:55:50.338: INFO: (16) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 15.52356ms)
  May 10 19:55:50.338: INFO: (16) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 15.426771ms)
  May 10 19:55:50.338: INFO: (16) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 15.638969ms)
  May 10 19:55:50.338: INFO: (16) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 15.730012ms)
  May 10 19:55:50.339: INFO: (16) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 16.343689ms)
  May 10 19:55:50.339: INFO: (16) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 16.58732ms)
  May 10 19:55:50.339: INFO: (16) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 16.394574ms)
  May 10 19:55:50.339: INFO: (16) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 16.506744ms)
  May 10 19:55:50.341: INFO: (16) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 18.240118ms)
  May 10 19:55:50.344: INFO: (16) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 21.091884ms)
  May 10 19:55:50.348: INFO: (16) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 25.034814ms)
  May 10 19:55:50.348: INFO: (16) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 25.400734ms)
  May 10 19:55:50.348: INFO: (16) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 25.4877ms)
  May 10 19:55:50.349: INFO: (16) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 25.735866ms)
  May 10 19:55:50.349: INFO: (16) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 25.843256ms)
  May 10 19:55:50.363: INFO: (17) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 14.160429ms)
  May 10 19:55:50.364: INFO: (17) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 14.932597ms)
  May 10 19:55:50.364: INFO: (17) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 15.10047ms)
  May 10 19:55:50.364: INFO: (17) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 15.097033ms)
  May 10 19:55:50.364: INFO: (17) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 15.243212ms)
  May 10 19:55:50.364: INFO: (17) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 15.324391ms)
  May 10 19:55:50.364: INFO: (17) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 15.491791ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 21.313143ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 21.260261ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 21.430642ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 21.382257ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 21.329579ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 21.484077ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 21.306132ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 21.36426ms)
  May 10 19:55:50.370: INFO: (17) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 21.491624ms)
  May 10 19:55:50.389: INFO: (18) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 18.540016ms)
  May 10 19:55:50.391: INFO: (18) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 20.565411ms)
  May 10 19:55:50.391: INFO: (18) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 21.074405ms)
  May 10 19:55:50.392: INFO: (18) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 21.296346ms)
  May 10 19:55:50.392: INFO: (18) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 21.355451ms)
  May 10 19:55:50.392: INFO: (18) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 21.391251ms)
  May 10 19:55:50.392: INFO: (18) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 21.317304ms)
  May 10 19:55:50.392: INFO: (18) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 21.9658ms)
  May 10 19:55:50.393: INFO: (18) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 22.463933ms)
  May 10 19:55:50.393: INFO: (18) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 22.441109ms)
  May 10 19:55:50.393: INFO: (18) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 22.55277ms)
  May 10 19:55:50.394: INFO: (18) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 23.392497ms)
  May 10 19:55:50.396: INFO: (18) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 25.856532ms)
  May 10 19:55:50.396: INFO: (18) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 25.86602ms)
  May 10 19:55:50.396: INFO: (18) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 25.995462ms)
  May 10 19:55:50.396: INFO: (18) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 26.011275ms)
  May 10 19:55:50.412: INFO: (19) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:1080/proxy/rewriteme">t... (200; 15.27081ms)
  May 10 19:55:50.412: INFO: (19) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767/proxy/rewriteme">test</a> (200; 15.171065ms)
  May 10 19:55:50.412: INFO: (19) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:162/proxy/: bar (200; 15.125004ms)
  May 10 19:55:50.413: INFO: (19) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:162/proxy/: bar (200; 16.121066ms)
  May 10 19:55:50.413: INFO: (19) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:1080/proxy/rewriteme">test</... (200; 16.315464ms)
  May 10 19:55:50.413: INFO: (19) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/: <a href="/api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:443/proxy/tlsrewriteme... (200; 16.35348ms)
  May 10 19:55:50.413: INFO: (19) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:460/proxy/: tls baz (200; 16.522938ms)
  May 10 19:55:50.413: INFO: (19) /api/v1/namespaces/proxy-311/pods/https:proxy-service-46qnz-6z767:462/proxy/: tls qux (200; 16.294473ms)
  May 10 19:55:50.413: INFO: (19) /api/v1/namespaces/proxy-311/pods/http:proxy-service-46qnz-6z767:160/proxy/: foo (200; 16.607751ms)
  May 10 19:55:50.413: INFO: (19) /api/v1/namespaces/proxy-311/pods/proxy-service-46qnz-6z767:160/proxy/: foo (200; 16.681118ms)
  May 10 19:55:50.415: INFO: (19) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname1/proxy/: tls baz (200; 18.652739ms)
  May 10 19:55:50.416: INFO: (19) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname2/proxy/: bar (200; 19.170497ms)
  May 10 19:55:50.416: INFO: (19) /api/v1/namespaces/proxy-311/services/proxy-service-46qnz:portname1/proxy/: foo (200; 19.108995ms)
  May 10 19:55:50.416: INFO: (19) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname2/proxy/: bar (200; 19.310119ms)
  May 10 19:55:50.416: INFO: (19) /api/v1/namespaces/proxy-311/services/http:proxy-service-46qnz:portname1/proxy/: foo (200; 19.313021ms)
  May 10 19:55:50.416: INFO: (19) /api/v1/namespaces/proxy-311/services/https:proxy-service-46qnz:tlsportname2/proxy/: tls qux (200; 19.415562ms)
  STEP: deleting ReplicationController proxy-service-46qnz in namespace proxy-311, will wait for the garbage collector to delete the pods @ 05/10/24 19:55:50.416
  May 10 19:55:50.499: INFO: Deleting ReplicationController proxy-service-46qnz took: 25.287742ms
  May 10 19:55:50.599: INFO: Terminating ReplicationController proxy-service-46qnz pods took: 100.426242ms
  May 10 19:55:52.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-311" for this suite. @ 05/10/24 19:55:52.809
  << Timeline
------------------------------
SSSS
------------------------------
• [5.246 seconds]
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:52.823
  May 10 19:55:52.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:55:52.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:52.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:52.889
  STEP: Create set of pods @ 05/10/24 19:55:52.894
  May 10 19:55:52.908: INFO: created test-pod-1
  May 10 19:55:52.921: INFO: created test-pod-2
  May 10 19:55:52.936: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/10/24 19:55:52.936
  STEP: waiting for all pods to be deleted @ 05/10/24 19:55:55.035
  May 10 19:55:55.042: INFO: Pod quantity 3 is different from expected quantity 0
  May 10 19:55:56.043: INFO: Pod quantity 3 is different from expected quantity 0
  May 10 19:55:57.042: INFO: Pod quantity 1 is different from expected quantity 0
  May 10 19:55:58.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1728" for this suite. @ 05/10/24 19:55:58.057
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [6.270 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:58.074
  May 10 19:55:58.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 19:55:58.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:58.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:58.153
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 19:55:58.171
  STEP: create the pod with lifecycle hook @ 05/10/24 19:56:00.211
  STEP: check poststart hook @ 05/10/24 19:56:02.249
  STEP: delete the pod with lifecycle hook @ 05/10/24 19:56:02.28
  May 10 19:56:04.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7827" for this suite. @ 05/10/24 19:56:04.326
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [243.383 seconds]
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:52:15.374
  May 10 19:52:15.374: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:52:15.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:52:15.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:52:15.485
  STEP: Creating pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198 @ 05/10/24 19:52:15.489
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:52:17.531
  May 10 19:52:17.541: INFO: Initial restart count of pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 is 0
  May 10 19:52:17.545: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:19.552: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:21.562: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:23.575: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:25.625: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:27.631: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:29.639: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:31.648: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:33.655: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:35.662: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:37.669: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:39.676: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:41.682: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:43.693: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:45.705: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:47.715: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:49.722: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:51.728: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:53.736: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:55.750: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:57.756: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:52:59.764: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:01.771: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:03.782: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:05.790: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:07.798: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:09.813: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:11.820: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:13.829: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:15.837: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:17.849: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:19.856: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:21.864: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:23.872: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:25.880: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:27.896: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:29.919: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:31.926: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:33.932: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:35.948: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:37.958: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:39.966: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:41.972: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:43.981: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:45.991: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:47.998: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:50.015: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:52.029: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:54.035: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:56.043: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:53:58.068: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:00.077: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:02.089: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:04.108: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:06.116: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:08.124: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:10.131: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:12.138: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:14.145: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:16.154: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:18.160: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:20.170: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:22.177: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:24.183: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:26.194: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:28.210: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:30.221: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:32.239: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:34.245: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:36.259: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:38.268: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:40.282: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:42.289: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:44.299: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:46.305: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:48.313: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:50.319: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:52.327: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:54.333: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:56.339: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:54:58.345: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:00.353: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:02.366: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:04.377: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:06.384: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:08.392: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:10.399: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:12.406: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:14.413: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:16.420: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:18.426: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:20.433: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:22.442: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:24.464: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:26.471: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:28.480: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:30.491: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:32.497: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:34.512: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:36.522: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:38.530: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:40.537: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:42.543: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:44.554: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:46.561: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:48.568: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:50.576: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:52.585: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:54.593: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:56.603: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:55:58.613: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:00.624: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:02.639: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:04.656: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:06.662: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:08.670: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:10.688: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:12.696: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:14.704: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  May 10 19:56:16.710: INFO: Get pod test-grpc-e30ab850-425e-45c3-a4fc-0b14c9e08137 in namespace container-probe-8198
  STEP: deleting the pod @ 05/10/24 19:56:18.711
  May 10 19:56:18.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8198" for this suite. @ 05/10/24 19:56:18.745
  << Timeline
------------------------------
SSSS
------------------------------
• [0.119 seconds]
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:18.76
  May 10 19:56:18.760: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 19:56:18.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:18.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:18.801
  STEP: creating a ServiceAccount @ 05/10/24 19:56:18.805
  STEP: watching for the ServiceAccount to be added @ 05/10/24 19:56:18.818
  STEP: patching the ServiceAccount @ 05/10/24 19:56:18.82
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/10/24 19:56:18.829
  STEP: deleting the ServiceAccount @ 05/10/24 19:56:18.835
  May 10 19:56:18.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3427" for this suite. @ 05/10/24 19:56:18.867
  << Timeline
------------------------------
S
------------------------------
• [16.287 seconds]
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:04.351
  May 10 19:56:04.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:56:04.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:04.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:04.4
  STEP: Creating a ResourceQuota with terminating scope @ 05/10/24 19:56:04.405
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:56:04.417
  STEP: Creating a ResourceQuota with not terminating scope @ 05/10/24 19:56:06.424
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 19:56:06.433
  STEP: Creating a long running pod @ 05/10/24 19:56:08.442
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/10/24 19:56:08.469
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/10/24 19:56:10.476
  STEP: Deleting the pod @ 05/10/24 19:56:12.482
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:56:12.511
  STEP: Creating a terminating pod @ 05/10/24 19:56:14.53
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/10/24 19:56:14.57
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/10/24 19:56:16.578
  STEP: Deleting the pod @ 05/10/24 19:56:18.584
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:56:18.612
  May 10 19:56:20.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2668" for this suite. @ 05/10/24 19:56:20.628
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [1.098 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:20.643
  May 10 19:56:20.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 19:56:20.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:20.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:20.681
  May 10 19:56:20.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 19:56:21.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1513" for this suite. @ 05/10/24 19:56:21.729
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.190 seconds]
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:18.879
  May 10 19:56:18.879: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:56:18.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:18.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:18.923
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:56:18.927
  STEP: Saw pod success @ 05/10/24 19:56:22.972
  May 10 19:56:22.982: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod downwardapi-volume-807193e0-19a8-46a6-89c1-0c06feca8477 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:56:22.995
  May 10 19:56:23.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3553" for this suite. @ 05/10/24 19:56:23.056
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.176 seconds]
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:23.081
  May 10 19:56:23.081: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename containers @ 05/10/24 19:56:23.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:23.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:23.129
  STEP: Creating a pod to test override all @ 05/10/24 19:56:23.135
  STEP: Saw pod success @ 05/10/24 19:56:27.177
  May 10 19:56:27.187: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod client-containers-79dfd53d-d069-47c8-82b5-1ed434ecf55e container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 19:56:27.201
  May 10 19:56:27.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5605" for this suite. @ 05/10/24 19:56:27.244
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [5.001 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:27.264
  May 10 19:56:27.264: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:56:27.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:27.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:27.306
  May 10 19:56:27.311: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/10/24 19:56:29.366
  May 10 19:56:29.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 create -f -'
  May 10 19:56:29.458: INFO: stderr: ""
  May 10 19:56:29.458: INFO: stdout: "e2e-test-crd-publish-openapi-2233-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 10 19:56:29.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 delete e2e-test-crd-publish-openapi-2233-crds test-foo'
  May 10 19:56:29.530: INFO: stderr: ""
  May 10 19:56:29.530: INFO: stdout: "e2e-test-crd-publish-openapi-2233-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  May 10 19:56:29.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 apply -f -'
  May 10 19:56:29.609: INFO: stderr: ""
  May 10 19:56:29.609: INFO: stdout: "e2e-test-crd-publish-openapi-2233-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 10 19:56:29.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 delete e2e-test-crd-publish-openapi-2233-crds test-foo'
  May 10 19:56:29.698: INFO: stderr: ""
  May 10 19:56:29.698: INFO: stdout: "e2e-test-crd-publish-openapi-2233-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/10/24 19:56:29.698
  May 10 19:56:29.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 create -f -'
  May 10 19:56:29.780: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/10/24 19:56:29.781
  May 10 19:56:29.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 create -f -'
  May 10 19:56:29.847: INFO: rc: 1
  May 10 19:56:29.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 apply -f -'
  May 10 19:56:29.931: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/10/24 19:56:29.931
  May 10 19:56:29.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 create -f -'
  May 10 19:56:29.986: INFO: rc: 1
  May 10 19:56:29.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 --namespace=crd-publish-openapi-7382 apply -f -'
  May 10 19:56:30.066: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/10/24 19:56:30.066
  May 10 19:56:30.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 explain e2e-test-crd-publish-openapi-2233-crds'
  May 10 19:56:30.121: INFO: stderr: ""
  May 10 19:56:30.121: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2233-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/10/24 19:56:30.121
  May 10 19:56:30.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 explain e2e-test-crd-publish-openapi-2233-crds.metadata'
  May 10 19:56:30.174: INFO: stderr: ""
  May 10 19:56:30.174: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2233-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  May 10 19:56:30.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 explain e2e-test-crd-publish-openapi-2233-crds.spec'
  May 10 19:56:30.227: INFO: stderr: ""
  May 10 19:56:30.227: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2233-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  May 10 19:56:30.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 explain e2e-test-crd-publish-openapi-2233-crds.spec.bars'
  May 10 19:56:30.282: INFO: stderr: ""
  May 10 19:56:30.282: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2233-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/10/24 19:56:30.282
  May 10 19:56:30.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=crd-publish-openapi-7382 explain e2e-test-crd-publish-openapi-2233-crds.spec.bars2'
  May 10 19:56:30.334: INFO: rc: 1
  May 10 19:56:32.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7382" for this suite. @ 05/10/24 19:56:32.254
  << Timeline
------------------------------
SSSSS
------------------------------
• [2.227 seconds]
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:32.268
  May 10 19:56:32.268: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:56:32.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:32.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:32.316
  May 10 19:56:32.320: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: creating the pod @ 05/10/24 19:56:32.321
  STEP: submitting the pod to kubernetes @ 05/10/24 19:56:32.321
  May 10 19:56:34.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4295" for this suite. @ 05/10/24 19:56:34.484
  << Timeline
------------------------------
SSS
------------------------------
• [3.223 seconds]
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:34.497
  May 10 19:56:34.497: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:56:34.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:34.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:34.557
  May 10 19:56:34.561: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  W0510 19:56:37.124564      23 warnings.go:70] unknown field "alpha"
  W0510 19:56:37.124580      23 warnings.go:70] unknown field "beta"
  W0510 19:56:37.124585      23 warnings.go:70] unknown field "delta"
  W0510 19:56:37.124590      23 warnings.go:70] unknown field "epsilon"
  W0510 19:56:37.124594      23 warnings.go:70] unknown field "gamma"
  May 10 19:56:37.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9222" for this suite. @ 05/10/24 19:56:37.709
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [13.306 seconds]
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:37.727
  May 10 19:56:37.727: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename svc-latency @ 05/10/24 19:56:37.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:37.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:37.766
  May 10 19:56:37.771: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1817 @ 05/10/24 19:56:37.771
  I0510 19:56:37.783625      23 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1817, replica count: 1
  I0510 19:56:38.835126      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 19:56:39.836117      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:56:39.966: INFO: Created: latency-svc-kcggr
  May 10 19:56:39.974: INFO: Got endpoints: latency-svc-kcggr [37.220232ms]
  May 10 19:56:40.041: INFO: Created: latency-svc-qgtzj
  May 10 19:56:40.101: INFO: Got endpoints: latency-svc-qgtzj [127.439577ms]
  May 10 19:56:40.118: INFO: Created: latency-svc-fsmq8
  May 10 19:56:40.130: INFO: Got endpoints: latency-svc-fsmq8 [156.08483ms]
  May 10 19:56:40.149: INFO: Created: latency-svc-2qcpf
  May 10 19:56:40.164: INFO: Got endpoints: latency-svc-2qcpf [189.905334ms]
  May 10 19:56:40.169: INFO: Created: latency-svc-zwnfq
  May 10 19:56:40.209: INFO: Got endpoints: latency-svc-zwnfq [234.949887ms]
  May 10 19:56:40.217: INFO: Created: latency-svc-txr8q
  May 10 19:56:40.273: INFO: Got endpoints: latency-svc-txr8q [298.958957ms]
  May 10 19:56:40.280: INFO: Created: latency-svc-q2dl5
  May 10 19:56:40.308: INFO: Got endpoints: latency-svc-q2dl5 [334.266603ms]
  May 10 19:56:40.310: INFO: Created: latency-svc-rjgjj
  May 10 19:56:40.337: INFO: Created: latency-svc-cvswl
  May 10 19:56:40.383: INFO: Got endpoints: latency-svc-rjgjj [409.032201ms]
  May 10 19:56:40.389: INFO: Got endpoints: latency-svc-cvswl [414.850669ms]
  May 10 19:56:40.396: INFO: Created: latency-svc-vh7xg
  May 10 19:56:40.411: INFO: Got endpoints: latency-svc-vh7xg [436.456302ms]
  May 10 19:56:40.472: INFO: Created: latency-svc-qtlvd
  May 10 19:56:40.488: INFO: Got endpoints: latency-svc-qtlvd [513.782167ms]
  May 10 19:56:40.497: INFO: Created: latency-svc-vgvbb
  May 10 19:56:40.523: INFO: Created: latency-svc-8gbpc
  May 10 19:56:40.572: INFO: Got endpoints: latency-svc-vgvbb [598.264669ms]
  May 10 19:56:40.575: INFO: Got endpoints: latency-svc-8gbpc [600.467495ms]
  May 10 19:56:40.585: INFO: Created: latency-svc-hxzgb
  May 10 19:56:40.592: INFO: Got endpoints: latency-svc-hxzgb [617.823246ms]
  May 10 19:56:40.671: INFO: Created: latency-svc-lm575
  May 10 19:56:40.680: INFO: Got endpoints: latency-svc-lm575 [706.005212ms]
  May 10 19:56:40.701: INFO: Created: latency-svc-gc7t4
  May 10 19:56:40.720: INFO: Got endpoints: latency-svc-gc7t4 [745.801555ms]
  May 10 19:56:40.726: INFO: Created: latency-svc-rxkwp
  May 10 19:56:40.767: INFO: Got endpoints: latency-svc-rxkwp [665.103236ms]
  May 10 19:56:40.777: INFO: Created: latency-svc-k9w2x
  May 10 19:56:40.826: INFO: Got endpoints: latency-svc-k9w2x [695.795071ms]
  May 10 19:56:41.305: INFO: Created: latency-svc-f7m4n
  May 10 19:56:41.306: INFO: Created: latency-svc-btdxk
  May 10 19:56:41.306: INFO: Created: latency-svc-thfjd
  May 10 19:56:41.307: INFO: Created: latency-svc-l6bs7
  May 10 19:56:41.307: INFO: Created: latency-svc-4flj9
  May 10 19:56:41.307: INFO: Created: latency-svc-nhp6b
  May 10 19:56:41.310: INFO: Created: latency-svc-8gnbk
  May 10 19:56:41.310: INFO: Created: latency-svc-lqlp7
  May 10 19:56:41.316: INFO: Created: latency-svc-vtk2l
  May 10 19:56:41.319: INFO: Created: latency-svc-rbl7r
  May 10 19:56:41.319: INFO: Created: latency-svc-x9gc2
  May 10 19:56:41.319: INFO: Created: latency-svc-dzl7g
  May 10 19:56:41.319: INFO: Created: latency-svc-g4v2w
  May 10 19:56:41.319: INFO: Created: latency-svc-2rz2f
  May 10 19:56:41.319: INFO: Created: latency-svc-5s2pq
  May 10 19:56:41.331: INFO: Got endpoints: latency-svc-l6bs7 [1.166936931s]
  May 10 19:56:41.331: INFO: Got endpoints: latency-svc-4flj9 [564.506519ms]
  May 10 19:56:41.339: INFO: Got endpoints: latency-svc-nhp6b [513.341891ms]
  May 10 19:56:41.343: INFO: Got endpoints: latency-svc-btdxk [854.77823ms]
  May 10 19:56:41.353: INFO: Got endpoints: latency-svc-thfjd [1.143844462s]
  May 10 19:56:41.353: INFO: Got endpoints: latency-svc-rbl7r [778.248138ms]
  May 10 19:56:41.353: INFO: Got endpoints: latency-svc-2rz2f [969.758737ms]
  May 10 19:56:41.353: INFO: Got endpoints: latency-svc-dzl7g [781.145627ms]
  May 10 19:56:41.354: INFO: Got endpoints: latency-svc-x9gc2 [761.472004ms]
  May 10 19:56:41.375: INFO: Created: latency-svc-kzpg6
  May 10 19:56:41.376: INFO: Got endpoints: latency-svc-5s2pq [695.130162ms]
  May 10 19:56:41.429: INFO: Got endpoints: latency-svc-g4v2w [1.120620743s]
  May 10 19:56:41.429: INFO: Got endpoints: latency-svc-vtk2l [1.156027186s]
  May 10 19:56:41.437: INFO: Got endpoints: latency-svc-8gnbk [717.076213ms]
  May 10 19:56:41.439: INFO: Got endpoints: latency-svc-f7m4n [1.027884978s]
  May 10 19:56:41.439: INFO: Got endpoints: latency-svc-lqlp7 [1.04939274s]
  May 10 19:56:41.468: INFO: Created: latency-svc-r7fqm
  May 10 19:56:41.474: INFO: Got endpoints: latency-svc-kzpg6 [142.746699ms]
  May 10 19:56:41.556: INFO: Got endpoints: latency-svc-r7fqm [225.167098ms]
  May 10 19:56:41.565: INFO: Created: latency-svc-htxvc
  May 10 19:56:41.588: INFO: Got endpoints: latency-svc-htxvc [248.557065ms]
  May 10 19:56:41.603: INFO: Created: latency-svc-8fq9c
  May 10 19:56:41.623: INFO: Got endpoints: latency-svc-8fq9c [280.251333ms]
  May 10 19:56:41.656: INFO: Created: latency-svc-78cnq
  May 10 19:56:41.656: INFO: Got endpoints: latency-svc-78cnq [303.501022ms]
  May 10 19:56:41.712: INFO: Created: latency-svc-7m2mb
  May 10 19:56:41.723: INFO: Got endpoints: latency-svc-7m2mb [369.789372ms]
  May 10 19:56:41.776: INFO: Created: latency-svc-p6gxb
  May 10 19:56:41.787: INFO: Got endpoints: latency-svc-p6gxb [434.240754ms]
  May 10 19:56:41.800: INFO: Created: latency-svc-8cxkq
  May 10 19:56:41.810: INFO: Got endpoints: latency-svc-8cxkq [456.761929ms]
  May 10 19:56:41.822: INFO: Created: latency-svc-d5ntn
  May 10 19:56:41.826: INFO: Got endpoints: latency-svc-d5ntn [471.994347ms]
  May 10 19:56:41.872: INFO: Created: latency-svc-79lxj
  May 10 19:56:41.883: INFO: Got endpoints: latency-svc-79lxj [507.368368ms]
  May 10 19:56:41.941: INFO: Created: latency-svc-mcnwf
  May 10 19:56:41.953: INFO: Got endpoints: latency-svc-mcnwf [523.654081ms]
  May 10 19:56:41.957: INFO: Created: latency-svc-f2bhv
  May 10 19:56:41.975: INFO: Got endpoints: latency-svc-f2bhv [545.449602ms]
  May 10 19:56:41.990: INFO: Created: latency-svc-wwtj2
  May 10 19:56:42.029: INFO: Got endpoints: latency-svc-wwtj2 [591.477668ms]
  May 10 19:56:42.044: INFO: Created: latency-svc-568hc
  May 10 19:56:42.104: INFO: Got endpoints: latency-svc-568hc [665.19879ms]
  May 10 19:56:42.118: INFO: Created: latency-svc-v4zdz
  May 10 19:56:42.132: INFO: Got endpoints: latency-svc-v4zdz [693.586002ms]
  May 10 19:56:42.149: INFO: Created: latency-svc-q59sb
  May 10 19:56:42.159: INFO: Got endpoints: latency-svc-q59sb [684.835806ms]
  May 10 19:56:42.178: INFO: Created: latency-svc-w648s
  May 10 19:56:42.189: INFO: Got endpoints: latency-svc-w648s [632.428568ms]
  May 10 19:56:42.250: INFO: Created: latency-svc-lr6hk
  May 10 19:56:42.297: INFO: Got endpoints: latency-svc-lr6hk [709.18688ms]
  May 10 19:56:42.308: INFO: Created: latency-svc-dl8d8
  May 10 19:56:42.318: INFO: Got endpoints: latency-svc-dl8d8 [694.952592ms]
  May 10 19:56:42.324: INFO: Created: latency-svc-xx5pt
  May 10 19:56:42.338: INFO: Got endpoints: latency-svc-xx5pt [681.103792ms]
  May 10 19:56:42.346: INFO: Created: latency-svc-7csfl
  May 10 19:56:42.386: INFO: Created: latency-svc-mg76f
  May 10 19:56:42.489: INFO: Got endpoints: latency-svc-7csfl [766.484792ms]
  May 10 19:56:42.489: INFO: Got endpoints: latency-svc-mg76f [701.966467ms]
  May 10 19:56:42.491: INFO: Created: latency-svc-zk4h7
  May 10 19:56:42.522: INFO: Got endpoints: latency-svc-zk4h7 [711.374634ms]
  May 10 19:56:42.530: INFO: Created: latency-svc-qk4v8
  May 10 19:56:42.589: INFO: Created: latency-svc-ct5sp
  May 10 19:56:42.592: INFO: Got endpoints: latency-svc-qk4v8 [766.424196ms]
  May 10 19:56:42.631: INFO: Got endpoints: latency-svc-ct5sp [747.97233ms]
  May 10 19:56:42.637: INFO: Created: latency-svc-82p8f
  May 10 19:56:42.645: INFO: Got endpoints: latency-svc-82p8f [691.991465ms]
  May 10 19:56:42.720: INFO: Created: latency-svc-nxp8r
  May 10 19:56:42.739: INFO: Created: latency-svc-9sjr6
  May 10 19:56:42.754: INFO: Created: latency-svc-fwhmc
  May 10 19:56:42.784: INFO: Got endpoints: latency-svc-nxp8r [809.747162ms]
  May 10 19:56:42.788: INFO: Got endpoints: latency-svc-fwhmc [684.035276ms]
  May 10 19:56:42.788: INFO: Got endpoints: latency-svc-9sjr6 [759.186844ms]
  May 10 19:56:42.793: INFO: Created: latency-svc-nxkkm
  May 10 19:56:42.892: INFO: Created: latency-svc-cwtlr
  May 10 19:56:42.910: INFO: Got endpoints: latency-svc-nxkkm [778.23478ms]
  May 10 19:56:42.918: INFO: Got endpoints: latency-svc-cwtlr [759.014654ms]
  May 10 19:56:42.927: INFO: Created: latency-svc-964w8
  May 10 19:56:42.945: INFO: Got endpoints: latency-svc-964w8 [756.768672ms]
  May 10 19:56:42.956: INFO: Created: latency-svc-px2vv
  May 10 19:56:42.988: INFO: Got endpoints: latency-svc-px2vv [690.41626ms]
  May 10 19:56:43.005: INFO: Created: latency-svc-j5dtv
  May 10 19:56:43.101: INFO: Got endpoints: latency-svc-j5dtv [782.976544ms]
  May 10 19:56:43.109: INFO: Created: latency-svc-rdlf7
  May 10 19:56:43.123: INFO: Got endpoints: latency-svc-rdlf7 [785.683059ms]
  May 10 19:56:43.130: INFO: Created: latency-svc-d2bvp
  May 10 19:56:43.150: INFO: Created: latency-svc-xk6b2
  May 10 19:56:43.259: INFO: Got endpoints: latency-svc-xk6b2 [769.778374ms]
  May 10 19:56:43.259: INFO: Got endpoints: latency-svc-d2bvp [769.787613ms]
  May 10 19:56:43.268: INFO: Created: latency-svc-w5gxw
  May 10 19:56:43.331: INFO: Got endpoints: latency-svc-w5gxw [809.64946ms]
  May 10 19:56:43.339: INFO: Created: latency-svc-rwmwb
  May 10 19:56:43.352: INFO: Got endpoints: latency-svc-rwmwb [760.409585ms]
  May 10 19:56:43.369: INFO: Created: latency-svc-tkqfj
  May 10 19:56:43.386: INFO: Got endpoints: latency-svc-tkqfj [755.229852ms]
  May 10 19:56:43.397: INFO: Created: latency-svc-s9dxw
  May 10 19:56:43.442: INFO: Got endpoints: latency-svc-s9dxw [797.594362ms]
  May 10 19:56:43.455: INFO: Created: latency-svc-wcx5b
  May 10 19:56:43.522: INFO: Got endpoints: latency-svc-wcx5b [737.33068ms]
  May 10 19:56:43.533: INFO: Created: latency-svc-tpkjh
  May 10 19:56:43.561: INFO: Got endpoints: latency-svc-tpkjh [773.5085ms]
  May 10 19:56:43.574: INFO: Created: latency-svc-4gjpd
  May 10 19:56:43.587: INFO: Got endpoints: latency-svc-4gjpd [799.029457ms]
  May 10 19:56:43.596: INFO: Created: latency-svc-t2d6s
  May 10 19:56:43.668: INFO: Got endpoints: latency-svc-t2d6s [757.307493ms]
  May 10 19:56:43.680: INFO: Created: latency-svc-rzwr6
  May 10 19:56:43.705: INFO: Created: latency-svc-krcsm
  May 10 19:56:43.756: INFO: Got endpoints: latency-svc-rzwr6 [838.360703ms]
  May 10 19:56:43.763: INFO: Created: latency-svc-ncpl8
  May 10 19:56:43.765: INFO: Got endpoints: latency-svc-krcsm [819.919252ms]
  May 10 19:56:43.808: INFO: Got endpoints: latency-svc-ncpl8 [820.590589ms]
  May 10 19:56:43.821: INFO: Created: latency-svc-x5gxh
  May 10 19:56:43.835: INFO: Created: latency-svc-mmz9q
  May 10 19:56:43.959: INFO: Created: latency-svc-tpmpf
  May 10 19:56:43.964: INFO: Got endpoints: latency-svc-x5gxh [862.596125ms]
  May 10 19:56:43.964: INFO: Got endpoints: latency-svc-mmz9q [840.558654ms]
  May 10 19:56:43.984: INFO: Created: latency-svc-tlq6m
  May 10 19:56:43.986: INFO: Got endpoints: latency-svc-tpmpf [727.148631ms]
  May 10 19:56:44.003: INFO: Got endpoints: latency-svc-tlq6m [743.852309ms]
  May 10 19:56:44.135: INFO: Created: latency-svc-p8lvx
  May 10 19:56:44.158: INFO: Created: latency-svc-kckdv
  May 10 19:56:44.179: INFO: Created: latency-svc-tnx9b
  May 10 19:56:44.226: INFO: Got endpoints: latency-svc-p8lvx [894.237342ms]
  May 10 19:56:44.226: INFO: Got endpoints: latency-svc-kckdv [873.156981ms]
  May 10 19:56:44.226: INFO: Got endpoints: latency-svc-tnx9b [839.442716ms]
  May 10 19:56:44.236: INFO: Created: latency-svc-rpljw
  May 10 19:56:44.376: INFO: Got endpoints: latency-svc-rpljw [933.18839ms]
  May 10 19:56:44.379: INFO: Created: latency-svc-z54w2
  May 10 19:56:44.384: INFO: Got endpoints: latency-svc-z54w2 [862.69236ms]
  May 10 19:56:44.401: INFO: Created: latency-svc-7np4c
  May 10 19:56:44.423: INFO: Got endpoints: latency-svc-7np4c [862.031396ms]
  May 10 19:56:44.435: INFO: Created: latency-svc-hb2wt
  May 10 19:56:44.491: INFO: Got endpoints: latency-svc-hb2wt [903.918294ms]
  May 10 19:56:44.503: INFO: Created: latency-svc-gm8nm
  May 10 19:56:44.527: INFO: Created: latency-svc-ghhxb
  May 10 19:56:44.635: INFO: Got endpoints: latency-svc-gm8nm [967.34215ms]
  May 10 19:56:44.641: INFO: Got endpoints: latency-svc-ghhxb [885.148492ms]
  May 10 19:56:44.648: INFO: Created: latency-svc-whmzl
  May 10 19:56:44.658: INFO: Got endpoints: latency-svc-whmzl [892.186273ms]
  May 10 19:56:44.682: INFO: Created: latency-svc-d8tsn
  May 10 19:56:44.778: INFO: Got endpoints: latency-svc-d8tsn [969.387949ms]
  May 10 19:56:44.780: INFO: Created: latency-svc-hs6rp
  May 10 19:56:44.780: INFO: Got endpoints: latency-svc-hs6rp [816.60508ms]
  May 10 19:56:44.792: INFO: Created: latency-svc-vt74f
  May 10 19:56:44.864: INFO: Got endpoints: latency-svc-vt74f [899.759036ms]
  May 10 19:56:44.873: INFO: Created: latency-svc-jqnqd
  May 10 19:56:44.926: INFO: Created: latency-svc-zhkl5
  May 10 19:56:44.988: INFO: Got endpoints: latency-svc-jqnqd [1.001866349s]
  May 10 19:56:44.988: INFO: Got endpoints: latency-svc-zhkl5 [985.230329ms]
  May 10 19:56:45.049: INFO: Created: latency-svc-drt57
  May 10 19:56:45.051: INFO: Got endpoints: latency-svc-drt57 [825.132435ms]
  May 10 19:56:45.081: INFO: Created: latency-svc-4x4mf
  May 10 19:56:45.184: INFO: Got endpoints: latency-svc-4x4mf [958.611431ms]
  May 10 19:56:45.195: INFO: Created: latency-svc-mmvlh
  May 10 19:56:45.231: INFO: Created: latency-svc-tcpxb
  May 10 19:56:45.340: INFO: Got endpoints: latency-svc-mmvlh [1.114733479s]
  May 10 19:56:45.341: INFO: Got endpoints: latency-svc-tcpxb [964.885845ms]
  May 10 19:56:45.341: INFO: Created: latency-svc-fd8md
  May 10 19:56:45.341: INFO: Got endpoints: latency-svc-fd8md [956.955407ms]
  May 10 19:56:45.363: INFO: Created: latency-svc-lb9bh
  May 10 19:56:45.524: INFO: Created: latency-svc-k8fjb
  May 10 19:56:45.530: INFO: Got endpoints: latency-svc-lb9bh [1.106151063s]
  May 10 19:56:45.530: INFO: Got endpoints: latency-svc-k8fjb [1.038701603s]
  May 10 19:56:45.555: INFO: Created: latency-svc-lz5mj
  May 10 19:56:45.617: INFO: Got endpoints: latency-svc-lz5mj [982.288916ms]
  May 10 19:56:45.641: INFO: Created: latency-svc-q4dz2
  May 10 19:56:45.655: INFO: Got endpoints: latency-svc-q4dz2 [1.013924981s]
  May 10 19:56:45.665: INFO: Created: latency-svc-6bn25
  May 10 19:56:45.727: INFO: Got endpoints: latency-svc-6bn25 [1.068952357s]
  May 10 19:56:45.793: INFO: Created: latency-svc-n2wnz
  May 10 19:56:45.793: INFO: Got endpoints: latency-svc-n2wnz [1.012986879s]
  May 10 19:56:45.822: INFO: Created: latency-svc-p22lv
  May 10 19:56:45.833: INFO: Got endpoints: latency-svc-p22lv [1.055487745s]
  May 10 19:56:45.890: INFO: Created: latency-svc-fwrq2
  May 10 19:56:45.901: INFO: Got endpoints: latency-svc-fwrq2 [1.036985421s]
  May 10 19:56:45.917: INFO: Created: latency-svc-vfzkr
  May 10 19:56:45.926: INFO: Got endpoints: latency-svc-vfzkr [938.100563ms]
  May 10 19:56:45.998: INFO: Created: latency-svc-dvqgg
  May 10 19:56:46.064: INFO: Got endpoints: latency-svc-dvqgg [1.075588575s]
  May 10 19:56:46.071: INFO: Created: latency-svc-jffjl
  May 10 19:56:46.109: INFO: Got endpoints: latency-svc-jffjl [1.058196713s]
  May 10 19:56:46.115: INFO: Created: latency-svc-tccn5
  May 10 19:56:46.129: INFO: Got endpoints: latency-svc-tccn5 [944.969371ms]
  May 10 19:56:46.137: INFO: Created: latency-svc-qqrnt
  May 10 19:56:46.214: INFO: Got endpoints: latency-svc-qqrnt [873.471234ms]
  May 10 19:56:46.227: INFO: Created: latency-svc-7cdcx
  May 10 19:56:46.248: INFO: Created: latency-svc-lvpst
  May 10 19:56:46.293: INFO: Got endpoints: latency-svc-lvpst [951.389911ms]
  May 10 19:56:46.293: INFO: Got endpoints: latency-svc-7cdcx [952.8345ms]
  May 10 19:56:46.304: INFO: Created: latency-svc-5hmjd
  May 10 19:56:46.308: INFO: Got endpoints: latency-svc-5hmjd [778.546067ms]
  May 10 19:56:46.329: INFO: Created: latency-svc-j9qg7
  May 10 19:56:46.391: INFO: Got endpoints: latency-svc-j9qg7 [860.935333ms]
  May 10 19:56:46.400: INFO: Created: latency-svc-j5zf2
  May 10 19:56:46.425: INFO: Created: latency-svc-72z8v
  May 10 19:56:46.523: INFO: Got endpoints: latency-svc-j5zf2 [905.83317ms]
  May 10 19:56:46.523: INFO: Got endpoints: latency-svc-72z8v [868.319573ms]
  May 10 19:56:46.530: INFO: Created: latency-svc-dcqcp
  May 10 19:56:46.557: INFO: Got endpoints: latency-svc-dcqcp [830.317529ms]
  May 10 19:56:46.564: INFO: Created: latency-svc-4r5w4
  May 10 19:56:46.671: INFO: Got endpoints: latency-svc-4r5w4 [877.897594ms]
  May 10 19:56:46.682: INFO: Created: latency-svc-mt5f6
  May 10 19:56:46.699: INFO: Created: latency-svc-rjt29
  May 10 19:56:46.748: INFO: Got endpoints: latency-svc-mt5f6 [914.966505ms]
  May 10 19:56:46.751: INFO: Got endpoints: latency-svc-rjt29 [850.278895ms]
  May 10 19:56:46.757: INFO: Created: latency-svc-m4dg2
  May 10 19:56:46.769: INFO: Got endpoints: latency-svc-m4dg2 [842.554966ms]
  May 10 19:56:46.784: INFO: Created: latency-svc-ggqpb
  May 10 19:56:46.927: INFO: Created: latency-svc-24fm4
  May 10 19:56:46.928: INFO: Got endpoints: latency-svc-24fm4 [819.38119ms]
  May 10 19:56:46.928: INFO: Got endpoints: latency-svc-ggqpb [864.443907ms]
  May 10 19:56:46.945: INFO: Created: latency-svc-2ggsx
  May 10 19:56:46.986: INFO: Got endpoints: latency-svc-2ggsx [856.386918ms]
  May 10 19:56:46.998: INFO: Created: latency-svc-dhmxd
  May 10 19:56:47.015: INFO: Got endpoints: latency-svc-dhmxd [800.736991ms]
  May 10 19:56:47.025: INFO: Created: latency-svc-fdspd
  May 10 19:56:47.102: INFO: Got endpoints: latency-svc-fdspd [809.190839ms]
  May 10 19:56:47.113: INFO: Created: latency-svc-6vp86
  May 10 19:56:47.124: INFO: Got endpoints: latency-svc-6vp86 [830.120645ms]
  May 10 19:56:47.135: INFO: Created: latency-svc-r2nc8
  May 10 19:56:47.194: INFO: Got endpoints: latency-svc-r2nc8 [885.889736ms]
  May 10 19:56:47.202: INFO: Created: latency-svc-875lg
  May 10 19:56:47.219: INFO: Created: latency-svc-nlfcl
  May 10 19:56:47.286: INFO: Got endpoints: latency-svc-nlfcl [762.942948ms]
  May 10 19:56:47.286: INFO: Got endpoints: latency-svc-875lg [895.808614ms]
  May 10 19:56:47.343: INFO: Created: latency-svc-nwnwq
  May 10 19:56:47.348: INFO: Got endpoints: latency-svc-nwnwq [824.806276ms]
  May 10 19:56:47.375: INFO: Created: latency-svc-x4xlw
  May 10 19:56:47.446: INFO: Got endpoints: latency-svc-x4xlw [888.796381ms]
  May 10 19:56:47.461: INFO: Created: latency-svc-k9hbh
  May 10 19:56:47.476: INFO: Got endpoints: latency-svc-k9hbh [804.597127ms]
  May 10 19:56:47.500: INFO: Created: latency-svc-z559p
  May 10 19:56:47.517: INFO: Got endpoints: latency-svc-z559p [769.126826ms]
  May 10 19:56:47.599: INFO: Created: latency-svc-g22l8
  May 10 19:56:47.613: INFO: Got endpoints: latency-svc-g22l8 [862.248247ms]
  May 10 19:56:47.619: INFO: Created: latency-svc-h48mm
  May 10 19:56:47.657: INFO: Got endpoints: latency-svc-h48mm [887.754183ms]
  May 10 19:56:47.664: INFO: Created: latency-svc-khxhq
  May 10 19:56:47.670: INFO: Got endpoints: latency-svc-khxhq [741.677346ms]
  May 10 19:56:47.681: INFO: Created: latency-svc-fqn4h
  May 10 19:56:47.769: INFO: Got endpoints: latency-svc-fqn4h [841.063421ms]
  May 10 19:56:47.812: INFO: Created: latency-svc-978dc
  May 10 19:56:47.813: INFO: Got endpoints: latency-svc-978dc [826.944991ms]
  May 10 19:56:47.861: INFO: Created: latency-svc-gfxnj
  May 10 19:56:47.865: INFO: Got endpoints: latency-svc-gfxnj [850.176257ms]
  May 10 19:56:47.942: INFO: Created: latency-svc-dhjjt
  May 10 19:56:47.948: INFO: Got endpoints: latency-svc-dhjjt [846.324454ms]
  May 10 19:56:47.963: INFO: Created: latency-svc-qftsk
  May 10 19:56:48.079: INFO: Got endpoints: latency-svc-qftsk [955.956863ms]
  May 10 19:56:48.099: INFO: Created: latency-svc-265bx
  May 10 19:56:48.128: INFO: Created: latency-svc-qmwlm
  May 10 19:56:48.128: INFO: Got endpoints: latency-svc-265bx [933.968144ms]
  May 10 19:56:48.196: INFO: Got endpoints: latency-svc-qmwlm [909.967715ms]
  May 10 19:56:48.217: INFO: Created: latency-svc-bcv8z
  May 10 19:56:48.246: INFO: Created: latency-svc-2h2qn
  May 10 19:56:48.330: INFO: Got endpoints: latency-svc-2h2qn [981.735721ms]
  May 10 19:56:48.332: INFO: Got endpoints: latency-svc-bcv8z [1.045798119s]
  May 10 19:56:48.334: INFO: Created: latency-svc-phdn4
  May 10 19:56:48.353: INFO: Got endpoints: latency-svc-phdn4 [906.761456ms]
  May 10 19:56:48.360: INFO: Created: latency-svc-nknfn
  May 10 19:56:48.372: INFO: Got endpoints: latency-svc-nknfn [895.908426ms]
  May 10 19:56:48.425: INFO: Created: latency-svc-qbpq8
  May 10 19:56:48.437: INFO: Got endpoints: latency-svc-qbpq8 [919.371887ms]
  May 10 19:56:48.448: INFO: Created: latency-svc-4wvtg
  May 10 19:56:48.497: INFO: Got endpoints: latency-svc-4wvtg [883.968576ms]
  May 10 19:56:48.509: INFO: Created: latency-svc-w2z7f
  May 10 19:56:48.536: INFO: Created: latency-svc-w7ksv
  May 10 19:56:48.599: INFO: Created: latency-svc-bq6tk
  May 10 19:56:48.616: INFO: Got endpoints: latency-svc-w2z7f [959.533064ms]
  May 10 19:56:48.620: INFO: Got endpoints: latency-svc-bq6tk [850.621646ms]
  May 10 19:56:48.631: INFO: Got endpoints: latency-svc-w7ksv [961.219319ms]
  May 10 19:56:48.660: INFO: Created: latency-svc-b4j96
  May 10 19:56:48.664: INFO: Got endpoints: latency-svc-b4j96 [851.560369ms]
  May 10 19:56:48.759: INFO: Created: latency-svc-lr9r2
  May 10 19:56:48.777: INFO: Got endpoints: latency-svc-lr9r2 [912.354516ms]
  May 10 19:56:48.789: INFO: Created: latency-svc-bzv4j
  May 10 19:56:48.805: INFO: Got endpoints: latency-svc-bzv4j [856.372213ms]
  May 10 19:56:48.853: INFO: Created: latency-svc-d6m2z
  May 10 19:56:48.853: INFO: Got endpoints: latency-svc-d6m2z [773.025741ms]
  May 10 19:56:48.875: INFO: Created: latency-svc-zm4kp
  May 10 19:56:48.896: INFO: Got endpoints: latency-svc-zm4kp [767.814112ms]
  May 10 19:56:49.040: INFO: Created: latency-svc-98ddc
  May 10 19:56:49.058: INFO: Got endpoints: latency-svc-98ddc [861.488627ms]
  May 10 19:56:49.067: INFO: Created: latency-svc-gsqpr
  May 10 19:56:49.137: INFO: Got endpoints: latency-svc-gsqpr [806.944631ms]
  May 10 19:56:49.140: INFO: Created: latency-svc-v6ffw
  May 10 19:56:49.158: INFO: Got endpoints: latency-svc-v6ffw [825.284626ms]
  May 10 19:56:49.166: INFO: Created: latency-svc-rpng6
  May 10 19:56:49.276: INFO: Got endpoints: latency-svc-rpng6 [923.086341ms]
  May 10 19:56:49.283: INFO: Created: latency-svc-cn9ft
  May 10 19:56:49.296: INFO: Got endpoints: latency-svc-cn9ft [923.758239ms]
  May 10 19:56:49.309: INFO: Created: latency-svc-dvp65
  May 10 19:56:49.386: INFO: Got endpoints: latency-svc-dvp65 [949.488661ms]
  May 10 19:56:49.396: INFO: Created: latency-svc-szst7
  May 10 19:56:49.424: INFO: Got endpoints: latency-svc-szst7 [926.814528ms]
  May 10 19:56:49.453: INFO: Created: latency-svc-qshmw
  May 10 19:56:49.542: INFO: Got endpoints: latency-svc-qshmw [925.802648ms]
  May 10 19:56:49.554: INFO: Created: latency-svc-w78r9
  May 10 19:56:49.564: INFO: Got endpoints: latency-svc-w78r9 [943.672792ms]
  May 10 19:56:49.583: INFO: Created: latency-svc-xjznv
  May 10 19:56:49.623: INFO: Got endpoints: latency-svc-xjznv [991.349541ms]
  May 10 19:56:49.635: INFO: Created: latency-svc-7mdmj
  May 10 19:56:49.654: INFO: Got endpoints: latency-svc-7mdmj [989.516703ms]
  May 10 19:56:49.672: INFO: Created: latency-svc-w9kxg
  May 10 19:56:49.684: INFO: Got endpoints: latency-svc-w9kxg [906.568248ms]
  May 10 19:56:49.754: INFO: Created: latency-svc-4v22q
  May 10 19:56:49.815: INFO: Got endpoints: latency-svc-4v22q [1.010461224s]
  May 10 19:56:49.860: INFO: Created: latency-svc-gf64h
  May 10 19:56:49.870: INFO: Got endpoints: latency-svc-gf64h [1.017403207s]
  May 10 19:56:49.890: INFO: Created: latency-svc-rgsvp
  May 10 19:56:49.912: INFO: Created: latency-svc-jxjkz
  May 10 19:56:49.983: INFO: Got endpoints: latency-svc-rgsvp [1.087475453s]
  May 10 19:56:49.983: INFO: Got endpoints: latency-svc-jxjkz [925.60271ms]
  May 10 19:56:49.994: INFO: Created: latency-svc-v5kvx
  May 10 19:56:50.035: INFO: Got endpoints: latency-svc-v5kvx [898.074291ms]
  May 10 19:56:50.040: INFO: Created: latency-svc-4bdt7
  May 10 19:56:50.068: INFO: Created: latency-svc-hbmb2
  May 10 19:56:50.146: INFO: Got endpoints: latency-svc-hbmb2 [870.172988ms]
  May 10 19:56:50.146: INFO: Got endpoints: latency-svc-4bdt7 [988.290508ms]
  May 10 19:56:50.153: INFO: Created: latency-svc-wgs85
  May 10 19:56:50.173: INFO: Got endpoints: latency-svc-wgs85 [877.008752ms]
  May 10 19:56:50.177: INFO: Created: latency-svc-rv2dn
  May 10 19:56:50.260: INFO: Got endpoints: latency-svc-rv2dn [873.33737ms]
  May 10 19:56:50.264: INFO: Created: latency-svc-hvlvv
  May 10 19:56:50.303: INFO: Got endpoints: latency-svc-hvlvv [878.83133ms]
  May 10 19:56:50.305: INFO: Created: latency-svc-q2srv
  May 10 19:56:50.315: INFO: Got endpoints: latency-svc-q2srv [773.098623ms]
  May 10 19:56:50.382: INFO: Created: latency-svc-r9vtt
  May 10 19:56:50.404: INFO: Created: latency-svc-k2r2q
  May 10 19:56:50.467: INFO: Got endpoints: latency-svc-k2r2q [843.952911ms]
  May 10 19:56:50.467: INFO: Got endpoints: latency-svc-r9vtt [902.864087ms]
  May 10 19:56:50.472: INFO: Created: latency-svc-246cw
  May 10 19:56:50.524: INFO: Got endpoints: latency-svc-246cw [870.775518ms]
  May 10 19:56:50.530: INFO: Created: latency-svc-z76xh
  May 10 19:56:50.618: INFO: Got endpoints: latency-svc-z76xh [934.374505ms]
  May 10 19:56:50.634: INFO: Created: latency-svc-k28xc
  May 10 19:56:50.644: INFO: Got endpoints: latency-svc-k28xc [829.110704ms]
  May 10 19:56:50.655: INFO: Created: latency-svc-hnz4d
  May 10 19:56:50.705: INFO: Got endpoints: latency-svc-hnz4d [835.17809ms]
  May 10 19:56:50.711: INFO: Created: latency-svc-h57cg
  May 10 19:56:50.725: INFO: Got endpoints: latency-svc-h57cg [741.321947ms]
  May 10 19:56:50.729: INFO: Created: latency-svc-jcq97
  May 10 19:56:50.807: INFO: Got endpoints: latency-svc-jcq97 [823.398803ms]
  May 10 19:56:50.815: INFO: Created: latency-svc-w7kqh
  May 10 19:56:50.830: INFO: Got endpoints: latency-svc-w7kqh [794.702182ms]
  May 10 19:56:50.835: INFO: Created: latency-svc-mklnz
  May 10 19:56:50.873: INFO: Got endpoints: latency-svc-mklnz [727.356328ms]
  May 10 19:56:50.881: INFO: Created: latency-svc-4sv5h
  May 10 19:56:50.936: INFO: Got endpoints: latency-svc-4sv5h [789.721232ms]
  May 10 19:56:50.945: INFO: Created: latency-svc-7lp9q
  May 10 19:56:50.992: INFO: Got endpoints: latency-svc-7lp9q [819.542361ms]
  May 10 19:56:50.992: INFO: Latencies: [127.439577ms 142.746699ms 156.08483ms 189.905334ms 225.167098ms 234.949887ms 248.557065ms 280.251333ms 298.958957ms 303.501022ms 334.266603ms 369.789372ms 409.032201ms 414.850669ms 434.240754ms 436.456302ms 456.761929ms 471.994347ms 507.368368ms 513.341891ms 513.782167ms 523.654081ms 545.449602ms 564.506519ms 591.477668ms 598.264669ms 600.467495ms 617.823246ms 632.428568ms 665.103236ms 665.19879ms 681.103792ms 684.035276ms 684.835806ms 690.41626ms 691.991465ms 693.586002ms 694.952592ms 695.130162ms 695.795071ms 701.966467ms 706.005212ms 709.18688ms 711.374634ms 717.076213ms 727.148631ms 727.356328ms 737.33068ms 741.321947ms 741.677346ms 743.852309ms 745.801555ms 747.97233ms 755.229852ms 756.768672ms 757.307493ms 759.014654ms 759.186844ms 760.409585ms 761.472004ms 762.942948ms 766.424196ms 766.484792ms 767.814112ms 769.126826ms 769.778374ms 769.787613ms 773.025741ms 773.098623ms 773.5085ms 778.23478ms 778.248138ms 778.546067ms 781.145627ms 782.976544ms 785.683059ms 789.721232ms 794.702182ms 797.594362ms 799.029457ms 800.736991ms 804.597127ms 806.944631ms 809.190839ms 809.64946ms 809.747162ms 816.60508ms 819.38119ms 819.542361ms 819.919252ms 820.590589ms 823.398803ms 824.806276ms 825.132435ms 825.284626ms 826.944991ms 829.110704ms 830.120645ms 830.317529ms 835.17809ms 838.360703ms 839.442716ms 840.558654ms 841.063421ms 842.554966ms 843.952911ms 846.324454ms 850.176257ms 850.278895ms 850.621646ms 851.560369ms 854.77823ms 856.372213ms 856.386918ms 860.935333ms 861.488627ms 862.031396ms 862.248247ms 862.596125ms 862.69236ms 864.443907ms 868.319573ms 870.172988ms 870.775518ms 873.156981ms 873.33737ms 873.471234ms 877.008752ms 877.897594ms 878.83133ms 883.968576ms 885.148492ms 885.889736ms 887.754183ms 888.796381ms 892.186273ms 894.237342ms 895.808614ms 895.908426ms 898.074291ms 899.759036ms 902.864087ms 903.918294ms 905.83317ms 906.568248ms 906.761456ms 909.967715ms 912.354516ms 914.966505ms 919.371887ms 923.086341ms 923.758239ms 925.60271ms 925.802648ms 926.814528ms 933.18839ms 933.968144ms 934.374505ms 938.100563ms 943.672792ms 944.969371ms 949.488661ms 951.389911ms 952.8345ms 955.956863ms 956.955407ms 958.611431ms 959.533064ms 961.219319ms 964.885845ms 967.34215ms 969.387949ms 969.758737ms 981.735721ms 982.288916ms 985.230329ms 988.290508ms 989.516703ms 991.349541ms 1.001866349s 1.010461224s 1.012986879s 1.013924981s 1.017403207s 1.027884978s 1.036985421s 1.038701603s 1.045798119s 1.04939274s 1.055487745s 1.058196713s 1.068952357s 1.075588575s 1.087475453s 1.106151063s 1.114733479s 1.120620743s 1.143844462s 1.156027186s 1.166936931s]
  May 10 19:56:50.992: INFO: 50 %ile: 838.360703ms
  May 10 19:56:50.992: INFO: 90 %ile: 1.010461224s
  May 10 19:56:50.992: INFO: 99 %ile: 1.156027186s
  May 10 19:56:50.992: INFO: Total sample count: 200
  May 10 19:56:50.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1817" for this suite. @ 05/10/24 19:56:51.012
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [14.652 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:51.045
  May 10 19:56:51.045: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:56:51.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:51.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:51.154
  STEP: Setting up server cert @ 05/10/24 19:56:51.194
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:56:51.496
  STEP: Deploying the webhook pod @ 05/10/24 19:56:51.516
  STEP: Wait for the deployment to be ready @ 05/10/24 19:56:51.552
  May 10 19:56:51.596: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 19:56:53.621
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:56:53.719
  May 10 19:56:54.720: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/10/24 19:56:54.733
  May 10 19:56:54.764: INFO: Waiting for webhook configuration to be ready...
  STEP: create a pod that should be denied by the webhook @ 05/10/24 19:56:54.879
  STEP: create a pod that causes the webhook to hang @ 05/10/24 19:56:54.896
  STEP: create a configmap that should be denied by the webhook @ 05/10/24 19:57:04.912
  STEP: create a configmap that should be admitted by the webhook @ 05/10/24 19:57:04.925
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/10/24 19:57:04.938
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/10/24 19:57:04.958
  STEP: create a namespace that bypass the webhook @ 05/10/24 19:57:04.977
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/10/24 19:57:05.1
  May 10 19:57:05.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6006" for this suite. @ 05/10/24 19:57:05.469
  STEP: Destroying namespace "webhook-markers-8133" for this suite. @ 05/10/24 19:57:05.516
  STEP: Destroying namespace "exempted-namespace-3264" for this suite. @ 05/10/24 19:57:05.604
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.238 seconds]
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:05.719
  May 10 19:57:05.719: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename subjectreview @ 05/10/24 19:57:05.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:05.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:05.82
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9601" @ 05/10/24 19:57:05.825
  May 10 19:57:05.862: INFO: saUsername: "system:serviceaccount:subjectreview-9601:e2e"
  May 10 19:57:05.862: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9601"}
  May 10 19:57:05.862: INFO: saUID: "bbfa61c9-355b-4a58-b530-ac531decefa4"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9601:e2e" @ 05/10/24 19:57:05.862
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9601:e2e" @ 05/10/24 19:57:05.863
  May 10 19:57:05.869: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9601:e2e" api 'list' configmaps in "subjectreview-9601" namespace @ 05/10/24 19:57:05.869
  May 10 19:57:05.878: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9601:e2e" @ 05/10/24 19:57:05.878
  May 10 19:57:05.883: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  May 10 19:57:05.883: INFO: LocalSubjectAccessReview has been verified
  May 10 19:57:05.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9601" for this suite. @ 05/10/24 19:57:05.941
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [8.987 seconds]
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:05.961
  May 10 19:57:05.961: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 19:57:05.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:06.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:06.065
  STEP: creating Agnhost RC @ 05/10/24 19:57:06.072
  May 10 19:57:06.072: INFO: namespace kubectl-5672
  May 10 19:57:06.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=kubectl-5672 create -f -'
  May 10 19:57:06.193: INFO: stderr: ""
  May 10 19:57:06.193: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 19:57:06.193
  May 10 19:57:07.236: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:57:07.236: INFO: Found 0 / 1
  May 10 19:57:08.240: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:57:08.240: INFO: Found 1 / 1
  May 10 19:57:08.240: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 10 19:57:08.253: INFO: Selector matched 1 pods for map[app:agnhost]
  May 10 19:57:08.253: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 10 19:57:08.253: INFO: wait on agnhost-primary startup in kubectl-5672 
  May 10 19:57:08.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=kubectl-5672 logs agnhost-primary-92psc agnhost-primary'
  May 10 19:57:08.353: INFO: stderr: ""
  May 10 19:57:08.353: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 05/10/24 19:57:08.353
  May 10 19:57:08.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=kubectl-5672 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  May 10 19:57:08.445: INFO: stderr: ""
  May 10 19:57:08.445: INFO: stdout: "service/rm2 exposed\n"
  May 10 19:57:08.595: INFO: Service rm2 in namespace kubectl-5672 found.
  May 10 19:57:10.616: INFO: Get endpoints failed (interval 2s): endpoints "rm2" not found
  STEP: exposing service @ 05/10/24 19:57:12.612
  May 10 19:57:12.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=kubectl-5672 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  May 10 19:57:12.797: INFO: stderr: ""
  May 10 19:57:12.797: INFO: stdout: "service/rm3 exposed\n"
  May 10 19:57:12.803: INFO: Service rm3 in namespace kubectl-5672 found.
  May 10 19:57:14.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5672" for this suite. @ 05/10/24 19:57:14.936
  << Timeline
------------------------------
SSSSS
------------------------------
• [0.354 seconds]
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:14.952
  May 10 19:57:14.952: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename lease-test @ 05/10/24 19:57:14.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:14.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:14.996
  May 10 19:57:15.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-294" for this suite. @ 05/10/24 19:57:15.291
  << Timeline
------------------------------
SSSS
------------------------------
• [0.419 seconds]
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:15.308
  May 10 19:57:15.308: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/10/24 19:57:15.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:15.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:15.379
  STEP: Creating two CSIDrivers @ 05/10/24 19:57:15.382
  STEP: Getting "inline-driver-f0313f7c-1732-4f42-b860-ebcc186abfb1" & "inline-driver-e090a9ff-981f-4a2f-87d9-885ab26c0951" @ 05/10/24 19:57:15.467
  STEP: Patching the CSIDriver "inline-driver-e090a9ff-981f-4a2f-87d9-885ab26c0951" @ 05/10/24 19:57:15.478
  STEP: Updating the CSIDriver "inline-driver-e090a9ff-981f-4a2f-87d9-885ab26c0951" @ 05/10/24 19:57:15.501
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8139" @ 05/10/24 19:57:15.525
  STEP: Deleting CSIDriver "inline-driver-f0313f7c-1732-4f42-b860-ebcc186abfb1" @ 05/10/24 19:57:15.532
  STEP: Confirm deletion of CSIDriver "inline-driver-f0313f7c-1732-4f42-b860-ebcc186abfb1" @ 05/10/24 19:57:15.545
  STEP: Deleting CSIDriver "inline-driver-e090a9ff-981f-4a2f-87d9-885ab26c0951" via DeleteCollection @ 05/10/24 19:57:15.55
  STEP: Confirm deletion of CSIDriver "inline-driver-e090a9ff-981f-4a2f-87d9-885ab26c0951" @ 05/10/24 19:57:15.651
  May 10 19:57:15.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8139" for this suite. @ 05/10/24 19:57:15.706
  << Timeline
------------------------------
SS
------------------------------
• [7.277 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:15.729
  May 10 19:57:15.729: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename webhook @ 05/10/24 19:57:15.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:15.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:15.777
  STEP: Setting up server cert @ 05/10/24 19:57:15.903
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 19:57:16.327
  STEP: Deploying the webhook pod @ 05/10/24 19:57:16.396
  STEP: Wait for the deployment to be ready @ 05/10/24 19:57:16.421
  May 10 19:57:16.434: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 19:57:18.516
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 19:57:18.563
  May 10 19:57:19.563: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 19:57:19.579: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2038-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 19:57:20.153
  STEP: Creating a custom resource while v1 is storage version @ 05/10/24 19:57:20.181
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/10/24 19:57:22.226
  STEP: Patching the custom resource while v2 is storage version @ 05/10/24 19:57:22.252
  May 10 19:57:22.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4549" for this suite. @ 05/10/24 19:57:22.977
  STEP: Destroying namespace "webhook-markers-4787" for this suite. @ 05/10/24 19:57:22.99
  << Timeline
------------------------------
S
------------------------------
• [0.134 seconds]
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:23.007
  May 10 19:57:23.007: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename watch @ 05/10/24 19:57:23.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:23.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:23.047
  STEP: creating a new configmap @ 05/10/24 19:57:23.053
  STEP: modifying the configmap once @ 05/10/24 19:57:23.061
  STEP: modifying the configmap a second time @ 05/10/24 19:57:23.078
  STEP: deleting the configmap @ 05/10/24 19:57:23.106
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/10/24 19:57:23.117
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/10/24 19:57:23.119
  May 10 19:57:23.119: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6710  dda032e0-6dd3-474d-bd28-5fc37099ab46 30767 0 2024-05-10 19:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-10 19:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:57:23.120: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6710  dda032e0-6dd3-474d-bd28-5fc37099ab46 30769 0 2024-05-10 19:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-10 19:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:57:23.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6710" for this suite. @ 05/10/24 19:57:23.131
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [73.204 seconds]
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:56:21.747
  May 10 19:56:21.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:56:21.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:56:21.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:56:21.789
  STEP: Creating secret with name s-test-opt-del-0a75680d-691f-4e4f-a2e1-624c3dc4d7a0 @ 05/10/24 19:56:21.8
  STEP: Creating secret with name s-test-opt-upd-3872e48f-8b26-402a-a3eb-c57c639a0213 @ 05/10/24 19:56:21.809
  STEP: Creating the pod @ 05/10/24 19:56:21.816
  STEP: Deleting secret s-test-opt-del-0a75680d-691f-4e4f-a2e1-624c3dc4d7a0 @ 05/10/24 19:56:23.905
  STEP: Updating secret s-test-opt-upd-3872e48f-8b26-402a-a3eb-c57c639a0213 @ 05/10/24 19:56:23.924
  STEP: Creating secret with name s-test-opt-create-0db8cd57-d8f5-4525-bd56-bf6478592583 @ 05/10/24 19:56:23.932
  STEP: waiting to observe update in volume @ 05/10/24 19:56:23.939
  May 10 19:57:34.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5660" for this suite. @ 05/10/24 19:57:34.932
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [13.190 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:23.15
  May 10 19:57:23.150: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:57:23.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:23.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:23.184
  STEP: Counting existing ResourceQuota @ 05/10/24 19:57:23.189
  STEP: Creating a ResourceQuota @ 05/10/24 19:57:28.196
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:57:28.215
  STEP: Creating a Pod that fits quota @ 05/10/24 19:57:30.221
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/10/24 19:57:30.246
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/10/24 19:57:32.254
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/10/24 19:57:32.258
  STEP: Ensuring a pod cannot update its resource requirements @ 05/10/24 19:57:32.263
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/10/24 19:57:32.278
  STEP: Deleting the pod @ 05/10/24 19:57:34.284
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 19:57:34.302
  May 10 19:57:36.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3867" for this suite. @ 05/10/24 19:57:36.319
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [4.798 seconds]
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:34.958
  May 10 19:57:34.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:57:34.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:35.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:35.009
  STEP: Creating the pod @ 05/10/24 19:57:35.014
  May 10 19:57:37.615: INFO: Successfully updated pod "annotationupdate4e0d2ae4-8178-441c-b297-79949c37a506"
  May 10 19:57:39.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7634" for this suite. @ 05/10/24 19:57:39.731
  << Timeline
------------------------------
SS
------------------------------
• [4.175 seconds]
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:39.758
  May 10 19:57:39.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:57:39.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:39.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:39.793
  STEP: Creating secret with name projected-secret-test-2740c131-24df-42e4-bd02-5ebc95c18ddc @ 05/10/24 19:57:39.798
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:57:39.806
  STEP: Saw pod success @ 05/10/24 19:57:43.849
  May 10 19:57:43.857: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-projected-secrets-e6159534-4ddb-4252-98d8-a3c7ed401adc container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:57:43.87
  May 10 19:57:43.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9726" for this suite. @ 05/10/24 19:57:43.915
  << Timeline
------------------------------
SSSSSS
------------------------------
• [8.812 seconds]
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:36.347
  May 10 19:57:36.347: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename services @ 05/10/24 19:57:36.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:36.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:36.394
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9751 @ 05/10/24 19:57:36.398
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/10/24 19:57:36.424
  STEP: creating service externalsvc in namespace services-9751 @ 05/10/24 19:57:36.424
  STEP: creating replication controller externalsvc in namespace services-9751 @ 05/10/24 19:57:36.523
  I0510 19:57:36.551697      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9751, replica count: 2
  I0510 19:57:39.603439      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/10/24 19:57:39.612
  May 10 19:57:39.708: INFO: Creating new exec pod
  May 10 19:57:41.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-200088015 --namespace=services-9751 exec execpodzgz9z -- /bin/sh -x -c nslookup clusterip-service.services-9751.svc.cluster.local'
  May 10 19:57:41.915: INFO: stderr: "+ nslookup clusterip-service.services-9751.svc.cluster.local\n"
  May 10 19:57:41.915: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-9751.svc.cluster.local\tcanonical name = externalsvc.services-9751.svc.cluster.local.\nName:\texternalsvc.services-9751.svc.cluster.local\nAddress: 10.98.4.154\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9751, will wait for the garbage collector to delete the pods @ 05/10/24 19:57:41.916
  May 10 19:57:41.988: INFO: Deleting ReplicationController externalsvc took: 12.513154ms
  May 10 19:57:42.088: INFO: Terminating ReplicationController externalsvc pods took: 100.129127ms
  May 10 19:57:45.103: INFO: Cleaning up the ClusterIP to ExternalName test service
  May 10 19:57:45.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9751" for this suite. @ 05/10/24 19:57:45.147
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.175 seconds]
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:43.936
  May 10 19:57:43.936: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:57:43.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:43.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:43.972
  STEP: Creating secret with name secret-test-e13f7667-f029-47f6-a99d-6b0ebf09eee1 @ 05/10/24 19:57:43.977
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:57:43.985
  STEP: Saw pod success @ 05/10/24 19:57:48.04
  May 10 19:57:48.047: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-secrets-04acab7c-b881-42fc-89aa-f73ebde6fced container secret-env-test: <nil>
  STEP: delete the pod @ 05/10/24 19:57:48.057
  May 10 19:57:48.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-789" for this suite. @ 05/10/24 19:57:48.096
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [5.150 seconds]
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:48.117
  May 10 19:57:48.117: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:57:48.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:48.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:48.172
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/10/24 19:57:48.176
  May 10 19:57:48.188: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 10 19:57:53.196: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 19:57:53.196
  STEP: getting scale subresource @ 05/10/24 19:57:53.196
  STEP: updating a scale subresource @ 05/10/24 19:57:53.212
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/10/24 19:57:53.22
  STEP: Patch a scale subresource @ 05/10/24 19:57:53.224
  May 10 19:57:53.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3606" for this suite. @ 05/10/24 19:57:53.253
  << Timeline
------------------------------
SSS
------------------------------
• [0.229 seconds]
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:53.27
  May 10 19:57:53.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pv @ 05/10/24 19:57:53.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:53.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:53.344
  STEP: Creating initial PV and PVC @ 05/10/24 19:57:53.348
  May 10 19:57:53.348: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3450" @ 05/10/24 19:57:53.368
  STEP: Listing PVCs in namespace "pv-3450" @ 05/10/24 19:57:53.373
  STEP: Reading "pvc-w2jx5" Status @ 05/10/24 19:57:53.378
  STEP: Reading "pv-3450-zwc7m" Status @ 05/10/24 19:57:53.385
  STEP: Patching "pvc-w2jx5" Status @ 05/10/24 19:57:53.396
  STEP: Patching "pv-3450-zwc7m" Status @ 05/10/24 19:57:53.41
  STEP: Updating "pvc-w2jx5" Status @ 05/10/24 19:57:53.419
  STEP: Updating "pv-3450-zwc7m" Status @ 05/10/24 19:57:53.434
  May 10 19:57:53.453: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May 10 19:57:53.453: INFO: Deleting PersistentVolumeClaim "pvc-w2jx5"
  May 10 19:57:53.466: INFO: Deleting PersistentVolume "pv-3450-zwc7m"
  May 10 19:57:53.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3450" for this suite. @ 05/10/24 19:57:53.486
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [8.909 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:45.176
  May 10 19:57:45.176: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 19:57:45.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:45.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:45.242
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/10/24 19:57:45.247
  May 10 19:57:45.247: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:57:46.910: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 19:57:54.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7986" for this suite. @ 05/10/24 19:57:54.073
  << Timeline
------------------------------
SSSS
------------------------------
• [4.150 seconds]
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:54.088
  May 10 19:57:54.088: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:57:54.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:54.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:54.128
  STEP: Creating a pod to test downward api env vars @ 05/10/24 19:57:54.132
  STEP: Saw pod success @ 05/10/24 19:57:58.167
  May 10 19:57:58.174: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod downward-api-6af4726f-98c8-4b7a-9fa0-e921468a9eba container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:57:58.191
  May 10 19:57:58.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6504" for this suite. @ 05/10/24 19:57:58.226
  << Timeline
------------------------------
SS
------------------------------
• [0.184 seconds]
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:58.239
  May 10 19:57:58.239: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename csi-storageclass @ 05/10/24 19:57:58.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:58.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:58.272
  STEP: Creating a StorageClass @ 05/10/24 19:57:58.275
  STEP: Get StorageClass "e2e-ktxzt" @ 05/10/24 19:57:58.283
  STEP: Patching the StorageClass "e2e-ktxzt" @ 05/10/24 19:57:58.289
  STEP: Delete StorageClass "e2e-ktxzt" @ 05/10/24 19:57:58.297
  STEP: Confirm deletion of StorageClass "e2e-ktxzt" @ 05/10/24 19:57:58.306
  STEP: Create a replacement StorageClass @ 05/10/24 19:57:58.312
  STEP: Updating StorageClass "e2e-v2-lm9mm" @ 05/10/24 19:57:58.318
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-lm9mm=updated" @ 05/10/24 19:57:58.332
  STEP: Deleting StorageClass "e2e-v2-lm9mm" via DeleteCollection @ 05/10/24 19:57:58.337
  STEP: Confirm deletion of StorageClass "e2e-v2-lm9mm" @ 05/10/24 19:57:58.355
  May 10 19:57:58.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-6138" for this suite. @ 05/10/24 19:57:58.411
  << Timeline
------------------------------
SSSSS
------------------------------
• [8.212 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:58.426
  May 10 19:57:58.426: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 19:57:58.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:58.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:58.453
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 19:57:58.465
  STEP: create the pod with lifecycle hook @ 05/10/24 19:58:00.498
  STEP: delete the pod with lifecycle hook @ 05/10/24 19:58:02.543
  STEP: check prestop hook @ 05/10/24 19:58:06.589
  May 10 19:58:06.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5205" for this suite. @ 05/10/24 19:58:06.624
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [11.183 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:06.645
  May 10 19:58:06.645: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 19:58:06.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:06.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:06.696
  STEP: Counting existing ResourceQuota @ 05/10/24 19:58:06.699
  STEP: Creating a ResourceQuota @ 05/10/24 19:58:11.705
  STEP: Ensuring resource quota status is calculated @ 05/10/24 19:58:11.715
  STEP: Creating a ReplicaSet @ 05/10/24 19:58:13.721
  STEP: Ensuring resource quota status captures replicaset creation @ 05/10/24 19:58:13.776
  STEP: Deleting a ReplicaSet @ 05/10/24 19:58:15.784
  STEP: Ensuring resource quota status released usage @ 05/10/24 19:58:15.796
  May 10 19:58:17.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1640" for this suite. @ 05/10/24 19:58:17.814
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [20.144 seconds]
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:17.844
  May 10 19:58:17.844: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename watch @ 05/10/24 19:58:17.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:17.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:17.874
  STEP: creating a watch on configmaps with label A @ 05/10/24 19:58:17.877
  STEP: creating a watch on configmaps with label B @ 05/10/24 19:58:17.878
  STEP: creating a watch on configmaps with label A or B @ 05/10/24 19:58:17.88
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/10/24 19:58:17.881
  May 10 19:58:17.888: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31530 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:17.888: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31530 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/10/24 19:58:17.888
  May 10 19:58:17.901: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31531 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:17.901: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31531 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/10/24 19:58:17.901
  May 10 19:58:17.923: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31532 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:17.923: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31532 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/10/24 19:58:17.923
  May 10 19:58:17.937: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31533 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:17.937: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8603  eb9335b6-d083-4a80-8328-25a950529662 31533 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/10/24 19:58:17.937
  May 10 19:58:17.948: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8603  2ce312a7-cb38-4680-87be-1982bc96f2f9 31535 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:17.948: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8603  2ce312a7-cb38-4680-87be-1982bc96f2f9 31535 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/10/24 19:58:27.948
  May 10 19:58:27.965: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8603  2ce312a7-cb38-4680-87be-1982bc96f2f9 31636 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:27.965: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8603  2ce312a7-cb38-4680-87be-1982bc96f2f9 31636 0 2024-05-10 19:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 19:58:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 19:58:37.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8603" for this suite. @ 05/10/24 19:58:37.976
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.226 seconds]
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:37.997
  May 10 19:58:37.997: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 19:58:37.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:38.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:38.021
  May 10 19:58:38.024: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  W0510 19:58:40.605593      23 warnings.go:70] unknown field "alpha"
  W0510 19:58:40.605604      23 warnings.go:70] unknown field "beta"
  W0510 19:58:40.605606      23 warnings.go:70] unknown field "delta"
  W0510 19:58:40.605607      23 warnings.go:70] unknown field "epsilon"
  W0510 19:58:40.605609      23 warnings.go:70] unknown field "gamma"
  May 10 19:58:41.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4044" for this suite. @ 05/10/24 19:58:41.2
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.264 seconds]
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:41.235
  May 10 19:58:41.235: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename dns @ 05/10/24 19:58:41.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:41.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:41.267
  STEP: Creating a test headless service @ 05/10/24 19:58:41.27
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3415.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3415.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/10/24 19:58:41.279
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3415.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3415.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/10/24 19:58:41.279
  STEP: creating a pod to probe DNS @ 05/10/24 19:58:41.279
  STEP: submitting the pod to kubernetes @ 05/10/24 19:58:41.279
  STEP: retrieving the pod @ 05/10/24 19:58:51.363
  STEP: looking for the results for each expected name from probers @ 05/10/24 19:58:51.369
  May 10 19:58:51.408: INFO: DNS probes using dns-3415/dns-test-d64b6873-71e5-42e2-ae6b-47dec336505b succeeded

  STEP: deleting the pod @ 05/10/24 19:58:51.408
  STEP: deleting the test headless service @ 05/10/24 19:58:51.436
  May 10 19:58:51.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3415" for this suite. @ 05/10/24 19:58:51.481
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [8.269 seconds]
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:51.506
  May 10 19:58:51.506: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:58:51.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:51.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:51.599
  STEP: Creating secret with name secret-test-map-25d5bc77-2103-47af-93ae-f7ae8137d7e2 @ 05/10/24 19:58:51.604
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:58:51.625
  STEP: Saw pod success @ 05/10/24 19:58:59.702
  May 10 19:58:59.707: INFO: Trying to get logs from node ip-172-31-180-76.eu-west-3.compute.internal pod pod-secrets-5c43e32e-c435-41ff-a66e-dc41fe75bdc5 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:58:59.726
  May 10 19:58:59.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7243" for this suite. @ 05/10/24 19:58:59.764
  << Timeline
------------------------------
• [0.127 seconds]
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:59.776
  May 10 19:58:59.776: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 19:58:59.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:59.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:59.815
  STEP: Deleting RuntimeClass runtimeclass-1273-delete-me @ 05/10/24 19:58:59.826
  STEP: Waiting for the RuntimeClass to disappear @ 05/10/24 19:58:59.837
  May 10 19:58:59.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1273" for this suite. @ 05/10/24 19:58:59.87
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.266 seconds]
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:58:59.916
  May 10 19:58:59.916: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:58:59.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:58:59.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:58:59.97
  STEP: Creating projection with secret that has name projected-secret-test-d0f0b244-a568-4119-b169-baf9e6aaec0e @ 05/10/24 19:58:59.974
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:58:59.99
  STEP: Saw pod success @ 05/10/24 19:59:04.096
  May 10 19:59:04.102: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-projected-secrets-3d57d703-f41b-4106-b002-d903f08f2344 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:59:04.113
  May 10 19:59:04.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6046" for this suite. @ 05/10/24 19:59:04.168
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [71.754 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:57:53.502
  May 10 19:57:53.502: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 19:57:53.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:57:53.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:57:53.538
  STEP: Creating service test in namespace statefulset-4077 @ 05/10/24 19:57:53.542
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/10/24 19:57:53.551
  STEP: Creating stateful set ss in namespace statefulset-4077 @ 05/10/24 19:57:53.557
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4077 @ 05/10/24 19:57:53.568
  May 10 19:57:53.573: INFO: Found 0 stateful pods, waiting for 1
  May 10 19:58:03.578: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/10/24 19:58:03.578
  May 10 19:58:03.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:58:03.778: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:58:03.778: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:58:03.778: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:58:03.789: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May 10 19:58:13.794: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:58:13.794: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:58:13.831: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999783s
  May 10 19:58:14.840: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.991125901s
  May 10 19:58:15.848: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.982092871s
  May 10 19:58:16.857: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.973834193s
  May 10 19:58:17.864: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.965487934s
  May 10 19:58:18.874: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.958529905s
  May 10 19:58:19.882: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.948234309s
  May 10 19:58:20.889: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.941092038s
  May 10 19:58:21.895: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.934284594s
  May 10 19:58:22.903: INFO: Verifying statefulset ss doesn't scale past 1 for another 927.087116ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4077 @ 05/10/24 19:58:23.904
  May 10 19:58:23.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:58:24.065: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:58:24.065: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:58:24.065: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:58:24.071: INFO: Found 1 stateful pods, waiting for 3
  May 10 19:58:34.073: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:58:34.073: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 19:58:34.073: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/10/24 19:58:34.073
  STEP: Scale down will halt with unhealthy stateful pod @ 05/10/24 19:58:34.073
  May 10 19:58:34.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:58:34.250: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:58:34.250: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:58:34.250: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:58:34.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:58:34.414: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:58:34.414: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:58:34.414: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:58:34.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 10 19:58:34.560: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 10 19:58:34.560: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 10 19:58:34.560: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 10 19:58:34.560: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 10 19:58:34.566: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  May 10 19:58:44.574: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:58:44.574: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:58:44.574: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 10 19:58:44.604: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999539s
  May 10 19:58:45.613: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.98950429s
  May 10 19:58:46.628: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.979826789s
  May 10 19:58:47.635: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.965403525s
  May 10 19:58:48.643: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.958168631s
  May 10 19:58:49.650: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.950235116s
  May 10 19:58:50.658: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.943363392s
  May 10 19:58:51.669: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.935555082s
  May 10 19:58:52.686: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.924494866s
  May 10 19:58:53.697: INFO: Verifying statefulset ss doesn't scale past 3 for another 907.480591ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4077 @ 05/10/24 19:58:54.698
  May 10 19:58:54.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:58:54.859: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:58:54.859: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:58:54.859: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:58:54.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:58:55.012: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:58:55.012: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:58:55.012: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:58:55.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=statefulset-4077 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 10 19:58:55.161: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 10 19:58:55.161: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 10 19:58:55.161: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 10 19:58:55.161: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/10/24 19:59:05.185
  May 10 19:59:05.185: INFO: Deleting all statefulset in ns statefulset-4077
  May 10 19:59:05.190: INFO: Scaling statefulset ss to 0
  May 10 19:59:05.206: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 19:59:05.211: INFO: Deleting statefulset ss
  May 10 19:59:05.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4077" for this suite. @ 05/10/24 19:59:05.242
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.068 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:05.264
  May 10 19:59:05.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 19:59:05.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:05.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:05.306
  STEP: fetching the /apis discovery document @ 05/10/24 19:59:05.31
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/10/24 19:59:05.311
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/10/24 19:59:05.311
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/10/24 19:59:05.311
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/10/24 19:59:05.313
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/10/24 19:59:05.313
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/10/24 19:59:05.314
  May 10 19:59:05.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6230" for this suite. @ 05/10/24 19:59:05.322
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [243.230 seconds]
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:55:03.191
  May 10 19:55:03.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 19:55:03.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:55:03.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:55:03.244
  STEP: Creating pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374 @ 05/10/24 19:55:03.25
  E0510 19:55:03.967387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:04.968074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 19:55:05.273
  May 10 19:55:05.277: INFO: Initial restart count of pod liveness-1e0ee11e-8efb-4594-a065-086784da744f is 0
  May 10 19:55:05.285: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:05.968571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:06.969032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:07.294: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:07.969304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:08.969500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:09.301: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:09.970314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:10.971095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:11.308: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:11.972332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:12.973331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:13.318: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:13.974177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:14.975032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:15.323: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:15.975577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:16.976419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:17.328: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:17.977369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:18.977635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:19.334: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:19.978738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:20.979590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:21.343: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:21.980233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:22.980372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:23.356: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:23.981259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:24.981357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:25.361: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:25.982226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:26.982592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:27.367: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:27.983182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:28.983483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:29.374: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:29.984272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:30.985308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:31.380: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:31.986410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:32.986563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:33.385: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:33.986754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:34.987124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:35.390: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:35.987599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:36.988115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:37.394: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:37.989050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:38.989167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:39.402: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:39.990034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:40.990458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:41.409: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:41.991587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:42.992354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:43.418: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:43.992413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:44.993238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:45.425: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:45.993654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:46.994502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:47.431: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:47.995475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:48.995724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:49.437: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:49.996230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:50.997801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:51.445: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:51.998481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:52.999157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:53.455: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:53.999706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:55.000743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:55.460: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:56.000803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:57.000980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:57.467: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:55:58.001066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:55:59.002043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:55:59.473: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:00.002784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:01.002864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:01.478: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:02.003254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:03.003725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:03.490: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:04.004432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:05.004684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:05.496: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:06.005767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:07.006357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:07.501: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:08.006425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:09.007254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:09.507: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:10.007817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:11.008686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:11.513: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:12.008998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:13.009709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:13.521: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:14.010576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:15.011490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:15.527: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:16.011711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:17.012404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:17.534: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:18.012610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:19.012656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:19.540: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:20.013456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:21.013856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:21.547: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:22.014864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:23.015692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:23.552: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:24.016063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:25.016247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:25.560: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:26.017220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:27.017377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:27.568: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:28.018262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:29.019076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:29.574: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:30.019471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:31.020114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:31.581: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:32.020460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:33.021354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:33.586: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:34.021391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:35.021951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:35.594: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:36.022967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:37.024178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:37.600: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:38.024697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:39.025052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:39.605: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:40.025429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:41.026064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:41.617: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:42.026432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:43.027301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:43.649: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:44.027438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:45.028399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:45.654: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:46.028520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:47.029228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:47.684: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:48.029732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:49.030421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:49.743: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:50.031320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:51.032113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:51.758: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:52.032354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:53.033237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:53.768: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:54.034254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:55.034263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:55.773: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:56.034589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:57.035385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:57.780: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:56:58.035906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:56:59.036007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:56:59.787: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:00.036688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:01.037196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:01.792: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:02.037914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:03.038139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:03.797: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:04.038824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:05.039262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:05.825: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:06.040107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:07.040369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:07.830: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:08.041302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:09.042197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:09.840: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:10.042777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:11.042824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:11.845: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:12.043245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:13.044138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:13.851: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:14.044217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:15.044884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:15.875: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:16.045023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:17.045629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:17.884: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:18.046193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:19.046255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:19.897: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:20.047006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:21.047244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:21.904: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:22.047899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:23.048582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:23.910: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:24.048661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:25.048946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:25.927: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:26.049840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:27.050212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:27.933: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:28.050229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:29.050884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:29.939: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:30.051826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:31.052341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:31.948: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:32.053036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:33.053948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:33.961: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:34.054262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:35.054537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:35.967: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:36.054893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:37.055715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:37.973: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:38.055961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:39.056183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:39.979: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:40.056207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:41.056254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:41.987: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:42.057162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:43.057517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:43.993: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:44.058569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:45.058753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:45.998: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:46.059446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:47.059523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:48.004: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:48.059715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:49.060812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:50.011: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:50.061336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:51.061895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:52.044: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:52.061899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:53.062218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:54.051: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:54.062661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:55.063309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:56.058: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:56.064346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:57.065563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:57:58.064: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:57:58.065665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:57:59.065717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:00.066330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:00.076: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:01.067557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:02.068623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:02.085: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:03.069439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:04.070068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:04.131: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:05.070279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:06.070713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:06.137: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:07.071086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:08.071686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:08.142: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:09.071891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:10.072465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:10.149: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:11.073451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:12.074107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:12.156: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:13.074368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:14.075000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:14.162: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:15.075848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:16.076254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:16.168: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:17.076749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:18.077978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:18.174: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:19.079045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:20.079214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:20.180: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:21.080159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:22.080346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:22.186: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:23.081094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:24.082221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:24.193: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:25.082246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:26.083320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:26.215: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:27.083773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:28.084221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:28.222: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:29.085192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:30.085459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:30.229: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:31.085735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:32.086386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:32.237: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:33.086570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:34.086755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:34.242: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:35.087065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:36.087831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:36.260: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:37.087909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:38.087954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:38.265: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:39.088255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:40.088843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:40.271: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:41.089541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:42.090091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:42.278: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:43.090542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:44.090680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:44.287: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:45.091329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:46.091579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:46.304: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:47.092733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:48.093333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:48.311: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:49.094451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:50.095486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:50.317: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:51.096208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:52.096396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:52.323: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:53.097321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:54.097676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:54.329: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:55.098265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:56.098649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:56.335: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:57.098959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:58:58.099049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:58:58.342: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:58:59.099918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:00.100477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:59:00.354: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:59:01.101053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:02.101760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:59:02.360: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:59:03.102363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:04.103451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:59:04.368: INFO: Get pod liveness-1e0ee11e-8efb-4594-a065-086784da744f in namespace container-probe-2374
  E0510 19:59:05.104213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:06.104366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/10/24 19:59:06.37
  May 10 19:59:06.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2374" for this suite. @ 05/10/24 19:59:06.401
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.830 seconds]
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:04.202
  May 10 19:59:04.202: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename init-container @ 05/10/24 19:59:04.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:04.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:04.239
  STEP: creating the pod @ 05/10/24 19:59:04.242
  May 10 19:59:04.242: INFO: PodSpec: initContainers in spec.initContainers
  May 10 19:59:07.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7495" for this suite. @ 05/10/24 19:59:07.972
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.099 seconds]
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:05.336
  May 10 19:59:05.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 19:59:05.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:05.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:05.372
  May 10 19:59:09.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6972" for this suite. @ 05/10/24 19:59:09.423
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.203 seconds]
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:06.433
  May 10 19:59:06.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename secrets @ 05/10/24 19:59:06.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:06.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:06.5
  STEP: Creating secret with name secret-test-0c905611-c347-4142-880d-017a89ab574c @ 05/10/24 19:59:06.509
  STEP: Creating a pod to test consume secrets @ 05/10/24 19:59:06.521
  E0510 19:59:07.105508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:08.106294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:09.106403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:10.107536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:59:10.553
  May 10 19:59:10.559: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-secrets-caa829a4-952a-4792-8e59-9db5dc861db4 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 19:59:10.581
  May 10 19:59:10.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5514" for this suite. @ 05/10/24 19:59:10.626
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.152 seconds]
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:08.046
  May 10 19:59:08.046: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename disruption @ 05/10/24 19:59:08.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:08.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:08.104
  STEP: Waiting for the pdb to be processed @ 05/10/24 19:59:08.117
  STEP: Waiting for all pods to be running @ 05/10/24 19:59:10.162
  May 10 19:59:10.183: INFO: running pods: 0 < 3
  May 10 19:59:12.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1124" for this suite. @ 05/10/24 19:59:12.186
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.157 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:12.211
  May 10 19:59:12.211: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:59:12.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:12.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:12.239
  STEP: create the container @ 05/10/24 19:59:12.243
  W0510 19:59:12.256381      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/10/24 19:59:12.256
  STEP: get the container status @ 05/10/24 19:59:15.306
  STEP: the container should be terminated @ 05/10/24 19:59:15.313
  STEP: the termination message should be set @ 05/10/24 19:59:15.313
  May 10 19:59:15.313: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/10/24 19:59:15.313
  May 10 19:59:15.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2667" for this suite. @ 05/10/24 19:59:15.358
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.241 seconds]
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:15.38
  May 10 19:59:15.380: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/10/24 19:59:15.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:15.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:15.407
  STEP: getting /apis @ 05/10/24 19:59:15.41
  STEP: getting /apis/storage.k8s.io @ 05/10/24 19:59:15.414
  STEP: getting /apis/storage.k8s.io/v1 @ 05/10/24 19:59:15.415
  STEP: creating @ 05/10/24 19:59:15.416
  STEP: watching @ 05/10/24 19:59:15.445
  May 10 19:59:15.445: INFO: starting watch
  STEP: getting @ 05/10/24 19:59:15.454
  STEP: listing in namespace @ 05/10/24 19:59:15.461
  STEP: listing across namespaces @ 05/10/24 19:59:15.466
  STEP: patching @ 05/10/24 19:59:15.473
  STEP: updating @ 05/10/24 19:59:15.48
  May 10 19:59:15.487: INFO: waiting for watch events with expected annotations in namespace
  May 10 19:59:15.487: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/10/24 19:59:15.487
  STEP: deleting a collection @ 05/10/24 19:59:15.518
  May 10 19:59:15.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-197" for this suite. @ 05/10/24 19:59:15.583
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [5.127 seconds]
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:10.641
  May 10 19:59:10.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 19:59:10.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:10.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:10.685
  STEP: Create a ReplicaSet @ 05/10/24 19:59:10.689
  STEP: Verify that the required pods have come up @ 05/10/24 19:59:10.695
  May 10 19:59:10.699: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0510 19:59:11.107837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:12.108266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:13.108451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:14.109475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:15.109516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 19:59:15.704: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/10/24 19:59:15.704
  May 10 19:59:15.709: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/10/24 19:59:15.709
  STEP: DeleteCollection of the ReplicaSets @ 05/10/24 19:59:15.718
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/10/24 19:59:15.728
  May 10 19:59:15.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7538" for this suite. @ 05/10/24 19:59:15.743
  << Timeline
------------------------------
• [4.149 seconds]
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:15.624
  May 10 19:59:15.624: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 19:59:15.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:15.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:15.669
  STEP: Waiting for pod completion @ 05/10/24 19:59:15.686
  May 10 19:59:19.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-637" for this suite. @ 05/10/24 19:59:19.75
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.252 seconds]
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:15.769
  May 10 19:59:15.769: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:59:15.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:15.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:15.856
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:59:15.893
  E0510 19:59:16.110414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:17.111278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:18.112211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:19.112286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 19:59:19.94
  May 10 19:59:19.949: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod downwardapi-volume-2660ff5d-43ba-47b8-9b50-aa50d9facaa9 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:59:19.967
  May 10 19:59:19.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5778" for this suite. @ 05/10/24 19:59:20.01
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [10.606 seconds]
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:09.438
  May 10 19:59:09.438: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename services @ 05/10/24 19:59:09.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:09.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:09.478
  STEP: creating service in namespace services-6846 @ 05/10/24 19:59:09.482
  STEP: creating service affinity-nodeport in namespace services-6846 @ 05/10/24 19:59:09.482
  STEP: creating replication controller affinity-nodeport in namespace services-6846 @ 05/10/24 19:59:09.582
  I0510 19:59:09.592195      24 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-6846, replica count: 3
  I0510 19:59:12.643342      24 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 19:59:12.669: INFO: Creating new exec pod
  May 10 19:59:15.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-6846 exec execpod-affinityl922v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  May 10 19:59:15.960: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  May 10 19:59:15.960: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:59:15.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-6846 exec execpod-affinityl922v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.54.225 80'
  May 10 19:59:16.147: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.54.225 80\nConnection to 10.106.54.225 80 port [tcp/http] succeeded!\n"
  May 10 19:59:16.147: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:59:16.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-6846 exec execpod-affinityl922v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.180.76 32584'
  May 10 19:59:16.336: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.180.76 32584\nConnection to 172.31.180.76 32584 port [tcp/*] succeeded!\n"
  May 10 19:59:16.336: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:59:16.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-6846 exec execpod-affinityl922v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.182.18 32584'
  May 10 19:59:16.479: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.182.18 32584\nConnection to 172.31.182.18 32584 port [tcp/*] succeeded!\n"
  May 10 19:59:16.479: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 19:59:16.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-6846 exec execpod-affinityl922v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.180.76:32584/ ; done'
  May 10 19:59:16.764: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32584/\n"
  May 10 19:59:16.764: INFO: stdout: "\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7\naffinity-nodeport-vcpb7"
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Received response from host: affinity-nodeport-vcpb7
  May 10 19:59:16.764: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6846, will wait for the garbage collector to delete the pods @ 05/10/24 19:59:16.784
  May 10 19:59:16.858: INFO: Deleting ReplicationController affinity-nodeport took: 17.01137ms
  May 10 19:59:16.959: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.106221ms
  May 10 19:59:20.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6846" for this suite. @ 05/10/24 19:59:20.032
  << Timeline
------------------------------
SS
------------------------------
• [0.216 seconds]
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:20.027
  May 10 19:59:20.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename events @ 05/10/24 19:59:20.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:20.109
  E0510 19:59:20.113144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:20.126
  STEP: Create set of events @ 05/10/24 19:59:20.132
  May 10 19:59:20.141: INFO: created test-event-1
  May 10 19:59:20.158: INFO: created test-event-2
  May 10 19:59:20.168: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/10/24 19:59:20.168
  STEP: delete collection of events @ 05/10/24 19:59:20.182
  May 10 19:59:20.182: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/10/24 19:59:20.218
  May 10 19:59:20.218: INFO: requesting list of events to confirm quantity
  May 10 19:59:20.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5661" for this suite. @ 05/10/24 19:59:20.231
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.989 seconds]
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:20.045
  May 10 19:59:20.045: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:59:20.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:20.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:20.138
  STEP: creating the pod @ 05/10/24 19:59:20.143
  STEP: setting up watch @ 05/10/24 19:59:20.143
  STEP: submitting the pod to kubernetes @ 05/10/24 19:59:20.259
  STEP: verifying the pod is in kubernetes @ 05/10/24 19:59:20.282
  STEP: verifying pod creation was observed @ 05/10/24 19:59:20.292
  STEP: deleting the pod gracefully @ 05/10/24 19:59:22.314
  STEP: verifying pod deletion was observed @ 05/10/24 19:59:22.324
  May 10 19:59:24.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4832" for this suite. @ 05/10/24 19:59:24.989
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [5.236 seconds]
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:25.039
  May 10 19:59:25.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename gc @ 05/10/24 19:59:25.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:25.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:25.106
  May 10 19:59:25.195: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"28496434-ede7-4615-8e78-8ab7c3c6539c", Controller:(*bool)(0xc002acfa26), BlockOwnerDeletion:(*bool)(0xc002acfa27)}}
  May 10 19:59:25.210: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"43df7e5a-42b0-41e2-973b-00d0dec00b7e", Controller:(*bool)(0xc002acfcd6), BlockOwnerDeletion:(*bool)(0xc002acfcd7)}}
  May 10 19:59:25.226: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"4d3626a0-be9d-4951-899d-a05792e14c28", Controller:(*bool)(0xc002acff7e), BlockOwnerDeletion:(*bool)(0xc002acff7f)}}
  May 10 19:59:30.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7176" for this suite. @ 05/10/24 19:59:30.264
  << Timeline
------------------------------
• [4.241 seconds]
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:30.276
  May 10 19:59:30.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 19:59:30.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:30.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:30.36
  STEP: Creating configMap configmap-4494/configmap-test-a352361d-2c99-404f-b424-10694e2f3811 @ 05/10/24 19:59:30.364
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:59:30.373
  STEP: Saw pod success @ 05/10/24 19:59:34.414
  May 10 19:59:34.427: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-configmaps-9437c615-c3c4-4e5b-ada4-cc43ded4eca7 container env-test: <nil>
  STEP: delete the pod @ 05/10/24 19:59:34.445
  May 10 19:59:34.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4494" for this suite. @ 05/10/24 19:59:34.501
  << Timeline
------------------------------
S
------------------------------
• [24.271 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:19.777
  May 10 19:59:19.777: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename subpath @ 05/10/24 19:59:19.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:19.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:19.809
  STEP: Setting up data @ 05/10/24 19:59:19.812
  STEP: Creating pod pod-subpath-test-secret-qnjj @ 05/10/24 19:59:19.827
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 19:59:19.827
  STEP: Saw pod success @ 05/10/24 19:59:43.966
  May 10 19:59:43.971: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-subpath-test-secret-qnjj container test-container-subpath-secret-qnjj: <nil>
  STEP: delete the pod @ 05/10/24 19:59:43.981
  STEP: Deleting pod pod-subpath-test-secret-qnjj @ 05/10/24 19:59:44.013
  May 10 19:59:44.013: INFO: Deleting pod "pod-subpath-test-secret-qnjj" in namespace "subpath-2442"
  May 10 19:59:44.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2442" for this suite. @ 05/10/24 19:59:44.033
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [2.134 seconds]
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:44.052
  May 10 19:59:44.052: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename pods @ 05/10/24 19:59:44.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:44.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:44.101
  May 10 19:59:44.106: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: creating the pod @ 05/10/24 19:59:44.106
  STEP: submitting the pod to kubernetes @ 05/10/24 19:59:44.106
  May 10 19:59:46.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7440" for this suite. @ 05/10/24 19:59:46.175
  << Timeline
------------------------------
SSSS
------------------------------
• [4.196 seconds]
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:46.188
  May 10 19:59:46.188: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 19:59:46.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:46.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:46.223
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 19:59:46.227
  STEP: Saw pod success @ 05/10/24 19:59:50.273
  May 10 19:59:50.286: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod downwardapi-volume-f95ccad1-4396-4720-a7a1-197c8539a368 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 19:59:50.3
  May 10 19:59:50.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2527" for this suite. @ 05/10/24 19:59:50.365
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.579 seconds]
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:50.391
  May 10 19:59:50.391: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename services @ 05/10/24 19:59:50.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:50.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:50.445
  STEP: creating a collection of services @ 05/10/24 19:59:50.45
  May 10 19:59:50.450: INFO: Creating e2e-svc-a-p8fjj
  May 10 19:59:50.532: INFO: Creating e2e-svc-b-4bx57
  May 10 19:59:50.574: INFO: Creating e2e-svc-c-mlmcg
  STEP: deleting service collection @ 05/10/24 19:59:50.697
  May 10 19:59:50.937: INFO: Collection of services has been deleted
  May 10 19:59:50.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6034" for this suite. @ 05/10/24 19:59:50.957
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.175 seconds]
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:50.995
  May 10 19:59:50.995: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 19:59:50.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:51.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:51.039
  STEP: Creating a pod to test substitution in volume subpath @ 05/10/24 19:59:51.043
  STEP: Saw pod success @ 05/10/24 19:59:55.097
  May 10 19:59:55.105: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod var-expansion-6b27290d-48ed-492a-a38e-2cb09074f4a0 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 19:59:55.126
  May 10 19:59:55.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1311" for this suite. @ 05/10/24 19:59:55.159
  << Timeline
------------------------------
S
------------------------------
• [22.694 seconds]
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:34.519
  May 10 19:59:34.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:59:34.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:34.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:34.552
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/10/24 19:59:34.57
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/10/24 19:59:50.858
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/10/24 19:59:50.914
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/10/24 19:59:50.928
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/10/24 19:59:50.928
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/10/24 19:59:50.976
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/10/24 19:59:52.997
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/10/24 19:59:55.017
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/10/24 19:59:55.031
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/10/24 19:59:55.031
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/10/24 19:59:55.094
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/10/24 19:59:56.114
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/10/24 19:59:57.124
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/10/24 19:59:57.14
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/10/24 19:59:57.14
  May 10 19:59:57.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4513" for this suite. @ 05/10/24 19:59:57.2
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.137 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:55.171
  May 10 19:59:55.171: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 19:59:55.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:55.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:55.201
  STEP: create the container @ 05/10/24 19:59:55.207
  W0510 19:59:55.219311      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 19:59:55.219
  STEP: get the container status @ 05/10/24 19:59:58.252
  STEP: the container should be terminated @ 05/10/24 19:59:58.257
  STEP: the termination message should be set @ 05/10/24 19:59:58.257
  May 10 19:59:58.257: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/10/24 19:59:58.257
  May 10 19:59:58.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6772" for this suite. @ 05/10/24 19:59:58.297
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [3.168 seconds]
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:57.222
  May 10 19:59:57.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 19:59:57.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:57.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:57.257
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/10/24 19:59:57.261
  STEP: When a replication controller with a matching selector is created @ 05/10/24 19:59:59.298
  STEP: Then the orphan pod is adopted @ 05/10/24 19:59:59.31
  May 10 20:00:00.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-503" for this suite. @ 05/10/24 20:00:00.353
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [4.426 seconds]
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:58.315
  May 10 19:59:58.315: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename projected @ 05/10/24 19:59:58.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:58.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:58.343
  STEP: Creating configMap with name projected-configmap-test-volume-aea80dba-72a4-4483-b815-03ff9ad8db3e @ 05/10/24 19:59:58.347
  STEP: Creating a pod to test consume configMaps @ 05/10/24 19:59:58.367
  STEP: Saw pod success @ 05/10/24 20:00:02.477
  May 10 20:00:02.499: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-projected-configmaps-9e36e009-6d18-4308-b561-c685a47ff831 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:00:02.54
  May 10 20:00:02.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8088" for this suite. @ 05/10/24 20:00:02.694
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [0.167 seconds]
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:02.75
  May 10 20:00:02.750: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename server-version @ 05/10/24 20:00:02.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:02.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:02.847
  STEP: Request ServerVersion @ 05/10/24 20:00:02.851
  STEP: Confirm major version @ 05/10/24 20:00:02.853
  May 10 20:00:02.853: INFO: Major version: 1
  STEP: Confirm minor version @ 05/10/24 20:00:02.853
  May 10 20:00:02.853: INFO: cleanMinorVersion: 29
  May 10 20:00:02.853: INFO: Minor version: 29
  May 10 20:00:02.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-628" for this suite. @ 05/10/24 20:00:02.876
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.387 seconds]
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:02.928
  May 10 20:00:02.928: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename limitrange @ 05/10/24 20:00:02.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:02.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:02.999
  STEP: Creating LimitRange "e2e-limitrange-t24xn" in namespace "limitrange-882" @ 05/10/24 20:00:03.009
  STEP: Creating another limitRange in another namespace @ 05/10/24 20:00:03.041
  May 10 20:00:03.138: INFO: Namespace "e2e-limitrange-t24xn-1538" created
  May 10 20:00:03.138: INFO: Creating LimitRange "e2e-limitrange-t24xn" in namespace "e2e-limitrange-t24xn-1538"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-t24xn" @ 05/10/24 20:00:03.164
  May 10 20:00:03.172: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-t24xn" in "limitrange-882" namespace @ 05/10/24 20:00:03.172
  May 10 20:00:03.187: INFO: LimitRange "e2e-limitrange-t24xn" has been patched
  STEP: Delete LimitRange "e2e-limitrange-t24xn" by Collection with labelSelector: "e2e-limitrange-t24xn=patched" @ 05/10/24 20:00:03.187
  STEP: Confirm that the limitRange "e2e-limitrange-t24xn" has been deleted @ 05/10/24 20:00:03.217
  May 10 20:00:03.217: INFO: Requesting list of LimitRange to confirm quantity
  May 10 20:00:03.225: INFO: Found 0 LimitRange with label "e2e-limitrange-t24xn=patched"
  May 10 20:00:03.225: INFO: LimitRange "e2e-limitrange-t24xn" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-t24xn" @ 05/10/24 20:00:03.225
  May 10 20:00:03.240: INFO: Found 1 limitRange
  May 10 20:00:03.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-882" for this suite. @ 05/10/24 20:00:03.264
  STEP: Destroying namespace "e2e-limitrange-t24xn-1538" for this suite. @ 05/10/24 20:00:03.283
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.410 seconds]
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:00.395
  May 10 20:00:00.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:00:00.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:00.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:00.469
  STEP: Creating configMap configmap-31/configmap-test-29677fa6-7b45-43d2-bd65-5006d266d682 @ 05/10/24 20:00:00.474
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:00:00.486
  STEP: Saw pod success @ 05/10/24 20:00:04.582
  May 10 20:00:04.596: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-configmaps-2d992fa2-e6ec-410a-bda9-ed341b843792 container env-test: <nil>
  STEP: delete the pod @ 05/10/24 20:00:04.651
  May 10 20:00:04.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-31" for this suite. @ 05/10/24 20:00:04.786
  << Timeline
------------------------------
SSS
------------------------------
• [0.357 seconds]
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:04.808
  May 10 20:00:04.808: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename discovery @ 05/10/24 20:00:04.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:04.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:04.884
  STEP: Setting up server cert @ 05/10/24 20:00:04.891
  STEP: Requesting APIResourceList from "/api/v1" @ 05/10/24 20:00:05.102
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/10/24 20:00:05.104
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/10/24 20:00:05.106
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/10/24 20:00:05.108
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/10/24 20:00:05.11
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/10/24 20:00:05.112
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/10/24 20:00:05.114
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/10/24 20:00:05.116
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/10/24 20:00:05.117
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/10/24 20:00:05.119
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/10/24 20:00:05.121
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/10/24 20:00:05.123
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/10/24 20:00:05.124
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/10/24 20:00:05.126
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/10/24 20:00:05.128
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/10/24 20:00:05.13
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/10/24 20:00:05.132
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/10/24 20:00:05.133
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/10/24 20:00:05.135
  May 10 20:00:05.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4608" for this suite. @ 05/10/24 20:00:05.147
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [4.738 seconds]
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:03.324
  May 10 20:00:03.324: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename job @ 05/10/24 20:00:03.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:03.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:03.369
  STEP: Creating a job @ 05/10/24 20:00:03.373
  STEP: Ensuring active pods == parallelism @ 05/10/24 20:00:03.391
  STEP: delete a job @ 05/10/24 20:00:05.398
  STEP: deleting Job.batch foo in namespace job-8725, will wait for the garbage collector to delete the pods @ 05/10/24 20:00:05.398
  May 10 20:00:05.485: INFO: Deleting Job.batch foo took: 30.686584ms
  May 10 20:00:05.585: INFO: Terminating Job.batch foo pods took: 100.720709ms
  STEP: Ensuring job was deleted @ 05/10/24 20:00:07.986
  May 10 20:00:08.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8725" for this suite. @ 05/10/24 20:00:08.036
  << Timeline
------------------------------
SS
------------------------------
• [4.194 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:05.172
  May 10 20:00:05.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:00:05.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:05.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:05.21
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/10/24 20:00:05.215
  STEP: Saw pod success @ 05/10/24 20:00:09.269
  May 10 20:00:09.275: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-8651e803-d5ff-4dfa-a1ac-a5a4e1da6917 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:00:09.291
  May 10 20:00:09.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-214" for this suite. @ 05/10/24 20:00:09.345
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.199 seconds]
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:08.064
  May 10 20:00:08.064: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:00:08.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:08.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:08.124
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:00:08.131
  STEP: Saw pod success @ 05/10/24 20:00:12.194
  May 10 20:00:12.202: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod downwardapi-volume-25f43ba8-dcf2-40e6-9bfa-ecbcdc1b04bb container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:00:12.213
  May 10 20:00:12.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8215" for this suite. @ 05/10/24 20:00:12.251
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [9.237 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:09.392
  May 10 20:00:09.392: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:00:09.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:09.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:09.428
  STEP: set up a multi version CRD @ 05/10/24 20:00:09.432
  May 10 20:00:09.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: mark a version not serverd @ 05/10/24 20:00:13.676
  STEP: check the unserved version gets removed @ 05/10/24 20:00:13.7
  STEP: check the other version is not changed @ 05/10/24 20:00:15.235
  May 10 20:00:18.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6107" for this suite. @ 05/10/24 20:00:18.617
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.306 seconds]
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:18.639
  May 10 20:00:18.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename events @ 05/10/24 20:00:18.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:18.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:18.696
  STEP: creating a test event @ 05/10/24 20:00:18.701
  STEP: listing events in all namespaces @ 05/10/24 20:00:18.713
  STEP: listing events in test namespace @ 05/10/24 20:00:18.754
  STEP: listing events with field selection filtering on source @ 05/10/24 20:00:18.762
  STEP: listing events with field selection filtering on reportingController @ 05/10/24 20:00:18.768
  STEP: getting the test event @ 05/10/24 20:00:18.784
  STEP: patching the test event @ 05/10/24 20:00:18.79
  STEP: getting the test event @ 05/10/24 20:00:18.807
  STEP: updating the test event @ 05/10/24 20:00:18.814
  STEP: getting the test event @ 05/10/24 20:00:18.832
  STEP: deleting the test event @ 05/10/24 20:00:18.839
  STEP: listing events in all namespaces @ 05/10/24 20:00:18.868
  STEP: listing events in test namespace @ 05/10/24 20:00:18.905
  May 10 20:00:18.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2574" for this suite. @ 05/10/24 20:00:18.927
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [7.587 seconds]
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:18.953
  May 10 20:00:18.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:00:18.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:18.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:18.99
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 20:00:18.995
  May 10 20:00:18.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1972 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 10 20:00:19.066: INFO: stderr: ""
  May 10 20:00:19.066: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/10/24 20:00:19.066
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/10/24 20:00:24.117
  May 10 20:00:24.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1972 get pod e2e-test-httpd-pod -o json'
  May 10 20:00:24.178: INFO: stderr: ""
  May 10 20:00:24.178: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"0a2a3c83f45ed2b8d6e6b6bbff468533acda7960dbefcc0abd3d85ccbdbeb273\",\n            \"cni.projectcalico.org/podIP\": \"10.244.4.88/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.244.4.88/32\"\n        },\n        \"creationTimestamp\": \"2024-05-10T20:00:19Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1972\",\n        \"resourceVersion\": \"33572\",\n        \"uid\": \"1c2f19c4-7f49-4bf5-a53d-815608b03cb9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gxptr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-182-18.eu-west-3.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-gxptr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T20:00:20Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T20:00:19Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T20:00:20Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T20:00:20Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T20:00:19Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://c91f0a786bea6cf329e04399ffb864ce03f7cdc100024713d89d736fe78e2be2\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-10T20:00:19Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.182.18\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.182.18\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.4.88\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.4.88\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-10T20:00:19Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/10/24 20:00:24.178
  May 10 20:00:24.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1972 replace -f -'
  May 10 20:00:24.286: INFO: stderr: ""
  May 10 20:00:24.286: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/10/24 20:00:24.286
  May 10 20:00:24.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1972 delete pods e2e-test-httpd-pod'
  May 10 20:00:26.519: INFO: stderr: ""
  May 10 20:00:26.519: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 10 20:00:26.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1972" for this suite. @ 05/10/24 20:00:26.529
  << Timeline
------------------------------
SS
------------------------------
• [4.092 seconds]
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:26.542
  May 10 20:00:26.542: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 20:00:26.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:26.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:26.574
  May 10 20:00:30.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8298" for this suite. @ 05/10/24 20:00:30.623
  << Timeline
------------------------------
S
------------------------------
• [2.190 seconds]
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:30.636
  May 10 20:00:30.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:00:30.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:30.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:30.676
  May 10 20:00:30.681: INFO: Creating simple deployment test-new-deployment
  May 10 20:00:30.703: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 05/10/24 20:00:32.725
  STEP: updating a scale subresource @ 05/10/24 20:00:32.73
  STEP: verifying the deployment Spec.Replicas was modified @ 05/10/24 20:00:32.74
  STEP: Patch a scale subresource @ 05/10/24 20:00:32.746
  May 10 20:00:32.765: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8229c9a3-d1f0-47f7-8f8f-3af8848eccc2",
      ResourceVersion: (string) (len=5) "33715",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 20:00:32.775: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bc921bd-1358-43ad-a98c-caddf9604853",
      ResourceVersion: (string) (len=5) "33714",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "8229c9a3-d1f0-47f7-8f8f-3af8848eccc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 32 32 39 63 39  61 33 2d 64 31 66 30 2d  |\"8229c9a3-d1f0-|
              00000120  34 37 66 37 2d 38 66 38  66 2d 33 61 66 38 38 34  |47f7-8f8f-3af884|
              00000130  38 65 63 63 63 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8eccc2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:00:32.789: INFO: Pod "test-new-deployment-557759b7c7-jt2bc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-jt2bc",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42b31986-c34b-4d25-a57a-7686eb825d7c",
      ResourceVersion: (string) (len=5) "33703",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e993c2ba2c2321ebc5fdc9c89104ed3e53c881201479bbb2994eec9a0cdcf265",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.244.8.95/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.244.8.95/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1bc921bd-1358-43ad-a98c-caddf9604853",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  63 39 32 31 62 64 2d 31  |d\":\"1bc921bd-1|
              00000090  33 35 38 2d 34 33 61 64  2d 61 39 38 63 2d 63 61  |358-43ad-a98c-ca|
              000000a0  64 64 66 39 36 30 34 38  35 33 5c 22 7d 22 3a 7b  |ddf9604853\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 38 2e 39  35 5c 22 7d 22 3a 7b 22  |.244.8.95\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h8z9n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h8z9n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968031,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968030,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) (len=11) "10.244.8.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.8.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968031,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://922ba8a87658ae07613cd8d9501c3e15be752cb1d93e2a508315bef64e9d681d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:00:32.789: INFO: Pod "test-new-deployment-557759b7c7-mntpg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-mntpg",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3380d385-4575-42b5-8e8d-f3a8d9e5eaf5",
      ResourceVersion: (string) (len=5) "33718",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968032,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1bc921bd-1358-43ad-a98c-caddf9604853",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  63 39 32 31 62 64 2d 31  |d\":\"1bc921bd-1|
              00000090  33 35 38 2d 34 33 61 64  2d 61 39 38 63 2d 63 61  |358-43ad-a98c-ca|
              000000a0  64 64 66 39 36 30 34 38  35 33 5c 22 7d 22 3a 7b  |ddf9604853\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26m8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26m8z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968032,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:00:32.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3661" for this suite. @ 05/10/24 20:00:32.803
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [4.332 seconds]
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:32.838
  May 10 20:00:32.838: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:00:32.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:32.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:32.893
  STEP: Creating secret with name s-test-opt-del-d5ddd60a-ade3-47ec-8e5a-cb2e6f3a9b76 @ 05/10/24 20:00:32.912
  STEP: Creating secret with name s-test-opt-upd-05b9dca4-810b-4f1a-84b4-40fef70d0604 @ 05/10/24 20:00:32.92
  STEP: Creating the pod @ 05/10/24 20:00:32.927
  STEP: Deleting secret s-test-opt-del-d5ddd60a-ade3-47ec-8e5a-cb2e6f3a9b76 @ 05/10/24 20:00:35.043
  STEP: Updating secret s-test-opt-upd-05b9dca4-810b-4f1a-84b4-40fef70d0604 @ 05/10/24 20:00:35.055
  STEP: Creating secret with name s-test-opt-create-d5628e95-7835-4e4a-b646-d0bd8dfa199a @ 05/10/24 20:00:35.065
  STEP: waiting to observe update in volume @ 05/10/24 20:00:35.075
  May 10 20:00:37.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3514" for this suite. @ 05/10/24 20:00:37.158
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [0.138 seconds]
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:37.175
  May 10 20:00:37.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 20:00:37.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:37.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:37.248
  STEP: apply creating a deployment @ 05/10/24 20:00:37.254
  May 10 20:00:37.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6957" for this suite. @ 05/10/24 20:00:37.3
  << Timeline
------------------------------
S
------------------------------
• [24.363 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:37.315
  May 10 20:00:37.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename subpath @ 05/10/24 20:00:37.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:37.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:37.363
  STEP: Setting up data @ 05/10/24 20:00:37.369
  STEP: Creating pod pod-subpath-test-configmap-jgm8 @ 05/10/24 20:00:37.391
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 20:00:37.391
  STEP: Saw pod success @ 05/10/24 20:01:01.53
  May 10 20:01:01.541: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-subpath-test-configmap-jgm8 container test-container-subpath-configmap-jgm8: <nil>
  STEP: delete the pod @ 05/10/24 20:01:01.558
  STEP: Deleting pod pod-subpath-test-configmap-jgm8 @ 05/10/24 20:01:01.631
  May 10 20:01:01.631: INFO: Deleting pod "pod-subpath-test-configmap-jgm8" in namespace "subpath-4893"
  May 10 20:01:01.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4893" for this suite. @ 05/10/24 20:01:01.663
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [7.200 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:01.687
  May 10 20:01:01.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:01:01.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:01.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:01.839
  STEP: Setting up server cert @ 05/10/24 20:01:01.929
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:01:02.327
  STEP: Deploying the webhook pod @ 05/10/24 20:01:02.344
  STEP: Wait for the deployment to be ready @ 05/10/24 20:01:02.367
  May 10 20:01:02.384: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 20:01:04.412
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:01:04.47
  May 10 20:01:05.471: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 20:01:05.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4656-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 20:01:06.014
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/10/24 20:01:06.038
  May 10 20:01:08.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2619" for this suite. @ 05/10/24 20:01:08.835
  STEP: Destroying namespace "webhook-markers-4137" for this suite. @ 05/10/24 20:01:08.857
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.267 seconds]
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:08.893
  May 10 20:01:08.893: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:01:08.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:08.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:08.971
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/10/24 20:01:08.983
  STEP: Saw pod success @ 05/10/24 20:01:13.036
  May 10 20:01:13.042: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-34da6102-2f2c-4c85-ab74-317d8aec22fe container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:01:13.064
  May 10 20:01:13.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6718" for this suite. @ 05/10/24 20:01:13.139
  << Timeline
------------------------------
• [1.136 seconds]
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:13.161
  May 10 20:01:13.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:01:13.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:13.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:13.21
  May 10 20:01:13.239: INFO: Got root ca configmap in namespace "svcaccounts-7194"
  May 10 20:01:13.255: INFO: Deleted root ca configmap in namespace "svcaccounts-7194"
  STEP: waiting for a new root ca configmap created @ 05/10/24 20:01:13.756
  May 10 20:01:13.763: INFO: Recreated root ca configmap in namespace "svcaccounts-7194"
  May 10 20:01:13.771: INFO: Updated root ca configmap in namespace "svcaccounts-7194"
  STEP: waiting for the root ca configmap reconciled @ 05/10/24 20:01:14.271
  May 10 20:01:14.277: INFO: Reconciled root ca configmap in namespace "svcaccounts-7194"
  May 10 20:01:14.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7194" for this suite. @ 05/10/24 20:01:14.287
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.153 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:14.307
  May 10 20:01:14.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 20:01:14.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:14.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:14.347
  STEP: create the container @ 05/10/24 20:01:14.352
  W0510 20:01:14.364279      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 20:01:14.364
  STEP: get the container status @ 05/10/24 20:01:17.394
  STEP: the container should be terminated @ 05/10/24 20:01:17.4
  STEP: the termination message should be set @ 05/10/24 20:01:17.4
  May 10 20:01:17.400: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/10/24 20:01:17.4
  May 10 20:01:17.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3941" for this suite. @ 05/10/24 20:01:17.445
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.104 seconds]
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:17.469
  May 10 20:01:17.469: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pods @ 05/10/24 20:01:17.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:17.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:17.512
  STEP: creating the pod @ 05/10/24 20:01:17.52
  STEP: submitting the pod to kubernetes @ 05/10/24 20:01:17.52
  STEP: verifying QOS class is set on the pod @ 05/10/24 20:01:17.534
  May 10 20:01:17.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9047" for this suite. @ 05/10/24 20:01:17.558
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [10.233 seconds]
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:17.578
  May 10 20:01:17.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename watch @ 05/10/24 20:01:17.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:17.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:17.676
  STEP: creating a watch on configmaps with a certain label @ 05/10/24 20:01:17.68
  STEP: creating a new configmap @ 05/10/24 20:01:17.682
  STEP: modifying the configmap once @ 05/10/24 20:01:17.689
  STEP: changing the label value of the configmap @ 05/10/24 20:01:17.702
  STEP: Expecting to observe a delete notification for the watched object @ 05/10/24 20:01:17.722
  May 10 20:01:17.722: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7975  908f9e54-fa6b-46d2-94be-a08ea40ab1b1 34211 0 2024-05-10 20:01:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 20:01:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 20:01:17.722: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7975  908f9e54-fa6b-46d2-94be-a08ea40ab1b1 34212 0 2024-05-10 20:01:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 20:01:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 20:01:17.722: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7975  908f9e54-fa6b-46d2-94be-a08ea40ab1b1 34213 0 2024-05-10 20:01:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 20:01:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/10/24 20:01:17.722
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/10/24 20:01:17.736
  STEP: changing the label value of the configmap back @ 05/10/24 20:01:27.737
  STEP: modifying the configmap a third time @ 05/10/24 20:01:27.757
  STEP: deleting the configmap @ 05/10/24 20:01:27.772
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/10/24 20:01:27.786
  May 10 20:01:27.786: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7975  908f9e54-fa6b-46d2-94be-a08ea40ab1b1 34296 0 2024-05-10 20:01:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 20:01:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 20:01:27.787: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7975  908f9e54-fa6b-46d2-94be-a08ea40ab1b1 34297 0 2024-05-10 20:01:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 20:01:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 20:01:27.787: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7975  908f9e54-fa6b-46d2-94be-a08ea40ab1b1 34298 0 2024-05-10 20:01:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 20:01:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 10 20:01:27.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7975" for this suite. @ 05/10/24 20:01:27.798
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [76.513 seconds]
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:00:12.267
  May 10 20:00:12.267: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 20:00:12.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:00:12.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:00:12.297
  STEP: Creating pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564 @ 05/10/24 20:00:12.3
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 20:00:14.336
  May 10 20:00:14.347: INFO: Initial restart count of pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca is 0
  May 10 20:00:14.360: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:16.372: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:18.382: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:20.388: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:22.402: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:24.426: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:26.432: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:28.441: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:30.449: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:32.456: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:34.471: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:36.482: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:38.491: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:40.497: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:42.505: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:44.511: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:46.519: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:48.529: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:50.543: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:52.550: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:54.559: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:56.566: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:00:58.573: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:00.580: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:02.587: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:04.598: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:06.612: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:08.620: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:10.627: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:12.634: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:14.645: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:16.651: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:18.671: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:20.676: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:22.685: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:24.692: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:26.699: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:28.706: INFO: Get pod test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca in namespace container-probe-2564
  May 10 20:01:28.706: INFO: Restart count of pod container-probe-2564/test-grpc-3e7f497f-f086-47a9-aa14-d51a0f8f5eca is now 1 (1m14.358875881s elapsed)
  STEP: deleting the pod @ 05/10/24 20:01:28.706
  May 10 20:01:28.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2564" for this suite. @ 05/10/24 20:01:28.754
  << Timeline
------------------------------
SSSSS
------------------------------
• [2.276 seconds]
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:27.817
  May 10 20:01:27.817: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename proxy @ 05/10/24 20:01:27.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:27.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:27.864
  May 10 20:01:27.869: INFO: Creating pod...
  May 10 20:01:29.895: INFO: Creating service...
  May 10 20:01:29.916: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/pods/agnhost/proxy/some/path/with/DELETE
  May 10 20:01:29.928: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:01:29.928: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/pods/agnhost/proxy/some/path/with/GET
  May 10 20:01:29.935: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 10 20:01:29.935: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/pods/agnhost/proxy/some/path/with/HEAD
  May 10 20:01:29.941: INFO: http.Client request:HEAD | StatusCode:200
  May 10 20:01:29.941: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/pods/agnhost/proxy/some/path/with/OPTIONS
  May 10 20:01:29.949: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:01:29.949: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/pods/agnhost/proxy/some/path/with/PATCH
  May 10 20:01:29.957: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:01:29.957: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/pods/agnhost/proxy/some/path/with/POST
  May 10 20:01:29.966: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:01:29.966: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/pods/agnhost/proxy/some/path/with/PUT
  May 10 20:01:29.972: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:01:29.972: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/services/test-service/proxy/some/path/with/DELETE
  May 10 20:01:29.984: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:01:29.984: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/services/test-service/proxy/some/path/with/GET
  May 10 20:01:29.995: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 10 20:01:29.995: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/services/test-service/proxy/some/path/with/HEAD
  May 10 20:01:30.013: INFO: http.Client request:HEAD | StatusCode:200
  May 10 20:01:30.013: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/services/test-service/proxy/some/path/with/OPTIONS
  May 10 20:01:30.029: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:01:30.029: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/services/test-service/proxy/some/path/with/PATCH
  May 10 20:01:30.038: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:01:30.038: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/services/test-service/proxy/some/path/with/POST
  May 10 20:01:30.057: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:01:30.057: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7273/services/test-service/proxy/some/path/with/PUT
  May 10 20:01:30.066: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:01:30.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7273" for this suite. @ 05/10/24 20:01:30.076
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [3.230 seconds]
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:30.101
  May 10 20:01:30.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 20:01:30.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:30.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:30.151
  May 10 20:01:30.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:01:33.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3501" for this suite. @ 05/10/24 20:01:33.32
  << Timeline
------------------------------
SS
------------------------------
• [0.143 seconds]
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:33.333
  May 10 20:01:33.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 20:01:33.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:33.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:33.373
  STEP: Create set of pod templates @ 05/10/24 20:01:33.378
  May 10 20:01:33.389: INFO: created test-podtemplate-1
  May 10 20:01:33.402: INFO: created test-podtemplate-2
  May 10 20:01:33.410: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/10/24 20:01:33.41
  STEP: delete collection of pod templates @ 05/10/24 20:01:33.418
  May 10 20:01:33.418: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/10/24 20:01:33.448
  May 10 20:01:33.448: INFO: requesting list of pod templates to confirm quantity
  May 10 20:01:33.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2531" for this suite. @ 05/10/24 20:01:33.462
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [2.242 seconds]
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:33.481
  May 10 20:01:33.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:01:33.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:33.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:33.536
  STEP: Creating Pod @ 05/10/24 20:01:33.541
  STEP: Reading file content from the nginx-container @ 05/10/24 20:01:35.582
  May 10 20:01:35.582: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8241 PodName:pod-sharedvolume-6c8198f7-223c-46c6-9629-0ca1dfe1401a ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:01:35.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:01:35.582: INFO: ExecWithOptions: Clientset creation
  May 10 20:01:35.582: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-8241/pods/pod-sharedvolume-6c8198f7-223c-46c6-9629-0ca1dfe1401a/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  May 10 20:01:35.663: INFO: Exec stderr: ""
  May 10 20:01:35.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8241" for this suite. @ 05/10/24 20:01:35.678
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.251 seconds]
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:28.784
  May 10 20:01:28.784: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename job @ 05/10/24 20:01:28.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:28.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:28.815
  STEP: Creating a suspended job @ 05/10/24 20:01:28.826
  STEP: Patching the Job @ 05/10/24 20:01:28.835
  STEP: Watching for Job to be patched @ 05/10/24 20:01:28.862
  May 10 20:01:28.864: INFO: Event ADDED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-job-label:e2e-25mx8] and annotations: map[]
  May 10 20:01:28.864: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-job-label:e2e-25mx8] and annotations: map[]
  May 10 20:01:28.864: INFO: Event MODIFIED found for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[]
  STEP: Updating the job @ 05/10/24 20:01:28.865
  STEP: Watching for Job to be updated @ 05/10/24 20:01:28.88
  May 10 20:01:28.881: INFO: Event MODIFIED found for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:28.881: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/10/24 20:01:28.881
  May 10 20:01:28.890: INFO: Job: e2e-25mx8 as labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8]
  STEP: Waiting for job to complete @ 05/10/24 20:01:28.89
  STEP: Delete a job collection with a labelselector @ 05/10/24 20:01:36.898
  STEP: Watching for Job to be deleted @ 05/10/24 20:01:36.926
  May 10 20:01:36.932: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.932: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.932: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.936: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.936: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.937: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.937: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.937: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.937: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.937: INFO: Event MODIFIED observed for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  May 10 20:01:36.937: INFO: Event DELETED found for Job e2e-25mx8 in namespace job-9371 with labels: map[e2e-25mx8:patched e2e-job-label:e2e-25mx8] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/10/24 20:01:36.937
  May 10 20:01:36.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9371" for this suite. @ 05/10/24 20:01:37.009
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.218 seconds]
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:37.05
  May 10 20:01:37.050: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 20:01:37.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:37.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:37.083
  May 10 20:01:37.086: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/10/24 20:01:37.106
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/10/24 20:01:37.12
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/10/24 20:01:38.167
  May 10 20:01:38.240: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/10/24 20:01:38.24
  May 10 20:01:38.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7268" for this suite. @ 05/10/24 20:01:38.256
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.189 seconds]
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:35.731
  May 10 20:01:35.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:01:35.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:35.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:35.798
  STEP: Creating a pod to test downward api env vars @ 05/10/24 20:01:35.803
  STEP: Saw pod success @ 05/10/24 20:01:39.851
  May 10 20:01:39.856: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod downward-api-7377423c-7f7f-46d9-a5d5-cfcc931e9e31 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 20:01:39.868
  May 10 20:01:39.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7699" for this suite. @ 05/10/24 20:01:39.909
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.128 seconds]
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:39.929
  May 10 20:01:39.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 20:01:39.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:39.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:39.975
  May 10 20:01:40.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7682" for this suite. @ 05/10/24 20:01:40.035
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.219 seconds]
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:40.069
  May 10 20:01:40.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:01:40.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:40.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:40.125
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:01:40.145
  STEP: Saw pod success @ 05/10/24 20:01:44.198
  May 10 20:01:44.206: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod downwardapi-volume-4274159f-c980-4e21-bf39-28f17c11214e container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:01:44.222
  May 10 20:01:44.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9779" for this suite. @ 05/10/24 20:01:44.274
  << Timeline
------------------------------
• [6.863 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:44.289
  May 10 20:01:44.289: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:01:44.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:44.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:44.341
  STEP: Setting up server cert @ 05/10/24 20:01:44.415
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:01:44.772
  STEP: Deploying the webhook pod @ 05/10/24 20:01:44.785
  STEP: Wait for the deployment to be ready @ 05/10/24 20:01:44.802
  May 10 20:01:44.820: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 20:01:46.845
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:01:46.878
  May 10 20:01:47.878: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 10 20:01:47.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7724-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 20:01:48.413
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/10/24 20:01:48.437
  May 10 20:01:51.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5707" for this suite. @ 05/10/24 20:01:51.122
  STEP: Destroying namespace "webhook-markers-9865" for this suite. @ 05/10/24 20:01:51.133
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [2.715 seconds]
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:51.158
  May 10 20:01:51.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:01:51.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:51.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:51.205
  STEP: creating the pod @ 05/10/24 20:01:51.209
  May 10 20:01:51.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 create -f -'
  May 10 20:01:51.327: INFO: stderr: ""
  May 10 20:01:51.327: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/10/24 20:01:53.34
  May 10 20:01:53.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 label pods pause testing-label=testing-label-value'
  May 10 20:01:53.411: INFO: stderr: ""
  May 10 20:01:53.411: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/10/24 20:01:53.411
  May 10 20:01:53.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 get pod pause -L testing-label'
  May 10 20:01:53.477: INFO: stderr: ""
  May 10 20:01:53.477: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/10/24 20:01:53.477
  May 10 20:01:53.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 label pods pause testing-label-'
  May 10 20:01:53.578: INFO: stderr: ""
  May 10 20:01:53.578: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/10/24 20:01:53.578
  May 10 20:01:53.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 get pod pause -L testing-label'
  May 10 20:01:53.634: INFO: stderr: ""
  May 10 20:01:53.634: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/10/24 20:01:53.635
  May 10 20:01:53.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 delete --grace-period=0 --force -f -'
  May 10 20:01:53.714: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:01:53.714: INFO: stdout: "pod \"pause\" force deleted\n"
  May 10 20:01:53.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 get rc,svc -l name=pause --no-headers'
  May 10 20:01:53.785: INFO: stderr: "No resources found in kubectl-1914 namespace.\n"
  May 10 20:01:53.785: INFO: stdout: ""
  May 10 20:01:53.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-1914 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 10 20:01:53.842: INFO: stderr: ""
  May 10 20:01:53.842: INFO: stdout: ""
  May 10 20:01:53.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1914" for this suite. @ 05/10/24 20:01:53.855
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.657 seconds]
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:53.886
  May 10 20:01:53.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pods @ 05/10/24 20:01:53.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:53.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:53.914
  STEP: creating the pod @ 05/10/24 20:01:53.919
  STEP: submitting the pod to kubernetes @ 05/10/24 20:01:53.919
  W0510 20:01:53.936373      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/10/24 20:01:55.963
  STEP: updating the pod @ 05/10/24 20:01:55.979
  May 10 20:01:56.497: INFO: Successfully updated pod "pod-update-activedeadlineseconds-18e4303d-b220-4f2c-a442-138679176d60"
  May 10 20:02:00.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2959" for this suite. @ 05/10/24 20:02:00.532
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [10.312 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:00.549
  May 10 20:02:00.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:02:00.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:00.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:00.58
  STEP: set up a multi version CRD @ 05/10/24 20:02:00.584
  May 10 20:02:00.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: rename a version @ 05/10/24 20:02:05.036
  STEP: check the new version name is served @ 05/10/24 20:02:05.064
  STEP: check the old version name is removed @ 05/10/24 20:02:06.745
  STEP: check the other version is not changed @ 05/10/24 20:02:07.519
  May 10 20:02:10.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8804" for this suite. @ 05/10/24 20:02:10.843
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.444 seconds]
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:10.872
  May 10 20:02:10.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename limitrange @ 05/10/24 20:02:10.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:10.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:10.937
  STEP: Creating a LimitRange @ 05/10/24 20:02:10.946
  STEP: Setting up watch @ 05/10/24 20:02:10.946
  STEP: Submitting a LimitRange @ 05/10/24 20:02:11.055
  STEP: Verifying LimitRange creation was observed @ 05/10/24 20:02:11.082
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/10/24 20:02:11.083
  May 10 20:02:11.099: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 10 20:02:11.099: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/10/24 20:02:11.099
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/10/24 20:02:11.112
  May 10 20:02:11.119: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 10 20:02:11.119: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/10/24 20:02:11.119
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/10/24 20:02:11.128
  May 10 20:02:11.133: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  May 10 20:02:11.133: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/10/24 20:02:11.133
  STEP: Failing to create a Pod with more than max resources @ 05/10/24 20:02:11.136
  STEP: Updating a LimitRange @ 05/10/24 20:02:11.139
  STEP: Verifying LimitRange updating is effective @ 05/10/24 20:02:11.148
  STEP: Creating a Pod with less than former min resources @ 05/10/24 20:02:13.158
  STEP: Failing to create a Pod with more than max resources @ 05/10/24 20:02:13.174
  STEP: Deleting a LimitRange @ 05/10/24 20:02:13.182
  STEP: Verifying the LimitRange was deleted @ 05/10/24 20:02:13.209
  May 10 20:02:18.223: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/10/24 20:02:18.223
  May 10 20:02:18.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5311" for this suite. @ 05/10/24 20:02:18.293
  << Timeline
------------------------------
• [3.943 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:18.317
  May 10 20:02:18.317: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:02:18.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:18.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:18.367
  STEP: Setting up server cert @ 05/10/24 20:02:18.43
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:02:18.883
  STEP: Deploying the webhook pod @ 05/10/24 20:02:18.897
  STEP: Wait for the deployment to be ready @ 05/10/24 20:02:18.922
  May 10 20:02:18.938: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 20:02:20.959
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:02:20.986
  May 10 20:02:21.986: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/10/24 20:02:22
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/10/24 20:02:22.036
  STEP: Creating a configMap that should not be mutated @ 05/10/24 20:02:22.047
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/10/24 20:02:22.076
  STEP: Creating a configMap that should be mutated @ 05/10/24 20:02:22.088
  May 10 20:02:22.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3850" for this suite. @ 05/10/24 20:02:22.228
  STEP: Destroying namespace "webhook-markers-2974" for this suite. @ 05/10/24 20:02:22.243
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.186 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:22.283
  May 10 20:02:22.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:02:22.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:22.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:22.319
  STEP: Creating configMap with name projected-configmap-test-volume-map-033f6030-6fbb-4a63-92ca-3303cc053f0a @ 05/10/24 20:02:22.324
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:02:22.34
  STEP: Saw pod success @ 05/10/24 20:02:26.393
  May 10 20:02:26.398: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-projected-configmaps-e89258dc-90dc-46ec-b72c-c4373f4c6aa6 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:02:26.416
  May 10 20:02:26.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-142" for this suite. @ 05/10/24 20:02:26.455
  << Timeline
------------------------------
• [4.192 seconds]
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:26.47
  May 10 20:02:26.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 20:02:26.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:26.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:26.519
  STEP: Creating a pod to test env composition @ 05/10/24 20:02:26.524
  STEP: Saw pod success @ 05/10/24 20:02:30.568
  May 10 20:02:30.574: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod var-expansion-4bd381d6-9e1a-42e0-a6a2-ee27ac985222 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 20:02:30.59
  May 10 20:02:30.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9169" for this suite. @ 05/10/24 20:02:30.639
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [70.574 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:02:30.674
  May 10 20:02:30.674: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:02:30.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:02:30.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:02:30.718
  STEP: Creating service test in namespace statefulset-4091 @ 05/10/24 20:02:30.722
  STEP: Creating a new StatefulSet @ 05/10/24 20:02:30.735
  May 10 20:02:30.760: INFO: Found 0 stateful pods, waiting for 3
  May 10 20:02:40.754: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:02:40.754: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:02:40.754: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/10/24 20:02:40.773
  May 10 20:02:40.801: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/10/24 20:02:40.801
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/10/24 20:02:50.815
  STEP: Performing a canary update @ 05/10/24 20:02:50.815
  May 10 20:02:50.851: INFO: Updating stateful set ss2
  May 10 20:02:50.893: INFO: Waiting for Pod statefulset-4091/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/10/24 20:03:00.866
  May 10 20:03:00.944: INFO: Found 1 stateful pods, waiting for 3
  May 10 20:03:10.949: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:03:10.949: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:03:10.949: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/10/24 20:03:10.962
  May 10 20:03:10.996: INFO: Updating stateful set ss2
  May 10 20:03:11.018: INFO: Waiting for Pod statefulset-4091/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May 10 20:03:21.154: INFO: Updating stateful set ss2
  May 10 20:03:21.170: INFO: Waiting for StatefulSet statefulset-4091/ss2 to complete update
  May 10 20:03:21.170: INFO: Waiting for Pod statefulset-4091/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  May 10 20:03:31.171: INFO: Deleting all statefulset in ns statefulset-4091
  May 10 20:03:31.177: INFO: Scaling statefulset ss2 to 0
  May 10 20:03:41.199: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 20:03:41.204: INFO: Deleting statefulset ss2
  May 10 20:03:41.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4091" for this suite. @ 05/10/24 20:03:41.234
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.475 seconds]
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:41.261
  May 10 20:03:41.261: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pv @ 05/10/24 20:03:41.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:41.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:41.312
  STEP: Creating initial PV and PVC @ 05/10/24 20:03:41.317
  May 10 20:03:41.317: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7791" @ 05/10/24 20:03:41.339
  STEP: Listing PVCs in namespace "pv-7791" @ 05/10/24 20:03:41.346
  STEP: Patching the PV "pv-7791-d9bfz" @ 05/10/24 20:03:41.351
  STEP: Patching the PVC "pvc-dhtp7" @ 05/10/24 20:03:41.374
  STEP: Getting PV "pv-7791-d9bfz" @ 05/10/24 20:03:41.406
  STEP: Getting PVC "pvc-dhtp7" @ 05/10/24 20:03:41.412
  STEP: Deleting PVC "pvc-dhtp7" @ 05/10/24 20:03:41.42
  STEP: Confirm deletion of PVC "pvc-dhtp7" @ 05/10/24 20:03:41.437
  STEP: Deleting PV "pv-7791-d9bfz" @ 05/10/24 20:03:43.45
  STEP: Confirm deletion of PV "pv-7791-d9bfz" @ 05/10/24 20:03:43.47
  STEP: Recreating another PV & PVC @ 05/10/24 20:03:45.49
  May 10 20:03:45.490: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7791-lnqw8" @ 05/10/24 20:03:45.58
  STEP: Updating the PVC "pvc-d9zxv" @ 05/10/24 20:03:45.608
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-d9zxv=updated" @ 05/10/24 20:03:45.632
  STEP: Deleting PVC "pvc-d9zxv" via DeleteCollection @ 05/10/24 20:03:45.641
  STEP: Confirm deletion of PVC "pvc-d9zxv" @ 05/10/24 20:03:45.659
  STEP: Deleting PV "pv-7791-lnqw8" via DeleteCollection @ 05/10/24 20:03:47.676
  STEP: Confirm deletion of PV "pv-7791-lnqw8" @ 05/10/24 20:03:47.689
  May 10 20:03:49.701: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May 10 20:03:49.701: INFO: Deleting PersistentVolumeClaim "pvc-d9zxv"
  May 10 20:03:49.707: INFO: Deleting PersistentVolume "pv-7791-lnqw8"
  May 10 20:03:49.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7791" for this suite. @ 05/10/24 20:03:49.723
  << Timeline
------------------------------
• [0.071 seconds]
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:49.738
  May 10 20:03:49.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename services @ 05/10/24 20:03:49.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:49.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:49.773
  STEP: fetching services @ 05/10/24 20:03:49.777
  May 10 20:03:49.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3155" for this suite. @ 05/10/24 20:03:49.795
  << Timeline
------------------------------
• [15.000 seconds]
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:03:49.811
  May 10 20:03:49.811: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 20:03:49.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:03:49.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:03:49.852
  STEP: Performing setup for networking test in namespace pod-network-test-3348 @ 05/10/24 20:03:49.856
  STEP: creating a selector @ 05/10/24 20:03:49.856
  STEP: Creating the service pods in kubernetes @ 05/10/24 20:03:49.856
  May 10 20:03:49.856: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 20:04:02.143
  May 10 20:04:04.177: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 20:04:04.177: INFO: Breadth first check of 10.244.5.93 on host 172.31.180.76...
  May 10 20:04:04.185: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.8.105:9080/dial?request=hostname&protocol=http&host=10.244.5.93&port=8083&tries=1'] Namespace:pod-network-test-3348 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:04.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:04:04.185: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:04.185: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3348/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.8.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.5.93%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:04:04.273: INFO: Waiting for responses: map[]
  May 10 20:04:04.273: INFO: reached 10.244.5.93 after 0/1 tries
  May 10 20:04:04.273: INFO: Breadth first check of 10.244.8.104 on host 172.31.180.98...
  May 10 20:04:04.279: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.8.105:9080/dial?request=hostname&protocol=http&host=10.244.8.104&port=8083&tries=1'] Namespace:pod-network-test-3348 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:04.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:04:04.279: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:04.279: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3348/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.8.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.8.104%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:04:04.377: INFO: Waiting for responses: map[]
  May 10 20:04:04.377: INFO: reached 10.244.8.104 after 0/1 tries
  May 10 20:04:04.377: INFO: Breadth first check of 10.244.7.106 on host 172.31.181.233...
  May 10 20:04:04.390: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.8.105:9080/dial?request=hostname&protocol=http&host=10.244.7.106&port=8083&tries=1'] Namespace:pod-network-test-3348 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:04.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:04:04.390: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:04.390: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3348/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.8.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.7.106%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:04:04.489: INFO: Waiting for responses: map[]
  May 10 20:04:04.489: INFO: reached 10.244.7.106 after 0/1 tries
  May 10 20:04:04.489: INFO: Breadth first check of 10.244.3.84 on host 172.31.181.94...
  May 10 20:04:04.495: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.8.105:9080/dial?request=hostname&protocol=http&host=10.244.3.84&port=8083&tries=1'] Namespace:pod-network-test-3348 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:04.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:04:04.495: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:04.495: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3348/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.8.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.3.84%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:04:04.584: INFO: Waiting for responses: map[]
  May 10 20:04:04.584: INFO: reached 10.244.3.84 after 0/1 tries
  May 10 20:04:04.584: INFO: Breadth first check of 10.244.4.95 on host 172.31.182.18...
  May 10 20:04:04.592: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.8.105:9080/dial?request=hostname&protocol=http&host=10.244.4.95&port=8083&tries=1'] Namespace:pod-network-test-3348 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:04.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:04:04.593: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:04.593: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3348/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.8.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.4.95%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:04:04.693: INFO: Waiting for responses: map[]
  May 10 20:04:04.693: INFO: reached 10.244.4.95 after 0/1 tries
  May 10 20:04:04.693: INFO: Breadth first check of 10.244.6.43 on host 172.31.182.90...
  May 10 20:04:04.699: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.8.105:9080/dial?request=hostname&protocol=http&host=10.244.6.43&port=8083&tries=1'] Namespace:pod-network-test-3348 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:04:04.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:04:04.699: INFO: ExecWithOptions: Clientset creation
  May 10 20:04:04.699: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3348/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.8.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.6.43%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:04:04.788: INFO: Waiting for responses: map[]
  May 10 20:04:04.788: INFO: reached 10.244.6.43 after 0/1 tries
  May 10 20:04:04.788: INFO: Going to retry 0 out of 6 pods....
  May 10 20:04:04.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3348" for this suite. @ 05/10/24 20:04:04.797
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.161 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:04.821
  May 10 20:04:04.821: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:04:04.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:04.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:04.86
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/10/24 20:04:04.864
  STEP: Saw pod success @ 05/10/24 20:04:08.901
  May 10 20:04:08.912: INFO: Trying to get logs from node ip-172-31-181-233.eu-west-3.compute.internal pod pod-f0d8cb44-c1da-4ff6-8e2c-afa3a42f44a6 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:04:08.928
  May 10 20:04:08.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9286" for this suite. @ 05/10/24 20:04:08.971
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.237 seconds]
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:08.986
  May 10 20:04:08.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename disruption @ 05/10/24 20:04:08.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:09.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:09.023
  STEP: creating the pdb @ 05/10/24 20:04:09.027
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:04:09.034
  STEP: updating the pdb @ 05/10/24 20:04:11.04
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:04:11.146
  STEP: patching the pdb @ 05/10/24 20:04:11.155
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:04:11.178
  STEP: Waiting for the pdb to be deleted @ 05/10/24 20:04:13.197
  May 10 20:04:13.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5631" for this suite. @ 05/10/24 20:04:13.211
  << Timeline
------------------------------
• [2.265 seconds]
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:13.224
  May 10 20:04:13.224: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename proxy @ 05/10/24 20:04:13.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:13.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:13.252
  May 10 20:04:13.256: INFO: Creating pod...
  May 10 20:04:15.303: INFO: Creating service...
  May 10 20:04:15.328: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/pods/agnhost/proxy?method=DELETE
  May 10 20:04:15.337: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:04:15.337: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/pods/agnhost/proxy?method=OPTIONS
  May 10 20:04:15.345: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:04:15.345: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/pods/agnhost/proxy?method=PATCH
  May 10 20:04:15.353: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:04:15.353: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/pods/agnhost/proxy?method=POST
  May 10 20:04:15.360: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:04:15.360: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/pods/agnhost/proxy?method=PUT
  May 10 20:04:15.368: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:04:15.368: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/services/e2e-proxy-test-service/proxy?method=DELETE
  May 10 20:04:15.379: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 10 20:04:15.379: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/services/e2e-proxy-test-service/proxy?method=OPTIONS
  May 10 20:04:15.390: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 10 20:04:15.390: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/services/e2e-proxy-test-service/proxy?method=PATCH
  May 10 20:04:15.400: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 10 20:04:15.400: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/services/e2e-proxy-test-service/proxy?method=POST
  May 10 20:04:15.410: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 10 20:04:15.410: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/services/e2e-proxy-test-service/proxy?method=PUT
  May 10 20:04:15.420: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 10 20:04:15.420: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/pods/agnhost/proxy?method=GET
  May 10 20:04:15.432: INFO: http.Client request:GET StatusCode:301
  May 10 20:04:15.432: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/services/e2e-proxy-test-service/proxy?method=GET
  May 10 20:04:15.440: INFO: http.Client request:GET StatusCode:301
  May 10 20:04:15.440: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/pods/agnhost/proxy?method=HEAD
  May 10 20:04:15.444: INFO: http.Client request:HEAD StatusCode:301
  May 10 20:04:15.444: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3694/services/e2e-proxy-test-service/proxy?method=HEAD
  May 10 20:04:15.455: INFO: http.Client request:HEAD StatusCode:301
  May 10 20:04:15.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3694" for this suite. @ 05/10/24 20:04:15.471
  << Timeline
------------------------------
S
------------------------------
• [4.152 seconds]
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:15.49
  May 10 20:04:15.490: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:04:15.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:15.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:15.524
  STEP: Creating a pod to test downward api env vars @ 05/10/24 20:04:15.53
  STEP: Saw pod success @ 05/10/24 20:04:19.566
  May 10 20:04:19.574: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod downward-api-03c42b89-a58d-4dad-932a-4898ead97dfc container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 20:04:19.595
  May 10 20:04:19.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3109" for this suite. @ 05/10/24 20:04:19.632
  << Timeline
------------------------------
• [300.148 seconds]
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 19:59:20.247
  May 10 19:59:20.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 19:59:20.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 19:59:20.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 19:59:20.322
  STEP: Creating a suspended cronjob @ 05/10/24 19:59:20.327
  STEP: Ensuring no jobs are scheduled @ 05/10/24 19:59:20.337
  E0510 19:59:21.114299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:22.115094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:23.115278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:24.116414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:25.117297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:26.117353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:27.117591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:28.117866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:29.118118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:30.118484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:31.118486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:32.119391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:33.120278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:34.120426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:35.121288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:36.121486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:37.122365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:38.122456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:39.123438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:40.123890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:41.124181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:42.124745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:43.125377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:44.125506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:45.125671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:46.126752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:47.127411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:48.127864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:49.128552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:50.129318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:51.130316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:52.130418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:53.130943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:54.131089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:55.132065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:56.132630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:57.133181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:58.133310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 19:59:59.133889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:00.134512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:01.135213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:02.135256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:03.136306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:04.137332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:05.137796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:06.138350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:07.138721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:08.139340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:09.140082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:10.140306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:11.141087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:12.142045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:13.143055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:14.143975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:15.144927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:16.145717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:17.146288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:18.147270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:19.147714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:20.148657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:21.149021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:22.149173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:23.149956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:24.150212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:25.150576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:26.151553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:27.152248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:28.152923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:29.153821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:30.154644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:31.155558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:32.156391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:33.157274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:34.158048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:35.158752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:36.159769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:37.160406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:38.161276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:39.161669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:40.162444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:41.163350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:42.163611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:43.164331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:44.165481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:45.166592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:46.167510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:47.168208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:48.169215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:49.169652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:50.170505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:51.171286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:52.171553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:53.171617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:54.171766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:55.172434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:56.173023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:57.173735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:58.173762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:00:59.174115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:00.174419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:01.175250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:02.175979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:03.176715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:04.177040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:05.177506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:06.178465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:07.179254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:08.180281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:09.180909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:10.181314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:11.182064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:12.182361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:13.183094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:14.184088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:15.184547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:16.185612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:17.186551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:18.187499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:19.188267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:20.189072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:21.189533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:22.189890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:23.190479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:24.190714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:25.191123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:26.191376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:27.192222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:28.192909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:29.193035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:30.193303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:31.194291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:32.194715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:33.195047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:34.195226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:35.196144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:36.196159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:37.196890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:38.197196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:39.197389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:40.197520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:41.198541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:42.198800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:43.199586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:44.199761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:45.200162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:46.201301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:47.202173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:48.203126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:49.203911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:50.204127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:51.204232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:52.205122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:53.206148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:54.206947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:55.207626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:56.208372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:57.208882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:58.209160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:01:59.209863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:00.210507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:01.210641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:02.211661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:03.211845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:04.212137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:05.213177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:06.213420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:07.214471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:08.215177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:09.216101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:10.216342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:11.217288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:12.217467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:13.217588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:14.218359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:15.219383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:16.219928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:17.219832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:18.220253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:19.221090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:20.221637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:21.222464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:22.223074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:23.224128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:24.224366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:25.225010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:26.225443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:27.226469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:28.226675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:29.227518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:30.227841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:31.228398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:32.229483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:33.230495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:34.230878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:35.231762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:36.231901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:37.232966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:38.233468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:39.233755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:40.234737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:41.235103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:42.235250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:43.235319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:44.235436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:45.235738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:46.236249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:47.237238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:48.237394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:49.238451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:50.239025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:51.239981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:52.240616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:53.240681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:54.241272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:55.241557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:56.242407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:57.242638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:58.243620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:02:59.243868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:00.244623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:01.245393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:02.245861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:03.246523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:04.246786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:05.246879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:06.247283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:07.248263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:08.249206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:09.249890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:10.250725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:11.251395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:12.251791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:13.252134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:14.252342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:15.253334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:16.254328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:17.255498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:18.255809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:19.256223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:20.256676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:21.257275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:22.257551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:23.257541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:24.258489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:25.258741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:26.259226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:27.259276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:28.260357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:29.261286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:30.261499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:31.262198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:32.262899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:33.263906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:34.264292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:35.265005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:36.266109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:37.266773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:38.267114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:39.267225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:40.267610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:41.268231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:42.268356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:43.268679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:44.269421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:45.269495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:46.269804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:47.270643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:48.270819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:49.271531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:50.272209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:51.272986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:52.273147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:53.273246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:54.273354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:55.274045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:56.274354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:57.274729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:58.275184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:03:59.276066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:00.276343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:01.277005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:02.277370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:03.277535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:04.277588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:05.278419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:06.278503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:07.279490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:08.280493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:09.281175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:10.282180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:11.282194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:12.282538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:13.282842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:14.283012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:15.283289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:16.283970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:17.284590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:18.285323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:19.286425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:20.286613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/10/24 20:04:20.362
  STEP: Removing cronjob @ 05/10/24 20:04:20.369
  May 10 20:04:20.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9928" for this suite. @ 05/10/24 20:04:20.386
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.129 seconds]
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:20.412
  May 10 20:04:20.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:04:20.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:20.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:20.451
  STEP: Creating a ResourceQuota @ 05/10/24 20:04:20.456
  STEP: Getting a ResourceQuota @ 05/10/24 20:04:20.463
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/10/24 20:04:20.467
  STEP: Patching the ResourceQuota @ 05/10/24 20:04:20.473
  STEP: Deleting a Collection of ResourceQuotas @ 05/10/24 20:04:20.482
  STEP: Verifying the deleted ResourceQuota @ 05/10/24 20:04:20.493
  May 10 20:04:20.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-36" for this suite. @ 05/10/24 20:04:20.529
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.300 seconds]
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:19.643
  May 10 20:04:19.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename gc @ 05/10/24 20:04:19.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:19.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:19.681
  STEP: create the deployment @ 05/10/24 20:04:19.685
  W0510 20:04:19.692784      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/10/24 20:04:19.692
  STEP: delete the deployment @ 05/10/24 20:04:20.207
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/10/24 20:04:20.231
  STEP: Gathering metrics @ 05/10/24 20:04:20.771
  May 10 20:04:20.923: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 20:04:20.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8446" for this suite. @ 05/10/24 20:04:20.931
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [0.225 seconds]
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:20.946
  May 10 20:04:20.946: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:04:20.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:20.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:20.994
  STEP: Starting the proxy @ 05/10/24 20:04:20.998
  May 10 20:04:20.998: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-6305 proxy --unix-socket=/tmp/kubectl-proxy-unix242873116/test'
  STEP: retrieving proxy /api/ output @ 05/10/24 20:04:21.042
  May 10 20:04:21.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6305" for this suite. @ 05/10/24 20:04:21.147
  << Timeline
------------------------------
SS
------------------------------
• [0.123 seconds]
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:21.173
  May 10 20:04:21.173: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:04:21.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:21.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:21.219
  May 10 20:04:21.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-6303 version'
  May 10 20:04:21.276: INFO: stderr: ""
  May 10 20:04:21.276: INFO: stdout: "Client Version: v1.29.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.4\n"
  May 10 20:04:21.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6303" for this suite. @ 05/10/24 20:04:21.285
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.126 seconds]
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:21.305
  May 10 20:04:21.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 20:04:21.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:21.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:21.356
  May 10 20:04:21.360: INFO: Creating ReplicaSet my-hostname-basic-409450d1-a9c1-49a7-9315-b9c6b36dcf5c
  May 10 20:04:21.376: INFO: Pod name my-hostname-basic-409450d1-a9c1-49a7-9315-b9c6b36dcf5c: Found 0 pods out of 1
  May 10 20:04:26.384: INFO: Pod name my-hostname-basic-409450d1-a9c1-49a7-9315-b9c6b36dcf5c: Found 1 pods out of 1
  May 10 20:04:26.384: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-409450d1-a9c1-49a7-9315-b9c6b36dcf5c" is running
  May 10 20:04:26.390: INFO: Pod "my-hostname-basic-409450d1-a9c1-49a7-9315-b9c6b36dcf5c-656m6" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:04:22 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:04:21 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:04:22 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:04:22 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:04:21 +0000 UTC Reason: Message:}])
  May 10 20:04:26.390: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/10/24 20:04:26.39
  May 10 20:04:26.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7240" for this suite. @ 05/10/24 20:04:26.42
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.432 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:26.442
  May 10 20:04:26.442: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:04:26.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:26.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:26.482
  May 10 20:04:26.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 20:04:28.422
  May 10 20:04:28.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-1532 --namespace=crd-publish-openapi-1532 create -f -'
  May 10 20:04:28.506: INFO: stderr: ""
  May 10 20:04:28.506: INFO: stdout: "e2e-test-crd-publish-openapi-2170-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 10 20:04:28.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-1532 --namespace=crd-publish-openapi-1532 delete e2e-test-crd-publish-openapi-2170-crds test-cr'
  May 10 20:04:28.587: INFO: stderr: ""
  May 10 20:04:28.587: INFO: stdout: "e2e-test-crd-publish-openapi-2170-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  May 10 20:04:28.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-1532 --namespace=crd-publish-openapi-1532 apply -f -'
  May 10 20:04:28.663: INFO: stderr: ""
  May 10 20:04:28.663: INFO: stdout: "e2e-test-crd-publish-openapi-2170-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 10 20:04:28.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-1532 --namespace=crd-publish-openapi-1532 delete e2e-test-crd-publish-openapi-2170-crds test-cr'
  May 10 20:04:28.829: INFO: stderr: ""
  May 10 20:04:28.829: INFO: stdout: "e2e-test-crd-publish-openapi-2170-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/10/24 20:04:28.829
  May 10 20:04:28.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-1532 explain e2e-test-crd-publish-openapi-2170-crds'
  May 10 20:04:28.885: INFO: stderr: ""
  May 10 20:04:28.885: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2170-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May 10 20:04:30.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1532" for this suite. @ 05/10/24 20:04:30.849
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.429 seconds]
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:20.549
  May 10 20:04:20.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename services @ 05/10/24 20:04:20.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:20.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:20.589
  STEP: creating service in namespace services-2148 @ 05/10/24 20:04:20.593
  STEP: creating service affinity-clusterip in namespace services-2148 @ 05/10/24 20:04:20.593
  STEP: creating replication controller affinity-clusterip in namespace services-2148 @ 05/10/24 20:04:20.613
  I0510 20:04:20.621302      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-2148, replica count: 3
  E0510 20:04:21.287480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:22.287688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:23.287919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 20:04:23.673327      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 20:04:23.681: INFO: Creating new exec pod
  E0510 20:04:24.288682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:25.289593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:26.290416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:26.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-2148 exec execpod-affinitytrtnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  May 10 20:04:26.895: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  May 10 20:04:26.895: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:04:26.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-2148 exec execpod-affinitytrtnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.224.50 80'
  May 10 20:04:27.074: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.224.50 80\nConnection to 10.102.224.50 80 port [tcp/http] succeeded!\n"
  May 10 20:04:27.074: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:04:27.074: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=services-2148 exec execpod-affinitytrtnm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.102.224.50:80/ ; done'
  E0510 20:04:27.290578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:27.366: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.224.50:80/\n"
  May 10 20:04:27.366: INFO: stdout: "\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn\naffinity-clusterip-8wczn"
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.366: INFO: Received response from host: affinity-clusterip-8wczn
  May 10 20:04:27.367: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-2148, will wait for the garbage collector to delete the pods @ 05/10/24 20:04:27.41
  May 10 20:04:27.478: INFO: Deleting ReplicationController affinity-clusterip took: 11.071311ms
  May 10 20:04:27.579: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.55767ms
  E0510 20:04:28.291406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:29.292145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:30.292364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:30.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2148" for this suite. @ 05/10/24 20:04:30.967
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.139 seconds]
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:30.992
  May 10 20:04:30.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 20:04:30.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:31.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:31.036
  May 10 20:04:31.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3636" for this suite. @ 05/10/24 20:04:31.123
  << Timeline
------------------------------
S
------------------------------
• [7.250 seconds]
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:30.883
  May 10 20:04:30.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename job @ 05/10/24 20:04:30.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:30.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:30.984
  STEP: Creating a job @ 05/10/24 20:04:30.989
  STEP: Ensuring active pods == parallelism @ 05/10/24 20:04:30.997
  STEP: Orphaning one of the Job's Pods @ 05/10/24 20:04:33.005
  May 10 20:04:33.537: INFO: Successfully updated pod "adopt-release-7xxpt"
  STEP: Checking that the Job readopts the Pod @ 05/10/24 20:04:33.537
  STEP: Removing the labels from the Job's Pod @ 05/10/24 20:04:35.548
  May 10 20:04:36.086: INFO: Successfully updated pod "adopt-release-7xxpt"
  STEP: Checking that the Job releases the Pod @ 05/10/24 20:04:36.086
  May 10 20:04:38.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9774" for this suite. @ 05/10/24 20:04:38.122
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [7.055 seconds]
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:38.14
  May 10 20:04:38.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:04:38.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:38.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:38.537
  STEP: Creating the pod @ 05/10/24 20:04:38.542
  May 10 20:04:41.119: INFO: Successfully updated pod "labelsupdate68835ad6-af4e-412f-88c8-958a446b08f2"
  May 10 20:04:45.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-928" for this suite. @ 05/10/24 20:04:45.171
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.098 seconds]
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:45.199
  May 10 20:04:45.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 20:04:45.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:45.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:45.24
  May 10 20:04:45.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6432" for this suite. @ 05/10/24 20:04:45.284
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.026 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:45.305
  May 10 20:04:45.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:04:45.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:45.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:45.361
  STEP: Setting up server cert @ 05/10/24 20:04:45.407
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:04:45.908
  STEP: Deploying the webhook pod @ 05/10/24 20:04:45.923
  STEP: Wait for the deployment to be ready @ 05/10/24 20:04:45.944
  May 10 20:04:45.964: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 20:04:47.996
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:04:48.122
  May 10 20:04:49.123: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/10/24 20:04:49.135
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/10/24 20:04:49.158
  May 10 20:04:49.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:04:49.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7831" for this suite. @ 05/10/24 20:04:49.302
  STEP: Destroying namespace "webhook-markers-5292" for this suite. @ 05/10/24 20:04:49.319
  << Timeline
------------------------------
SSS
------------------------------
• [20.170 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:31.136
  May 10 20:04:31.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:04:31.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:31.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:31.163
  STEP: Creating service test in namespace statefulset-389 @ 05/10/24 20:04:31.167
  STEP: Creating statefulset ss in namespace statefulset-389 @ 05/10/24 20:04:31.174
  May 10 20:04:31.188: INFO: Found 0 stateful pods, waiting for 1
  E0510 20:04:31.292569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:32.292752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:33.293113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:34.293250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:35.293766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:36.294443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:37.295206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:38.295910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:39.296076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:40.296164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:41.193: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/10/24 20:04:41.202
  STEP: updating a scale subresource @ 05/10/24 20:04:41.207
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/10/24 20:04:41.215
  STEP: Patch a scale subresource @ 05/10/24 20:04:41.219
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/10/24 20:04:41.227
  May 10 20:04:41.233: INFO: Deleting all statefulset in ns statefulset-389
  May 10 20:04:41.245: INFO: Scaling statefulset ss to 0
  E0510 20:04:41.296854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:42.297442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:43.298021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:44.298269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:45.298420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:46.298608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:47.298728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:48.299381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:49.300482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:50.301354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:51.267: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 20:04:51.271: INFO: Deleting statefulset ss
  May 10 20:04:51.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-389" for this suite. @ 05/10/24 20:04:51.298
  E0510 20:04:51.301312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [5.121 seconds]
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:51.312
  May 10 20:04:51.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename init-container @ 05/10/24 20:04:51.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:51.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:51.356
  STEP: creating the pod @ 05/10/24 20:04:51.361
  May 10 20:04:51.361: INFO: PodSpec: initContainers in spec.initContainers
  E0510 20:04:52.302561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:53.303313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:54.303547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:55.304210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:56.304341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:04:56.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1646" for this suite. @ 05/10/24 20:04:56.421
  << Timeline
------------------------------
• [2.210 seconds]
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:56.434
  May 10 20:04:56.434: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:04:56.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:56.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:56.49
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9805.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9805.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/10/24 20:04:56.495
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9805.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9805.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/10/24 20:04:56.495
  STEP: creating a pod to probe /etc/hosts @ 05/10/24 20:04:56.495
  STEP: submitting the pod to kubernetes @ 05/10/24 20:04:56.495
  E0510 20:04:57.305163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:04:58.305437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/10/24 20:04:58.533
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:04:58.538
  May 10 20:04:58.591: INFO: DNS probes using dns-9805/dns-test-8fce17a3-4dab-42dd-8176-d7569cbbe445 succeeded

  STEP: deleting the pod @ 05/10/24 20:04:58.591
  May 10 20:04:58.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9805" for this suite. @ 05/10/24 20:04:58.633
  << Timeline
------------------------------
SSSS
------------------------------
• [11.694 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:49.333
  May 10 20:04:49.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:04:49.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:49.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:49.408
  STEP: Counting existing ResourceQuota @ 05/10/24 20:04:49.413
  STEP: Creating a ResourceQuota @ 05/10/24 20:04:54.42
  STEP: Ensuring resource quota status is calculated @ 05/10/24 20:04:54.433
  STEP: Creating a Service @ 05/10/24 20:04:56.443
  STEP: Creating a NodePort Service @ 05/10/24 20:04:56.5
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/10/24 20:04:56.701
  STEP: Ensuring resource quota status captures service creation @ 05/10/24 20:04:56.796
  STEP: Deleting Services @ 05/10/24 20:04:58.803
  STEP: Ensuring resource quota status released usage @ 05/10/24 20:04:58.987
  May 10 20:05:00.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6222" for this suite. @ 05/10/24 20:05:01.014
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.157 seconds]
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:04:58.647
  May 10 20:04:58.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:04:58.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:04:58.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:04:58.7
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:04:58.705
  E0510 20:04:59.305567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:00.306116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:01.306342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:02.306524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:05:02.738
  May 10 20:05:02.743: INFO: Trying to get logs from node ip-172-31-180-76.eu-west-3.compute.internal pod downwardapi-volume-ca98e8c7-d4d7-486d-9a51-44b6f621e461 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:05:02.76
  May 10 20:05:02.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5334" for this suite. @ 05/10/24 20:05:02.795
  << Timeline
------------------------------
SSS
------------------------------
• [2.132 seconds]
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:01.032
  May 10 20:05:01.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename containers @ 05/10/24 20:05:01.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:01.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:01.086
  May 10 20:05:03.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2051" for this suite. @ 05/10/24 20:05:03.154
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.314 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:02.806
  May 10 20:05:02.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:05:02.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:02.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:02.858
  STEP: Creating configMap with name configmap-test-volume-map-a35efe68-08e0-4689-a692-03d2bed2f13e @ 05/10/24 20:05:02.868
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:05:02.875
  E0510 20:05:03.307403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:04.307644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:05.307643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:06.307849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:05:06.918
  May 10 20:05:06.928: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-configmaps-d1480795-3b9b-4bfa-9d6f-8cb070d314ee container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:05:06.988
  May 10 20:05:07.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6158" for this suite. @ 05/10/24 20:05:07.086
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [18.737 seconds]
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:03.171
  May 10 20:05:03.171: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename gc @ 05/10/24 20:05:03.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:03.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:03.208
  STEP: create the rc1 @ 05/10/24 20:05:03.22
  STEP: create the rc2 @ 05/10/24 20:05:03.228
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/10/24 20:05:09.244
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/10/24 20:05:10.085
  STEP: wait for the rc to be deleted @ 05/10/24 20:05:10.097
  May 10 20:05:15.120: INFO: 71 pods remaining
  May 10 20:05:15.120: INFO: 71 pods has nil DeletionTimestamp
  May 10 20:05:15.120: INFO: 
  STEP: Gathering metrics @ 05/10/24 20:05:20.115
  May 10 20:05:20.240: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 10 20:05:20.240: INFO: Deleting pod "simpletest-rc-to-be-deleted-2l6j2" in namespace "gc-1667"
  May 10 20:05:20.261: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vqqs" in namespace "gc-1667"
  May 10 20:05:20.288: INFO: Deleting pod "simpletest-rc-to-be-deleted-49d7d" in namespace "gc-1667"
  May 10 20:05:20.312: INFO: Deleting pod "simpletest-rc-to-be-deleted-4h2j6" in namespace "gc-1667"
  May 10 20:05:20.339: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wncv" in namespace "gc-1667"
  May 10 20:05:20.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-55jp8" in namespace "gc-1667"
  May 10 20:05:20.382: INFO: Deleting pod "simpletest-rc-to-be-deleted-5b7pm" in namespace "gc-1667"
  May 10 20:05:20.405: INFO: Deleting pod "simpletest-rc-to-be-deleted-5cp2n" in namespace "gc-1667"
  May 10 20:05:20.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-5dklc" in namespace "gc-1667"
  May 10 20:05:20.456: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hskg" in namespace "gc-1667"
  May 10 20:05:20.475: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dtw2" in namespace "gc-1667"
  May 10 20:05:20.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lt9d" in namespace "gc-1667"
  May 10 20:05:20.523: INFO: Deleting pod "simpletest-rc-to-be-deleted-6rpht" in namespace "gc-1667"
  May 10 20:05:20.593: INFO: Deleting pod "simpletest-rc-to-be-deleted-7fhq7" in namespace "gc-1667"
  May 10 20:05:20.622: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mb9t" in namespace "gc-1667"
  May 10 20:05:20.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-7rqbv" in namespace "gc-1667"
  May 10 20:05:20.672: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vtkx" in namespace "gc-1667"
  May 10 20:05:20.700: INFO: Deleting pod "simpletest-rc-to-be-deleted-88qzh" in namespace "gc-1667"
  May 10 20:05:20.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-88s7p" in namespace "gc-1667"
  May 10 20:05:20.751: INFO: Deleting pod "simpletest-rc-to-be-deleted-8gtr5" in namespace "gc-1667"
  May 10 20:05:20.776: INFO: Deleting pod "simpletest-rc-to-be-deleted-8h28d" in namespace "gc-1667"
  May 10 20:05:20.827: INFO: Deleting pod "simpletest-rc-to-be-deleted-8hbk7" in namespace "gc-1667"
  May 10 20:05:20.866: INFO: Deleting pod "simpletest-rc-to-be-deleted-8l7ck" in namespace "gc-1667"
  May 10 20:05:20.901: INFO: Deleting pod "simpletest-rc-to-be-deleted-8zr2p" in namespace "gc-1667"
  May 10 20:05:20.932: INFO: Deleting pod "simpletest-rc-to-be-deleted-99l56" in namespace "gc-1667"
  May 10 20:05:20.966: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rhk5" in namespace "gc-1667"
  May 10 20:05:20.987: INFO: Deleting pod "simpletest-rc-to-be-deleted-9s8dx" in namespace "gc-1667"
  May 10 20:05:21.005: INFO: Deleting pod "simpletest-rc-to-be-deleted-b445z" in namespace "gc-1667"
  May 10 20:05:21.050: INFO: Deleting pod "simpletest-rc-to-be-deleted-bh4hk" in namespace "gc-1667"
  May 10 20:05:21.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwp5p" in namespace "gc-1667"
  May 10 20:05:21.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-c8g2x" in namespace "gc-1667"
  May 10 20:05:21.190: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9rl9" in namespace "gc-1667"
  May 10 20:05:21.219: INFO: Deleting pod "simpletest-rc-to-be-deleted-d89z9" in namespace "gc-1667"
  May 10 20:05:21.274: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbmfw" in namespace "gc-1667"
  May 10 20:05:21.301: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzzws" in namespace "gc-1667"
  May 10 20:05:21.340: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjq2d" in namespace "gc-1667"
  May 10 20:05:21.369: INFO: Deleting pod "simpletest-rc-to-be-deleted-fvzqb" in namespace "gc-1667"
  May 10 20:05:21.394: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxf5p" in namespace "gc-1667"
  May 10 20:05:21.425: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxhrt" in namespace "gc-1667"
  May 10 20:05:21.467: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2pz9" in namespace "gc-1667"
  May 10 20:05:21.502: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4dkw" in namespace "gc-1667"
  May 10 20:05:21.537: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5dhc" in namespace "gc-1667"
  May 10 20:05:21.569: INFO: Deleting pod "simpletest-rc-to-be-deleted-g9b2c" in namespace "gc-1667"
  May 10 20:05:21.604: INFO: Deleting pod "simpletest-rc-to-be-deleted-gbfjv" in namespace "gc-1667"
  May 10 20:05:21.627: INFO: Deleting pod "simpletest-rc-to-be-deleted-ghzvv" in namespace "gc-1667"
  May 10 20:05:21.655: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtdjc" in namespace "gc-1667"
  May 10 20:05:21.706: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7nsn" in namespace "gc-1667"
  May 10 20:05:21.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-hlpkb" in namespace "gc-1667"
  May 10 20:05:21.809: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnpwf" in namespace "gc-1667"
  May 10 20:05:21.846: INFO: Deleting pod "simpletest-rc-to-be-deleted-hvp5t" in namespace "gc-1667"
  May 10 20:05:21.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1667" for this suite. @ 05/10/24 20:05:21.877
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.090 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:21.914
  May 10 20:05:21.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:05:21.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:21.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:21.957
  STEP: Setting up server cert @ 05/10/24 20:05:22.024
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:05:22.317
  STEP: Deploying the webhook pod @ 05/10/24 20:05:22.333
  STEP: Wait for the deployment to be ready @ 05/10/24 20:05:22.362
  May 10 20:05:22.376: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 20:05:24.391
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:05:24.422
  May 10 20:05:25.423: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/10/24 20:05:25.633
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 20:05:25.682
  STEP: Deleting the collection of validation webhooks @ 05/10/24 20:05:25.719
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 20:05:25.831
  May 10 20:05:25.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4791" for this suite. @ 05/10/24 20:05:25.968
  STEP: Destroying namespace "webhook-markers-7570" for this suite. @ 05/10/24 20:05:25.982
  << Timeline
------------------------------
SSS
------------------------------
• [4.196 seconds]
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:26.006
  May 10 20:05:26.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:05:26.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:26.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:26.038
  STEP: Creating configMap with name configmap-projected-all-test-volume-999721fa-0b4f-4e18-a361-fee8eee04b24 @ 05/10/24 20:05:26.042
  STEP: Creating secret with name secret-projected-all-test-volume-ac2e55ed-6731-45c9-bd7e-c5d0d382cd0d @ 05/10/24 20:05:26.05
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/10/24 20:05:26.062
  STEP: Saw pod success @ 05/10/24 20:05:30.103
  May 10 20:05:30.108: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod projected-volume-05526733-0e6a-4296-97ac-e8e3dc2de865 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:05:30.135
  May 10 20:05:30.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-85" for this suite. @ 05/10/24 20:05:30.183
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.128 seconds]
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:30.227
  May 10 20:05:30.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pods @ 05/10/24 20:05:30.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:30.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:30.267
  STEP: creating pod @ 05/10/24 20:05:30.273
  May 10 20:05:32.322: INFO: Pod pod-hostip-4dde043f-a226-4a7d-87e4-731704463549 has hostIP: 172.31.180.98
  May 10 20:05:32.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3546" for this suite. @ 05/10/24 20:05:32.331
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.158 seconds]
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:32.364
  May 10 20:05:32.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 20:05:32.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:32.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:32.413
  STEP: Creating a pod to test substitution in container's args @ 05/10/24 20:05:32.418
  STEP: Saw pod success @ 05/10/24 20:05:36.458
  May 10 20:05:36.462: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod var-expansion-1c2262c9-b5f7-4f01-83ef-1ce25a063508 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 20:05:36.472
  May 10 20:05:36.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8116" for this suite. @ 05/10/24 20:05:36.507
  << Timeline
------------------------------
SSSS
------------------------------
• [3.746 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:36.525
  May 10 20:05:36.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:05:36.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:36.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:36.555
  STEP: Setting up server cert @ 05/10/24 20:05:36.605
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:05:36.832
  STEP: Deploying the webhook pod @ 05/10/24 20:05:36.839
  STEP: Wait for the deployment to be ready @ 05/10/24 20:05:36.858
  May 10 20:05:36.872: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 20:05:38.89
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:05:38.977
  May 10 20:05:39.978: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/10/24 20:05:39.989
  STEP: create a configmap that should be updated by the webhook @ 05/10/24 20:05:40.012
  May 10 20:05:40.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8884" for this suite. @ 05/10/24 20:05:40.242
  STEP: Destroying namespace "webhook-markers-4320" for this suite. @ 05/10/24 20:05:40.253
  << Timeline
------------------------------
SSSS
------------------------------
• [34.163 seconds]
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:40.274
  May 10 20:05:40.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:05:40.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:40.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:40.32
  May 10 20:05:40.344: INFO: created pod
  STEP: Saw pod success @ 05/10/24 20:05:44.362
  May 10 20:06:14.363: INFO: polling logs
  May 10 20:06:14.375: INFO: Pod logs: 
  I0510 20:05:40.969880       1 log.go:245] OK: Got token
  I0510 20:05:40.969948       1 log.go:245] validating with in-cluster discovery
  I0510 20:05:40.970198       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0510 20:05:40.970232       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6757:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000149390), NotBefore:(*jwt.NumericDate)(0xc000149478), IssuedAt:(*jwt.NumericDate)(0xc0001493a0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6757", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"0ae21a15-776f-4389-8364-54c5cab2b268"}}}
  I0510 20:05:41.005584       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0510 20:05:41.026681       1 log.go:245] OK: Validated signature on JWT
  I0510 20:05:41.026783       1 log.go:245] OK: Got valid claims from token!
  I0510 20:05:41.026818       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6757:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003aa830), NotBefore:(*jwt.NumericDate)(0xc0003aa858), IssuedAt:(*jwt.NumericDate)(0xc0003aa838), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6757", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"0ae21a15-776f-4389-8364-54c5cab2b268"}}}

  May 10 20:06:14.375: INFO: completed pod
  May 10 20:06:14.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6757" for this suite. @ 05/10/24 20:06:14.414
  << Timeline
------------------------------
• [2.712 seconds]
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:14.439
  May 10 20:06:14.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pods @ 05/10/24 20:06:14.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:14.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:14.507
  STEP: creating the pod @ 05/10/24 20:06:14.518
  STEP: submitting the pod to kubernetes @ 05/10/24 20:06:14.518
  STEP: verifying the pod is in kubernetes @ 05/10/24 20:06:16.576
  STEP: updating the pod @ 05/10/24 20:06:16.582
  May 10 20:06:17.111: INFO: Successfully updated pod "pod-update-355ece40-6ebb-48eb-b51f-ad94fe0dfc73"
  STEP: verifying the updated pod is in kubernetes @ 05/10/24 20:06:17.118
  May 10 20:06:17.127: INFO: Pod update OK
  May 10 20:06:17.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1016" for this suite. @ 05/10/24 20:06:17.138
  << Timeline
------------------------------
SSSS
------------------------------
• [0.093 seconds]
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:17.153
  May 10 20:06:17.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:06:17.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:17.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:17.192
  STEP: Creating ServiceAccount "e2e-sa-vx7dn"  @ 05/10/24 20:06:17.195
  May 10 20:06:17.204: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-vx7dn"  @ 05/10/24 20:06:17.204
  May 10 20:06:17.218: INFO: AutomountServiceAccountToken: true
  May 10 20:06:17.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7872" for this suite. @ 05/10/24 20:06:17.235
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.210 seconds]
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:17.252
  May 10 20:06:17.252: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 20:06:17.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:17.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:17.291
  STEP: getting /apis @ 05/10/24 20:06:17.295
  STEP: getting /apis/discovery.k8s.io @ 05/10/24 20:06:17.3
  STEP: getting /apis/discovery.k8s.iov1 @ 05/10/24 20:06:17.302
  STEP: creating @ 05/10/24 20:06:17.304
  STEP: getting @ 05/10/24 20:06:17.34
  STEP: listing @ 05/10/24 20:06:17.346
  STEP: watching @ 05/10/24 20:06:17.355
  May 10 20:06:17.355: INFO: starting watch
  STEP: cluster-wide listing @ 05/10/24 20:06:17.357
  STEP: cluster-wide watching @ 05/10/24 20:06:17.363
  May 10 20:06:17.363: INFO: starting watch
  STEP: patching @ 05/10/24 20:06:17.364
  STEP: updating @ 05/10/24 20:06:17.378
  May 10 20:06:17.391: INFO: waiting for watch events with expected annotations
  May 10 20:06:17.391: INFO: saw patched and updated annotations
  STEP: deleting @ 05/10/24 20:06:17.391
  STEP: deleting a collection @ 05/10/24 20:06:17.411
  May 10 20:06:17.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5189" for this suite. @ 05/10/24 20:06:17.45
  << Timeline
------------------------------
SSSS
------------------------------
• [37.037 seconds]
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:17.465
  May 10 20:06:17.465: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 20:06:17.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:17.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:17.525
  STEP: creating the pod @ 05/10/24 20:06:17.53
  STEP: waiting for pod running @ 05/10/24 20:06:17.545
  STEP: creating a file in subpath @ 05/10/24 20:06:19.573
  May 10 20:06:19.585: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6409 PodName:var-expansion-a324602f-be11-4b57-b846-2fcc90c43e94 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:06:19.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:06:19.586: INFO: ExecWithOptions: Clientset creation
  May 10 20:06:19.586: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-6409/pods/var-expansion-a324602f-be11-4b57-b846-2fcc90c43e94/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/10/24 20:06:19.672
  May 10 20:06:19.677: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6409 PodName:var-expansion-a324602f-be11-4b57-b846-2fcc90c43e94 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:06:19.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:06:19.677: INFO: ExecWithOptions: Clientset creation
  May 10 20:06:19.677: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-6409/pods/var-expansion-a324602f-be11-4b57-b846-2fcc90c43e94/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/10/24 20:06:19.767
  May 10 20:06:20.284: INFO: Successfully updated pod "var-expansion-a324602f-be11-4b57-b846-2fcc90c43e94"
  STEP: waiting for annotated pod running @ 05/10/24 20:06:20.284
  STEP: deleting the pod gracefully @ 05/10/24 20:06:20.292
  May 10 20:06:20.292: INFO: Deleting pod "var-expansion-a324602f-be11-4b57-b846-2fcc90c43e94" in namespace "var-expansion-6409"
  May 10 20:06:20.305: INFO: Wait up to 5m0s for pod "var-expansion-a324602f-be11-4b57-b846-2fcc90c43e94" to be fully deleted
  May 10 20:06:54.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6409" for this suite. @ 05/10/24 20:06:54.482
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.229 seconds]
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:54.51
  May 10 20:06:54.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename ingressclass @ 05/10/24 20:06:54.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:54.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:54.587
  STEP: getting /apis @ 05/10/24 20:06:54.591
  STEP: getting /apis/networking.k8s.io @ 05/10/24 20:06:54.596
  STEP: getting /apis/networking.k8s.iov1 @ 05/10/24 20:06:54.597
  STEP: creating @ 05/10/24 20:06:54.599
  STEP: getting @ 05/10/24 20:06:54.622
  STEP: listing @ 05/10/24 20:06:54.627
  STEP: watching @ 05/10/24 20:06:54.632
  May 10 20:06:54.632: INFO: starting watch
  STEP: patching @ 05/10/24 20:06:54.634
  STEP: updating @ 05/10/24 20:06:54.647
  May 10 20:06:54.657: INFO: waiting for watch events with expected annotations
  May 10 20:06:54.657: INFO: saw patched and updated annotations
  STEP: deleting @ 05/10/24 20:06:54.657
  STEP: deleting a collection @ 05/10/24 20:06:54.683
  May 10 20:06:54.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9094" for this suite. @ 05/10/24 20:06:54.726
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.139 seconds]
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:54.749
  May 10 20:06:54.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:06:54.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:54.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:54.798
  STEP: creating a secret @ 05/10/24 20:06:54.802
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/10/24 20:06:54.811
  STEP: patching the secret @ 05/10/24 20:06:54.818
  STEP: deleting the secret using a LabelSelector @ 05/10/24 20:06:54.837
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/10/24 20:06:54.863
  May 10 20:06:54.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9906" for this suite. @ 05/10/24 20:06:54.878
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.824 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:54.899
  May 10 20:06:54.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename webhook @ 05/10/24 20:06:54.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:54.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:54.992
  STEP: Setting up server cert @ 05/10/24 20:06:55.042
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 20:06:55.324
  STEP: Deploying the webhook pod @ 05/10/24 20:06:55.336
  STEP: Wait for the deployment to be ready @ 05/10/24 20:06:55.356
  May 10 20:06:55.366: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 20:06:57.388
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:06:57.412
  May 10 20:06:58.413: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/10/24 20:06:58.428
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/10/24 20:06:58.46
  STEP: Creating a dummy validating-webhook-configuration object @ 05/10/24 20:06:58.484
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/10/24 20:06:58.498
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/10/24 20:06:58.517
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/10/24 20:06:58.536
  May 10 20:06:58.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8916" for this suite. @ 05/10/24 20:06:58.679
  STEP: Destroying namespace "webhook-markers-6301" for this suite. @ 05/10/24 20:06:58.696
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [15.020 seconds]
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:06:58.729
  May 10 20:06:58.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 20:06:58.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:06:58.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:06:58.778
  STEP: Performing setup for networking test in namespace pod-network-test-8710 @ 05/10/24 20:06:58.782
  STEP: creating a selector @ 05/10/24 20:06:58.782
  STEP: Creating the service pods in kubernetes @ 05/10/24 20:06:58.782
  May 10 20:06:58.782: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 20:07:11.095
  May 10 20:07:13.125: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 20:07:13.125: INFO: Breadth first check of 10.244.5.115 on host 172.31.180.76...
  May 10 20:07:13.132: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.7.130:9080/dial?request=hostname&protocol=udp&host=10.244.5.115&port=8081&tries=1'] Namespace:pod-network-test-8710 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:07:13.132: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:07:13.132: INFO: ExecWithOptions: Clientset creation
  May 10 20:07:13.132: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8710/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.7.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.5.115%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:07:13.227: INFO: Waiting for responses: map[]
  May 10 20:07:13.227: INFO: reached 10.244.5.115 after 0/1 tries
  May 10 20:07:13.227: INFO: Breadth first check of 10.244.8.128 on host 172.31.180.98...
  May 10 20:07:13.234: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.7.130:9080/dial?request=hostname&protocol=udp&host=10.244.8.128&port=8081&tries=1'] Namespace:pod-network-test-8710 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:07:13.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:07:13.234: INFO: ExecWithOptions: Clientset creation
  May 10 20:07:13.234: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8710/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.7.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.8.128%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:07:13.331: INFO: Waiting for responses: map[]
  May 10 20:07:13.331: INFO: reached 10.244.8.128 after 0/1 tries
  May 10 20:07:13.331: INFO: Breadth first check of 10.244.7.129 on host 172.31.181.233...
  May 10 20:07:13.341: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.7.130:9080/dial?request=hostname&protocol=udp&host=10.244.7.129&port=8081&tries=1'] Namespace:pod-network-test-8710 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:07:13.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:07:13.342: INFO: ExecWithOptions: Clientset creation
  May 10 20:07:13.342: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8710/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.7.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.7.129%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:07:13.434: INFO: Waiting for responses: map[]
  May 10 20:07:13.434: INFO: reached 10.244.7.129 after 0/1 tries
  May 10 20:07:13.434: INFO: Breadth first check of 10.244.3.110 on host 172.31.181.94...
  May 10 20:07:13.439: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.7.130:9080/dial?request=hostname&protocol=udp&host=10.244.3.110&port=8081&tries=1'] Namespace:pod-network-test-8710 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:07:13.440: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:07:13.440: INFO: ExecWithOptions: Clientset creation
  May 10 20:07:13.440: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8710/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.7.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.3.110%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:07:13.538: INFO: Waiting for responses: map[]
  May 10 20:07:13.538: INFO: reached 10.244.3.110 after 0/1 tries
  May 10 20:07:13.538: INFO: Breadth first check of 10.244.4.120 on host 172.31.182.18...
  May 10 20:07:13.546: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.7.130:9080/dial?request=hostname&protocol=udp&host=10.244.4.120&port=8081&tries=1'] Namespace:pod-network-test-8710 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:07:13.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:07:13.546: INFO: ExecWithOptions: Clientset creation
  May 10 20:07:13.546: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8710/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.7.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.4.120%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:07:13.632: INFO: Waiting for responses: map[]
  May 10 20:07:13.632: INFO: reached 10.244.4.120 after 0/1 tries
  May 10 20:07:13.632: INFO: Breadth first check of 10.244.6.60 on host 172.31.182.90...
  May 10 20:07:13.638: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.7.130:9080/dial?request=hostname&protocol=udp&host=10.244.6.60&port=8081&tries=1'] Namespace:pod-network-test-8710 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:07:13.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:07:13.638: INFO: ExecWithOptions: Clientset creation
  May 10 20:07:13.638: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8710/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.7.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.6.60%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 10 20:07:13.729: INFO: Waiting for responses: map[]
  May 10 20:07:13.729: INFO: reached 10.244.6.60 after 0/1 tries
  May 10 20:07:13.729: INFO: Going to retry 0 out of 6 pods....
  May 10 20:07:13.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8710" for this suite. @ 05/10/24 20:07:13.738
  << Timeline
------------------------------
S
------------------------------
• [4.191 seconds]
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:13.75
  May 10 20:07:13.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename containers @ 05/10/24 20:07:13.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:13.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:13.798
  STEP: Creating a pod to test override arguments @ 05/10/24 20:07:13.808
  STEP: Saw pod success @ 05/10/24 20:07:17.866
  May 10 20:07:17.871: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod client-containers-9c366ce9-2fc8-4ab9-b6e8-4674a275fcb5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:07:17.89
  May 10 20:07:17.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1044" for this suite. @ 05/10/24 20:07:17.929
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.540 seconds]
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:17.951
  May 10 20:07:17.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:07:17.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:17.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:17.988
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 20:07:17.992
  May 10 20:07:17.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-852 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 10 20:07:18.059: INFO: stderr: ""
  May 10 20:07:18.059: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/10/24 20:07:18.059
  May 10 20:07:18.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-852 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  May 10 20:07:18.121: INFO: stderr: ""
  May 10 20:07:18.121: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 20:07:18.121
  May 10 20:07:18.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-852 delete pods e2e-test-httpd-pod'
  May 10 20:07:19.468: INFO: stderr: ""
  May 10 20:07:19.468: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 10 20:07:19.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-852" for this suite. @ 05/10/24 20:07:19.479
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [37.393 seconds]
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:19.5
  May 10 20:07:19.500: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:07:19.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:19.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:19.533
  STEP: Creating a test headless service @ 05/10/24 20:07:19.539
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 10.150.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.150.10_udp@PTR;check="$$(dig +tcp +noall +answer +search 10.150.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.150.10_tcp@PTR;sleep 1; done
   @ 05/10/24 20:07:19.577
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1520.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 10.150.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.150.10_udp@PTR;check="$$(dig +tcp +noall +answer +search 10.150.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.150.10_tcp@PTR;sleep 1; done
   @ 05/10/24 20:07:19.577
  STEP: creating a pod to probe DNS @ 05/10/24 20:07:19.577
  STEP: submitting the pod to kubernetes @ 05/10/24 20:07:19.577
  STEP: retrieving the pod @ 05/10/24 20:07:21.614
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:07:21.622
  May 10 20:07:21.634: INFO: Unable to read wheezy_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.643: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.649: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.656: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.694: INFO: Unable to read jessie_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.705: INFO: Unable to read jessie_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.717: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.724: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:21.756: INFO: Lookups using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 failed for: [wheezy_udp@dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_udp@dns-test-service.dns-1520.svc.cluster.local jessie_tcp@dns-test-service.dns-1520.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local]

  May 10 20:07:21.774: INFO: Pod client logs for webserver: 
  May 10 20:07:21.795: INFO: Pod client logs for querier: 
  May 10 20:07:21.807: INFO: Pod client logs for jessie-querier: 
  May 10 20:07:26.630: INFO: Unable to read wheezy_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.637: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.645: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.651: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.696: INFO: Unable to read jessie_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.703: INFO: Unable to read jessie_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.709: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.726: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:26.758: INFO: Lookups using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 failed for: [wheezy_udp@dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_udp@dns-test-service.dns-1520.svc.cluster.local jessie_tcp@dns-test-service.dns-1520.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local]

  May 10 20:07:26.772: INFO: Pod client logs for webserver: 
  May 10 20:07:26.788: INFO: Pod client logs for querier: 
  May 10 20:07:26.800: INFO: Pod client logs for jessie-querier: 
  May 10 20:07:31.631: INFO: Unable to read wheezy_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.638: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.645: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.652: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.689: INFO: Unable to read jessie_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.696: INFO: Unable to read jessie_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.704: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.714: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:31.745: INFO: Lookups using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 failed for: [wheezy_udp@dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_udp@dns-test-service.dns-1520.svc.cluster.local jessie_tcp@dns-test-service.dns-1520.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local]

  May 10 20:07:31.767: INFO: Pod client logs for webserver: 
  May 10 20:07:31.787: INFO: Pod client logs for querier: 
  May 10 20:07:31.801: INFO: Pod client logs for jessie-querier: 
  May 10 20:07:36.631: INFO: Unable to read wheezy_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.638: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.645: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.651: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.686: INFO: Unable to read jessie_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.692: INFO: Unable to read jessie_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.699: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.705: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:36.745: INFO: Lookups using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 failed for: [wheezy_udp@dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_udp@dns-test-service.dns-1520.svc.cluster.local jessie_tcp@dns-test-service.dns-1520.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local]

  May 10 20:07:36.754: INFO: Pod client logs for webserver: 
  May 10 20:07:36.765: INFO: Pod client logs for querier: 
  May 10 20:07:36.783: INFO: Pod client logs for jessie-querier: 
  May 10 20:07:41.630: INFO: Unable to read wheezy_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.636: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.644: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.650: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.688: INFO: Unable to read jessie_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.694: INFO: Unable to read jessie_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.701: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.708: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:41.737: INFO: Lookups using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 failed for: [wheezy_udp@dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_udp@dns-test-service.dns-1520.svc.cluster.local jessie_tcp@dns-test-service.dns-1520.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local]

  May 10 20:07:41.749: INFO: Pod client logs for webserver: 
  May 10 20:07:41.761: INFO: Pod client logs for querier: 
  May 10 20:07:41.774: INFO: Pod client logs for jessie-querier: 
  May 10 20:07:46.630: INFO: Unable to read wheezy_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.637: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.643: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.653: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.692: INFO: Unable to read jessie_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.711: INFO: Unable to read jessie_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.718: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.726: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:46.757: INFO: Lookups using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 failed for: [wheezy_udp@dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_udp@dns-test-service.dns-1520.svc.cluster.local jessie_tcp@dns-test-service.dns-1520.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local]

  May 10 20:07:46.784: INFO: Pod client logs for webserver: 
  May 10 20:07:46.803: INFO: Pod client logs for querier: 
  May 10 20:07:46.814: INFO: Pod client logs for jessie-querier: 
  May 10 20:07:51.632: INFO: Unable to read wheezy_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.639: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.646: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.655: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.692: INFO: Unable to read jessie_udp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.701: INFO: Unable to read jessie_tcp@dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.708: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.714: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local from pod dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9: the server could not find the requested resource (get pods dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9)
  May 10 20:07:51.740: INFO: Lookups using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 failed for: [wheezy_udp@dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@dns-test-service.dns-1520.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_udp@dns-test-service.dns-1520.svc.cluster.local jessie_tcp@dns-test-service.dns-1520.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1520.svc.cluster.local]

  May 10 20:07:51.752: INFO: Pod client logs for webserver: 
  May 10 20:07:51.762: INFO: Pod client logs for querier: 
  May 10 20:07:51.775: INFO: Pod client logs for jessie-querier: 
  May 10 20:07:56.755: INFO: DNS probes using dns-1520/dns-test-05745787-fdab-4fe4-9c60-37ec1a0959b9 succeeded

  STEP: deleting the pod @ 05/10/24 20:07:56.755
  STEP: deleting the test service @ 05/10/24 20:07:56.791
  STEP: deleting the test headless service @ 05/10/24 20:07:56.848
  May 10 20:07:56.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1520" for this suite. @ 05/10/24 20:07:56.884
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [175.225 seconds]
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:05:07.126
  May 10 20:05:07.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:05:07.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:05:07.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:05:07.201
  STEP: Creating resourceQuota "e2e-rq-status-lcdvb" @ 05/10/24 20:05:07.214
  May 10 20:05:07.228: INFO: Resource quota "e2e-rq-status-lcdvb" reports spec: hard cpu limit of 500m
  May 10 20:05:07.228: INFO: Resource quota "e2e-rq-status-lcdvb" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-lcdvb" /status @ 05/10/24 20:05:07.228
  STEP: Confirm /status for "e2e-rq-status-lcdvb" resourceQuota via watch @ 05/10/24 20:05:07.245
  May 10 20:05:07.248: INFO: observed resourceQuota "e2e-rq-status-lcdvb" in namespace "resourcequota-3451" with hard status: v1.ResourceList(nil)
  May 10 20:05:07.248: INFO: Found resourceQuota "e2e-rq-status-lcdvb" in namespace "resourcequota-3451" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 10 20:05:07.248: INFO: ResourceQuota "e2e-rq-status-lcdvb" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/10/24 20:05:07.259
  May 10 20:05:07.275: INFO: Resource quota "e2e-rq-status-lcdvb" reports spec: hard cpu limit of 1
  May 10 20:05:07.276: INFO: Resource quota "e2e-rq-status-lcdvb" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-lcdvb" /status @ 05/10/24 20:05:07.276
  STEP: Confirm /status for "e2e-rq-status-lcdvb" resourceQuota via watch @ 05/10/24 20:05:07.289
  May 10 20:05:07.292: INFO: observed resourceQuota "e2e-rq-status-lcdvb" in namespace "resourcequota-3451" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 10 20:05:07.292: INFO: Found resourceQuota "e2e-rq-status-lcdvb" in namespace "resourcequota-3451" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May 10 20:05:07.293: INFO: ResourceQuota "e2e-rq-status-lcdvb" /status was patched
  STEP: Get "e2e-rq-status-lcdvb" /status @ 05/10/24 20:05:07.293
  May 10 20:05:07.301: INFO: Resourcequota "e2e-rq-status-lcdvb" reports status: hard cpu of 1
  May 10 20:05:07.301: INFO: Resourcequota "e2e-rq-status-lcdvb" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-lcdvb" /status before checking Spec is unchanged @ 05/10/24 20:05:07.307
  E0510 20:05:07.308594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:07.322: INFO: Resourcequota "e2e-rq-status-lcdvb" reports status: hard cpu of 2
  May 10 20:05:07.322: INFO: Resourcequota "e2e-rq-status-lcdvb" reports status: hard memory of 2Gi
  May 10 20:05:07.326: INFO: Found resourceQuota "e2e-rq-status-lcdvb" in namespace "resourcequota-3451" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  May 10 20:05:07.341: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005410c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005410cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005410d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:08.309278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:09.309814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:10.310285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:11.311314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:12.311860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:12.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898e40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898e70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898ed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:13.312656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:14.313293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:15.314325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:16.314665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:17.315019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:17.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054110e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411128), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:18.315142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:19.315367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:20.315715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:21.315963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:22.316867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:22.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899188), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048991b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:23.317055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:24.317223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:25.317621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:26.317993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:27.318306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:27.334: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411650), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:28.319239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:29.320079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:30.320189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:31.321334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:32.321795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:32.337: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899440), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899470), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048994b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:33.322232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:34.323319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:35.323812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:36.324252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:37.325283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:37.335: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411a28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411a70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411ab8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:38.326196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:39.326629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:40.327526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:41.328442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:42.329295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:42.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411cf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005411db8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:43.330372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:44.330951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:45.331286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:46.331909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:47.332294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:47.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da60f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:48.333229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:49.333655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:50.334368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:51.335279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:52.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7b4e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7b518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7b578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:52.335708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:53.335837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:54.336230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:55.336288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:56.336435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:05:57.333: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da65b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:05:57.337036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:58.337940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:05:59.338989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:00.339526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:01.340262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:02.340634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:02.361: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7b8d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7b908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7b968), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:03.341147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:04.341344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:05.342335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:06.342358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:07.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7bd40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7bd88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d7bdd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:07.342751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:08.343403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:09.344463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:10.344755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:11.345015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:12.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899d28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899d58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899d88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:12.345816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:13.346806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:14.346945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:15.347313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:16.348136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:17.334: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048980c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048980f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:17.348662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:18.348968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:19.349392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:20.349845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:21.350222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:22.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049283f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004928420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004928480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:22.350883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:23.351205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:24.351834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:25.352815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:26.353868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:27.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c0378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c03c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c0498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:27.354286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:28.354994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:29.355866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:30.355981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:31.356806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:32.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004928840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049288b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004928930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:32.356839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:33.357988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:34.358220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:35.359022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:36.359276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:37.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004928d50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004928d98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004928e10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:37.360113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:38.360606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:39.361171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:40.362018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:41.363070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:42.333: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004929098), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049290f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004929140), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:42.363865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:43.364104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:44.364356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:45.364641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:46.365599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:47.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049294d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004929518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004929590), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:47.366495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:48.367109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:49.367500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:50.368385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:51.369190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:52.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c09d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c0a08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c0a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:52.369467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:53.370300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:54.371151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:55.371959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:56.372235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:06:57.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004929b00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004929b60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004929ba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:06:57.373035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:58.373352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:06:59.374141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:00.374287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:01.374348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:02.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:02.375293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:03.375711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:04.376781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:05.377306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:06.377484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:07.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048989d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:07.378158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:08.379105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:09.379462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:10.380404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:11.380753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:12.337: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898cc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004898d68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:12.381413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:13.381847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:14.382341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:15.383528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:16.384120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:17.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c14b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:17.384489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:18.385097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:19.385399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:20.385949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:21.386208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:22.330: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048991a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048991d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:22.386627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:23.387337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:24.388389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:25.388435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:26.389111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:27.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048994e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899548), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:27.389494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:28.390199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:29.391150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:30.392167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:31.392370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:32.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899860), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048998c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:32.392570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:33.393204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:34.393469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:35.393796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:36.394145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:37.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899c38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899c68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004899cb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:37.395001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:38.395328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:39.395384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:40.396109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:41.396442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:42.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:42.397162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:43.397416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:44.397819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:45.398715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:46.399514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:47.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da6780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da67b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000da67f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:47.400197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:48.400643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:49.400723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:50.401195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:51.401682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:52.333: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a6a150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a6a198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a6a1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:52.402525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:53.403083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:54.403810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:55.403985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:56.404896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:07:57.331: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcdvb", GenerateName:"", Namespace:"resourcequota-3451", SelfLink:"", UID:"054c758d-3082-4df9-8211-0e6c623b727f", ResourceVersion:"38690", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcdvb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1cb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1ce0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 20, 5, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010c1d58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0510 20:07:57.405576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:58.406105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:07:59.406353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:00.407038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:01.407907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:02.332: INFO: ResourceQuota "e2e-rq-status-lcdvb" Spec was unchanged and /status reset
  May 10 20:08:02.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3451" for this suite. @ 05/10/24 20:08:02.34
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [0.079 seconds]
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:02.362
  May 10 20:08:02.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 20:08:02.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:02.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:02.396
  E0510 20:08:02.408054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:02.417: INFO: Endpoints addresses: [172.31.180.207 172.31.181.153 172.31.182.185] , ports: [6443]
  May 10 20:08:02.417: INFO: EndpointSlices addresses: [172.31.180.207 172.31.181.153 172.31.182.185] , ports: [6443]
  May 10 20:08:02.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7804" for this suite. @ 05/10/24 20:08:02.424
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [4.172 seconds]
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:02.446
  May 10 20:08:02.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:08:02.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:02.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:02.487
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-51723208-9bcb-4efe-9468-545f0ab0c546 @ 05/10/24 20:08:02.497
  STEP: Creating the pod @ 05/10/24 20:08:02.503
  E0510 20:08:03.408230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:04.408741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-51723208-9bcb-4efe-9468-545f0ab0c546 @ 05/10/24 20:08:04.564
  STEP: waiting to observe update in volume @ 05/10/24 20:08:04.571
  E0510 20:08:05.409281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:06.409719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:06.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7586" for this suite. @ 05/10/24 20:08:06.609
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [4.032 seconds]
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:06.625
  May 10 20:08:06.625: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename init-container @ 05/10/24 20:08:06.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:06.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:06.664
  STEP: creating the pod @ 05/10/24 20:08:06.669
  May 10 20:08:06.669: INFO: PodSpec: initContainers in spec.initContainers
  E0510 20:08:07.409949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:08.410954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:09.411422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:10.412169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:10.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2882" for this suite. @ 05/10/24 20:08:10.645
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.203 seconds]
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:10.661
  May 10 20:08:10.661: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:08:10.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:10.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:10.744
  STEP: Creating secret with name secret-test-8768f517-31b5-400d-8267-e4db49ba1216 @ 05/10/24 20:08:10.749
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:08:10.755
  E0510 20:08:11.412990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:12.413714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:13.414641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:14.414704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:08:14.78
  May 10 20:08:14.786: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-secrets-bf071e11-5dc7-4c19-a6a4-f3969e5b6f37 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:08:14.815
  May 10 20:08:14.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1692" for this suite. @ 05/10/24 20:08:14.856
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [20.230 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:07:56.898
  May 10 20:07:56.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:07:56.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:07:56.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:07:56.929
  STEP: Creating service test in namespace statefulset-9258 @ 05/10/24 20:07:56.933
  May 10 20:07:56.958: INFO: Found 0 stateful pods, waiting for 1
  May 10 20:08:06.962: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/10/24 20:08:06.985
  W0510 20:08:07.034186      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  May 10 20:08:07.048: INFO: Found 1 stateful pods, waiting for 2
  May 10 20:08:17.049: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 10 20:08:17.049: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/10/24 20:08:17.06
  STEP: Delete all of the StatefulSets @ 05/10/24 20:08:17.065
  STEP: Verify that StatefulSets have been deleted @ 05/10/24 20:08:17.081
  May 10 20:08:17.085: INFO: Deleting all statefulset in ns statefulset-9258
  May 10 20:08:17.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9258" for this suite. @ 05/10/24 20:08:17.107
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.665 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:14.874
  May 10 20:08:14.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:08:14.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:14.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:14.902
  May 10 20:08:14.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  E0510 20:08:15.415180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:16.416098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 20:08:16.98
  May 10 20:08:16.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=crd-publish-openapi-7093 --namespace=crd-publish-openapi-7093 create -f -'
  May 10 20:08:17.083: INFO: stderr: ""
  May 10 20:08:17.083: INFO: stdout: "e2e-test-crd-publish-openapi-1300-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 10 20:08:17.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=crd-publish-openapi-7093 --namespace=crd-publish-openapi-7093 delete e2e-test-crd-publish-openapi-1300-crds test-cr'
  May 10 20:08:17.163: INFO: stderr: ""
  May 10 20:08:17.163: INFO: stdout: "e2e-test-crd-publish-openapi-1300-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  May 10 20:08:17.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=crd-publish-openapi-7093 --namespace=crd-publish-openapi-7093 apply -f -'
  May 10 20:08:17.269: INFO: stderr: ""
  May 10 20:08:17.269: INFO: stdout: "e2e-test-crd-publish-openapi-1300-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 10 20:08:17.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=crd-publish-openapi-7093 --namespace=crd-publish-openapi-7093 delete e2e-test-crd-publish-openapi-1300-crds test-cr'
  May 10 20:08:17.365: INFO: stderr: ""
  May 10 20:08:17.365: INFO: stdout: "e2e-test-crd-publish-openapi-1300-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/10/24 20:08:17.365
  May 10 20:08:17.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=crd-publish-openapi-7093 explain e2e-test-crd-publish-openapi-1300-crds'
  E0510 20:08:17.416270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:17.421: INFO: stderr: ""
  May 10 20:08:17.421: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1300-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0510 20:08:18.417354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:19.418162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:19.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7093" for this suite. @ 05/10/24 20:08:19.521
  << Timeline
------------------------------
• [2.341 seconds]
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:19.54
  May 10 20:08:19.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:08:19.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:19.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:19.594
  May 10 20:08:19.598: INFO: Creating deployment "test-recreate-deployment"
  May 10 20:08:19.604: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  May 10 20:08:19.612: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0510 20:08:20.418861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:21.418812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:21.621: INFO: Waiting deployment "test-recreate-deployment" to complete
  May 10 20:08:21.626: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  May 10 20:08:21.638: INFO: Updating deployment test-recreate-deployment
  May 10 20:08:21.638: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  May 10 20:08:21.843: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "839921ea-673d-487f-805d-fccb029b9f1a",
      ResourceVersion: (string) (len=5) "41801",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 20:08:21.849: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "131997bd-ef37-40d7-8524-59e288ca393b",
      ResourceVersion: (string) (len=5) "41799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "839921ea-673d-487f-805d-fccb029b9f1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 33 39 39 32 31  65 61 2d 36 37 33 64 2d  |\"839921ea-673d-|
              00000120  34 38 37 66 2d 38 30 35  64 2d 66 63 63 62 30 32  |487f-805d-fccb02|
              00000130  39 62 39 66 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9b9f1a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:08:21.849: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  May 10 20:08:21.849: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3419de54-61ab-4d16-be80-a3002f1ae740",
      ResourceVersion: (string) (len=5) "41790",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "839921ea-673d-487f-805d-fccb029b9f1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 33 39 39 32 31  65 61 2d 36 37 33 64 2d  |\"839921ea-673d-|
              00000120  34 38 37 66 2d 38 30 35  64 2d 66 63 63 62 30 32  |487f-805d-fccb02|
              00000130  39 62 39 66 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9b9f1a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:08:21.859: INFO: Pod "test-recreate-deployment-76fb77d45-7t4gl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-7t4gl",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-580",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53a88be5-0b13-403e-8670-9f3c70f753ca",
      ResourceVersion: (string) (len=5) "41802",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "131997bd-ef37-40d7-8524-59e288ca393b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  31 39 39 37 62 64 2d 65  |d\":\"131997bd-e|
              00000090  66 33 37 2d 34 30 64 37  2d 38 35 32 34 2d 35 39  |f37-40d7-8524-59|
              000000a0  65 32 38 38 63 61 33 39  33 62 5c 22 7d 22 3a 7b  |e288ca393b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cmx5f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cmx5f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-180-98.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.180.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.180.98"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:08:21.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-580" for this suite. @ 05/10/24 20:08:21.872
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.133 seconds]
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:17.14
  May 10 20:08:17.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 20:08:17.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:17.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:17.186
  STEP: Creating replication controller my-hostname-basic-319b4a5f-b8c6-4eb3-b971-2e702580555b @ 05/10/24 20:08:17.189
  May 10 20:08:17.206: INFO: Pod name my-hostname-basic-319b4a5f-b8c6-4eb3-b971-2e702580555b: Found 0 pods out of 1
  May 10 20:08:22.212: INFO: Pod name my-hostname-basic-319b4a5f-b8c6-4eb3-b971-2e702580555b: Found 1 pods out of 1
  May 10 20:08:22.212: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-319b4a5f-b8c6-4eb3-b971-2e702580555b" are running
  May 10 20:08:22.226: INFO: Pod "my-hostname-basic-319b4a5f-b8c6-4eb3-b971-2e702580555b-bpmdz" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:08:18 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:08:17 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:08:18 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:08:18 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 20:08:17 +0000 UTC Reason: Message:}])
  May 10 20:08:22.226: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/10/24 20:08:22.226
  May 10 20:08:22.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1713" for this suite. @ 05/10/24 20:08:22.26
  << Timeline
------------------------------
SSSSS
------------------------------
• [14.322 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:21.896
  May 10 20:08:21.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 20:08:21.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:21.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:21.931
  STEP: Creating service test in namespace statefulset-3139 @ 05/10/24 20:08:21.936
  STEP: Looking for a node to schedule stateful set and pod @ 05/10/24 20:08:21.948
  STEP: Creating pod with conflicting port in namespace statefulset-3139 @ 05/10/24 20:08:21.958
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3139 @ 05/10/24 20:08:21.978
  E0510 20:08:22.419484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:23.419851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3139 @ 05/10/24 20:08:23.99
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3139 @ 05/10/24 20:08:24
  May 10 20:08:24.049: INFO: Observed stateful pod in namespace: statefulset-3139, name: ss-0, uid: 4994511a-1e2b-4daa-9de2-504170e8e63c, status phase: Pending. Waiting for statefulset controller to delete.
  May 10 20:08:24.070: INFO: Observed stateful pod in namespace: statefulset-3139, name: ss-0, uid: 4994511a-1e2b-4daa-9de2-504170e8e63c, status phase: Failed. Waiting for statefulset controller to delete.
  May 10 20:08:24.097: INFO: Observed stateful pod in namespace: statefulset-3139, name: ss-0, uid: 4994511a-1e2b-4daa-9de2-504170e8e63c, status phase: Failed. Waiting for statefulset controller to delete.
  May 10 20:08:24.103: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3139
  STEP: Removing pod with conflicting port in namespace statefulset-3139 @ 05/10/24 20:08:24.103
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3139 and will be in running state @ 05/10/24 20:08:24.149
  E0510 20:08:24.420153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:25.420825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:26.161: INFO: Deleting all statefulset in ns statefulset-3139
  May 10 20:08:26.165: INFO: Scaling statefulset ss to 0
  E0510 20:08:26.421877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:27.422122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:28.422396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:29.422836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:30.422954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:31.423721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:32.424126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:33.424352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:34.425317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:35.426250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:36.182: INFO: Waiting for statefulset status.replicas updated to 0
  May 10 20:08:36.186: INFO: Deleting statefulset ss
  May 10 20:08:36.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3139" for this suite. @ 05/10/24 20:08:36.21
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [25.140 seconds]
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:22.276
  May 10 20:08:22.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 20:08:22.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:22.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:22.323
  STEP: Performing setup for networking test in namespace pod-network-test-1701 @ 05/10/24 20:08:22.327
  STEP: creating a selector @ 05/10/24 20:08:22.327
  STEP: Creating the service pods in kubernetes @ 05/10/24 20:08:22.327
  May 10 20:08:22.327: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 20:08:44.646
  May 10 20:08:46.723: INFO: Setting MaxTries for pod polling to 66 for networking test based on endpoint count 6
  May 10 20:08:46.723: INFO: Going to poll 10.244.5.119 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 20:08:46.728: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.5.119:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1701 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:08:46.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:08:46.728: INFO: ExecWithOptions: Clientset creation
  May 10 20:08:46.728: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1701/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.5.119%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:08:46.842: INFO: Found all 1 expected endpoints: [netserver-0]
  May 10 20:08:46.842: INFO: Going to poll 10.244.8.132 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 20:08:46.849: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.8.132:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1701 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:08:46.849: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:08:46.850: INFO: ExecWithOptions: Clientset creation
  May 10 20:08:46.850: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1701/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.8.132%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:08:46.963: INFO: Found all 1 expected endpoints: [netserver-1]
  May 10 20:08:46.963: INFO: Going to poll 10.244.7.132 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 20:08:46.969: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.7.132:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1701 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:08:46.969: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:08:46.969: INFO: ExecWithOptions: Clientset creation
  May 10 20:08:46.969: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1701/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.7.132%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:08:47.067: INFO: Found all 1 expected endpoints: [netserver-2]
  May 10 20:08:47.067: INFO: Going to poll 10.244.3.113 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 20:08:47.074: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.3.113:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1701 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:08:47.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:08:47.074: INFO: ExecWithOptions: Clientset creation
  May 10 20:08:47.074: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1701/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.3.113%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:08:47.182: INFO: Found all 1 expected endpoints: [netserver-3]
  May 10 20:08:47.182: INFO: Going to poll 10.244.4.123 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 20:08:47.191: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.4.123:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1701 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:08:47.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:08:47.191: INFO: ExecWithOptions: Clientset creation
  May 10 20:08:47.191: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1701/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.4.123%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:08:47.281: INFO: Found all 1 expected endpoints: [netserver-4]
  May 10 20:08:47.281: INFO: Going to poll 10.244.6.61 on port 8083 at least 0 times, with a maximum of 66 tries before failing
  May 10 20:08:47.286: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.6.61:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1701 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:08:47.286: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:08:47.287: INFO: ExecWithOptions: Clientset creation
  May 10 20:08:47.287: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1701/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.6.61%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:08:47.391: INFO: Found all 1 expected endpoints: [netserver-5]
  May 10 20:08:47.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1701" for this suite. @ 05/10/24 20:08:47.402
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.162 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:47.435
  May 10 20:08:47.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:08:47.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:47.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:47.468
  STEP: Creating projection with secret that has name projected-secret-test-93b32f4c-0a4f-41d8-a4db-9e4d2bc722a7 @ 05/10/24 20:08:47.473
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:08:47.481
  STEP: Saw pod success @ 05/10/24 20:08:51.522
  May 10 20:08:51.526: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-projected-secrets-e9c8af0c-bf8a-4595-a103-9d14c18c99bb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:08:51.546
  May 10 20:08:51.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-728" for this suite. @ 05/10/24 20:08:51.582
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [4.233 seconds]
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:51.602
  May 10 20:08:51.602: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:08:51.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:51.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:51.631
  STEP: Creating secret with name secret-test-fe251b1a-4804-446c-8a32-29711637ca66 @ 05/10/24 20:08:51.671
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:08:51.677
  STEP: Saw pod success @ 05/10/24 20:08:55.716
  May 10 20:08:55.722: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-secrets-eed71532-3e12-49cd-80af-6321afe17135 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:08:55.734
  May 10 20:08:55.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7113" for this suite. @ 05/10/24 20:08:55.783
  STEP: Destroying namespace "secret-namespace-2722" for this suite. @ 05/10/24 20:08:55.812
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.275 seconds]
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:55.843
  May 10 20:08:55.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:08:55.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:55.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:55.889
  STEP: Creating projection with secret that has name projected-secret-test-aafb0667-1656-4f27-8af8-27023fed9bfe @ 05/10/24 20:08:55.894
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:08:55.905
  STEP: Saw pod success @ 05/10/24 20:08:59.958
  May 10 20:08:59.968: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-projected-secrets-7a41100e-a26a-4f9e-ab25-4ca28818bcf8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:08:59.993
  May 10 20:09:00.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-48" for this suite. @ 05/10/24 20:09:00.096
  << Timeline
------------------------------
SS
------------------------------
• [11.036 seconds]
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:00.125
  May 10 20:09:00.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename services @ 05/10/24 20:09:00.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:00.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:00.201
  STEP: creating service in namespace services-1167 @ 05/10/24 20:09:00.211
  STEP: creating service affinity-nodeport-transition in namespace services-1167 @ 05/10/24 20:09:00.211
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1167 @ 05/10/24 20:09:00.315
  I0510 20:09:00.327294      24 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-1167, replica count: 3
  I0510 20:09:03.378608      24 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 20:09:03.411: INFO: Creating new exec pod
  May 10 20:09:06.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1167 exec execpod-affinitydpb8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  May 10 20:09:06.629: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  May 10 20:09:06.629: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:09:06.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1167 exec execpod-affinitydpb8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.235.37 80'
  May 10 20:09:06.791: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.235.37 80\nConnection to 10.108.235.37 80 port [tcp/http] succeeded!\n"
  May 10 20:09:06.791: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:09:06.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1167 exec execpod-affinitydpb8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.181.94 32413'
  May 10 20:09:06.976: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.181.94 32413\nConnection to 172.31.181.94 32413 port [tcp/*] succeeded!\n"
  May 10 20:09:06.976: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:09:06.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1167 exec execpod-affinitydpb8p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.182.18 32413'
  May 10 20:09:07.140: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.182.18 32413\nConnection to 172.31.182.18 32413 port [tcp/*] succeeded!\n"
  May 10 20:09:07.140: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 10 20:09:07.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1167 exec execpod-affinitydpb8p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.180.76:32413/ ; done'
  May 10 20:09:07.449: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n"
  May 10 20:09:07.449: INFO: stdout: "\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-c4jb7\naffinity-nodeport-transition-c4jb7\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-c4jb7\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-c4jb7\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-c4jb7\naffinity-nodeport-transition-nkpgj\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs"
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-c4jb7
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-c4jb7
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-c4jb7
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-c4jb7
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-c4jb7
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-nkpgj
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.449: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-1167 exec execpod-affinitydpb8p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.180.76:32413/ ; done'
  May 10 20:09:07.778: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.180.76:32413/\n"
  May 10 20:09:07.778: INFO: stdout: "\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs\naffinity-nodeport-transition-tx6cs"
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Received response from host: affinity-nodeport-transition-tx6cs
  May 10 20:09:07.778: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1167, will wait for the garbage collector to delete the pods @ 05/10/24 20:09:07.822
  May 10 20:09:07.894: INFO: Deleting ReplicationController affinity-nodeport-transition took: 12.493303ms
  May 10 20:09:07.995: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.914399ms
  May 10 20:09:11.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1167" for this suite. @ 05/10/24 20:09:11.148
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [37.224 seconds]
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:08:36.222
  May 10 20:08:36.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:08:36.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:08:36.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:08:36.267
  STEP: Creating a test headless service @ 05/10/24 20:08:36.271
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local;sleep 1; done
   @ 05/10/24 20:08:36.276
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local;sleep 1; done
   @ 05/10/24 20:08:36.276
  STEP: creating a pod to probe DNS @ 05/10/24 20:08:36.276
  STEP: submitting the pod to kubernetes @ 05/10/24 20:08:36.276
  E0510 20:08:36.426707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:37.427159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/10/24 20:08:38.305
  STEP: looking for the results for each expected name from probers @ 05/10/24 20:08:38.309
  May 10 20:08:38.315: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.320: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.333: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.340: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.346: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.351: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.357: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.372: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:38.372: INFO: Lookups using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local]

  May 10 20:08:38.387: INFO: Pod client logs for webserver: 
  May 10 20:08:38.396: INFO: Pod client logs for querier: 
  May 10 20:08:38.403: INFO: Pod client logs for jessie-querier: 
  E0510 20:08:38.427897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:39.428166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:40.429123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:41.429155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:42.429664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:43.315: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.321: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.326: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.332: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.337: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.342: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.351: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.356: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:43.356: INFO: Lookups using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local]

  May 10 20:08:43.365: INFO: Pod client logs for webserver: 
  May 10 20:08:43.374: INFO: Pod client logs for querier: 
  May 10 20:08:43.382: INFO: Pod client logs for jessie-querier: 
  E0510 20:08:43.430643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:44.431222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:45.431765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:46.432477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:47.433056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:48.318: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.325: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.332: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.338: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.352: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.363: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.372: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.380: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:48.380: INFO: Lookups using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local]

  May 10 20:08:48.389: INFO: Pod client logs for webserver: 
  May 10 20:08:48.398: INFO: Pod client logs for querier: 
  May 10 20:08:48.413: INFO: Pod client logs for jessie-querier: 
  E0510 20:08:48.433212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:49.433672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:50.433867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:51.434826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:52.435427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:53.315: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.322: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.334: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.340: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.346: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.352: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.360: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.366: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:53.366: INFO: Lookups using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local]

  May 10 20:08:53.376: INFO: Pod client logs for webserver: 
  May 10 20:08:53.393: INFO: Pod client logs for querier: 
  May 10 20:08:53.403: INFO: Pod client logs for jessie-querier: 
  E0510 20:08:53.435701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:54.436699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:55.437100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:56.438222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:57.438881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:08:58.315: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.322: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.331: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.342: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.354: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.361: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.377: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.385: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:08:58.385: INFO: Lookups using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local]

  May 10 20:08:58.395: INFO: Pod client logs for webserver: 
  May 10 20:08:58.404: INFO: Pod client logs for querier: 
  May 10 20:08:58.413: INFO: Pod client logs for jessie-querier: 
  E0510 20:08:58.439528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:08:59.440106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:00.441121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:01.441764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:02.441827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:09:03.315: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.321: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.330: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.338: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.362: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.377: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.393: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.402: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:03.402: INFO: Lookups using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local jessie_udp@dns-test-service-2.dns-1715.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1715.svc.cluster.local]

  May 10 20:09:03.410: INFO: Pod client logs for webserver: 
  May 10 20:09:03.418: INFO: Pod client logs for querier: 
  May 10 20:09:03.426: INFO: Pod client logs for jessie-querier: 
  E0510 20:09:03.442595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:04.443111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:05.443360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:06.444254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:07.445252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:09:08.315: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:08.322: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:08.330: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:08.336: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local from pod dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d: the server could not find the requested resource (get pods dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d)
  May 10 20:09:08.361: INFO: Lookups using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1715.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1715.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1715.svc.cluster.local]

  May 10 20:09:08.372: INFO: Pod client logs for webserver: 
  May 10 20:09:08.381: INFO: Pod client logs for querier: 
  May 10 20:09:08.390: INFO: Pod client logs for jessie-querier: 
  E0510 20:09:08.446079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:09.446700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:10.446909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:11.447439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:12.448313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:09:13.362: INFO: DNS probes using dns-1715/dns-test-fc86e82e-1bf2-45bd-b399-a777cbf1e65d succeeded

  STEP: deleting the pod @ 05/10/24 20:09:13.362
  STEP: deleting the test headless service @ 05/10/24 20:09:13.391
  May 10 20:09:13.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1715" for this suite. @ 05/10/24 20:09:13.433
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.120 seconds]
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:13.451
  May 10 20:09:13.451: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 20:09:13.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:13.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:13.504
  E0510 20:09:14.448518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:15.448855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:16.449552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:17.449600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:09:17.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4142" for this suite. @ 05/10/24 20:09:17.562
  << Timeline
------------------------------
S
------------------------------
• [6.413 seconds]
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:11.171
  May 10 20:09:11.171: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:09:11.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:11.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:11.207
  STEP: creating all guestbook components @ 05/10/24 20:09:11.211
  May 10 20:09:11.211: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  May 10 20:09:11.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 create -f -'
  May 10 20:09:11.347: INFO: stderr: ""
  May 10 20:09:11.347: INFO: stdout: "service/agnhost-replica created\n"
  May 10 20:09:11.347: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  May 10 20:09:11.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 create -f -'
  May 10 20:09:11.473: INFO: stderr: ""
  May 10 20:09:11.473: INFO: stdout: "service/agnhost-primary created\n"
  May 10 20:09:11.473: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  May 10 20:09:11.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 create -f -'
  May 10 20:09:11.606: INFO: stderr: ""
  May 10 20:09:11.606: INFO: stdout: "service/frontend created\n"
  May 10 20:09:11.606: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  May 10 20:09:11.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 create -f -'
  May 10 20:09:11.700: INFO: stderr: ""
  May 10 20:09:11.701: INFO: stdout: "deployment.apps/frontend created\n"
  May 10 20:09:11.701: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 10 20:09:11.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 create -f -'
  May 10 20:09:11.793: INFO: stderr: ""
  May 10 20:09:11.793: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  May 10 20:09:11.793: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 10 20:09:11.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 create -f -'
  May 10 20:09:11.886: INFO: stderr: ""
  May 10 20:09:11.886: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/10/24 20:09:11.886
  May 10 20:09:11.886: INFO: Waiting for all frontend pods to be Running.
  May 10 20:09:16.937: INFO: Waiting for frontend to serve content.
  May 10 20:09:16.956: INFO: Trying to add a new entry to the guestbook.
  May 10 20:09:16.992: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/10/24 20:09:17.007
  May 10 20:09:17.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 delete --grace-period=0 --force -f -'
  May 10 20:09:17.106: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:09:17.106: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 20:09:17.106
  May 10 20:09:17.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 delete --grace-period=0 --force -f -'
  May 10 20:09:17.217: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:09:17.217: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 20:09:17.217
  May 10 20:09:17.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 delete --grace-period=0 --force -f -'
  May 10 20:09:17.309: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:09:17.309: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 20:09:17.309
  May 10 20:09:17.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 delete --grace-period=0 --force -f -'
  May 10 20:09:17.401: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:09:17.401: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 20:09:17.401
  May 10 20:09:17.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 delete --grace-period=0 --force -f -'
  May 10 20:09:17.479: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:09:17.479: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 20:09:17.479
  May 10 20:09:17.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-2130 delete --grace-period=0 --force -f -'
  May 10 20:09:17.562: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 10 20:09:17.562: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  May 10 20:09:17.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2130" for this suite. @ 05/10/24 20:09:17.573
  << Timeline
------------------------------
SS
------------------------------
• [0.148 seconds]
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:17.586
  May 10 20:09:17.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:09:17.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:17.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:17.637
  STEP: creating a ConfigMap @ 05/10/24 20:09:17.641
  STEP: fetching the ConfigMap @ 05/10/24 20:09:17.659
  STEP: patching the ConfigMap @ 05/10/24 20:09:17.667
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/10/24 20:09:17.68
  STEP: deleting the ConfigMap by collection with a label selector @ 05/10/24 20:09:17.685
  STEP: listing all ConfigMaps in test namespace @ 05/10/24 20:09:17.711
  May 10 20:09:17.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4972" for this suite. @ 05/10/24 20:09:17.723
  << Timeline
------------------------------
SSS
------------------------------
• [4.154 seconds]
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:17.573
  May 10 20:09:17.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename security-context @ 05/10/24 20:09:17.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:17.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:17.61
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/10/24 20:09:17.614
  E0510 20:09:18.450391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:19.451112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:20.451148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:21.451364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:09:21.669
  May 10 20:09:21.675: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod security-context-35fb5080-680d-4c9a-ab0a-2d94284f481c container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:09:21.685
  May 10 20:09:21.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7735" for this suite. @ 05/10/24 20:09:21.717
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.214 seconds]
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:17.735
  May 10 20:09:17.735: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 20:09:17.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:17.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:17.784
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:09:17.795
  STEP: Saw pod success @ 05/10/24 20:09:21.868
  May 10 20:09:21.874: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod downwardapi-volume-3220209f-cb56-4174-9459-d2f61237bebb container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:09:21.884
  May 10 20:09:21.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9804" for this suite. @ 05/10/24 20:09:21.934
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.137 seconds]
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:21.964
  May 10 20:09:21.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename job @ 05/10/24 20:09:21.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:22.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:22.009
  STEP: Creating a job @ 05/10/24 20:09:22.013
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/10/24 20:09:22.024
  STEP: patching /status @ 05/10/24 20:09:26.032
  STEP: updating /status @ 05/10/24 20:09:26.044
  STEP: get /status @ 05/10/24 20:09:26.069
  May 10 20:09:26.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3458" for this suite. @ 05/10/24 20:09:26.088
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.103 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:21.76
  May 10 20:09:21.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:09:21.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:21.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:21.8
  STEP: Counting existing ResourceQuota @ 05/10/24 20:09:21.805
  E0510 20:09:22.452195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:23.452272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:24.452403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:25.453232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:26.453404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/10/24 20:09:26.812
  STEP: Ensuring resource quota status is calculated @ 05/10/24 20:09:26.832
  E0510 20:09:27.454125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:28.454469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:09:28.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9272" for this suite. @ 05/10/24 20:09:28.85
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.250 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:26.112
  May 10 20:09:26.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:09:26.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:26.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:26.168
  STEP: Creating configMap with name projected-configmap-test-volume-map-b5eaf18b-3fe8-4ba4-b9ce-a33518f54b71 @ 05/10/24 20:09:26.181
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:09:26.194
  STEP: Saw pod success @ 05/10/24 20:09:30.241
  May 10 20:09:30.252: INFO: Trying to get logs from node ip-172-31-180-76.eu-west-3.compute.internal pod pod-projected-configmaps-d4257083-59b0-4cca-a2b0-91fc849801b8 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:09:30.282
  May 10 20:09:30.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7655" for this suite. @ 05/10/24 20:09:30.34
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.180 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:30.371
  May 10 20:09:30.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:09:30.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:30.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:30.409
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/10/24 20:09:30.414
  STEP: Saw pod success @ 05/10/24 20:09:34.467
  May 10 20:09:34.477: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-d77a5b10-9a27-42aa-afa7-84965b7060fb container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:09:34.495
  May 10 20:09:34.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1128" for this suite. @ 05/10/24 20:09:34.536
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.194 seconds]
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:34.554
  May 10 20:09:34.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:09:34.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:34.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:34.588
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/10/24 20:09:34.592
  STEP: Saw pod success @ 05/10/24 20:09:38.649
  May 10 20:09:38.655: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-cccbb00c-f557-404b-b8df-8b7e106422a9 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:09:38.688
  May 10 20:09:38.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5055" for this suite. @ 05/10/24 20:09:38.733
  << Timeline
------------------------------
SSSSSS
------------------------------
• [0.213 seconds]
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:38.752
  May 10 20:09:38.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename events @ 05/10/24 20:09:38.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:38.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:38.815
  STEP: Create set of events @ 05/10/24 20:09:38.819
  STEP: get a list of Events with a label in the current namespace @ 05/10/24 20:09:38.875
  STEP: delete a list of events @ 05/10/24 20:09:38.882
  May 10 20:09:38.882: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/10/24 20:09:38.934
  May 10 20:09:38.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7405" for this suite. @ 05/10/24 20:09:38.951
  << Timeline
------------------------------
SS
------------------------------
• [11.196 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:38.967
  May 10 20:09:38.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:09:38.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:39.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:39.016
  STEP: Counting existing ResourceQuota @ 05/10/24 20:09:39.021
  STEP: Creating a ResourceQuota @ 05/10/24 20:09:44.029
  STEP: Ensuring resource quota status is calculated @ 05/10/24 20:09:44.04
  STEP: Creating a ReplicationController @ 05/10/24 20:09:46.048
  STEP: Ensuring resource quota status captures replication controller creation @ 05/10/24 20:09:46.084
  STEP: Deleting a ReplicationController @ 05/10/24 20:09:48.098
  STEP: Ensuring resource quota status released usage @ 05/10/24 20:09:48.109
  May 10 20:09:50.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7103" for this suite. @ 05/10/24 20:09:50.139
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [497.883 seconds]
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:01:38.275
  May 10 20:01:38.275: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename chunking @ 05/10/24 20:01:38.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:01:38.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:01:38.308
  STEP: creating a large number of resources @ 05/10/24 20:01:38.311
  STEP: retrieving the first page @ 05/10/24 20:01:55.987
  May 10 20:01:56.040: INFO: Retrieved 40/40 results with rv 35308 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/10/24 20:01:56.04
  May 10 20:02:16.048: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:02:36.047: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:02:56.048: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:03:16.049: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:03:36.063: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:03:56.059: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:04:16.050: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:04:36.049: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:04:56.050: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:05:16.061: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:05:36.065: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:05:56.048: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:06:16.048: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:06:36.055: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:06:56.056: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:07:16.048: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:07:36.048: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:07:56.049: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:08:16.056: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:08:36.050: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:08:56.060: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:09:16.053: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:09:36.049: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzUzMDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 10 20:09:56.050: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  May 10 20:09:56.050: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/10/24 20:09:56.05
  STEP: retrieving all remaining pages @ 05/10/24 20:09:56.059
  May 10 20:09:56.065: INFO: Retrieved 40/40 results with rv 43385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODUsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  May 10 20:09:56.071: INFO: Retrieved 40/40 results with rv 43385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODUsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  May 10 20:09:56.077: INFO: Retrieved 40/40 results with rv 43385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODUsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  May 10 20:09:56.083: INFO: Retrieved 40/40 results with rv 43385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODUsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  May 10 20:09:56.098: INFO: Retrieved 40/40 results with rv 43385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODUsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  May 10 20:09:56.103: INFO: Retrieved 40/40 results with rv 43385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODUsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  May 10 20:09:56.112: INFO: Retrieved 40/40 results with rv 43385 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDMzODUsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  May 10 20:09:56.121: INFO: Retrieved 40/40 results with rv 43385 and continue 
  May 10 20:09:56.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5541" for this suite. @ 05/10/24 20:09:56.143
  << Timeline
------------------------------
• [4.252 seconds]
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:56.16
  May 10 20:09:56.160: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/10/24 20:09:56.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:56.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:56.185
  STEP: creating a target pod @ 05/10/24 20:09:56.187
  STEP: adding an ephemeral container @ 05/10/24 20:09:58.222
  STEP: checking pod container endpoints @ 05/10/24 20:10:00.253
  May 10 20:10:00.253: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2646 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:10:00.253: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  May 10 20:10:00.253: INFO: ExecWithOptions: Clientset creation
  May 10 20:10:00.253: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-2646/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 10 20:10:00.330: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/10/24 20:10:00.358
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/10/24 20:10:00.365
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/10/24 20:10:00.383
  May 10 20:10:00.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2646" for this suite. @ 05/10/24 20:10:00.4
  << Timeline
------------------------------
• [6.231 seconds]
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:00.413
  May 10 20:10:00.413: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:10:00.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:00.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:00.455
  STEP: Creating configMap with name configmap-test-upd-5f3bd73e-851c-4e90-837f-6bde569f9ca0 @ 05/10/24 20:10:00.467
  STEP: Creating the pod @ 05/10/24 20:10:00.481
  STEP: Updating configmap configmap-test-upd-5f3bd73e-851c-4e90-837f-6bde569f9ca0 @ 05/10/24 20:10:02.544
  STEP: waiting to observe update in volume @ 05/10/24 20:10:02.552
  May 10 20:10:06.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-315" for this suite. @ 05/10/24 20:10:06.612
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [22.262 seconds]
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:50.173
  May 10 20:09:50.173: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 20:09:50.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:50.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:50.233
  May 10 20:10:12.398: INFO: Container started at 2024-05-10 20:09:50 +0000 UTC, pod became ready at 2024-05-10 20:10:10 +0000 UTC
  May 10 20:10:12.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7062" for this suite. @ 05/10/24 20:10:12.415
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [1.817 seconds]
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:12.439
  May 10 20:10:12.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:10:12.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:12.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:12.488
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 20:10:12.492
  May 10 20:10:12.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-4564 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  May 10 20:10:12.572: INFO: stderr: ""
  May 10 20:10:12.572: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/10/24 20:10:12.572
  May 10 20:10:12.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-4564 delete pods e2e-test-httpd-pod'
  May 10 20:10:14.232: INFO: stderr: ""
  May 10 20:10:14.232: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 10 20:10:14.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4564" for this suite. @ 05/10/24 20:10:14.245
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [9.167 seconds]
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:14.261
  May 10 20:10:14.261: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:10:14.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:14.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:14.295
  May 10 20:10:14.316: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  May 10 20:10:19.323: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 20:10:19.323
  May 10 20:10:19.323: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/10/24 20:10:19.339
  May 10 20:10:23.390: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8471638-811d-4bef-959a-c46fd0d668f5",
      ResourceVersion: (string) (len=5) "44074",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-7bc75bbdf6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 20:10:23.396: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d2358ce-a9b6-485b-aff4-47b7d62a3d00",
      ResourceVersion: (string) (len=5) "44064",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d8471638-811d-4bef-959a-c46fd0d668f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 38 34 37 31 36  33 38 2d 38 31 31 64 2d  |\"d8471638-811d-|
              00000120  34 62 65 66 2d 39 35 39  61 2d 63 34 36 66 64 30  |4bef-959a-c46fd0|
              00000130  64 36 36 38 66 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d668f5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:10:23.402: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-mdtdq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-mdtdq",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bcbe3612-8551-4704-bf10-e70bd8277301",
      ResourceVersion: (string) (len=5) "44063",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3c6c491a3fd86416ae77b02a61ecfaefaa39f9bf2eedd6825729826e00876da5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.7.139/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.7.139/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "7d2358ce-a9b6-485b-aff4-47b7d62a3d00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  32 33 35 38 63 65 2d 61  |d\":\"7d2358ce-a|
              00000090  39 62 36 2d 34 38 35 62  2d 61 66 66 34 2d 34 37  |9b6-485b-aff4-47|
              000000a0  62 37 64 36 32 61 33 64  30 30 5c 22 7d 22 3a 7b  |b7d62a3d00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 37 2e 31  33 39 5c 22 7d 22 3a 7b  |.244.7.139\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-24vlf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-24vlf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=44) "ip-172-31-181-233.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "172.31.181.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "172.31.181.233"
        }
      },
      PodIP: (string) (len=12) "10.244.7.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.7.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968620,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://3fed4ca849c282ebc270fa88c3f07fe2a290891b3f713112f05dc7bcdbe54fcc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:10:23.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1746" for this suite. @ 05/10/24 20:10:23.412
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.387 seconds]
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:23.44
  May 10 20:10:23.440: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename dns @ 05/10/24 20:10:23.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:23.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:23.498
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/10/24 20:10:23.503
  May 10 20:10:23.521: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9682  5d4d7aeb-c70c-4479-bc92-58ccabf4a9cb 44096 0 2024-05-10 20:10:23 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-10 20:10:23 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-smhj7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-smhj7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/10/24 20:10:25.549
  May 10 20:10:25.549: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9682 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:10:25.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:10:25.550: INFO: ExecWithOptions: Clientset creation
  May 10 20:10:25.550: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9682/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/10/24 20:10:25.667
  May 10 20:10:25.667: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9682 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 10 20:10:25.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  May 10 20:10:25.668: INFO: ExecWithOptions: Clientset creation
  May 10 20:10:25.668: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-9682/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 10 20:10:25.755: INFO: Deleting pod test-dns-nameservers...
  May 10 20:10:25.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9682" for this suite. @ 05/10/24 20:10:25.813
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [4.180 seconds]
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:25.834
  May 10 20:10:25.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:10:25.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:25.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:25.877
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/10/24 20:10:25.882
  STEP: Saw pod success @ 05/10/24 20:10:29.932
  May 10 20:10:29.944: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-aee7bfbd-60ff-48a9-a3b2-e5a9ee35c796 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:10:29.957
  May 10 20:10:29.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5505" for this suite. @ 05/10/24 20:10:29.997
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [63.265 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:09:28.869
  May 10 20:09:28.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename crd-watch @ 05/10/24 20:09:28.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:09:28.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:09:28.896
  May 10 20:09:28.900: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  E0510 20:09:29.455624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:30.456618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:31.456784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/10/24 20:09:31.459
  May 10 20:09:31.471: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T20:09:31Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T20:09:31Z]] name:name1 resourceVersion:43151 uid:b4dcdc17-6da1-4095-bab1-38b09c99c878] num:map[num1:9223372036854775807 num2:1000000]]}
  E0510 20:09:32.456889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:33.456944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:34.457080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:35.457395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:36.457923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:37.458030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:38.458606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:39.459038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:40.460229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:41.460364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/10/24 20:09:41.471
  May 10 20:09:41.488: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T20:09:41Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T20:09:41Z]] name:name2 resourceVersion:43275 uid:122ad3bb-2a1e-46ee-be08-1585ebd71446] num:map[num1:9223372036854775807 num2:1000000]]}
  E0510 20:09:42.461377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:43.461957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:44.462750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:45.463171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:46.463307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:47.463748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:48.464317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:49.465341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:50.466035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:51.466607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/10/24 20:09:51.488
  May 10 20:09:51.527: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T20:09:31Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T20:09:51Z]] name:name1 resourceVersion:43358 uid:b4dcdc17-6da1-4095-bab1-38b09c99c878] num:map[num1:9223372036854775807 num2:1000000]]}
  E0510 20:09:52.467556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:53.468320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:54.468829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:55.469475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:56.470044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:57.470515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:58.471075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:09:59.471457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:00.471783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:01.472501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/10/24 20:10:01.527
  May 10 20:10:01.545: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T20:09:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T20:10:01Z]] name:name2 resourceVersion:43463 uid:122ad3bb-2a1e-46ee-be08-1585ebd71446] num:map[num1:9223372036854775807 num2:1000000]]}
  E0510 20:10:02.472609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:03.473008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:04.473745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:05.474043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:06.474201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:07.475164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:08.475830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:09.476090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:10.476267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:11.477138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/10/24 20:10:11.546
  May 10 20:10:11.566: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T20:09:31Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T20:09:51Z]] name:name1 resourceVersion:43934 uid:b4dcdc17-6da1-4095-bab1-38b09c99c878] num:map[num1:9223372036854775807 num2:1000000]]}
  E0510 20:10:12.477230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:13.477987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:14.478242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:15.478678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:16.479296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:17.479971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:18.480956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:19.481870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:20.483020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:21.483970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/10/24 20:10:21.567
  May 10 20:10:21.576: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T20:09:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T20:10:01Z]] name:name2 resourceVersion:44077 uid:122ad3bb-2a1e-46ee-be08-1585ebd71446] num:map[num1:9223372036854775807 num2:1000000]]}
  E0510 20:10:22.484366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:23.484994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:24.485052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:25.485448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:26.486398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:27.486528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:28.486941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:29.487850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:30.488379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:31.488589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:32.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4960" for this suite. @ 05/10/24 20:10:32.118
  << Timeline
------------------------------
SSS
------------------------------
• [0.117 seconds]
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:32.137
  May 10 20:10:32.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 20:10:32.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:32.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:32.179
  STEP: Creating a ResourceQuota @ 05/10/24 20:10:32.185
  STEP: Getting a ResourceQuota @ 05/10/24 20:10:32.191
  STEP: Updating a ResourceQuota @ 05/10/24 20:10:32.201
  STEP: Verifying a ResourceQuota was modified @ 05/10/24 20:10:32.21
  STEP: Deleting a ResourceQuota @ 05/10/24 20:10:32.219
  STEP: Verifying the deleted ResourceQuota @ 05/10/24 20:10:32.231
  May 10 20:10:32.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5267" for this suite. @ 05/10/24 20:10:32.243
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.290 seconds]
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:30.02
  May 10 20:10:30.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename disruption @ 05/10/24 20:10:30.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:30.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:30.076
  STEP: Creating a kubernetes client @ 05/10/24 20:10:30.081
  May 10 20:10:30.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename disruption-2 @ 05/10/24 20:10:30.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:30.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:30.155
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:10:30.173
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:10:32.198
  STEP: Waiting for the pdb to be processed @ 05/10/24 20:10:34.218
  STEP: listing a collection of PDBs across all namespaces @ 05/10/24 20:10:36.224
  STEP: listing a collection of PDBs in namespace disruption-1407 @ 05/10/24 20:10:36.229
  STEP: deleting a collection of PDBs @ 05/10/24 20:10:36.236
  STEP: Waiting for the PDB collection to be deleted @ 05/10/24 20:10:36.256
  May 10 20:10:36.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6571" for this suite. @ 05/10/24 20:10:36.27
  May 10 20:10:36.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1407" for this suite. @ 05/10/24 20:10:36.295
  << Timeline
------------------------------
SS
------------------------------
• [6.098 seconds]
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:32.263
  May 10 20:10:32.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 20:10:32.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:32.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:32.293
  STEP: Given a ReplicationController is created @ 05/10/24 20:10:32.3
  STEP: When the matched label of one of its pods change @ 05/10/24 20:10:32.308
  May 10 20:10:32.313: INFO: Pod name pod-release: Found 0 pods out of 1
  E0510 20:10:32.489301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:33.490321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:34.491190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:35.492098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:36.492457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:37.320: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/10/24 20:10:37.335
  E0510 20:10:37.493022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:38.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2163" for this suite. @ 05/10/24 20:10:38.353
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.466 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:36.312
  May 10 20:10:36.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 20:10:36.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:36.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:36.353
  May 10 20:10:36.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 20:10:38.366
  May 10 20:10:38.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-2649 --namespace=crd-publish-openapi-2649 create -f -'
  May 10 20:10:38.489: INFO: stderr: ""
  May 10 20:10:38.489: INFO: stdout: "e2e-test-crd-publish-openapi-4440-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 10 20:10:38.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-2649 --namespace=crd-publish-openapi-2649 delete e2e-test-crd-publish-openapi-4440-crds test-cr'
  May 10 20:10:38.562: INFO: stderr: ""
  May 10 20:10:38.562: INFO: stdout: "e2e-test-crd-publish-openapi-4440-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  May 10 20:10:38.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-2649 --namespace=crd-publish-openapi-2649 apply -f -'
  May 10 20:10:38.641: INFO: stderr: ""
  May 10 20:10:38.641: INFO: stdout: "e2e-test-crd-publish-openapi-4440-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 10 20:10:38.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-2649 --namespace=crd-publish-openapi-2649 delete e2e-test-crd-publish-openapi-4440-crds test-cr'
  May 10 20:10:38.720: INFO: stderr: ""
  May 10 20:10:38.720: INFO: stdout: "e2e-test-crd-publish-openapi-4440-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/10/24 20:10:38.72
  May 10 20:10:38.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=crd-publish-openapi-2649 explain e2e-test-crd-publish-openapi-4440-crds'
  May 10 20:10:38.783: INFO: stderr: ""
  May 10 20:10:38.783: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4440-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May 10 20:10:40.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2649" for this suite. @ 05/10/24 20:10:40.766
  << Timeline
------------------------------
SSSSSS
------------------------------
• [8.156 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:38.369
  May 10 20:10:38.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 20:10:38.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:38.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:38.396
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 20:10:38.408
  E0510 20:10:38.493082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:39.494014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/10/24 20:10:40.436
  E0510 20:10:40.494794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:41.495399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/10/24 20:10:42.466
  STEP: delete the pod with lifecycle hook @ 05/10/24 20:10:42.481
  E0510 20:10:42.495913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:43.496371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:44.496510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:45.497312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:46.497925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:46.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1161" for this suite. @ 05/10/24 20:10:46.516
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.130 seconds]
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:46.529
  May 10 20:10:46.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 20:10:46.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:46.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:46.557
  STEP: Creating a pod to test service account token:  @ 05/10/24 20:10:46.561
  E0510 20:10:47.498567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:48.499231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:49.499403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:50.499976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:10:50.593
  May 10 20:10:50.597: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod test-pod-d4dc3b9b-f1e4-4ca2-a7df-56dfb529c343 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:10:50.619
  May 10 20:10:50.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4927" for this suite. @ 05/10/24 20:10:50.651
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [13.954 seconds]
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:40.781
  May 10 20:10:40.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename services @ 05/10/24 20:10:40.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:40.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:40.835
  STEP: creating service nodeport-test with type=NodePort in namespace services-8449 @ 05/10/24 20:10:40.84
  STEP: creating replication controller nodeport-test in namespace services-8449 @ 05/10/24 20:10:40.934
  I0510 20:10:40.971336      24 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-8449, replica count: 2
  I0510 20:10:44.021780      24 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 10 20:10:44.021: INFO: Creating new exec pod
  May 10 20:10:47.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 10 20:10:47.229: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 10 20:10:47.229: INFO: stdout: ""
  May 10 20:10:48.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 10 20:10:48.258: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 10 20:10:48.258: INFO: stdout: "nodeport-test-vxd9f"
  May 10 20:10:48.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.40.200 80'
  May 10 20:10:48.436: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.40.200 80\nConnection to 10.99.40.200 80 port [tcp/http] succeeded!\n"
  May 10 20:10:48.436: INFO: stdout: ""
  May 10 20:10:49.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.40.200 80'
  May 10 20:10:49.416: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.40.200 80\nConnection to 10.99.40.200 80 port [tcp/http] succeeded!\n"
  May 10 20:10:49.416: INFO: stdout: ""
  May 10 20:10:50.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.40.200 80'
  May 10 20:10:50.417: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.40.200 80\nConnection to 10.99.40.200 80 port [tcp/http] succeeded!\n"
  May 10 20:10:50.417: INFO: stdout: ""
  May 10 20:10:51.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.40.200 80'
  May 10 20:10:51.421: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.40.200 80\nConnection to 10.99.40.200 80 port [tcp/http] succeeded!\n"
  May 10 20:10:51.421: INFO: stdout: "nodeport-test-w9267"
  May 10 20:10:51.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.182.18 32230'
  May 10 20:10:51.555: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.182.18 32230\nConnection to 172.31.182.18 32230 port [tcp/*] succeeded!\n"
  May 10 20:10:51.555: INFO: stdout: "nodeport-test-w9267"
  May 10 20:10:51.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.180.76 32230'
  May 10 20:10:51.710: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.180.76 32230\nConnection to 172.31.180.76 32230 port [tcp/*] succeeded!\n"
  May 10 20:10:51.710: INFO: stdout: ""
  May 10 20:10:52.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.180.76 32230'
  May 10 20:10:52.721: INFO: stderr: "+ nc -v -t -w 2 172.31.180.76 32230\n+ echo hostName\nConnection to 172.31.180.76 32230 port [tcp/*] succeeded!\n"
  May 10 20:10:52.721: INFO: stdout: ""
  May 10 20:10:53.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.180.76 32230'
  May 10 20:10:53.699: INFO: stderr: "+ nc -v -t -w 2 172.31.180.76 32230\n+ echo hostName\nConnection to 172.31.180.76 32230 port [tcp/*] succeeded!\n"
  May 10 20:10:53.699: INFO: stdout: ""
  May 10 20:10:54.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=services-8449 exec execpodtrqgm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.180.76 32230'
  May 10 20:10:54.715: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.180.76 32230\nConnection to 172.31.180.76 32230 port [tcp/*] succeeded!\n"
  May 10 20:10:54.715: INFO: stdout: "nodeport-test-vxd9f"
  May 10 20:10:54.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8449" for this suite. @ 05/10/24 20:10:54.725
  << Timeline
------------------------------
SSSS
------------------------------
• [4.237 seconds]
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:50.665
  May 10 20:10:50.665: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename projected @ 05/10/24 20:10:50.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:50.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:50.7
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 20:10:50.705
  E0510 20:10:51.500390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:52.501536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:53.502231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:54.502389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:10:54.766
  May 10 20:10:54.771: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod downwardapi-volume-2e624978-efc2-4c45-a238-d1288a537346 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 20:10:54.78
  May 10 20:10:54.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7717" for this suite. @ 05/10/24 20:10:54.847
  << Timeline
------------------------------
SSSSSS
------------------------------
• [2.110 seconds]
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:54.904
  May 10 20:10:54.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 20:10:54.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:54.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:54.955
  E0510 20:10:55.503384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:56.504350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:10:56.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8789" for this suite. @ 05/10/24 20:10:57.005
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [4.168 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:57.021
  May 10 20:10:57.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:10:57.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:57.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:57.058
  STEP: Creating configMap with name configmap-test-volume-map-7bc34367-8c6f-4d88-867d-e8ab886bd9e1 @ 05/10/24 20:10:57.064
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:10:57.072
  E0510 20:10:57.505288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:58.505799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:10:59.506380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:00.507174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:11:01.109
  May 10 20:11:01.113: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-configmaps-3ddea395-04cf-49c3-b418-0170ec38ee59 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:11:01.13
  May 10 20:11:01.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2474" for this suite. @ 05/10/24 20:11:01.181
  << Timeline
------------------------------
• [4.197 seconds]
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:01.191
  May 10 20:11:01.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:11:01.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:01.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:01.242
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/10/24 20:11:01.248
  E0510 20:11:01.507661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:02.508510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:03.509434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:04.509960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:11:05.32
  May 10 20:11:05.324: INFO: Trying to get logs from node ip-172-31-182-18.eu-west-3.compute.internal pod pod-c487db68-2d3d-4938-a637-0a010ba542ef container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:11:05.338
  May 10 20:11:05.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7883" for this suite. @ 05/10/24 20:11:05.374
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [0.666 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:05.396
  May 10 20:11:05.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 20:11:05.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:05.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:05.452
  May 10 20:11:05.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  E0510 20:11:05.510381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:06.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3981" for this suite. @ 05/10/24 20:11:06.053
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [7.136 seconds]
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:06.069
  May 10 20:11:06.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:11:06.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:06.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:06.1
  May 10 20:11:06.104: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  May 10 20:11:06.118: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0510 20:11:06.510561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:07.511191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:08.511939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:09.512103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:10.512285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:11.129: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 20:11:11.129
  May 10 20:11:11.129: INFO: Creating deployment "test-rolling-update-deployment"
  May 10 20:11:11.135: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  May 10 20:11:11.142: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0510 20:11:11.512910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:12.513475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:13.153: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  May 10 20:11:13.159: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  May 10 20:11:13.175: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "faeac7dc-e33c-427c-a888-2e24fb61001a",
      ResourceVersion: (string) (len=5) "44924",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 20:11:13.180: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77c29534-d531-426b-b015-6ca5392ca1d3",
      ResourceVersion: (string) (len=5) "44914",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "faeac7dc-e33c-427c-a888-2e24fb61001a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 61 65 61 63 37  64 63 2d 65 33 33 63 2d  |\"faeac7dc-e33c-|
              00000120  34 32 37 63 2d 61 38 38  38 2d 32 65 32 34 66 62  |427c-a888-2e24fb|
              00000130  36 31 30 30 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |61001a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:11:13.180: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  May 10 20:11:13.180: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "550b2e04-3994-4f80-80c5-0bdfba7aa4b1",
      ResourceVersion: (string) (len=5) "44923",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "faeac7dc-e33c-427c-a888-2e24fb61001a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 61 65 61 63 37 64  |"uid\":\"faeac7d|
              000000b0  63 2d 65 33 33 63 2d 34  32 37 63 2d 61 38 38 38  |c-e33c-427c-a888|
              000000c0  2d 32 65 32 34 66 62 36  31 30 30 31 61 5c 22 7d  |-2e24fb61001a\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:11:13.185: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-bt4nk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-bt4nk",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-7959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3a37bf4-c555-4dab-9b9c-14165e588b78",
      ResourceVersion: (string) (len=5) "44913",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f619c90cfcade366979d9207db5d02558b7893b14236440ce27aead1c6b354d0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.3.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.3.121/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "77c29534-d531-426b-b015-6ca5392ca1d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  63 32 39 35 33 34 2d 64  |d\":\"77c29534-d|
              00000090  35 33 31 2d 34 32 36 62  2d 62 30 31 35 2d 36 63  |531-426b-b015-6c|
              000000a0  61 35 33 39 32 63 61 31  64 33 5c 22 7d 22 3a 7b  |a5392ca1d3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 33 2e 31  32 31 5c 22 7d 22 3a 7b  |.244.3.121\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zzw79",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zzw79",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-181-94.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968671,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.181.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.181.94"
        }
      },
      PodIP: (string) (len=12) "10.244.3.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.3.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968671,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968672,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://c21c700a20960fa123ca985cab673eaca878e5205b089908bb4f7c61904daabd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:11:13.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7959" for this suite. @ 05/10/24 20:11:13.195
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.132 seconds]
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:13.218
  May 10 20:11:13.218: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:11:13.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:13.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:13.259
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/10/24 20:11:13.265
  E0510 20:11:13.513968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:14.514532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:15.515268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:16.516340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 20:11:17.298
  May 10 20:11:17.302: INFO: Trying to get logs from node ip-172-31-180-98.eu-west-3.compute.internal pod pod-21025ebe-b8e4-424f-8b0d-4a7e0742157d container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:11:17.311
  May 10 20:11:17.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2635" for this suite. @ 05/10/24 20:11:17.342
  << Timeline
------------------------------
• [4.637 seconds]
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:17.351
  May 10 20:11:17.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 20:11:17.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:17.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:17.391
  STEP: create deployment with httpd image @ 05/10/24 20:11:17.396
  May 10 20:11:17.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-8403 create -f -'
  May 10 20:11:17.490: INFO: stderr: ""
  May 10 20:11:17.490: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/10/24 20:11:17.49
  May 10 20:11:17.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-8403 diff -f -'
  E0510 20:11:17.517118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:18.518083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:19.518491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:20.519393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:21.519840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:21.892: INFO: rc: 1
  May 10 20:11:21.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2967254600 --namespace=kubectl-8403 delete -f -'
  May 10 20:11:21.961: INFO: stderr: ""
  May 10 20:11:21.961: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  May 10 20:11:21.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8403" for this suite. @ 05/10/24 20:11:21.98
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [0.154 seconds]
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:21.993
  May 10 20:11:21.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/10/24 20:11:21.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:22.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:22.048
  STEP: creating @ 05/10/24 20:11:22.053
  STEP: getting @ 05/10/24 20:11:22.079
  STEP: listing in namespace @ 05/10/24 20:11:22.084
  STEP: patching @ 05/10/24 20:11:22.089
  STEP: deleting @ 05/10/24 20:11:22.114
  May 10 20:11:22.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8094" for this suite. @ 05/10/24 20:11:22.139
  << Timeline
------------------------------
SSSS
------------------------------
• [30.302 seconds]
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:54.738
  May 10 20:10:54.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 20:10:54.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:54.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:54.766
  STEP: referencing a single matching pod @ 05/10/24 20:10:59.938
  STEP: referencing matching pods with named port @ 05/10/24 20:11:04.948
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/10/24 20:11:09.963
  STEP: recreating EndpointSlices after they've been deleted @ 05/10/24 20:11:14.973
  May 10 20:11:14.999: INFO: EndpointSlice for Service endpointslice-309/example-named-port not found
  May 10 20:11:25.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-309" for this suite. @ 05/10/24 20:11:25.028
  << Timeline
------------------------------
SS
------------------------------
• [6.682 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:22.149
  May 10 20:11:22.149: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename crd-webhook @ 05/10/24 20:11:22.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:22.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:22.177
  STEP: Setting up server cert @ 05/10/24 20:11:22.181
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/10/24 20:11:22.407
  STEP: Deploying the custom resource conversion webhook pod @ 05/10/24 20:11:22.418
  STEP: Wait for the deployment to be ready @ 05/10/24 20:11:22.441
  May 10 20:11:22.452: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0510 20:11:22.519903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:23.520310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 20:11:24.468
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 20:11:24.49
  E0510 20:11:24.521308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:25.490: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 10 20:11:25.502: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  E0510 20:11:25.521639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:26.522589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:27.523229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/10/24 20:11:28.121
  STEP: Create a v2 custom resource @ 05/10/24 20:11:28.149
  STEP: List CRs in v1 @ 05/10/24 20:11:28.16
  STEP: List CRs in v2 @ 05/10/24 20:11:28.195
  E0510 20:11:28.524229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:11:28.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4094" for this suite. @ 05/10/24 20:11:28.814
  << Timeline
------------------------------
• [4.196 seconds]
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:25.042
  May 10 20:11:25.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename secrets @ 05/10/24 20:11:25.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:25.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:25.077
  STEP: Creating secret with name secret-test-f42d7749-f79b-40b0-91d5-cc30e2a1499f @ 05/10/24 20:11:25.082
  STEP: Creating a pod to test consume secrets @ 05/10/24 20:11:25.09
  STEP: Saw pod success @ 05/10/24 20:11:29.132
  May 10 20:11:29.136: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-secrets-134f4811-d8a8-47b5-bf25-981aba2ef545 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 20:11:29.161
  May 10 20:11:29.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2616" for this suite. @ 05/10/24 20:11:29.228
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [4.157 seconds]
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:29.246
  May 10 20:11:29.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 20:11:29.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:29.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:29.291
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/10/24 20:11:29.296
  STEP: Saw pod success @ 05/10/24 20:11:33.341
  May 10 20:11:33.346: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-fe43db28-22dc-46cf-9b66-618e9c37acd7 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 20:11:33.356
  May 10 20:11:33.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1446" for this suite. @ 05/10/24 20:11:33.392
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [6.475 seconds]
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:33.41
  May 10 20:11:33.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename kubectl-logs @ 05/10/24 20:11:33.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:33.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:33.458
  STEP: creating an pod @ 05/10/24 20:11:33.463
  May 10 20:11:33.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  May 10 20:11:33.531: INFO: stderr: ""
  May 10 20:11:33.531: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/10/24 20:11:33.531
  May 10 20:11:33.531: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  May 10 20:11:35.550: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/10/24 20:11:35.55
  May 10 20:11:35.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 logs logs-generator logs-generator'
  May 10 20:11:35.657: INFO: stderr: ""
  May 10 20:11:35.657: INFO: stdout: "I0510 20:11:34.186852       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/fr2 342\nI0510 20:11:34.386949       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/6qdk 482\nI0510 20:11:34.587572       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/rh58 305\nI0510 20:11:34.787823       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/pf6 510\nI0510 20:11:34.987223       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/bth 537\nI0510 20:11:35.187554       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/672f 533\nI0510 20:11:35.387951       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/lkxt 248\nI0510 20:11:35.587260       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/snkc 503\n"
  STEP: limiting log lines @ 05/10/24 20:11:35.657
  May 10 20:11:35.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 logs logs-generator logs-generator --tail=1'
  May 10 20:11:35.734: INFO: stderr: ""
  May 10 20:11:35.734: INFO: stdout: "I0510 20:11:35.587260       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/snkc 503\n"
  May 10 20:11:35.734: INFO: got output "I0510 20:11:35.587260       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/snkc 503\n"
  STEP: limiting log bytes @ 05/10/24 20:11:35.734
  May 10 20:11:35.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 logs logs-generator logs-generator --limit-bytes=1'
  May 10 20:11:35.805: INFO: stderr: ""
  May 10 20:11:35.805: INFO: stdout: "I"
  May 10 20:11:35.805: INFO: got output "I"
  STEP: exposing timestamps @ 05/10/24 20:11:35.805
  May 10 20:11:35.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 logs logs-generator logs-generator --tail=1 --timestamps'
  May 10 20:11:35.875: INFO: stderr: ""
  May 10 20:11:35.875: INFO: stdout: "2024-05-10T20:11:35.787816351Z I0510 20:11:35.787646       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/x9vz 291\n"
  May 10 20:11:35.875: INFO: got output "2024-05-10T20:11:35.787816351Z I0510 20:11:35.787646       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/x9vz 291\n"
  STEP: restricting to a time range @ 05/10/24 20:11:35.875
  May 10 20:11:38.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 logs logs-generator logs-generator --since=1s'
  May 10 20:11:38.452: INFO: stderr: ""
  May 10 20:11:38.452: INFO: stdout: "I0510 20:11:37.587664       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/6fv 325\nI0510 20:11:37.787001       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/hkg 525\nI0510 20:11:37.987332       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/xs5 547\nI0510 20:11:38.187738       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/rnn 432\nI0510 20:11:38.387056       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/k4tg 515\n"
  May 10 20:11:38.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 logs logs-generator logs-generator --since=24h'
  May 10 20:11:38.554: INFO: stderr: ""
  May 10 20:11:38.554: INFO: stdout: "I0510 20:11:34.186852       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/fr2 342\nI0510 20:11:34.386949       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/6qdk 482\nI0510 20:11:34.587572       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/rh58 305\nI0510 20:11:34.787823       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/pf6 510\nI0510 20:11:34.987223       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/bth 537\nI0510 20:11:35.187554       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/672f 533\nI0510 20:11:35.387951       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/lkxt 248\nI0510 20:11:35.587260       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/snkc 503\nI0510 20:11:35.787646       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/x9vz 291\nI0510 20:11:35.986927       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/v69 460\nI0510 20:11:36.187314       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/zvb 344\nI0510 20:11:36.387670       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/jwfz 444\nI0510 20:11:36.586946       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/h2b 346\nI0510 20:11:36.787299       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/8ckk 381\nI0510 20:11:36.987646       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/mzdg 366\nI0510 20:11:37.186943       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/mtm 553\nI0510 20:11:37.387312       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/bvpw 450\nI0510 20:11:37.587664       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/6fv 325\nI0510 20:11:37.787001       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/hkg 525\nI0510 20:11:37.987332       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/xs5 547\nI0510 20:11:38.187738       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/rnn 432\nI0510 20:11:38.387056       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/k4tg 515\n"
  May 10 20:11:38.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2376171875 --namespace=kubectl-logs-3175 delete pod logs-generator'
  May 10 20:11:39.817: INFO: stderr: ""
  May 10 20:11:39.817: INFO: stdout: "pod \"logs-generator\" deleted\n"
  May 10 20:11:39.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3175" for this suite. @ 05/10/24 20:11:39.837
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.131 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:39.898
  May 10 20:11:39.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename configmap @ 05/10/24 20:11:39.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:39.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:39.93
  STEP: Creating configMap with name configmap-test-volume-map-9b5fe235-c34a-4106-8c35-57ad64b9102a @ 05/10/24 20:11:39.935
  STEP: Creating a pod to test consume configMaps @ 05/10/24 20:11:39.941
  STEP: Saw pod success @ 05/10/24 20:11:43.979
  May 10 20:11:43.984: INFO: Trying to get logs from node ip-172-31-181-94.eu-west-3.compute.internal pod pod-configmaps-6150d9c7-0c26-4423-9f38-6fa0674c0f0c container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 20:11:43.992
  May 10 20:11:44.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5622" for this suite. @ 05/10/24 20:11:44.02
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [21.295 seconds]
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:44.035
  May 10 20:11:44.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename deployment @ 05/10/24 20:11:44.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:44.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:44.085
  May 10 20:11:44.122: INFO: Pod name rollover-pod: Found 0 pods out of 1
  May 10 20:11:49.132: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 20:11:49.132
  May 10 20:11:49.132: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  May 10 20:11:51.137: INFO: Creating deployment "test-rollover-deployment"
  May 10 20:11:51.148: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  May 10 20:11:53.158: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  May 10 20:11:53.167: INFO: Ensure that both replica sets have 1 created replica
  May 10 20:11:53.175: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  May 10 20:11:53.190: INFO: Updating deployment test-rollover-deployment
  May 10 20:11:53.190: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  May 10 20:11:55.209: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  May 10 20:11:55.237: INFO: Make sure deployment "test-rollover-deployment" is complete
  May 10 20:11:55.254: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:11:55.254: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:11:57.264: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:11:57.264: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:11:59.279: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:11:59.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:12:01.267: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:12:01.267: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:12:03.265: INFO: all replica sets need to contain the pod-template-hash label
  May 10 20:12:03.265: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 20, 11, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 10 20:12:05.271: INFO: 
  May 10 20:12:05.271: INFO: Ensure that both old replica sets have no replicas
  May 10 20:12:05.291: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2027",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "744553b2-3b35-4ad5-8880-b4650684991f",
      ResourceVersion: (string) (len=5) "45626",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 10 20:12:05.297: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2027",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec00d23a-07a0-445a-af4d-64e6c70c5389",
      ResourceVersion: (string) (len=5) "45616",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "744553b2-3b35-4ad5-8880-b4650684991f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 34 34 35 35 33  62 32 2d 33 62 33 35 2d  |\"744553b2-3b35-|
              00000120  34 61 64 35 2d 38 38 38  30 2d 62 34 36 35 30 36  |4ad5-8880-b46506|
              00000130  38 34 39 39 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |84991f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:12:05.297: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  May 10 20:12:05.298: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2027",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fd86b6b-d31c-478c-83e5-c22a6917dee3",
      ResourceVersion: (string) (len=5) "45625",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "744553b2-3b35-4ad5-8880-b4650684991f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 34 34 35 35 33 62 32  2d 33 62 33 35 2d 34 61  |744553b2-3b35-4a|
              000000c0  64 35 2d 38 38 38 30 2d  62 34 36 35 30 36 38 34  |d5-8880-b4650684|
              000000d0  39 39 31 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |991f\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:12:05.298: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2027",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bfd5de13-ceb8-4187-b3b3-f3a860eed0ef",
      ResourceVersion: (string) (len=5) "45532",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "744553b2-3b35-4ad5-8880-b4650684991f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 34 34 35 35 33  62 32 2d 33 62 33 35 2d  |\"744553b2-3b35-|
              00000120  34 61 64 35 2d 38 38 38  30 2d 62 34 36 35 30 36  |4ad5-8880-b46506|
              00000130  38 34 39 39 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |84991f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 10 20:12:05.303: INFO: Pod "test-rollover-deployment-68774655d5-4fh2w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-4fh2w",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-2027",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff0a32c1-0e26-4229-b111-db15a570997e",
      ResourceVersion: (string) (len=5) "45546",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a712eb7eb600ac02ab1b78b333c136460c393e40e71dd5a00563f6ec82e11b63",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.4.138/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.4.138/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "ec00d23a-07a0-445a-af4d-64e6c70c5389",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 63  30 30 64 32 33 61 2d 30  |d\":\"ec00d23a-0|
              00000090  37 61 30 2d 34 34 35 61  2d 61 66 34 64 2d 36 34  |7a0-445a-af4d-64|
              000000a0  65 36 63 37 30 63 35 33  38 39 5c 22 7d 22 3a 7b  |e6c70c5389\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 34 2e 31  33 38 5c 22 7d 22 3a 7b  |.244.4.138\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cmq7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cmq7w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-182-18.eu-west-3.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850968713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.182.18",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.182.18"
        }
      },
      PodIP: (string) (len=12) "10.244.4.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.4.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850968713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850968713,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://42f19d90578c0d07aff697c8035a40cc98e687dcc436a416e8cab525a5d8e97e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 10 20:12:05.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2027" for this suite. @ 05/10/24 20:12:05.315
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [154.922 seconds]
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:10:06.652
  May 10 20:10:06.652: INFO: >>> kubeConfig: /tmp/kubeconfig-200088015
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 20:10:06.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:10:06.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:10:06.72
  STEP: creating the pod with failed condition @ 05/10/24 20:10:06.724
  STEP: updating the pod @ 05/10/24 20:12:06.769
  May 10 20:12:07.340: INFO: Successfully updated pod "var-expansion-03ce4f26-50ed-4a16-8ffb-4d74c27625a1"
  STEP: waiting for pod running @ 05/10/24 20:12:07.34
  STEP: deleting the pod gracefully @ 05/10/24 20:12:09.371
  May 10 20:12:09.371: INFO: Deleting pod "var-expansion-03ce4f26-50ed-4a16-8ffb-4d74c27625a1" in namespace "var-expansion-661"
  May 10 20:12:09.385: INFO: Wait up to 5m0s for pod "var-expansion-03ce4f26-50ed-4a16-8ffb-4d74c27625a1" to be fully deleted
  May 10 20:12:41.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-661" for this suite. @ 05/10/24 20:12:41.559
  << Timeline
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
------------------------------
• [92.142 seconds]
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:11:28.833
  May 10 20:11:28.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 20:11:28.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:11:28.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:11:28.909
  STEP: Creating a cronjob @ 05/10/24 20:11:28.916
  STEP: Ensuring more than one job is running at a time @ 05/10/24 20:11:28.928
  E0510 20:11:29.525052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:30.526257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:31.526735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:32.526994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:33.528154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:34.528765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:35.529049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:36.529279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:37.529980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:38.530681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:39.531185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:40.531839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:41.532320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:42.532970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:43.533377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:44.533711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:45.534651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:46.535502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:47.536301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:48.536857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:49.537679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:50.538240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:51.539184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:52.539698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:53.539859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:54.540093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:55.540956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:56.541082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:57.542097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:58.543093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:11:59.543410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:00.544237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:01.544303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:02.544817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:03.545509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:04.545943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:05.546437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:06.546973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:07.547284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:08.547786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:09.548207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:10.548964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:11.549561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:12.550453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:13.550580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:14.550805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:15.551131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:16.551528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:17.551932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:18.552111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:19.553052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:20.553887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:21.554302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:22.555191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:23.555345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:24.556327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:25.556458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:26.557485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:27.558017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:28.558062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:29.558204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:30.558973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:31.559113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:32.559447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:33.560227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:34.560949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:35.561125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:36.561460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:37.562329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:38.562466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:39.563301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:40.564224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:41.565274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:42.565467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:43.566215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:44.566449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:45.567210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:46.567708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:47.568139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:48.569105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:49.569864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:50.570852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:51.571560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:52.571896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:53.572986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:54.573852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:55.574358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:56.574707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:57.575536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:58.576113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:12:59.576653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:13:00.577435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/10/24 20:13:00.934
  STEP: Removing cronjob @ 05/10/24 20:13:00.94
  May 10 20:13:00.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6840" for this suite. @ 05/10/24 20:13:00.964
  << Timeline
------------------------------
• [150.714 seconds]
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:12:05.355
  May 10 20:12:05.355: INFO: >>> kubeConfig: /tmp/kubeconfig-2376171875
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 20:12:05.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:12:05.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:12:05.406
  STEP: Creating pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333 @ 05/10/24 20:12:05.423
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 20:12:07.45
  May 10 20:12:07.455: INFO: Initial restart count of pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 is 0
  May 10 20:12:07.459: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:09.465: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:11.471: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:13.496: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:15.501: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:17.509: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:19.530: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:21.536: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:23.542: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:25.548: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:27.557: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:27.557: INFO: Restart count of pod container-probe-9333/liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 is now 1 (20.102015693s elapsed)
  May 10 20:12:29.563: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:31.569: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:33.574: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:35.579: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:37.585: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:39.592: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:41.597: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:43.604: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:45.610: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:47.616: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:47.616: INFO: Restart count of pod container-probe-9333/liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 is now 2 (40.160336228s elapsed)
  May 10 20:12:49.622: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:51.627: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:53.633: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:55.639: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:57.647: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:12:59.653: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:01.662: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:03.668: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:05.675: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:07.681: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:07.681: INFO: Restart count of pod container-probe-9333/liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 is now 3 (1m0.2254691s elapsed)
  May 10 20:13:09.687: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:11.710: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:13.719: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:15.724: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:17.730: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:19.736: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:21.744: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:23.750: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:25.755: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:27.766: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:27.766: INFO: Restart count of pod container-probe-9333/liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 is now 4 (1m20.310401616s elapsed)
  May 10 20:13:29.772: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:31.780: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:33.791: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:35.797: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:37.808: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:39.813: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:41.819: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:43.824: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:45.830: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:47.836: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:49.846: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:51.852: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:53.859: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:55.865: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:57.871: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:13:59.880: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:01.886: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:03.892: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:05.898: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:07.903: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:09.909: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:11.920: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:13.925: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:15.932: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:17.940: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:19.945: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:21.955: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:23.961: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:25.966: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:27.973: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:29.979: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:31.986: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:33.992: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:36.009: INFO: Get pod liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 in namespace container-probe-9333
  May 10 20:14:36.009: INFO: Restart count of pod container-probe-9333/liveness-e73a3378-cf21-4153-8b41-3d9e59325d52 is now 5 (2m28.553791717s elapsed)
  STEP: deleting the pod @ 05/10/24 20:14:36.009
  May 10 20:14:36.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9333" for this suite. @ 05/10/24 20:14:36.051
  << Timeline
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.301 seconds]
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:14:36.181
  May 10 20:14:36.181: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:14:36.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:14:36.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:14:36.218
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 20:14:36.295
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:14:36.303
  May 10 20:14:36.312: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:36.312: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:36.312: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:36.324: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:14:36.324: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:36.635535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:37.316: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:37.316: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:37.316: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:37.330: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:14:37.330: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:37.636542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:38.311: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:38.311: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:38.311: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:38.317: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:14:38.317: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/10/24 20:14:38.321
  STEP: DeleteCollection of the DaemonSets @ 05/10/24 20:14:38.327
  STEP: Verify that ReplicaSets have been deleted @ 05/10/24 20:14:38.34
  May 10 20:14:38.378: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46617"},"items":null}

  May 10 20:14:38.395: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46617"},"items":[{"metadata":{"name":"daemon-set-6dkzv","generateName":"daemon-set-","namespace":"daemonsets-2793","uid":"9db9774b-8309-464b-8832-f21f5686f847","resourceVersion":"46607","creationTimestamp":"2024-05-10T20:14:36Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"6c9e8dc93fb7adab9e8a85a40f4f77e0b3924992d95286c484abc0afb6129524","cni.projectcalico.org/podIP":"10.244.5.125/32","cni.projectcalico.org/podIPs":"10.244.5.125/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"416ba11a-9287-43c7-b2a8-4ffa6742da08","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"416ba11a-9287-43c7-b2a8-4ffa6742da08\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.5.125\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wvzg5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wvzg5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-180-76.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-180-76.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"}],"hostIP":"172.31.180.76","hostIPs":[{"ip":"172.31.180.76"}],"podIP":"10.244.5.125","podIPs":[{"ip":"10.244.5.125"}],"startTime":"2024-05-10T20:14:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:14:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2434c99bb7777dfa9264528b6b0f1a617e10907dfc7a7dd6e1f5a4ee6ade1340","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-bzjjb","generateName":"daemon-set-","namespace":"daemonsets-2793","uid":"4300a757-b6d8-4eab-b67f-01fb6cc44656","resourceVersion":"46601","creationTimestamp":"2024-05-10T20:14:36Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"568d29378d5fd238e90cee4e5ede5aeb664f2580ca51b2d31eaeaadc8ecdec06","cni.projectcalico.org/podIP":"10.244.8.147/32","cni.projectcalico.org/podIPs":"10.244.8.147/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"416ba11a-9287-43c7-b2a8-4ffa6742da08","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"416ba11a-9287-43c7-b2a8-4ffa6742da08\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.8.147\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2r6xk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2r6xk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-180-98.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-180-98.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"}],"hostIP":"172.31.180.98","hostIPs":[{"ip":"172.31.180.98"}],"podIP":"10.244.8.147","podIPs":[{"ip":"10.244.8.147"}],"startTime":"2024-05-10T20:14:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:14:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://cd9aefc7276d94f6f33ea0f33c0c28abfd33dc98864f1b87dcc491d25c861388","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-chgjw","generateName":"daemon-set-","namespace":"daemonsets-2793","uid":"d0690ec2-9213-4dee-b9d7-c7bd4b6829f6","resourceVersion":"46612","creationTimestamp":"2024-05-10T20:14:36Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a62400a8e7135b94a01fe75711dbaf69381d446286bcea8dc1a080dc873e0c09","cni.projectcalico.org/podIP":"10.244.6.63/32","cni.projectcalico.org/podIPs":"10.244.6.63/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"416ba11a-9287-43c7-b2a8-4ffa6742da08","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"416ba11a-9287-43c7-b2a8-4ffa6742da08\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.6.63\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-7wqnk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-7wqnk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-182-90.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-182-90.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"}],"hostIP":"172.31.182.90","hostIPs":[{"ip":"172.31.182.90"}],"podIP":"10.244.6.63","podIPs":[{"ip":"10.244.6.63"}],"startTime":"2024-05-10T20:14:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:14:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ce872164c96a442057eb1b1c2a8dc2dd51176da4aaf2fb5e5a6e50992760d38d","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-d6gr9","generateName":"daemon-set-","namespace":"daemonsets-2793","uid":"07c1cc00-570f-4087-bc7c-1e4f00151567","resourceVersion":"46615","creationTimestamp":"2024-05-10T20:14:36Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"94a0f0db4ee28eb00fb3b6bd05e8079b7cca2c71d04295255b494feadc11391a","cni.projectcalico.org/podIP":"10.244.7.145/32","cni.projectcalico.org/podIPs":"10.244.7.145/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"416ba11a-9287-43c7-b2a8-4ffa6742da08","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"416ba11a-9287-43c7-b2a8-4ffa6742da08\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.7.145\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-l25d4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-l25d4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-181-233.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-181-233.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"}],"hostIP":"172.31.181.233","hostIPs":[{"ip":"172.31.181.233"}],"podIP":"10.244.7.145","podIPs":[{"ip":"10.244.7.145"}],"startTime":"2024-05-10T20:14:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:14:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4a335b4033c2270410e6f1e7f4da81f589dd929491566e05f0411e870d7dcf15","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rdrlr","generateName":"daemon-set-","namespace":"daemonsets-2793","uid":"18b6d84e-ae0d-4273-8771-1755ef7252a1","resourceVersion":"46610","creationTimestamp":"2024-05-10T20:14:36Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"365f1a0176f9e6e9d5b2cfcc0bd2eb8e9c5f8f2009c2b1e73e50f74f068ef924","cni.projectcalico.org/podIP":"10.244.4.139/32","cni.projectcalico.org/podIPs":"10.244.4.139/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"416ba11a-9287-43c7-b2a8-4ffa6742da08","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"416ba11a-9287-43c7-b2a8-4ffa6742da08\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.4.139\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-h6gnt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-h6gnt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-182-18.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-182-18.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"}],"hostIP":"172.31.182.18","hostIPs":[{"ip":"172.31.182.18"}],"podIP":"10.244.4.139","podIPs":[{"ip":"10.244.4.139"}],"startTime":"2024-05-10T20:14:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:14:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://38d0a38503b31f9fe6343f04c42f3c0e52ccab4ec33f32fda523e83284f30fd1","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tgkr7","generateName":"daemon-set-","namespace":"daemonsets-2793","uid":"206debeb-54b3-463b-b660-9d757334d469","resourceVersion":"46605","creationTimestamp":"2024-05-10T20:14:36Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"4b350c24851ebb88c68a565ba159956d5727e5dde5099d16593838569535f511","cni.projectcalico.org/podIP":"10.244.3.127/32","cni.projectcalico.org/podIPs":"10.244.3.127/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"416ba11a-9287-43c7-b2a8-4ffa6742da08","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"416ba11a-9287-43c7-b2a8-4ffa6742da08\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T20:14:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.3.127\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jbt2h","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jbt2h","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-181-94.eu-west-3.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-181-94.eu-west-3.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T20:14:36Z"}],"hostIP":"172.31.181.94","hostIPs":[{"ip":"172.31.181.94"}],"podIP":"10.244.3.127","podIPs":[{"ip":"10.244.3.127"}],"startTime":"2024-05-10T20:14:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T20:14:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://81dfd84c51dc7b45f07592f783fbcd6854dd57916095976e5f8645bbc7aa2bda","started":true}],"qosClass":"BestEffort"}}]}

  May 10 20:14:38.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2793" for this suite. @ 05/10/24 20:14:38.472
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.622 seconds]
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:14:38.491
  May 10 20:14:38.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:14:38.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:14:38.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:14:38.539
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 20:14:38.604
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:14:38.611
  May 10 20:14:38.620: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:38.620: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:38.620: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:38.625: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:14:38.625: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:38.637413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:39.621: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:39.621: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:39.621: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:39.630: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 10 20:14:39.630: INFO: Node ip-172-31-180-98.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:39.637703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:40.621: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:40.621: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:40.621: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:40.627: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:14:40.627: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/10/24 20:14:40.632
  E0510 20:14:40.638045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:40.659: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:40.659: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:40.659: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:40.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:14:40.666: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:41.638384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:41.661: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:41.661: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:41.661: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:41.671: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:14:41.671: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:42.639201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:42.663: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:42.663: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:42.663: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:42.680: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:14:42.680: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:43.639396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:43.661: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:43.661: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:43.661: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:43.668: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:14:43.668: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:14:44.640549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:44.660: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:44.660: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:44.661: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:14:44.671: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:14:44.671: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:14:44.678
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2364, will wait for the garbage collector to delete the pods @ 05/10/24 20:14:44.678
  May 10 20:14:44.756: INFO: Deleting DaemonSet.extensions daemon-set took: 15.136209ms
  May 10 20:14:44.857: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.133175ms
  E0510 20:14:45.640835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:46.641349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:14:46.967: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:14:46.967: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:14:46.979: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46878"},"items":null}

  May 10 20:14:46.986: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46878"},"items":null}

  May 10 20:14:47.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2364" for this suite. @ 05/10/24 20:14:47.083
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [60.497 seconds]
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:14:47.131
  May 10 20:14:47.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 20:14:47.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:14:47.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:14:47.22
  May 10 20:14:47.266: INFO: Waiting up to 1m0s for all nodes to be ready
  E0510 20:14:47.642422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:48.643293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:49.644256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:50.645050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:51.645300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:52.645605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:53.645771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:54.646541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:55.647534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:56.648244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:57.648581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:58.649156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:14:59.649358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:00.649857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:01.650589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:02.651414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:03.652293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:04.653493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:05.653593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:06.653658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:07.654109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:08.655244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:09.656261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:10.656954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:11.657894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:12.658694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:13.659495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:14.660158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:15.660341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:16.661172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:17.661913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:18.662316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:19.663361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:20.664218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:21.664802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:22.665606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:23.665976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:24.666704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:25.667055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:26.667795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:27.668672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:28.669374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:29.670087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:30.670582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:31.671503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:32.672388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:33.673322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:34.673727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:35.674457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:36.674703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:37.674806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:38.675573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:39.676614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:40.677215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:41.677616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:42.678405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:43.678786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:44.679536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:45.680278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:46.680400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:47.276: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/10/24 20:15:47.282
  May 10 20:15:47.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/10/24 20:15:47.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:15:47.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:15:47.32
  May 10 20:15:47.367: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  May 10 20:15:47.377: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  May 10 20:15:47.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3367" for this suite. @ 05/10/24 20:15:47.59
  May 10 20:15:47.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5822" for this suite. @ 05/10/24 20:15:47.612
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.349 seconds]
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:15:47.636
  May 10 20:15:47.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:15:47.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:15:47.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:15:47.672
  STEP: Creating a test namespace @ 05/10/24 20:15:47.677
  E0510 20:15:47.681312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:15:47.749
  STEP: Creating a service in the namespace @ 05/10/24 20:15:47.754
  STEP: Deleting the namespace @ 05/10/24 20:15:47.818
  STEP: Waiting for the namespace to be removed. @ 05/10/24 20:15:47.848
  E0510 20:15:48.682236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:49.682461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:50.682578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:51.683553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:52.683599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:53.683935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/10/24 20:15:53.858
  STEP: Verifying there is no service in the namespace @ 05/10/24 20:15:53.939
  May 10 20:15:53.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7480" for this suite. @ 05/10/24 20:15:53.955
  STEP: Destroying namespace "nsdeletetest-6390" for this suite. @ 05/10/24 20:15:53.966
  May 10 20:15:53.972: INFO: Namespace nsdeletetest-6390 was already deleted
  STEP: Destroying namespace "nsdeletetest-8419" for this suite. @ 05/10/24 20:15:53.972
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.012 seconds]
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:15:53.992
  May 10 20:15:53.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:15:53.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:15:54.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:15:54.046
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 20:15:54.124
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:15:54.131
  May 10 20:15:54.138: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:54.138: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:54.138: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:54.142: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:15:54.143: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:15:54.685012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:55.142: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:55.142: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:55.142: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:55.149: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 10 20:15:55.149: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:15:55.685738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:56.155: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:56.155: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:56.155: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:15:56.172: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:15:56.172: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Getting /status @ 05/10/24 20:15:56.178
  May 10 20:15:56.191: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/10/24 20:15:56.191
  May 10 20:15:56.204: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/10/24 20:15:56.204
  May 10 20:15:56.208: INFO: Observed &DaemonSet event: ADDED
  May 10 20:15:56.209: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.209: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.209: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.209: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.209: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.209: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.209: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.209: INFO: Found daemon set daemon-set in namespace daemonsets-1005 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 20:15:56.209: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/10/24 20:15:56.209
  STEP: watching for the daemon set status to be patched @ 05/10/24 20:15:56.22
  May 10 20:15:56.222: INFO: Observed &DaemonSet event: ADDED
  May 10 20:15:56.222: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.222: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.222: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.223: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.223: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.223: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.223: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.223: INFO: Observed daemon set daemon-set in namespace daemonsets-1005 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 10 20:15:56.223: INFO: Observed &DaemonSet event: MODIFIED
  May 10 20:15:56.223: INFO: Found daemon set daemon-set in namespace daemonsets-1005 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  May 10 20:15:56.223: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:15:56.23
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1005, will wait for the garbage collector to delete the pods @ 05/10/24 20:15:56.23
  May 10 20:15:56.305: INFO: Deleting DaemonSet.extensions daemon-set took: 20.048553ms
  May 10 20:15:56.406: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.965612ms
  E0510 20:15:56.686325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:57.687370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:15:58.688185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:15:58.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:15:58.912: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:15:58.917: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47467"},"items":null}

  May 10 20:15:58.922: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47468"},"items":null}

  May 10 20:15:58.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1005" for this suite. @ 05/10/24 20:15:58.986
  << Timeline
------------------------------
• [135.335 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:15:59.005
  May 10 20:15:59.005: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename taint-single-pod @ 05/10/24 20:15:59.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:15:59.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:15:59.036
  May 10 20:15:59.041: INFO: Waiting up to 1m0s for all nodes to be ready
  E0510 20:15:59.688635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:00.689102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:01.689903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:02.690030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:03.690822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:04.691104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:05.691653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:06.692766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:07.693384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:08.693612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:09.693641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:10.694473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:11.695512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:12.695796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:13.696397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:14.697521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:15.698391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:16.698806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:17.699009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:18.699391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:19.699684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:20.700785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:21.701377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:22.701810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:23.702802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:24.703719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:25.703777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:26.704422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:27.705426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:28.706500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:29.706653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:30.707617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:31.708243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:32.708745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:33.709144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:34.709484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:35.710372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:36.711435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:37.712420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:38.712732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:39.713578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:40.714166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:41.714430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:42.714700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:43.715800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:44.716589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:45.717327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:46.717771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:47.718533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:48.718880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:49.719112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:50.719198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:51.719519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:52.719838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:53.720863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:54.721307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:55.721795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:56.722393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:57.723051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:16:58.723410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:16:59.041: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:16:59.048: INFO: Starting informer...
  STEP: Starting pod... @ 05/10/24 20:16:59.048
  May 10 20:16:59.269: INFO: Pod is running on ip-172-31-181-94.eu-west-3.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/10/24 20:16:59.269
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 20:16:59.284
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/10/24 20:16:59.292
  May 10 20:16:59.292: INFO: Pod wasn't evicted. Proceeding
  May 10 20:16:59.292: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 20:16:59.307
  STEP: Waiting some time to make sure that toleration time passed. @ 05/10/24 20:16:59.317
  E0510 20:16:59.723592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:00.723750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:01.724161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:02.724892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:03.725516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:04.725998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:05.726900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:06.727545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:07.727924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:08.728841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:09.729785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:10.730631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:11.731554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:12.731759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:13.732135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:14.732238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:15.733321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:16.733825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:17.734475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:18.734973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:19.735748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:20.736691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:21.737134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:22.737233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:23.737488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:24.737882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:25.738707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:26.739572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:27.740104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:28.740343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:29.740615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:30.741547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:31.741966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:32.742748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:33.743222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:34.743906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:35.744368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:36.745482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:37.746292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:38.746944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:39.747067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:40.747116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:41.747502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:42.748172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:43.748254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:44.748431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:45.749197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:46.749661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:47.749989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:48.751133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:49.751111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:50.751662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:51.751904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:52.752367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:53.753163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:54.753568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:55.754523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:56.754851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:57.755290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:58.755632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:17:59.755642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:00.755799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:01.756673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:02.757516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:03.757805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:04.758410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:05.759462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:06.759736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:07.760674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:08.760786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:09.761690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:10.762395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:11.762513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:12.762783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:13.763464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:18:14.317: INFO: Pod wasn't evicted. Test successful
  May 10 20:18:14.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7021" for this suite. @ 05/10/24 20:18:14.326
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [14.178 seconds]
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:18:14.362
  May 10 20:18:14.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:18:14.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:18:14.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:18:14.39
  STEP: Creating a test namespace @ 05/10/24 20:18:14.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:18:14.416
  STEP: Creating a pod in the namespace @ 05/10/24 20:18:14.42
  STEP: Waiting for the pod to have running status @ 05/10/24 20:18:14.431
  E0510 20:18:14.763571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:15.764119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/10/24 20:18:16.445
  STEP: Waiting for the namespace to be removed. @ 05/10/24 20:18:16.455
  E0510 20:18:16.765112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:17.766089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:18.766335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:19.767419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:20.768240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:21.768439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:22.768983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:23.769503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:24.770280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:25.770858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:26.771492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:27.772510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/10/24 20:18:28.47
  STEP: Verifying there are no pods in the namespace @ 05/10/24 20:18:28.498
  May 10 20:18:28.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3350" for this suite. @ 05/10/24 20:18:28.514
  STEP: Destroying namespace "nsdeletetest-5248" for this suite. @ 05/10/24 20:18:28.523
  May 10 20:18:28.528: INFO: Namespace nsdeletetest-5248 was already deleted
  STEP: Destroying namespace "nsdeletetest-4101" for this suite. @ 05/10/24 20:18:28.528
  << Timeline
------------------------------
SS
------------------------------
• [1.243 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:18:28.541
  May 10 20:18:28.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 20:18:28.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:18:28.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:18:28.57
  May 10 20:18:28.574: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 20:18:28.590: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:18:28.599: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-76.eu-west-3.compute.internal before test
  May 10 20:18:28.617: INFO: canal-8kbs5 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:18:28.617: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:28.617: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:28.618: INFO: ebs-csi-node-wkp7v from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:18:28.618: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:28.618: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:28.618: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:28.618: INFO: kube-proxy-nzh9w from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.618: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:28.618: INFO: node-local-dns-cnl65 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.618: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:28.618: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-98.eu-west-3.compute.internal before test
  May 10 20:18:28.632: INFO: canal-ks6jp from kube-system started at 2024-05-10 19:40:29 +0000 UTC (2 container statuses recorded)
  May 10 20:18:28.632: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:28.632: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:28.632: INFO: ebs-csi-node-rcmxz from kube-system started at 2024-05-10 19:40:29 +0000 UTC (3 container statuses recorded)
  May 10 20:18:28.632: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:28.632: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:28.632: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:28.632: INFO: kube-proxy-ffhxl from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.632: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:28.632: INFO: node-local-dns-zhgmq from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.632: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:28.632: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-233.eu-west-3.compute.internal before test
  May 10 20:18:28.644: INFO: canal-967jl from kube-system started at 2024-05-10 19:40:19 +0000 UTC (2 container statuses recorded)
  May 10 20:18:28.644: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:28.644: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:28.644: INFO: ebs-csi-node-c4gsv from kube-system started at 2024-05-10 19:40:19 +0000 UTC (3 container statuses recorded)
  May 10 20:18:28.644: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:28.644: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:28.644: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:28.644: INFO: kube-proxy-h7gm6 from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.644: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:28.644: INFO: node-local-dns-phh8d from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.644: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:28.644: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-94.eu-west-3.compute.internal before test
  May 10 20:18:28.657: INFO: canal-dvfg9 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:18:28.657: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:28.657: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:28.657: INFO: ebs-csi-node-gs8gb from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:18:28.657: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:28.657: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:28.657: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:28.657: INFO: kube-proxy-txzhh from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.657: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:28.657: INFO: node-local-dns-2dvr6 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.657: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:28.657: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-18.eu-west-3.compute.internal before test
  May 10 20:18:28.679: INFO: canal-lddl8 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:18:28.679: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:28.679: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:28.679: INFO: ebs-csi-node-qqqbt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:18:28.679: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:28.679: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:28.679: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:28.679: INFO: kube-proxy-hrzcm from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.679: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:28.679: INFO: node-local-dns-nmgdt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.679: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:28.679: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-90.eu-west-3.compute.internal before test
  May 10 20:18:28.693: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:41:43 +0000 UTC (2 container statuses recorded)
  May 10 20:18:28.693: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 20:18:28.693: INFO: 	Container output-container ready: true, restart count 0
  May 10 20:18:28.693: INFO: canal-lvl5c from kube-system started at 2024-05-10 19:39:54 +0000 UTC (2 container statuses recorded)
  May 10 20:18:28.693: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:28.693: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:28.693: INFO: ebs-csi-node-nvmv2 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (3 container statuses recorded)
  May 10 20:18:28.693: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:28.693: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:28.693: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:28.693: INFO: kube-proxy-tk9n9 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.693: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:28.693: INFO: node-local-dns-kghnk from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:18:28.693: INFO: 	Container node-cache ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/10/24 20:18:28.694
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17ce3a06c018bf43], Reason = [FailedScheduling], Message = [0/9 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 6 node(s) didn't match Pod's node affinity/selector. preemption: 0/9 nodes are available: 9 Preemption is not helpful for scheduling.] @ 05/10/24 20:18:28.753
  E0510 20:18:28.772572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:18:29.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5654" for this suite. @ 05/10/24 20:18:29.769
  E0510 20:18:29.773245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  << Timeline
------------------------------
SSS
------------------------------
• [306.407 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:18:29.786
  May 10 20:18:29.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 20:18:29.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:18:29.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:18:29.823
  May 10 20:18:29.826: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 20:18:29.847: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:18:29.853: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-76.eu-west-3.compute.internal before test
  May 10 20:18:29.869: INFO: canal-8kbs5 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:18:29.869: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:29.869: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:29.869: INFO: ebs-csi-node-wkp7v from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:18:29.869: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:29.869: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:29.869: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:29.869: INFO: kube-proxy-nzh9w from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.869: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:29.869: INFO: node-local-dns-cnl65 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.869: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:29.869: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-98.eu-west-3.compute.internal before test
  May 10 20:18:29.884: INFO: canal-ks6jp from kube-system started at 2024-05-10 19:40:29 +0000 UTC (2 container statuses recorded)
  May 10 20:18:29.884: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:29.884: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:29.884: INFO: ebs-csi-node-rcmxz from kube-system started at 2024-05-10 19:40:29 +0000 UTC (3 container statuses recorded)
  May 10 20:18:29.884: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:29.884: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:29.884: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:29.884: INFO: kube-proxy-ffhxl from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.884: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:29.884: INFO: node-local-dns-zhgmq from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.884: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:29.884: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-233.eu-west-3.compute.internal before test
  May 10 20:18:29.897: INFO: canal-967jl from kube-system started at 2024-05-10 19:40:19 +0000 UTC (2 container statuses recorded)
  May 10 20:18:29.897: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:29.897: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:29.897: INFO: ebs-csi-node-c4gsv from kube-system started at 2024-05-10 19:40:19 +0000 UTC (3 container statuses recorded)
  May 10 20:18:29.897: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:29.897: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:29.897: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:29.897: INFO: kube-proxy-h7gm6 from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.897: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:29.897: INFO: node-local-dns-phh8d from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.897: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:29.897: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-94.eu-west-3.compute.internal before test
  May 10 20:18:29.909: INFO: canal-dvfg9 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:18:29.909: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:29.909: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:29.909: INFO: ebs-csi-node-gs8gb from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:18:29.909: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:29.909: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:29.909: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:29.909: INFO: kube-proxy-txzhh from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.909: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:29.909: INFO: node-local-dns-2dvr6 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.909: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:29.909: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-18.eu-west-3.compute.internal before test
  May 10 20:18:29.921: INFO: canal-lddl8 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:18:29.921: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:29.921: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:29.921: INFO: ebs-csi-node-qqqbt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:18:29.921: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:29.921: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:29.921: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:29.921: INFO: kube-proxy-hrzcm from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.921: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:29.921: INFO: node-local-dns-nmgdt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.922: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:18:29.922: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-90.eu-west-3.compute.internal before test
  May 10 20:18:29.934: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:41:43 +0000 UTC (2 container statuses recorded)
  May 10 20:18:29.934: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 20:18:29.934: INFO: 	Container output-container ready: true, restart count 0
  May 10 20:18:29.934: INFO: canal-lvl5c from kube-system started at 2024-05-10 19:39:54 +0000 UTC (2 container statuses recorded)
  May 10 20:18:29.934: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:18:29.934: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:18:29.934: INFO: ebs-csi-node-nvmv2 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (3 container statuses recorded)
  May 10 20:18:29.934: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:18:29.934: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:18:29.934: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:18:29.934: INFO: kube-proxy-tk9n9 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.934: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:18:29.934: INFO: node-local-dns-kghnk from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:18:29.934: INFO: 	Container node-cache ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 20:18:29.934
  E0510 20:18:30.773962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:31.774798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:32.775464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:33.775710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 20:18:33.979
  STEP: Trying to apply a random label on the found node. @ 05/10/24 20:18:34.008
  STEP: verifying the node has the label kubernetes.io/e2e-ae684940-33c5-410a-bfb2-6cf0ea225816 95 @ 05/10/24 20:18:34.043
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/10/24 20:18:34.059
  E0510 20:18:34.776694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:35.776802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.181.233 on the node which pod4 resides and expect not scheduled @ 05/10/24 20:18:36.107
  E0510 20:18:36.777728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:37.777840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:38.778254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:39.779241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:40.779801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:41.780187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:42.781206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:43.781710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:44.781958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:45.782738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:46.782985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:47.783618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:48.784230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:49.784747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:50.785652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:51.785968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:52.786071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:53.786851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:54.787692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:55.788575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:56.788926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:57.789923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:58.790424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:18:59.791632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:00.792544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:01.792740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:02.793809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:03.794003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:04.795118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:05.795872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:06.796816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:07.797100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:08.797581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:09.798711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:10.799239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:11.799269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:12.799713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:13.800428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:14.801423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:15.802147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:16.802264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:17.802441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:18.803103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:19.803681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:20.804285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:21.805201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:22.805864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:23.806217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:24.806959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:25.807966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:26.808413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:27.808650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:28.808911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:29.810026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:30.810680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:31.811444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:32.812310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:33.812792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:34.813006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:35.813310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:36.814565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:37.814912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:38.815165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:39.816054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:40.817159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:41.817453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:42.818658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:43.819448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:44.820452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:45.821275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:46.822405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:47.822689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:48.823516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:49.824099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:50.824937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:51.825492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:52.826441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:53.827540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:54.827769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:55.827932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:56.828715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:57.829141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:58.829471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:19:59.830088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:00.831200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:01.831680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:02.831720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:03.832246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:04.833047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:05.833917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:06.834146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:07.834719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:08.835425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:09.835780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:10.836075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:11.836339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:12.837556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:13.838381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:14.839493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:15.840359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:16.840982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:17.841366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:18.841606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:19.842286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:20.843193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:21.843456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:22.844371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:23.845436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:24.846450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:25.847188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:26.847942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:27.848256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:28.849374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:29.849475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:30.850086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:31.850423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:32.851456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:33.852142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:34.853259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:35.853812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:36.854348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:37.854841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:38.855760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:39.856136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:40.857032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:41.857446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:42.858391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:43.858990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:44.859500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:45.859654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:46.860229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:47.860952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:48.861524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:49.862466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:50.862797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:51.862904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:52.863858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:53.864273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:54.864256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:55.865124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:56.865434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:57.865468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:58.865774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:20:59.866307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:00.867110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:01.867699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:02.868067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:03.868456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:04.869301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:05.869569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:06.870217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:07.871263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:08.871478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:09.871988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:10.872196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:11.872650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:12.873667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:13.873906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:14.874288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:15.875118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:16.875184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:17.875612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:18.875922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:19.876343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:20.876793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:21.877115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:22.877699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:23.878178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:24.878487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:25.879507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:26.879906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:27.880163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:28.880957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:29.881374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:30.881474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:31.882002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:32.882859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:33.883427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:34.884372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:35.885167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:36.885654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:37.886699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:38.886966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:39.886986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:40.887797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:41.888546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:42.889140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:43.890240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:44.890990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:45.891571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:46.891923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:47.892217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:48.893330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:49.894285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:50.894748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:51.895838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:52.896139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:53.897068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:54.898162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:55.898602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:56.899031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:57.899999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:58.900863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:21:59.901179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:00.902174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:01.902987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:02.903132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:03.904338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:04.905182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:05.906151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:06.907139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:07.908237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:08.909243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:09.909442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:10.910354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:11.911068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:12.911368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:13.912119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:14.912503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:15.913425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:16.914259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:17.915362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:18.916515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:19.917183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:20.917593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:21.918151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:22.918454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:23.919433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:24.920145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:25.920430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:26.921195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:27.921264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:28.922306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:29.923113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:30.923448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:31.924105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:32.924209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:33.924662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:34.925296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:35.925331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:36.925582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:37.926203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:38.926706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:39.927157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:40.927215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:41.927807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:42.928885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:43.929545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:44.930408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:45.931370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:46.932418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:47.932998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:48.933709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:49.934367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:50.934799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:51.935358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:52.935650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:53.936125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:54.936803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:55.937170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:56.937551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:57.938152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:58.938312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:22:59.939043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:00.939777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:01.940693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:02.941546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:03.942540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:04.943279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:05.944083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:06.945044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:07.945665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:08.945936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:09.946275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:10.946921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:11.947843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:12.948204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:13.948668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:14.949574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:15.950262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:16.950842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:17.951916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:18.952263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:19.952329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:20.952667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:21.952718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:22.953232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:23.953678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:24.954241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:25.954502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:26.954866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:27.955678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:28.956181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:29.957098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:30.957786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:31.958380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:32.959084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:33.960122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:34.961076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:35.961769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-ae684940-33c5-410a-bfb2-6cf0ea225816 off the node ip-172-31-181-233.eu-west-3.compute.internal @ 05/10/24 20:23:36.118
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-ae684940-33c5-410a-bfb2-6cf0ea225816 @ 05/10/24 20:23:36.161
  May 10 20:23:36.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8650" for this suite. @ 05/10/24 20:23:36.182
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.160 seconds]
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:23:36.205
  May 10 20:23:36.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:23:36.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:23:36.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:23:36.267
  STEP: creating a Namespace @ 05/10/24 20:23:36.272
  STEP: patching the Namespace @ 05/10/24 20:23:36.298
  STEP: get the Namespace and ensuring it has the label @ 05/10/24 20:23:36.308
  May 10 20:23:36.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4395" for this suite. @ 05/10/24 20:23:36.341
  STEP: Destroying namespace "nspatchtest-c8047de0-413d-4a0b-964e-d4f0d9afcb67-8367" for this suite. @ 05/10/24 20:23:36.354
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [79.706 seconds]
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:23:36.373
  May 10 20:23:36.373: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 20:23:36.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:23:36.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:23:36.418
  May 10 20:23:36.453: INFO: Waiting up to 1m0s for all nodes to be ready
  E0510 20:23:36.961926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:37.962963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:38.963203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:39.963611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:40.963993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:41.964273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:42.964323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:43.965314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:44.966382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:45.967511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:46.968433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:47.969093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:48.969135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:49.969920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:50.970702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:51.971085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:52.972078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:53.972233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:54.973488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:55.974294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:56.974982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:57.976134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:58.977050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:23:59.977947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:00.978121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:01.978548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:02.979409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:03.980299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:04.980851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:05.981206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:06.982259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:07.982406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:08.983349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:09.984167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:10.985141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:11.985600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:12.986305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:13.986370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:14.987397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:15.987503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:16.988406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:17.989194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:18.990227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:19.991194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:20.992183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:21.992724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:22.993430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:23.994138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:24.994586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:25.995421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:26.996114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:27.996231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:28.996546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:29.997539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:30.998806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:31.999587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:33.000256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:34.000301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:35.001274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:36.001555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:24:36.474: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/10/24 20:24:36.488
  May 10 20:24:36.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/10/24 20:24:36.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:24:36.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:24:36.539
  STEP: Finding an available node @ 05/10/24 20:24:36.542
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 20:24:36.542
  E0510 20:24:37.003371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:38.003370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 20:24:38.574
  May 10 20:24:38.598: INFO: found a healthy node: ip-172-31-181-94.eu-west-3.compute.internal
  E0510 20:24:39.004249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:40.005472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:41.005828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:42.006499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:43.006780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:44.007693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:24:44.716: INFO: pods created so far: [1 1 1]
  May 10 20:24:44.716: INFO: length of pods created so far: 3
  E0510 20:24:45.008499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:46.009091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:47.009597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:48.010249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:24:48.732: INFO: pods created so far: [2 2 1]
  E0510 20:24:49.011069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:50.011991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:51.012717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:52.013372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:53.013718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:54.013775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:55.013864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:24:56.014661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:24:56.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8914" for this suite. @ 05/10/24 20:24:56.037
  May 10 20:24:56.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1430" for this suite. @ 05/10/24 20:24:56.067
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.553 seconds]
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:24:56.086
  May 10 20:24:56.086: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:24:56.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:24:56.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:24:56.123
  May 10 20:24:56.208: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/10/24 20:24:56.219
  May 10 20:24:56.234: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:24:56.234: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/10/24 20:24:56.234
  May 10 20:24:56.282: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:24:56.282: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:24:57.014981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:24:57.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:24:57.280: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:24:58.015473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:24:58.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:24:58.280: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/10/24 20:24:58.286
  May 10 20:24:58.313: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:24:58.313: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0510 20:24:59.015908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:24:59.313: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:24:59.313: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/10/24 20:24:59.313
  May 10 20:24:59.331: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:24:59.331: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:25:00.016107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:25:00.330: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:25:00.330: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:25:01.016860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:25:01.329: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:25:01.329: INFO: Node ip-172-31-181-233.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:25:02.017151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:25:02.329: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:25:02.329: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:25:02.348
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1559, will wait for the garbage collector to delete the pods @ 05/10/24 20:25:02.348
  May 10 20:25:02.417: INFO: Deleting DaemonSet.extensions daemon-set took: 12.802805ms
  May 10 20:25:02.518: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.900839ms
  E0510 20:25:03.017947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:04.018605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:25:04.525: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:25:04.525: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:25:04.531: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"50644"},"items":null}

  May 10 20:25:04.539: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"50644"},"items":null}

  May 10 20:25:04.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1559" for this suite. @ 05/10/24 20:25:04.627
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [88.762 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:25:04.675
  May 10 20:25:04.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/10/24 20:25:04.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:25:04.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:25:04.716
  May 10 20:25:04.719: INFO: Waiting up to 1m0s for all nodes to be ready
  E0510 20:25:05.019500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:06.020141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:07.020263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:08.021333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:09.021839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:10.022108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:11.023018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:12.023801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:13.024693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:14.024740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:15.025517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:16.025876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:17.026794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:18.027804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:19.028682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:20.028788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:21.029240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:22.029795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:23.030686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:24.031452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:25.032197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:26.033139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:27.033893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:28.034097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:29.035131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:30.036192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:31.037245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:32.037826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:33.038109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:34.038833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:35.039327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:36.039583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:37.039689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:38.039878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:39.040791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:40.041001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:41.041674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:42.041927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:43.043017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:44.043058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:45.043153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:46.043310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:47.044291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:48.045265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:49.046265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:50.047339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:51.047868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:52.048709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:53.049556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:54.050311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:55.051240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:56.052376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:57.053242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:58.053913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:25:59.054732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:00.054805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:01.055429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:02.055481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:03.056256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:04.057202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:04.719: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:26:04.725: INFO: Starting informer...
  STEP: Starting pods... @ 05/10/24 20:26:04.725
  May 10 20:26:04.954: INFO: Pod1 is running on ip-172-31-182-18.eu-west-3.compute.internal. Tainting Node
  E0510 20:26:05.057921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:06.058184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:07.058793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:07.188: INFO: Pod2 is running on ip-172-31-182-18.eu-west-3.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/10/24 20:26:07.188
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 20:26:07.205
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/10/24 20:26:07.212
  E0510 20:26:08.059206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:09.059231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:10.060133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:11.060187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:12.061002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:13.061259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:13.350: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0510 20:26:14.061780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:15.062326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:16.063233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:17.063264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:18.063946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:19.064945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:20.065049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:21.066079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:22.066164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:23.067142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:24.068156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:25.069227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:26.070316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:27.071251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:28.072159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:29.072224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:30.072296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:31.073305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:32.074233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:33.075329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:33.379: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 20:26:33.401
  May 10 20:26:33.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6257" for this suite. @ 05/10/24 20:26:33.427
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [15.915 seconds]
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:26:33.449
  May 10 20:26:33.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:26:33.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:26:33.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:26:33.482
  May 10 20:26:33.537: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:26:33.546
  May 10 20:26:33.559: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:33.559: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:33.559: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:33.572: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:26:33.572: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:26:34.075575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:34.555: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:34.555: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:34.555: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:34.562: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:26:34.562: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:26:35.076449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:35.555: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:35.555: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:35.555: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:35.563: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:26:35.563: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/10/24 20:26:35.615
  STEP: Check that daemon pods images are updated. @ 05/10/24 20:26:35.641
  May 10 20:26:35.650: INFO: Wrong image for pod: daemon-set-g74f7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:35.650: INFO: Wrong image for pod: daemon-set-hzxhr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:35.650: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:35.650: INFO: Wrong image for pod: daemon-set-pgg5j. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:35.650: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:35.650: INFO: Wrong image for pod: daemon-set-qzg82. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:35.662: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:35.662: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:35.662: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:36.076755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:36.649: INFO: Wrong image for pod: daemon-set-g74f7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:36.649: INFO: Wrong image for pod: daemon-set-hzxhr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:36.649: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:36.649: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:36.649: INFO: Wrong image for pod: daemon-set-qzg82. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:36.656: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:36.656: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:36.656: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:37.077634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:37.663: INFO: Wrong image for pod: daemon-set-g74f7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:37.663: INFO: Wrong image for pod: daemon-set-hzxhr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:37.663: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:37.663: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:37.663: INFO: Wrong image for pod: daemon-set-qzg82. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:37.663: INFO: Pod daemon-set-zx989 is not available
  May 10 20:26:37.671: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:37.671: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:37.671: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:38.078348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:38.651: INFO: Wrong image for pod: daemon-set-g74f7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:38.651: INFO: Wrong image for pod: daemon-set-hzxhr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:38.651: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:38.651: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:38.651: INFO: Wrong image for pod: daemon-set-qzg82. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:38.651: INFO: Pod daemon-set-zx989 is not available
  May 10 20:26:38.677: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:38.677: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:38.677: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:39.079267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:39.649: INFO: Pod daemon-set-7v5jp is not available
  May 10 20:26:39.649: INFO: Wrong image for pod: daemon-set-g74f7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:39.649: INFO: Wrong image for pod: daemon-set-hzxhr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:39.649: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:39.649: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:39.657: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:39.657: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:39.657: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:40.079999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:40.649: INFO: Wrong image for pod: daemon-set-hzxhr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:40.649: INFO: Pod daemon-set-lmdbg is not available
  May 10 20:26:40.649: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:40.649: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:40.655: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:40.655: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:40.655: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:41.080477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:41.649: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:41.649: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:41.659: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:41.659: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:41.659: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:42.080921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:42.654: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:42.654: INFO: Wrong image for pod: daemon-set-q8mvc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:42.654: INFO: Pod daemon-set-s2mkj is not available
  May 10 20:26:42.663: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:42.663: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:42.663: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:43.081084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:43.655: INFO: Wrong image for pod: daemon-set-ntw2k. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 10 20:26:43.655: INFO: Pod daemon-set-w5vns is not available
  May 10 20:26:43.670: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:43.670: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:43.671: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:44.081526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:44.686: INFO: Pod daemon-set-jprp8 is not available
  May 10 20:26:44.720: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:44.721: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:44.721: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/10/24 20:26:44.721
  May 10 20:26:44.728: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:44.728: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:44.728: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:44.735: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:26:44.735: INFO: Node ip-172-31-181-94.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:26:45.082448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:45.731: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:45.731: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:45.731: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:45.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 5
  May 10 20:26:45.738: INFO: Node ip-172-31-181-94.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:26:46.083338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:46.743: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:46.743: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:46.743: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:46.765: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:26:46.765: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:26:46.791
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6237, will wait for the garbage collector to delete the pods @ 05/10/24 20:26:46.791
  May 10 20:26:46.856: INFO: Deleting DaemonSet.extensions daemon-set took: 10.123442ms
  May 10 20:26:46.957: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.599458ms
  E0510 20:26:47.083702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:48.084344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:49.085129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:49.263: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:26:49.263: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:26:49.269: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"51487"},"items":null}

  May 10 20:26:49.274: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"51487"},"items":null}

  May 10 20:26:49.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6237" for this suite. @ 05/10/24 20:26:49.35
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.189 seconds]
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:26:49.378
  May 10 20:26:49.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:26:49.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:26:49.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:26:49.445
  STEP: Creating namespace "e2e-ns-8n667" @ 05/10/24 20:26:49.455
  May 10 20:26:49.489: INFO: Namespace "e2e-ns-8n667-7801" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-8n667-7801" @ 05/10/24 20:26:49.489
  May 10 20:26:49.501: INFO: Namespace "e2e-ns-8n667-7801" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-8n667-7801" @ 05/10/24 20:26:49.501
  May 10 20:26:49.515: INFO: Namespace "e2e-ns-8n667-7801" has []v1.FinalizerName{"kubernetes"}
  May 10 20:26:49.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7942" for this suite. @ 05/10/24 20:26:49.535
  STEP: Destroying namespace "e2e-ns-8n667-7801" for this suite. @ 05/10/24 20:26:49.553
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.429 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:26:49.572
  May 10 20:26:49.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 20:26:49.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:26:49.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:26:49.599
  May 10 20:26:49.602: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 20:26:49.624: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:26:49.637: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-76.eu-west-3.compute.internal before test
  May 10 20:26:49.663: INFO: canal-8kbs5 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:26:49.663: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:26:49.663: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:26:49.663: INFO: ebs-csi-node-wkp7v from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:26:49.663: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:26:49.663: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:26:49.663: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:26:49.663: INFO: kube-proxy-nzh9w from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.663: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:26:49.663: INFO: node-local-dns-cnl65 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.663: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:26:49.663: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-98.eu-west-3.compute.internal before test
  May 10 20:26:49.686: INFO: canal-ks6jp from kube-system started at 2024-05-10 19:40:29 +0000 UTC (2 container statuses recorded)
  May 10 20:26:49.686: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:26:49.686: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:26:49.686: INFO: ebs-csi-node-rcmxz from kube-system started at 2024-05-10 19:40:29 +0000 UTC (3 container statuses recorded)
  May 10 20:26:49.686: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:26:49.686: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:26:49.686: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:26:49.686: INFO: kube-proxy-ffhxl from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.686: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:26:49.686: INFO: node-local-dns-zhgmq from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.686: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:26:49.686: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-233.eu-west-3.compute.internal before test
  May 10 20:26:49.712: INFO: canal-967jl from kube-system started at 2024-05-10 19:40:19 +0000 UTC (2 container statuses recorded)
  May 10 20:26:49.712: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:26:49.712: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:26:49.712: INFO: ebs-csi-node-c4gsv from kube-system started at 2024-05-10 19:40:19 +0000 UTC (3 container statuses recorded)
  May 10 20:26:49.712: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:26:49.712: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:26:49.712: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:26:49.712: INFO: kube-proxy-h7gm6 from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.712: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:26:49.712: INFO: node-local-dns-phh8d from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.712: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:26:49.712: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-94.eu-west-3.compute.internal before test
  May 10 20:26:49.726: INFO: canal-dvfg9 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:26:49.726: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:26:49.726: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:26:49.726: INFO: ebs-csi-node-gs8gb from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:26:49.726: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:26:49.726: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:26:49.726: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:26:49.726: INFO: kube-proxy-txzhh from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.726: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:26:49.726: INFO: node-local-dns-2dvr6 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.726: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:26:49.726: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-18.eu-west-3.compute.internal before test
  May 10 20:26:49.738: INFO: canal-lddl8 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:26:49.738: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:26:49.738: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:26:49.738: INFO: ebs-csi-node-qqqbt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:26:49.738: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:26:49.738: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:26:49.738: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:26:49.738: INFO: kube-proxy-hrzcm from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.738: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:26:49.738: INFO: node-local-dns-nmgdt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.738: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:26:49.738: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-90.eu-west-3.compute.internal before test
  May 10 20:26:49.751: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:41:43 +0000 UTC (2 container statuses recorded)
  May 10 20:26:49.751: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 20:26:49.751: INFO: 	Container output-container ready: true, restart count 0
  May 10 20:26:49.751: INFO: canal-lvl5c from kube-system started at 2024-05-10 19:39:54 +0000 UTC (2 container statuses recorded)
  May 10 20:26:49.751: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:26:49.751: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:26:49.751: INFO: ebs-csi-node-nvmv2 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (3 container statuses recorded)
  May 10 20:26:49.751: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:26:49.751: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:26:49.751: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:26:49.751: INFO: kube-proxy-tk9n9 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.751: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:26:49.751: INFO: node-local-dns-kghnk from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:26:49.751: INFO: 	Container node-cache ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 20:26:49.751
  E0510 20:26:50.085768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:51.086345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 20:26:51.862
  STEP: Trying to apply a random label on the found node. @ 05/10/24 20:26:51.888
  STEP: verifying the node has the label kubernetes.io/e2e-69cadc45-bf9a-4cf3-93b6-6f9322e61956 42 @ 05/10/24 20:26:51.908
  STEP: Trying to relaunch the pod, now with labels. @ 05/10/24 20:26:51.933
  E0510 20:26:52.087159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:53.087955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-69cadc45-bf9a-4cf3-93b6-6f9322e61956 off the node ip-172-31-182-18.eu-west-3.compute.internal @ 05/10/24 20:26:53.96
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-69cadc45-bf9a-4cf3-93b6-6f9322e61956 @ 05/10/24 20:26:53.978
  May 10 20:26:53.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5569" for this suite. @ 05/10/24 20:26:53.992
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.580 seconds]
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:26:54.019
  May 10 20:26:54.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:26:54.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:26:54.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:26:54.043
  E0510 20:26:54.088442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:54.099: INFO: Create a RollingUpdate DaemonSet
  May 10 20:26:54.107: INFO: Check that daemon pods launch on every node of the cluster
  May 10 20:26:54.117: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:54.118: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:54.118: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:54.125: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:26:54.125: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:26:55.089147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:55.128: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:55.128: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:55.128: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:55.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:26:55.144: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:26:56.089816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:56.120: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:56.120: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:56.120: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:56.142: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:26:56.142: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  May 10 20:26:56.142: INFO: Update the DaemonSet to trigger a rollout
  May 10 20:26:56.162: INFO: Updating DaemonSet daemon-set
  E0510 20:26:57.090748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:26:58.091378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:58.189: INFO: Roll back the DaemonSet before rollout is complete
  May 10 20:26:58.209: INFO: Updating DaemonSet daemon-set
  May 10 20:26:58.209: INFO: Make sure DaemonSet rollback is complete
  May 10 20:26:58.215: INFO: Wrong image for pod: daemon-set-zs8f2. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  May 10 20:26:58.215: INFO: Pod daemon-set-zs8f2 is not available
  May 10 20:26:58.223: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:58.223: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:58.223: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:26:59.092414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:26:59.221: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:59.221: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:26:59.221: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:27:00.093207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:00.230: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:00.230: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:00.230: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:27:01.093641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:01.223: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:01.223: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:01.223: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0510 20:27:02.093915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:02.220: INFO: Pod daemon-set-nllhw is not available
  May 10 20:27:02.227: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:02.227: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:02.227: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:27:02.246
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5256, will wait for the garbage collector to delete the pods @ 05/10/24 20:27:02.246
  May 10 20:27:02.319: INFO: Deleting DaemonSet.extensions daemon-set took: 16.358657ms
  May 10 20:27:02.420: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.526813ms
  E0510 20:27:03.094097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:04.094257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:04.527: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:27:04.527: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:27:04.532: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"51872"},"items":null}

  May 10 20:27:04.540: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"51872"},"items":null}

  May 10 20:27:04.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5256" for this suite. @ 05/10/24 20:27:04.585
  << Timeline
------------------------------
SSS
------------------------------
• [5.133 seconds]
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:27:04.6
  May 10 20:27:04.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename controllerrevisions @ 05/10/24 20:27:04.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:27:04.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:27:04.629
  STEP: Creating DaemonSet "e2e-c9kxw-daemon-set" @ 05/10/24 20:27:04.692
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:27:04.702
  May 10 20:27:04.713: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:04.713: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:04.713: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:04.719: INFO: Number of nodes with available pods controlled by daemonset e2e-c9kxw-daemon-set: 0
  May 10 20:27:04.719: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:27:05.094735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:05.712: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:05.712: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:05.712: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:05.722: INFO: Number of nodes with available pods controlled by daemonset e2e-c9kxw-daemon-set: 0
  May 10 20:27:05.722: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:27:06.095072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:06.711: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:06.711: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:06.711: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:27:06.716: INFO: Number of nodes with available pods controlled by daemonset e2e-c9kxw-daemon-set: 6
  May 10 20:27:06.716: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset e2e-c9kxw-daemon-set
  STEP: Confirm DaemonSet "e2e-c9kxw-daemon-set" successfully created with "daemonset-name=e2e-c9kxw-daemon-set" label @ 05/10/24 20:27:06.721
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-c9kxw-daemon-set" @ 05/10/24 20:27:06.738
  May 10 20:27:06.745: INFO: Located ControllerRevision: "e2e-c9kxw-daemon-set-7fcf6bbdf5"
  STEP: Patching ControllerRevision "e2e-c9kxw-daemon-set-7fcf6bbdf5" @ 05/10/24 20:27:06.75
  May 10 20:27:06.760: INFO: e2e-c9kxw-daemon-set-7fcf6bbdf5 has been patched
  STEP: Create a new ControllerRevision @ 05/10/24 20:27:06.76
  May 10 20:27:06.774: INFO: Created ControllerRevision: e2e-c9kxw-daemon-set-687b4bff75
  STEP: Confirm that there are two ControllerRevisions @ 05/10/24 20:27:06.774
  May 10 20:27:06.774: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:27:06.784: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-c9kxw-daemon-set-7fcf6bbdf5" @ 05/10/24 20:27:06.784
  STEP: Confirm that there is only one ControllerRevision @ 05/10/24 20:27:06.797
  May 10 20:27:06.797: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:27:06.801: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-c9kxw-daemon-set-687b4bff75" @ 05/10/24 20:27:06.806
  May 10 20:27:06.818: INFO: e2e-c9kxw-daemon-set-687b4bff75 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/10/24 20:27:06.819
  W0510 20:27:06.828933      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/10/24 20:27:06.828
  May 10 20:27:06.829: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0510 20:27:07.095895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:07.829: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:27:07.836: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-c9kxw-daemon-set-687b4bff75=updated" @ 05/10/24 20:27:07.836
  STEP: Confirm that there is only one ControllerRevision @ 05/10/24 20:27:07.856
  May 10 20:27:07.856: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 10 20:27:07.871: INFO: Found 1 ControllerRevisions
  May 10 20:27:07.881: INFO: ControllerRevision "e2e-c9kxw-daemon-set-59c95584f4" has revision 3
  STEP: Deleting DaemonSet "e2e-c9kxw-daemon-set" @ 05/10/24 20:27:07.895
  STEP: deleting DaemonSet.extensions e2e-c9kxw-daemon-set in namespace controllerrevisions-3400, will wait for the garbage collector to delete the pods @ 05/10/24 20:27:07.895
  May 10 20:27:08.003: INFO: Deleting DaemonSet.extensions e2e-c9kxw-daemon-set took: 42.860697ms
  E0510 20:27:08.096875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:08.104: INFO: Terminating DaemonSet.extensions e2e-c9kxw-daemon-set pods took: 100.728035ms
  E0510 20:27:09.097464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:09.611: INFO: Number of nodes with available pods controlled by daemonset e2e-c9kxw-daemon-set: 0
  May 10 20:27:09.611: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-c9kxw-daemon-set
  May 10 20:27:09.618: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"52025"},"items":null}

  May 10 20:27:09.626: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"52025"},"items":null}

  May 10 20:27:09.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3400" for this suite. @ 05/10/24 20:27:09.706
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [21.823 seconds]
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:27:09.744
  May 10 20:27:09.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/10/24 20:27:09.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:27:09.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:27:09.79
  STEP: Creating 50 configmaps @ 05/10/24 20:27:09.808
  E0510 20:27:10.097991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 20:27:10.324
  May 10 20:27:10.362: INFO: Pod name wrapped-volume-race-3e078f66-d9cd-44bb-903e-c2af28a003b2: Found 0 pods out of 5
  E0510 20:27:11.098673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:12.099449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:13.100422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:14.101201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:15.102186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:15.375: INFO: Pod name wrapped-volume-race-3e078f66-d9cd-44bb-903e-c2af28a003b2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 20:27:15.375
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 20:27:15.412
  May 10 20:27:15.439: INFO: Pod name wrapped-volume-race-789a5320-da30-427d-b9a7-a311eac682e3: Found 0 pods out of 5
  E0510 20:27:16.102467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:17.103475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:18.104440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:19.105272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:20.106325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:20.449: INFO: Pod name wrapped-volume-race-789a5320-da30-427d-b9a7-a311eac682e3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 20:27:20.449
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 20:27:20.479
  May 10 20:27:20.505: INFO: Pod name wrapped-volume-race-c465fd27-5744-41c4-a038-462f4542777b: Found 0 pods out of 5
  E0510 20:27:21.106546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:22.107406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:23.107507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:24.108533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:25.109511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:25.546: INFO: Pod name wrapped-volume-race-c465fd27-5744-41c4-a038-462f4542777b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 20:27:25.546
  STEP: deleting ReplicationController wrapped-volume-race-c465fd27-5744-41c4-a038-462f4542777b in namespace emptydir-wrapper-9380, will wait for the garbage collector to delete the pods @ 05/10/24 20:27:25.609
  May 10 20:27:25.701: INFO: Deleting ReplicationController wrapped-volume-race-c465fd27-5744-41c4-a038-462f4542777b took: 25.504582ms
  May 10 20:27:25.801: INFO: Terminating ReplicationController wrapped-volume-race-c465fd27-5744-41c4-a038-462f4542777b pods took: 100.609102ms
  E0510 20:27:26.109578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:27.110394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-789a5320-da30-427d-b9a7-a311eac682e3 in namespace emptydir-wrapper-9380, will wait for the garbage collector to delete the pods @ 05/10/24 20:27:27.502
  May 10 20:27:27.572: INFO: Deleting ReplicationController wrapped-volume-race-789a5320-da30-427d-b9a7-a311eac682e3 took: 10.91613ms
  May 10 20:27:27.673: INFO: Terminating ReplicationController wrapped-volume-race-789a5320-da30-427d-b9a7-a311eac682e3 pods took: 100.505912ms
  E0510 20:27:28.110846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3e078f66-d9cd-44bb-903e-c2af28a003b2 in namespace emptydir-wrapper-9380, will wait for the garbage collector to delete the pods @ 05/10/24 20:27:29.073
  E0510 20:27:29.111536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:29.155: INFO: Deleting ReplicationController wrapped-volume-race-3e078f66-d9cd-44bb-903e-c2af28a003b2 took: 19.182056ms
  May 10 20:27:29.256: INFO: Terminating ReplicationController wrapped-volume-race-3e078f66-d9cd-44bb-903e-c2af28a003b2 pods took: 100.681078ms
  E0510 20:27:30.111603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 05/10/24 20:27:30.957
  E0510 20:27:31.112404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:27:31.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9380" for this suite. @ 05/10/24 20:27:31.557
  << Timeline
------------------------------
SS
------------------------------
• [4.020 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:27:31.568
  May 10 20:27:31.568: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 20:27:31.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:27:31.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:27:31.599
  May 10 20:27:31.601: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 10 20:27:31.614: INFO: Waiting for terminating namespaces to be deleted...
  May 10 20:27:31.620: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-76.eu-west-3.compute.internal before test
  May 10 20:27:31.634: INFO: canal-8kbs5 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:27:31.634: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:27:31.634: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:27:31.634: INFO: ebs-csi-node-wkp7v from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:27:31.634: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:27:31.634: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:27:31.634: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:27:31.634: INFO: kube-proxy-nzh9w from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.634: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:27:31.634: INFO: node-local-dns-cnl65 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.634: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:27:31.634: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-180-98.eu-west-3.compute.internal before test
  May 10 20:27:31.646: INFO: canal-ks6jp from kube-system started at 2024-05-10 19:40:29 +0000 UTC (2 container statuses recorded)
  May 10 20:27:31.646: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:27:31.646: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:27:31.646: INFO: ebs-csi-node-rcmxz from kube-system started at 2024-05-10 19:40:29 +0000 UTC (3 container statuses recorded)
  May 10 20:27:31.646: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:27:31.646: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:27:31.646: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:27:31.646: INFO: kube-proxy-ffhxl from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.646: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:27:31.646: INFO: node-local-dns-zhgmq from kube-system started at 2024-05-10 19:40:29 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.646: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:27:31.646: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-233.eu-west-3.compute.internal before test
  May 10 20:27:31.660: INFO: canal-967jl from kube-system started at 2024-05-10 19:40:19 +0000 UTC (2 container statuses recorded)
  May 10 20:27:31.660: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:27:31.660: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:27:31.660: INFO: ebs-csi-node-c4gsv from kube-system started at 2024-05-10 19:40:19 +0000 UTC (3 container statuses recorded)
  May 10 20:27:31.660: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:27:31.660: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:27:31.660: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:27:31.660: INFO: kube-proxy-h7gm6 from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.660: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:27:31.660: INFO: node-local-dns-phh8d from kube-system started at 2024-05-10 19:40:19 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.660: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:27:31.660: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-181-94.eu-west-3.compute.internal before test
  May 10 20:27:31.672: INFO: canal-dvfg9 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:27:31.672: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:27:31.672: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:27:31.672: INFO: ebs-csi-node-gs8gb from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:27:31.672: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:27:31.672: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:27:31.672: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:27:31.672: INFO: kube-proxy-txzhh from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.672: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:27:31.672: INFO: node-local-dns-2dvr6 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.672: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:27:31.672: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-18.eu-west-3.compute.internal before test
  May 10 20:27:31.714: INFO: canal-lddl8 from kube-system started at 2024-05-10 19:37:48 +0000 UTC (2 container statuses recorded)
  May 10 20:27:31.714: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:27:31.714: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:27:31.714: INFO: ebs-csi-node-qqqbt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (3 container statuses recorded)
  May 10 20:27:31.714: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:27:31.714: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:27:31.714: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:27:31.714: INFO: kube-proxy-hrzcm from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.714: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:27:31.714: INFO: node-local-dns-nmgdt from kube-system started at 2024-05-10 19:37:48 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.714: INFO: 	Container node-cache ready: true, restart count 0
  May 10 20:27:31.714: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-182-90.eu-west-3.compute.internal before test
  May 10 20:27:31.731: INFO: e2e-conformance-test from conformance started at 2024-05-10 19:41:43 +0000 UTC (2 container statuses recorded)
  May 10 20:27:31.731: INFO: 	Container conformance-container ready: true, restart count 0
  May 10 20:27:31.731: INFO: 	Container output-container ready: true, restart count 0
  May 10 20:27:31.731: INFO: canal-lvl5c from kube-system started at 2024-05-10 19:39:54 +0000 UTC (2 container statuses recorded)
  May 10 20:27:31.731: INFO: 	Container calico-node ready: true, restart count 0
  May 10 20:27:31.731: INFO: 	Container kube-flannel ready: true, restart count 0
  May 10 20:27:31.731: INFO: ebs-csi-node-nvmv2 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (3 container statuses recorded)
  May 10 20:27:31.731: INFO: 	Container ebs-plugin ready: true, restart count 0
  May 10 20:27:31.731: INFO: 	Container liveness-probe ready: true, restart count 0
  May 10 20:27:31.731: INFO: 	Container node-driver-registrar ready: true, restart count 0
  May 10 20:27:31.731: INFO: kube-proxy-tk9n9 from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.731: INFO: 	Container kube-proxy ready: true, restart count 0
  May 10 20:27:31.731: INFO: node-local-dns-kghnk from kube-system started at 2024-05-10 19:39:54 +0000 UTC (1 container statuses recorded)
  May 10 20:27:31.731: INFO: 	Container node-cache ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-180-76.eu-west-3.compute.internal @ 05/10/24 20:27:31.77
  STEP: verifying the node has the label node ip-172-31-180-98.eu-west-3.compute.internal @ 05/10/24 20:27:31.804
  STEP: verifying the node has the label node ip-172-31-181-233.eu-west-3.compute.internal @ 05/10/24 20:27:31.85
  STEP: verifying the node has the label node ip-172-31-181-94.eu-west-3.compute.internal @ 05/10/24 20:27:31.874
  STEP: verifying the node has the label node ip-172-31-182-18.eu-west-3.compute.internal @ 05/10/24 20:27:31.911
  STEP: verifying the node has the label node ip-172-31-182-90.eu-west-3.compute.internal @ 05/10/24 20:27:31.957
  May 10 20:27:31.992: INFO: Pod e2e-conformance-test requesting resource cpu=0m on Node ip-172-31-182-90.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod canal-8kbs5 requesting resource cpu=250m on Node ip-172-31-180-76.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod canal-967jl requesting resource cpu=250m on Node ip-172-31-181-233.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod canal-dvfg9 requesting resource cpu=250m on Node ip-172-31-181-94.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod canal-ks6jp requesting resource cpu=250m on Node ip-172-31-180-98.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod canal-lddl8 requesting resource cpu=250m on Node ip-172-31-182-18.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod canal-lvl5c requesting resource cpu=250m on Node ip-172-31-182-90.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod ebs-csi-node-c4gsv requesting resource cpu=30m on Node ip-172-31-181-233.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod ebs-csi-node-gs8gb requesting resource cpu=30m on Node ip-172-31-181-94.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod ebs-csi-node-nvmv2 requesting resource cpu=30m on Node ip-172-31-182-90.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod ebs-csi-node-qqqbt requesting resource cpu=30m on Node ip-172-31-182-18.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod ebs-csi-node-rcmxz requesting resource cpu=30m on Node ip-172-31-180-98.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod ebs-csi-node-wkp7v requesting resource cpu=30m on Node ip-172-31-180-76.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod kube-proxy-ffhxl requesting resource cpu=0m on Node ip-172-31-180-98.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod kube-proxy-h7gm6 requesting resource cpu=0m on Node ip-172-31-181-233.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod kube-proxy-hrzcm requesting resource cpu=0m on Node ip-172-31-182-18.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod kube-proxy-nzh9w requesting resource cpu=0m on Node ip-172-31-180-76.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod kube-proxy-tk9n9 requesting resource cpu=0m on Node ip-172-31-182-90.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod kube-proxy-txzhh requesting resource cpu=0m on Node ip-172-31-181-94.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod node-local-dns-2dvr6 requesting resource cpu=25m on Node ip-172-31-181-94.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod node-local-dns-cnl65 requesting resource cpu=25m on Node ip-172-31-180-76.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod node-local-dns-kghnk requesting resource cpu=25m on Node ip-172-31-182-90.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod node-local-dns-nmgdt requesting resource cpu=25m on Node ip-172-31-182-18.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod node-local-dns-phh8d requesting resource cpu=25m on Node ip-172-31-181-233.eu-west-3.compute.internal
  May 10 20:27:31.992: INFO: Pod node-local-dns-zhgmq requesting resource cpu=25m on Node ip-172-31-180-98.eu-west-3.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/10/24 20:27:31.992
  May 10 20:27:31.992: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-180-76.eu-west-3.compute.internal
  May 10 20:27:32.017: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-180-98.eu-west-3.compute.internal
  May 10 20:27:32.033: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-181-233.eu-west-3.compute.internal
  May 10 20:27:32.048: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-181-94.eu-west-3.compute.internal
  May 10 20:27:32.074: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-182-18.eu-west-3.compute.internal
  May 10 20:27:32.112: INFO: Creating a pod which consumes cpu=2306m on Node ip-172-31-182-90.eu-west-3.compute.internal
  E0510 20:27:32.112672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:33.113261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:34.114240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/10/24 20:27:34.175
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1b582940-cb14-4a5c-a1df-c8985c6bca1a.17ce3a85417eba67], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1459/filler-pod-1b582940-cb14-4a5c-a1df-c8985c6bca1a to ip-172-31-181-233.eu-west-3.compute.internal] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1b582940-cb14-4a5c-a1df-c8985c6bca1a.17ce3a85629b3163], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1b582940-cb14-4a5c-a1df-c8985c6bca1a.17ce3a856440b247], Reason = [Created], Message = [Created container filler-pod-1b582940-cb14-4a5c-a1df-c8985c6bca1a] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1b582940-cb14-4a5c-a1df-c8985c6bca1a.17ce3a8569927090], Reason = [Started], Message = [Started container filler-pod-1b582940-cb14-4a5c-a1df-c8985c6bca1a] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-611c942f-a576-4c88-bc90-a3693b4d8941.17ce3a854184dbaf], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1459/filler-pod-611c942f-a576-4c88-bc90-a3693b4d8941 to ip-172-31-180-98.eu-west-3.compute.internal] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-611c942f-a576-4c88-bc90-a3693b4d8941.17ce3a8562013e58], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-611c942f-a576-4c88-bc90-a3693b4d8941.17ce3a856307f784], Reason = [Created], Message = [Created container filler-pod-611c942f-a576-4c88-bc90-a3693b4d8941] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-611c942f-a576-4c88-bc90-a3693b4d8941.17ce3a8567b5a08a], Reason = [Started], Message = [Started container filler-pod-611c942f-a576-4c88-bc90-a3693b4d8941] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7be071f9-fef2-40c8-bdc5-0c17af17fcfa.17ce3a8543bf8dac], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1459/filler-pod-7be071f9-fef2-40c8-bdc5-0c17af17fcfa to ip-172-31-181-94.eu-west-3.compute.internal] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7be071f9-fef2-40c8-bdc5-0c17af17fcfa.17ce3a85621c2209], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7be071f9-fef2-40c8-bdc5-0c17af17fcfa.17ce3a85635155fd], Reason = [Created], Message = [Created container filler-pod-7be071f9-fef2-40c8-bdc5-0c17af17fcfa] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7be071f9-fef2-40c8-bdc5-0c17af17fcfa.17ce3a856881648e], Reason = [Started], Message = [Started container filler-pod-7be071f9-fef2-40c8-bdc5-0c17af17fcfa] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-80103d32-ae74-49e2-bfac-04146b97bba4.17ce3a853e86b0de], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1459/filler-pod-80103d32-ae74-49e2-bfac-04146b97bba4 to ip-172-31-180-76.eu-west-3.compute.internal] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-80103d32-ae74-49e2-bfac-04146b97bba4.17ce3a8560f91fed], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-80103d32-ae74-49e2-bfac-04146b97bba4.17ce3a8564f09a46], Reason = [Created], Message = [Created container filler-pod-80103d32-ae74-49e2-bfac-04146b97bba4] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-80103d32-ae74-49e2-bfac-04146b97bba4.17ce3a856af4be08], Reason = [Started], Message = [Started container filler-pod-80103d32-ae74-49e2-bfac-04146b97bba4] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a268e801-ce65-40f0-a945-7a03fac21292.17ce3a85453911ad], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1459/filler-pod-a268e801-ce65-40f0-a945-7a03fac21292 to ip-172-31-182-18.eu-west-3.compute.internal] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a268e801-ce65-40f0-a945-7a03fac21292.17ce3a85676953a9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a268e801-ce65-40f0-a945-7a03fac21292.17ce3a8569ad1d4e], Reason = [Created], Message = [Created container filler-pod-a268e801-ce65-40f0-a945-7a03fac21292] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a268e801-ce65-40f0-a945-7a03fac21292.17ce3a856f20335b], Reason = [Started], Message = [Started container filler-pod-a268e801-ce65-40f0-a945-7a03fac21292] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a3d42a52-7f24-40ac-a860-6341711cc1b1.17ce3a85463d95f8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1459/filler-pod-a3d42a52-7f24-40ac-a860-6341711cc1b1 to ip-172-31-182-90.eu-west-3.compute.internal] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a3d42a52-7f24-40ac-a860-6341711cc1b1.17ce3a8575a2ccc5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a3d42a52-7f24-40ac-a860-6341711cc1b1.17ce3a85773ae548], Reason = [Created], Message = [Created container filler-pod-a3d42a52-7f24-40ac-a860-6341711cc1b1] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a3d42a52-7f24-40ac-a860-6341711cc1b1.17ce3a857cb63fe3], Reason = [Started], Message = [Started container filler-pod-a3d42a52-7f24-40ac-a860-6341711cc1b1] @ 05/10/24 20:27:34.182
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17ce3a85bf715aaa], Reason = [FailedScheduling], Message = [0/9 nodes are available: 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 6 Insufficient cpu. preemption: 0/9 nodes are available: 3 Preemption is not helpful for scheduling, 6 No preemption victims found for incoming pod.] @ 05/10/24 20:27:34.199
  E0510 20:27:35.114561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-181-94.eu-west-3.compute.internal @ 05/10/24 20:27:35.202
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:27:35.233
  STEP: removing the label node off the node ip-172-31-182-18.eu-west-3.compute.internal @ 05/10/24 20:27:35.244
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:27:35.266
  STEP: removing the label node off the node ip-172-31-182-90.eu-west-3.compute.internal @ 05/10/24 20:27:35.276
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:27:35.356
  STEP: removing the label node off the node ip-172-31-180-76.eu-west-3.compute.internal @ 05/10/24 20:27:35.364
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:27:35.459
  STEP: removing the label node off the node ip-172-31-180-98.eu-west-3.compute.internal @ 05/10/24 20:27:35.473
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:27:35.523
  STEP: removing the label node off the node ip-172-31-181-233.eu-west-3.compute.internal @ 05/10/24 20:27:35.537
  STEP: verifying the node doesn't have the label node @ 05/10/24 20:27:35.562
  May 10 20:27:35.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1459" for this suite. @ 05/10/24 20:27:35.579
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [68.915 seconds]
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:27:35.6
  May 10 20:27:35.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 20:27:35.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:27:35.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:27:35.636
  May 10 20:27:35.662: INFO: Waiting up to 1m0s for all nodes to be ready
  E0510 20:27:36.115379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:37.115772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:38.116338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:39.117375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:40.118217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:41.119337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:42.120279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:43.121233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:44.122257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:45.123275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:46.123323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:47.124048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:48.124817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:49.125280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:50.126263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:51.126437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:52.126824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:53.126976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:54.127833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:55.127937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:56.128574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:57.128846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:58.129336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:27:59.130260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:00.130521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:01.130705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:02.131647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:03.131771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:04.131773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:05.132749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:06.133701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:07.134720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:08.135675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:09.136386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:10.136676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:11.136995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:12.137162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:13.138126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:14.138916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:15.139714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:16.140396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:17.141224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:18.142180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:19.143147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:20.143629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:21.143857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:22.144005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:23.144065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:24.144260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:25.145258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:26.145307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:27.146029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:28.146098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:29.146317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:30.146950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:31.147313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:32.148385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:33.148468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:34.149234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:35.149877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:28:35.670: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/10/24 20:28:35.675
  May 10 20:28:35.719: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 10 20:28:35.735: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 10 20:28:35.832: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 10 20:28:35.844: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 10 20:28:35.889: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 10 20:28:35.907: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  May 10 20:28:36.004: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  May 10 20:28:36.022: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  May 10 20:28:36.061: INFO: Created pod: pod4-0-sched-preemption-medium-priority
  May 10 20:28:36.073: INFO: Created pod: pod4-1-sched-preemption-medium-priority
  May 10 20:28:36.113: INFO: Created pod: pod5-0-sched-preemption-medium-priority
  May 10 20:28:36.128: INFO: Created pod: pod5-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/10/24 20:28:36.128
  E0510 20:28:36.150604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:37.151617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:38.151658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/10/24 20:28:38.202
  E0510 20:28:39.151837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:40.152343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:41.153222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:42.153910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:43.154016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:44.154809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:28:44.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4553" for this suite. @ 05/10/24 20:28:44.504
  << Timeline
------------------------------
SSSSSS
------------------------------
• [0.079 seconds]
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:28:44.517
  May 10 20:28:44.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:28:44.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:28:44.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:28:44.547
  STEP: Updating Namespace "namespaces-8092" @ 05/10/24 20:28:44.55
  May 10 20:28:44.571: INFO: Namespace "namespaces-8092" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8fdaa902-2b84-4fa5-a877-e6d9123acc6e", "kubernetes.io/metadata.name":"namespaces-8092", "namespaces-8092":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  May 10 20:28:44.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8092" for this suite. @ 05/10/24 20:28:44.578
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.355 seconds]
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:28:44.609
  May 10 20:28:44.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 20:28:44.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:28:44.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:28:44.641
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/10/24 20:28:44.709
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 20:28:44.717
  May 10 20:28:44.737: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:44.737: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:44.737: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:44.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:28:44.742: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:28:45.155909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:28:45.725: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:45.725: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:45.725: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:45.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 10 20:28:45.732: INFO: Node ip-172-31-180-76.eu-west-3.compute.internal is running 0 daemon pod, expected 1
  E0510 20:28:46.156272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:28:46.729: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:46.729: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:46.729: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:46.734: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:28:46.734: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/10/24 20:28:46.739
  May 10 20:28:46.773: INFO: DaemonSet pods can't tolerate node ip-172-31-180-207.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:46.773: INFO: DaemonSet pods can't tolerate node ip-172-31-181-153.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:46.773: INFO: DaemonSet pods can't tolerate node ip-172-31-182-185.eu-west-3.compute.internal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 10 20:28:46.780: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 6
  May 10 20:28:46.780: INFO: Number of running nodes: 6, number of available pods: 6 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/10/24 20:28:46.78
  E0510 20:28:47.156523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 20:28:47.8
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6889, will wait for the garbage collector to delete the pods @ 05/10/24 20:28:47.8
  May 10 20:28:47.872: INFO: Deleting DaemonSet.extensions daemon-set took: 12.007003ms
  May 10 20:28:48.072: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.173732ms
  E0510 20:28:48.156945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:49.157972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:50.158626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:28:50.880: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 10 20:28:50.880: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 10 20:28:50.885: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53595"},"items":null}

  May 10 20:28:50.890: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53595"},"items":null}

  May 10 20:28:50.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6889" for this suite. @ 05/10/24 20:28:50.948
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.110 seconds]
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:28:50.976
  May 10 20:28:50.976: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 20:28:50.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:28:51.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:28:51.012
  STEP: Read namespace status @ 05/10/24 20:28:51.022
  May 10 20:28:51.030: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/10/24 20:28:51.03
  May 10 20:28:51.042: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/10/24 20:28:51.042
  May 10 20:28:51.065: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  May 10 20:28:51.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4095" for this suite. @ 05/10/24 20:28:51.073
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [68.838 seconds]
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224

  Timeline >>
  STEP: Creating a kubernetes client @ 05/10/24 20:28:51.098
  May 10 20:28:51.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2967254600
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 20:28:51.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 20:28:51.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 20:28:51.149
  E0510 20:28:51.159073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:28:51.185: INFO: Waiting up to 1m0s for all nodes to be ready
  E0510 20:28:52.159676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:53.159823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:54.159963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:55.160799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:56.161227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:57.162245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:58.162448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:28:59.163458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:00.164190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:01.165298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:02.166402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:03.167395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:04.168323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:05.169314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:06.170105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:07.171085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:08.171225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:09.172270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:10.173115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:11.173402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:12.174188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:13.175077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:14.175306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:15.176348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:16.176555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:17.176569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:18.177647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:19.178740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:20.179368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:21.179421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:22.179971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:23.180146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:24.180433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:25.181305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:26.182202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:27.182937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:28.183107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:29.183319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:30.183692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:31.184127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:32.184289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:33.185287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:34.186294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:35.187147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:36.187246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:37.187322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:38.188148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:39.188350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:40.188769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:41.188813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:42.189591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:43.189587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:44.190298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:45.191097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:46.192140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:47.192541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:48.193312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:49.193678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:50.194008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:29:51.193: INFO: Waiting for terminating namespaces to be deleted...
  E0510 20:29:51.194268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create pods that use 4/5 of node resources. @ 05/10/24 20:29:51.198
  May 10 20:29:51.232: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 10 20:29:51.241: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 10 20:29:51.276: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 10 20:29:51.288: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 10 20:29:51.317: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 10 20:29:51.328: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  May 10 20:29:51.354: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  May 10 20:29:51.368: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  May 10 20:29:51.394: INFO: Created pod: pod4-0-sched-preemption-medium-priority
  May 10 20:29:51.405: INFO: Created pod: pod4-1-sched-preemption-medium-priority
  May 10 20:29:51.433: INFO: Created pod: pod5-0-sched-preemption-medium-priority
  May 10 20:29:51.445: INFO: Created pod: pod5-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/10/24 20:29:51.445
  E0510 20:29:52.194311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:53.195028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/10/24 20:29:53.532
  E0510 20:29:54.195311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:55.195375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:56.196113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:57.197159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:58.197367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 20:29:59.198020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 10 20:29:59.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2035" for this suite. @ 05/10/24 20:29:59.925
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88

  Timeline >>
  May 10 20:29:59.955: INFO: Running AfterSuite actions on node 1
  May 10 20:29:59.955: INFO: Skipping dumping logs from cluster
  << Timeline
------------------------------
[ReportAfterSuite] PASSED [0.071 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
------------------------------
[ReportAfterSuite] PASSED [0.106 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
------------------------------

Ran 388 of 7407 Specs in 2889.048 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped


Ginkgo ran 1 suite in 48m10.592511895s
Test Suite Passed
